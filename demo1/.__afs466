$date
	Sat Mar 14 13:21:38 2020
$end
$version
	ModelSim Version 10.7c
$end
$timescale
	1ns
$end

$scope module proc_hier_bench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemData [15] $end
$var wire 1 h MemData [14] $end
$var wire 1 i MemData [13] $end
$var wire 1 j MemData [12] $end
$var wire 1 k MemData [11] $end
$var wire 1 l MemData [10] $end
$var wire 1 m MemData [9] $end
$var wire 1 n MemData [8] $end
$var wire 1 o MemData [7] $end
$var wire 1 p MemData [6] $end
$var wire 1 q MemData [5] $end
$var wire 1 r MemData [4] $end
$var wire 1 s MemData [3] $end
$var wire 1 t MemData [2] $end
$var wire 1 u MemData [1] $end
$var wire 1 v MemData [0] $end
$var wire 1 w Halt $end
$var integer 32 x inst_count $end
$var integer 32 y trace_file $end
$var integer 32 z sim_log_file $end
$var wire 1 { Rs $end

$scope module DUT $end
$var wire 1 | clk $end
$var wire 1 } err $end
$var wire 1 ~ rst $end

$scope module c0 $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 } err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 } err $end
$var wire 1 $! regWrite $end
$var wire 1 %! btr $end
$var wire 1 &! aluSrc $end
$var wire 1 '! memWrite $end
$var wire 1 (! memRead $end
$var wire 1 )! memToReg $end
$var wire 1 *! branchCtl $end
$var wire 1 +! jumpCtl $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 .! halt $end
$var wire 1 /! noOp $end
$var wire 1 0! immCtl $end
$var wire 1 1! stu $end
$var wire 1 2! slbi $end
$var wire 1 3! immPres $end
$var wire 1 4! lbi $end
$var wire 1 5! decode_err $end
$var wire 1 6! sl $end
$var wire 1 7! sco $end
$var wire 1 8! seq $end
$var wire 1 9! ldOrSt $end
$var wire 1 :! aluCtl [1] $end
$var wire 1 ;! aluCtl [0] $end
$var wire 1 <! regRs [2] $end
$var wire 1 =! regRs [1] $end
$var wire 1 >! regRs [0] $end
$var wire 1 ?! readReg1 [2] $end
$var wire 1 @! readReg1 [1] $end
$var wire 1 A! readReg1 [0] $end
$var wire 1 B! readReg2 [2] $end
$var wire 1 C! readReg2 [1] $end
$var wire 1 D! readReg2 [0] $end
$var wire 1 E! writeReg1 [2] $end
$var wire 1 F! writeReg1 [1] $end
$var wire 1 G! writeReg1 [0] $end
$var wire 1 H! immVal [15] $end
$var wire 1 I! immVal [14] $end
$var wire 1 J! immVal [13] $end
$var wire 1 K! immVal [12] $end
$var wire 1 L! immVal [11] $end
$var wire 1 M! immVal [10] $end
$var wire 1 N! immVal [9] $end
$var wire 1 O! immVal [8] $end
$var wire 1 P! immVal [7] $end
$var wire 1 Q! immVal [6] $end
$var wire 1 R! immVal [5] $end
$var wire 1 S! immVal [4] $end
$var wire 1 T! immVal [3] $end
$var wire 1 U! immVal [2] $end
$var wire 1 V! immVal [1] $end
$var wire 1 W! immVal [0] $end
$var wire 1 X! currInstr [15] $end
$var wire 1 Y! currInstr [14] $end
$var wire 1 Z! currInstr [13] $end
$var wire 1 [! currInstr [12] $end
$var wire 1 \! currInstr [11] $end
$var wire 1 ]! currInstr [10] $end
$var wire 1 ^! currInstr [9] $end
$var wire 1 _! currInstr [8] $end
$var wire 1 `! currInstr [7] $end
$var wire 1 a! currInstr [6] $end
$var wire 1 b! currInstr [5] $end
$var wire 1 c! currInstr [4] $end
$var wire 1 d! currInstr [3] $end
$var wire 1 e! currInstr [2] $end
$var wire 1 f! currInstr [1] $end
$var wire 1 g! currInstr [0] $end
$var wire 1 h! next_pc [15] $end
$var wire 1 i! next_pc [14] $end
$var wire 1 j! next_pc [13] $end
$var wire 1 k! next_pc [12] $end
$var wire 1 l! next_pc [11] $end
$var wire 1 m! next_pc [10] $end
$var wire 1 n! next_pc [9] $end
$var wire 1 o! next_pc [8] $end
$var wire 1 p! next_pc [7] $end
$var wire 1 q! next_pc [6] $end
$var wire 1 r! next_pc [5] $end
$var wire 1 s! next_pc [4] $end
$var wire 1 t! next_pc [3] $end
$var wire 1 u! next_pc [2] $end
$var wire 1 v! next_pc [1] $end
$var wire 1 w! next_pc [0] $end
$var wire 1 x! signedImmVal [15] $end
$var wire 1 y! signedImmVal [14] $end
$var wire 1 z! signedImmVal [13] $end
$var wire 1 {! signedImmVal [12] $end
$var wire 1 |! signedImmVal [11] $end
$var wire 1 }! signedImmVal [10] $end
$var wire 1 ~! signedImmVal [9] $end
$var wire 1 !" signedImmVal [8] $end
$var wire 1 "" signedImmVal [7] $end
$var wire 1 #" signedImmVal [6] $end
$var wire 1 $" signedImmVal [5] $end
$var wire 1 %" signedImmVal [4] $end
$var wire 1 &" signedImmVal [3] $end
$var wire 1 '" signedImmVal [2] $end
$var wire 1 (" signedImmVal [1] $end
$var wire 1 )" signedImmVal [0] $end
$var wire 1 *" branch [15] $end
$var wire 1 +" branch [14] $end
$var wire 1 ," branch [13] $end
$var wire 1 -" branch [12] $end
$var wire 1 ." branch [11] $end
$var wire 1 /" branch [10] $end
$var wire 1 0" branch [9] $end
$var wire 1 1" branch [8] $end
$var wire 1 2" branch [7] $end
$var wire 1 3" branch [6] $end
$var wire 1 4" branch [5] $end
$var wire 1 5" branch [4] $end
$var wire 1 6" branch [3] $end
$var wire 1 7" branch [2] $end
$var wire 1 8" branch [1] $end
$var wire 1 9" branch [0] $end
$var wire 1 :" jump [15] $end
$var wire 1 ;" jump [14] $end
$var wire 1 <" jump [13] $end
$var wire 1 =" jump [12] $end
$var wire 1 >" jump [11] $end
$var wire 1 ?" jump [10] $end
$var wire 1 @" jump [9] $end
$var wire 1 A" jump [8] $end
$var wire 1 B" jump [7] $end
$var wire 1 C" jump [6] $end
$var wire 1 D" jump [5] $end
$var wire 1 E" jump [4] $end
$var wire 1 F" jump [3] $end
$var wire 1 G" jump [2] $end
$var wire 1 H" jump [1] $end
$var wire 1 I" jump [0] $end
$var wire 1 J" new_pc [15] $end
$var wire 1 K" new_pc [14] $end
$var wire 1 L" new_pc [13] $end
$var wire 1 M" new_pc [12] $end
$var wire 1 N" new_pc [11] $end
$var wire 1 O" new_pc [10] $end
$var wire 1 P" new_pc [9] $end
$var wire 1 Q" new_pc [8] $end
$var wire 1 R" new_pc [7] $end
$var wire 1 S" new_pc [6] $end
$var wire 1 T" new_pc [5] $end
$var wire 1 U" new_pc [4] $end
$var wire 1 V" new_pc [3] $end
$var wire 1 W" new_pc [2] $end
$var wire 1 X" new_pc [1] $end
$var wire 1 Y" new_pc [0] $end
$var wire 1 Z" Out [15] $end
$var wire 1 [" Out [14] $end
$var wire 1 \" Out [13] $end
$var wire 1 ]" Out [12] $end
$var wire 1 ^" Out [11] $end
$var wire 1 _" Out [10] $end
$var wire 1 `" Out [9] $end
$var wire 1 a" Out [8] $end
$var wire 1 b" Out [7] $end
$var wire 1 c" Out [6] $end
$var wire 1 d" Out [5] $end
$var wire 1 e" Out [4] $end
$var wire 1 f" Out [3] $end
$var wire 1 g" Out [2] $end
$var wire 1 h" Out [1] $end
$var wire 1 i" Out [0] $end
$var wire 1 j" wrData [15] $end
$var wire 1 k" wrData [14] $end
$var wire 1 l" wrData [13] $end
$var wire 1 m" wrData [12] $end
$var wire 1 n" wrData [11] $end
$var wire 1 o" wrData [10] $end
$var wire 1 p" wrData [9] $end
$var wire 1 q" wrData [8] $end
$var wire 1 r" wrData [7] $end
$var wire 1 s" wrData [6] $end
$var wire 1 t" wrData [5] $end
$var wire 1 u" wrData [4] $end
$var wire 1 v" wrData [3] $end
$var wire 1 w" wrData [2] $end
$var wire 1 x" wrData [1] $end
$var wire 1 y" wrData [0] $end
$var wire 1 z" regData1 [15] $end
$var wire 1 {" regData1 [14] $end
$var wire 1 |" regData1 [13] $end
$var wire 1 }" regData1 [12] $end
$var wire 1 ~" regData1 [11] $end
$var wire 1 !# regData1 [10] $end
$var wire 1 "# regData1 [9] $end
$var wire 1 ## regData1 [8] $end
$var wire 1 $# regData1 [7] $end
$var wire 1 %# regData1 [6] $end
$var wire 1 &# regData1 [5] $end
$var wire 1 '# regData1 [4] $end
$var wire 1 (# regData1 [3] $end
$var wire 1 )# regData1 [2] $end
$var wire 1 *# regData1 [1] $end
$var wire 1 +# regData1 [0] $end
$var wire 1 ,# regData2 [15] $end
$var wire 1 -# regData2 [14] $end
$var wire 1 .# regData2 [13] $end
$var wire 1 /# regData2 [12] $end
$var wire 1 0# regData2 [11] $end
$var wire 1 1# regData2 [10] $end
$var wire 1 2# regData2 [9] $end
$var wire 1 3# regData2 [8] $end
$var wire 1 4# regData2 [7] $end
$var wire 1 5# regData2 [6] $end
$var wire 1 6# regData2 [5] $end
$var wire 1 7# regData2 [4] $end
$var wire 1 8# regData2 [3] $end
$var wire 1 9# regData2 [2] $end
$var wire 1 :# regData2 [1] $end
$var wire 1 ;# regData2 [0] $end
$var wire 1 <# read1Data [15] $end
$var wire 1 =# read1Data [14] $end
$var wire 1 ># read1Data [13] $end
$var wire 1 ?# read1Data [12] $end
$var wire 1 @# read1Data [11] $end
$var wire 1 A# read1Data [10] $end
$var wire 1 B# read1Data [9] $end
$var wire 1 C# read1Data [8] $end
$var wire 1 D# read1Data [7] $end
$var wire 1 E# read1Data [6] $end
$var wire 1 F# read1Data [5] $end
$var wire 1 G# read1Data [4] $end
$var wire 1 H# read1Data [3] $end
$var wire 1 I# read1Data [2] $end
$var wire 1 J# read1Data [1] $end
$var wire 1 K# read1Data [0] $end
$var wire 1 L# read2Data [15] $end
$var wire 1 M# read2Data [14] $end
$var wire 1 N# read2Data [13] $end
$var wire 1 O# read2Data [12] $end
$var wire 1 P# read2Data [11] $end
$var wire 1 Q# read2Data [10] $end
$var wire 1 R# read2Data [9] $end
$var wire 1 S# read2Data [8] $end
$var wire 1 T# read2Data [7] $end
$var wire 1 U# read2Data [6] $end
$var wire 1 V# read2Data [5] $end
$var wire 1 W# read2Data [4] $end
$var wire 1 X# read2Data [3] $end
$var wire 1 Y# read2Data [2] $end
$var wire 1 Z# read2Data [1] $end
$var wire 1 [# read2Data [0] $end
$var wire 1 \# aluOut [15] $end
$var wire 1 ]# aluOut [14] $end
$var wire 1 ^# aluOut [13] $end
$var wire 1 _# aluOut [12] $end
$var wire 1 `# aluOut [11] $end
$var wire 1 a# aluOut [10] $end
$var wire 1 b# aluOut [9] $end
$var wire 1 c# aluOut [8] $end
$var wire 1 d# aluOut [7] $end
$var wire 1 e# aluOut [6] $end
$var wire 1 f# aluOut [5] $end
$var wire 1 g# aluOut [4] $end
$var wire 1 h# aluOut [3] $end
$var wire 1 i# aluOut [2] $end
$var wire 1 j# aluOut [1] $end
$var wire 1 k# aluOut [0] $end
$var wire 1 l# writeData [15] $end
$var wire 1 m# writeData [14] $end
$var wire 1 n# writeData [13] $end
$var wire 1 o# writeData [12] $end
$var wire 1 p# writeData [11] $end
$var wire 1 q# writeData [10] $end
$var wire 1 r# writeData [9] $end
$var wire 1 s# writeData [8] $end
$var wire 1 t# writeData [7] $end
$var wire 1 u# writeData [6] $end
$var wire 1 v# writeData [5] $end
$var wire 1 w# writeData [4] $end
$var wire 1 x# writeData [3] $end
$var wire 1 y# writeData [2] $end
$var wire 1 z# writeData [1] $end
$var wire 1 {# writeData [0] $end
$var wire 1 |# memoryOut [15] $end
$var wire 1 }# memoryOut [14] $end
$var wire 1 ~# memoryOut [13] $end
$var wire 1 !$ memoryOut [12] $end
$var wire 1 "$ memoryOut [11] $end
$var wire 1 #$ memoryOut [10] $end
$var wire 1 $$ memoryOut [9] $end
$var wire 1 %$ memoryOut [8] $end
$var wire 1 &$ memoryOut [7] $end
$var wire 1 '$ memoryOut [6] $end
$var wire 1 ($ memoryOut [5] $end
$var wire 1 )$ memoryOut [4] $end
$var wire 1 *$ memoryOut [3] $end
$var wire 1 +$ memoryOut [2] $end
$var wire 1 ,$ memoryOut [1] $end
$var wire 1 -$ memoryOut [0] $end
$var reg 16 .$ pc [15:0] $end
$var wire 1 /$ Zero $end
$var wire 1 0$ Ofl $end

$scope module ctlSignals $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 X! instr [15] $end
$var wire 1 Y! instr [14] $end
$var wire 1 Z! instr [13] $end
$var wire 1 [! instr [12] $end
$var wire 1 \! instr [11] $end
$var wire 1 ]! instr [10] $end
$var wire 1 ^! instr [9] $end
$var wire 1 _! instr [8] $end
$var wire 1 `! instr [7] $end
$var wire 1 a! instr [6] $end
$var wire 1 b! instr [5] $end
$var wire 1 c! instr [4] $end
$var wire 1 d! instr [3] $end
$var wire 1 e! instr [2] $end
$var wire 1 f! instr [1] $end
$var wire 1 g! instr [0] $end
$var reg 1 1$ regWrite $end
$var reg 1 2$ aluSrc $end
$var reg 1 3$ btr $end
$var reg 1 4$ memWrite $end
$var reg 1 5$ memRead $end
$var reg 1 6$ memToReg $end
$var reg 1 7$ branchCtl $end
$var reg 1 8$ jumpCtl $end
$var reg 1 9$ invA $end
$var reg 1 :$ invB $end
$var reg 1 ;$ halt $end
$var reg 1 <$ noOp $end
$var reg 1 =$ immCtl $end
$var reg 1 >$ stu $end
$var reg 1 ?$ slbi $end
$var reg 1 @$ immPres $end
$var reg 1 A$ lbi $end
$var reg 1 B$ seq $end
$var reg 1 C$ sl $end
$var reg 1 D$ sco $end
$var reg 1 E$ ldOrSt $end
$var reg 2 F$ aluCtl [1:0] $end
$upscope $end

$scope module fetchStage $end
$var wire 1 G$ wr $end
$var wire 1 H$ enable $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 .! halt $end
$var wire 1 /! noOp $end
$var wire 1 1! stu $end
$var wire 1 3! immPres $end
$var wire 1 0! immCtl $end
$var wire 1 4! lbi $end
$var wire 1 +! jumpCtl $end
$var wire 1 I$ pc [15] $end
$var wire 1 J$ pc [14] $end
$var wire 1 K$ pc [13] $end
$var wire 1 L$ pc [12] $end
$var wire 1 M$ pc [11] $end
$var wire 1 N$ pc [10] $end
$var wire 1 O$ pc [9] $end
$var wire 1 P$ pc [8] $end
$var wire 1 Q$ pc [7] $end
$var wire 1 R$ pc [6] $end
$var wire 1 S$ pc [5] $end
$var wire 1 T$ pc [4] $end
$var wire 1 U$ pc [3] $end
$var wire 1 V$ pc [2] $end
$var wire 1 W$ pc [1] $end
$var wire 1 X$ pc [0] $end
$var wire 1 ?! readReg1 [2] $end
$var wire 1 @! readReg1 [1] $end
$var wire 1 A! readReg1 [0] $end
$var wire 1 B! readReg2 [2] $end
$var wire 1 C! readReg2 [1] $end
$var wire 1 D! readReg2 [0] $end
$var wire 1 E! writeReg1 [2] $end
$var wire 1 F! writeReg1 [1] $end
$var wire 1 G! writeReg1 [0] $end
$var wire 1 H! immVal [15] $end
$var wire 1 I! immVal [14] $end
$var wire 1 J! immVal [13] $end
$var wire 1 K! immVal [12] $end
$var wire 1 L! immVal [11] $end
$var wire 1 M! immVal [10] $end
$var wire 1 N! immVal [9] $end
$var wire 1 O! immVal [8] $end
$var wire 1 P! immVal [7] $end
$var wire 1 Q! immVal [6] $end
$var wire 1 R! immVal [5] $end
$var wire 1 S! immVal [4] $end
$var wire 1 T! immVal [3] $end
$var wire 1 U! immVal [2] $end
$var wire 1 V! immVal [1] $end
$var wire 1 W! immVal [0] $end
$var wire 1 *" branch [15] $end
$var wire 1 +" branch [14] $end
$var wire 1 ," branch [13] $end
$var wire 1 -" branch [12] $end
$var wire 1 ." branch [11] $end
$var wire 1 /" branch [10] $end
$var wire 1 0" branch [9] $end
$var wire 1 1" branch [8] $end
$var wire 1 2" branch [7] $end
$var wire 1 3" branch [6] $end
$var wire 1 4" branch [5] $end
$var wire 1 5" branch [4] $end
$var wire 1 6" branch [3] $end
$var wire 1 7" branch [2] $end
$var wire 1 8" branch [1] $end
$var wire 1 9" branch [0] $end
$var wire 1 :" jump [15] $end
$var wire 1 ;" jump [14] $end
$var wire 1 <" jump [13] $end
$var wire 1 =" jump [12] $end
$var wire 1 >" jump [11] $end
$var wire 1 ?" jump [10] $end
$var wire 1 @" jump [9] $end
$var wire 1 A" jump [8] $end
$var wire 1 B" jump [7] $end
$var wire 1 C" jump [6] $end
$var wire 1 D" jump [5] $end
$var wire 1 E" jump [4] $end
$var wire 1 F" jump [3] $end
$var wire 1 G" jump [2] $end
$var wire 1 H" jump [1] $end
$var wire 1 I" jump [0] $end
$var wire 1 J" new_pc [15] $end
$var wire 1 K" new_pc [14] $end
$var wire 1 L" new_pc [13] $end
$var wire 1 M" new_pc [12] $end
$var wire 1 N" new_pc [11] $end
$var wire 1 O" new_pc [10] $end
$var wire 1 P" new_pc [9] $end
$var wire 1 Q" new_pc [8] $end
$var wire 1 R" new_pc [7] $end
$var wire 1 S" new_pc [6] $end
$var wire 1 T" new_pc [5] $end
$var wire 1 U" new_pc [4] $end
$var wire 1 V" new_pc [3] $end
$var wire 1 W" new_pc [2] $end
$var wire 1 X" new_pc [1] $end
$var wire 1 Y" new_pc [0] $end
$var wire 1 X! instr [15] $end
$var wire 1 Y! instr [14] $end
$var wire 1 Z! instr [13] $end
$var wire 1 [! instr [12] $end
$var wire 1 \! instr [11] $end
$var wire 1 ]! instr [10] $end
$var wire 1 ^! instr [9] $end
$var wire 1 _! instr [8] $end
$var wire 1 `! instr [7] $end
$var wire 1 a! instr [6] $end
$var wire 1 b! instr [5] $end
$var wire 1 c! instr [4] $end
$var wire 1 d! instr [3] $end
$var wire 1 e! instr [2] $end
$var wire 1 f! instr [1] $end
$var wire 1 g! instr [0] $end
$var wire 1 Y$ pc_inc [15] $end
$var wire 1 Z$ pc_inc [14] $end
$var wire 1 [$ pc_inc [13] $end
$var wire 1 \$ pc_inc [12] $end
$var wire 1 ]$ pc_inc [11] $end
$var wire 1 ^$ pc_inc [10] $end
$var wire 1 _$ pc_inc [9] $end
$var wire 1 `$ pc_inc [8] $end
$var wire 1 a$ pc_inc [7] $end
$var wire 1 b$ pc_inc [6] $end
$var wire 1 c$ pc_inc [5] $end
$var wire 1 d$ pc_inc [4] $end
$var wire 1 e$ pc_inc [3] $end
$var wire 1 f$ pc_inc [2] $end
$var wire 1 g$ pc_inc [1] $end
$var wire 1 h$ pc_inc [0] $end

$scope module instr_mem $end
$var wire 1 X! data_out [15] $end
$var wire 1 Y! data_out [14] $end
$var wire 1 Z! data_out [13] $end
$var wire 1 [! data_out [12] $end
$var wire 1 \! data_out [11] $end
$var wire 1 ]! data_out [10] $end
$var wire 1 ^! data_out [9] $end
$var wire 1 _! data_out [8] $end
$var wire 1 `! data_out [7] $end
$var wire 1 a! data_out [6] $end
$var wire 1 b! data_out [5] $end
$var wire 1 c! data_out [4] $end
$var wire 1 d! data_out [3] $end
$var wire 1 e! data_out [2] $end
$var wire 1 f! data_out [1] $end
$var wire 1 g! data_out [0] $end
$var wire 1 I$ data_in [15] $end
$var wire 1 J$ data_in [14] $end
$var wire 1 K$ data_in [13] $end
$var wire 1 L$ data_in [12] $end
$var wire 1 M$ data_in [11] $end
$var wire 1 N$ data_in [10] $end
$var wire 1 O$ data_in [9] $end
$var wire 1 P$ data_in [8] $end
$var wire 1 Q$ data_in [7] $end
$var wire 1 R$ data_in [6] $end
$var wire 1 S$ data_in [5] $end
$var wire 1 T$ data_in [4] $end
$var wire 1 U$ data_in [3] $end
$var wire 1 V$ data_in [2] $end
$var wire 1 W$ data_in [1] $end
$var wire 1 X$ data_in [0] $end
$var wire 1 I$ addr [15] $end
$var wire 1 J$ addr [14] $end
$var wire 1 K$ addr [13] $end
$var wire 1 L$ addr [12] $end
$var wire 1 M$ addr [11] $end
$var wire 1 N$ addr [10] $end
$var wire 1 O$ addr [9] $end
$var wire 1 P$ addr [8] $end
$var wire 1 Q$ addr [7] $end
$var wire 1 R$ addr [6] $end
$var wire 1 S$ addr [5] $end
$var wire 1 T$ addr [4] $end
$var wire 1 U$ addr [3] $end
$var wire 1 V$ addr [2] $end
$var wire 1 W$ addr [1] $end
$var wire 1 X$ addr [0] $end
$var wire 1 H$ enable $end
$var wire 1 G$ wr $end
$var wire 1 | createdump $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 i$ loaded $end
$var reg 17 j$ largest [16:0] $end
$var integer 32 k$ mcd $end
$var integer 32 l$ i $end
$upscope $end

$scope module incPC $end
$var parameter 32 m$ N $end
$var wire 1 I$ A [15] $end
$var wire 1 J$ A [14] $end
$var wire 1 K$ A [13] $end
$var wire 1 L$ A [12] $end
$var wire 1 M$ A [11] $end
$var wire 1 N$ A [10] $end
$var wire 1 O$ A [9] $end
$var wire 1 P$ A [8] $end
$var wire 1 Q$ A [7] $end
$var wire 1 R$ A [6] $end
$var wire 1 S$ A [5] $end
$var wire 1 T$ A [4] $end
$var wire 1 U$ A [3] $end
$var wire 1 V$ A [2] $end
$var wire 1 W$ A [1] $end
$var wire 1 X$ A [0] $end
$var wire 1 n$ B [15] $end
$var wire 1 o$ B [14] $end
$var wire 1 p$ B [13] $end
$var wire 1 q$ B [12] $end
$var wire 1 r$ B [11] $end
$var wire 1 s$ B [10] $end
$var wire 1 t$ B [9] $end
$var wire 1 u$ B [8] $end
$var wire 1 v$ B [7] $end
$var wire 1 w$ B [6] $end
$var wire 1 x$ B [5] $end
$var wire 1 y$ B [4] $end
$var wire 1 z$ B [3] $end
$var wire 1 {$ B [2] $end
$var wire 1 |$ B [1] $end
$var wire 1 }$ B [0] $end
$var wire 1 ~$ C_in $end
$var wire 1 Y$ S [15] $end
$var wire 1 Z$ S [14] $end
$var wire 1 [$ S [13] $end
$var wire 1 \$ S [12] $end
$var wire 1 ]$ S [11] $end
$var wire 1 ^$ S [10] $end
$var wire 1 _$ S [9] $end
$var wire 1 `$ S [8] $end
$var wire 1 a$ S [7] $end
$var wire 1 b$ S [6] $end
$var wire 1 c$ S [5] $end
$var wire 1 d$ S [4] $end
$var wire 1 e$ S [3] $end
$var wire 1 f$ S [2] $end
$var wire 1 g$ S [1] $end
$var wire 1 h$ S [0] $end
$var wire 1 !% C_out $end
$var wire 1 "% C0 $end
$var wire 1 #% C1 $end
$var wire 1 $% C2 $end
$var wire 1 %% P0 $end
$var wire 1 &% P0_bar $end
$var wire 1 '% P1 $end
$var wire 1 (% P1_bar $end
$var wire 1 )% P2 $end
$var wire 1 *% P2_bar $end
$var wire 1 +% P3 $end
$var wire 1 ,% P3_bar $end
$var wire 1 -% G0 $end
$var wire 1 .% G0_bar $end
$var wire 1 /% G1 $end
$var wire 1 0% G1_bar $end
$var wire 1 1% G2 $end
$var wire 1 2% G2_bar $end
$var wire 1 3% G3 $end
$var wire 1 4% G3_bar $end
$var wire 1 5% nand2_c0_0_out $end
$var wire 1 6% nand2_c1_0_out $end
$var wire 1 7% nand2_c2_0_out $end
$var wire 1 8% nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 9% N $end
$var wire 1 U$ A [3] $end
$var wire 1 V$ A [2] $end
$var wire 1 W$ A [1] $end
$var wire 1 X$ A [0] $end
$var wire 1 z$ B [3] $end
$var wire 1 {$ B [2] $end
$var wire 1 |$ B [1] $end
$var wire 1 }$ B [0] $end
$var wire 1 ~$ C_in $end
$var wire 1 e$ S [3] $end
$var wire 1 f$ S [2] $end
$var wire 1 g$ S [1] $end
$var wire 1 h$ S [0] $end
$var wire 1 %% P $end
$var wire 1 -% G $end
$var wire 1 :% C_out $end
$var wire 1 ;% c0 $end
$var wire 1 <% c1 $end
$var wire 1 =% c2 $end
$var wire 1 >% p0 $end
$var wire 1 ?% g0 $end
$var wire 1 @% p1 $end
$var wire 1 A% g1 $end
$var wire 1 B% p2 $end
$var wire 1 C% g2 $end
$var wire 1 D% p3 $end
$var wire 1 E% g3 $end
$var wire 1 F% g0_bar $end
$var wire 1 G% g1_bar $end
$var wire 1 H% g2_bar $end
$var wire 1 I% g3_bar $end
$var wire 1 J% nand2_c0_0_out $end
$var wire 1 K% nand2_c1_0_out $end
$var wire 1 L% nand2_c2_0_out $end
$var wire 1 M% nand2_c3_0_out $end
$var wire 1 N% nand2_p3_p2 $end
$var wire 1 O% nand2_p1_p0 $end
$var wire 1 P% nand2_p3g2_out $end
$var wire 1 Q% nand2_p3p2g1_out $end
$var wire 1 R% nand3_G_0_out $end
$var wire 1 S% nand2_p1g0_out $end
$var wire 1 T% nor2_G_0_out $end
$var wire 1 U% G_bar $end

$scope module not1_c0_0 $end
$var wire 1 ?% in1 $end
$var wire 1 F% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 >% in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 J% out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 F% in1 $end
$var wire 1 J% in2 $end
$var wire 1 ;% out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 A% in1 $end
$var wire 1 G% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 @% in1 $end
$var wire 1 ;% in2 $end
$var wire 1 K% out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 G% in1 $end
$var wire 1 K% in2 $end
$var wire 1 <% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 C% in1 $end
$var wire 1 H% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 B% in1 $end
$var wire 1 <% in2 $end
$var wire 1 L% out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 H% in1 $end
$var wire 1 L% in2 $end
$var wire 1 =% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 E% in1 $end
$var wire 1 I% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 D% in1 $end
$var wire 1 =% in2 $end
$var wire 1 M% out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 I% in1 $end
$var wire 1 M% in2 $end
$var wire 1 :% out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 D% in1 $end
$var wire 1 B% in2 $end
$var wire 1 N% out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 @% in1 $end
$var wire 1 >% in2 $end
$var wire 1 O% out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 N% in1 $end
$var wire 1 O% in2 $end
$var wire 1 %% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 D% in1 $end
$var wire 1 C% in2 $end
$var wire 1 P% out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 D% in1 $end
$var wire 1 B% in2 $end
$var wire 1 A% in3 $end
$var wire 1 Q% out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 I% in1 $end
$var wire 1 P% in2 $end
$var wire 1 Q% in3 $end
$var wire 1 R% out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 @% in1 $end
$var wire 1 ?% in2 $end
$var wire 1 S% out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 N% in1 $end
$var wire 1 S% in2 $end
$var wire 1 T% out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 R% in1 $end
$var wire 1 T% in2 $end
$var wire 1 U% out $end
$upscope $end

$scope module not1_G $end
$var wire 1 U% in1 $end
$var wire 1 -% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 X$ A $end
$var wire 1 }$ B $end
$var wire 1 ~$ C_in $end
$var wire 1 >% p $end
$var wire 1 ?% g $end
$var wire 1 h$ S $end
$var wire 1 V% C_out $end
$var wire 1 W% g_bar $end
$var wire 1 X% p_bar $end
$var wire 1 Y% nand2_1_out $end
$var wire 1 Z% nand2_2_out $end
$var wire 1 [% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 X$ in1 $end
$var wire 1 }$ in2 $end
$var wire 1 W% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 W% in1 $end
$var wire 1 ?% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 X$ in1 $end
$var wire 1 }$ in2 $end
$var wire 1 X% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 X% in1 $end
$var wire 1 >% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 X$ in1 $end
$var wire 1 }$ in2 $end
$var wire 1 Y% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 X$ in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 Z% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 }$ in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 [% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 Y% in1 $end
$var wire 1 Z% in2 $end
$var wire 1 [% in3 $end
$var wire 1 V% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 X$ in1 $end
$var wire 1 }$ in2 $end
$var wire 1 ~$ in3 $end
$var wire 1 h$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 W$ A $end
$var wire 1 |$ B $end
$var wire 1 ;% C_in $end
$var wire 1 @% p $end
$var wire 1 A% g $end
$var wire 1 g$ S $end
$var wire 1 \% C_out $end
$var wire 1 ]% g_bar $end
$var wire 1 ^% p_bar $end
$var wire 1 _% nand2_1_out $end
$var wire 1 `% nand2_2_out $end
$var wire 1 a% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 W$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 ]% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ]% in1 $end
$var wire 1 A% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 W$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ^% in1 $end
$var wire 1 @% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 W$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 _% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 W$ in1 $end
$var wire 1 ;% in2 $end
$var wire 1 `% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 |$ in1 $end
$var wire 1 ;% in2 $end
$var wire 1 a% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 _% in1 $end
$var wire 1 `% in2 $end
$var wire 1 a% in3 $end
$var wire 1 \% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 W$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 ;% in3 $end
$var wire 1 g$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 V$ A $end
$var wire 1 {$ B $end
$var wire 1 <% C_in $end
$var wire 1 B% p $end
$var wire 1 C% g $end
$var wire 1 f$ S $end
$var wire 1 b% C_out $end
$var wire 1 c% g_bar $end
$var wire 1 d% p_bar $end
$var wire 1 e% nand2_1_out $end
$var wire 1 f% nand2_2_out $end
$var wire 1 g% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 c% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 c% in1 $end
$var wire 1 C% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 d% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 d% in1 $end
$var wire 1 B% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V$ in1 $end
$var wire 1 <% in2 $end
$var wire 1 f% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 {$ in1 $end
$var wire 1 <% in2 $end
$var wire 1 g% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 e% in1 $end
$var wire 1 f% in2 $end
$var wire 1 g% in3 $end
$var wire 1 b% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 <% in3 $end
$var wire 1 f$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 U$ A $end
$var wire 1 z$ B $end
$var wire 1 =% C_in $end
$var wire 1 D% p $end
$var wire 1 E% g $end
$var wire 1 e$ S $end
$var wire 1 h% C_out $end
$var wire 1 i% g_bar $end
$var wire 1 j% p_bar $end
$var wire 1 k% nand2_1_out $end
$var wire 1 l% nand2_2_out $end
$var wire 1 m% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 i% in1 $end
$var wire 1 E% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 j% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 j% in1 $end
$var wire 1 D% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 k% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U$ in1 $end
$var wire 1 =% in2 $end
$var wire 1 l% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 z$ in1 $end
$var wire 1 =% in2 $end
$var wire 1 m% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 k% in1 $end
$var wire 1 l% in2 $end
$var wire 1 m% in3 $end
$var wire 1 h% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 =% in3 $end
$var wire 1 e$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 n% N $end
$var wire 1 Q$ A [3] $end
$var wire 1 R$ A [2] $end
$var wire 1 S$ A [1] $end
$var wire 1 T$ A [0] $end
$var wire 1 v$ B [3] $end
$var wire 1 w$ B [2] $end
$var wire 1 x$ B [1] $end
$var wire 1 y$ B [0] $end
$var wire 1 "% C_in $end
$var wire 1 a$ S [3] $end
$var wire 1 b$ S [2] $end
$var wire 1 c$ S [1] $end
$var wire 1 d$ S [0] $end
$var wire 1 '% P $end
$var wire 1 /% G $end
$var wire 1 o% C_out $end
$var wire 1 p% c0 $end
$var wire 1 q% c1 $end
$var wire 1 r% c2 $end
$var wire 1 s% p0 $end
$var wire 1 t% g0 $end
$var wire 1 u% p1 $end
$var wire 1 v% g1 $end
$var wire 1 w% p2 $end
$var wire 1 x% g2 $end
$var wire 1 y% p3 $end
$var wire 1 z% g3 $end
$var wire 1 {% g0_bar $end
$var wire 1 |% g1_bar $end
$var wire 1 }% g2_bar $end
$var wire 1 ~% g3_bar $end
$var wire 1 !& nand2_c0_0_out $end
$var wire 1 "& nand2_c1_0_out $end
$var wire 1 #& nand2_c2_0_out $end
$var wire 1 $& nand2_c3_0_out $end
$var wire 1 %& nand2_p3_p2 $end
$var wire 1 && nand2_p1_p0 $end
$var wire 1 '& nand2_p3g2_out $end
$var wire 1 (& nand2_p3p2g1_out $end
$var wire 1 )& nand3_G_0_out $end
$var wire 1 *& nand2_p1g0_out $end
$var wire 1 +& nor2_G_0_out $end
$var wire 1 ,& G_bar $end

$scope module not1_c0_0 $end
$var wire 1 t% in1 $end
$var wire 1 {% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 s% in1 $end
$var wire 1 "% in2 $end
$var wire 1 !& out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 {% in1 $end
$var wire 1 !& in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 v% in1 $end
$var wire 1 |% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 u% in1 $end
$var wire 1 p% in2 $end
$var wire 1 "& out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 |% in1 $end
$var wire 1 "& in2 $end
$var wire 1 q% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 x% in1 $end
$var wire 1 }% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 w% in1 $end
$var wire 1 q% in2 $end
$var wire 1 #& out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 }% in1 $end
$var wire 1 #& in2 $end
$var wire 1 r% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 z% in1 $end
$var wire 1 ~% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 y% in1 $end
$var wire 1 r% in2 $end
$var wire 1 $& out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 ~% in1 $end
$var wire 1 $& in2 $end
$var wire 1 o% out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 y% in1 $end
$var wire 1 w% in2 $end
$var wire 1 %& out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 u% in1 $end
$var wire 1 s% in2 $end
$var wire 1 && out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 %& in1 $end
$var wire 1 && in2 $end
$var wire 1 '% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 y% in1 $end
$var wire 1 x% in2 $end
$var wire 1 '& out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 y% in1 $end
$var wire 1 w% in2 $end
$var wire 1 v% in3 $end
$var wire 1 (& out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 ~% in1 $end
$var wire 1 '& in2 $end
$var wire 1 (& in3 $end
$var wire 1 )& out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 u% in1 $end
$var wire 1 t% in2 $end
$var wire 1 *& out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 %& in1 $end
$var wire 1 *& in2 $end
$var wire 1 +& out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 )& in1 $end
$var wire 1 +& in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module not1_G $end
$var wire 1 ,& in1 $end
$var wire 1 /% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 T$ A $end
$var wire 1 y$ B $end
$var wire 1 "% C_in $end
$var wire 1 s% p $end
$var wire 1 t% g $end
$var wire 1 d$ S $end
$var wire 1 -& C_out $end
$var wire 1 .& g_bar $end
$var wire 1 /& p_bar $end
$var wire 1 0& nand2_1_out $end
$var wire 1 1& nand2_2_out $end
$var wire 1 2& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 .& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 .& in1 $end
$var wire 1 t% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 /& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 /& in1 $end
$var wire 1 s% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 0& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T$ in1 $end
$var wire 1 "% in2 $end
$var wire 1 1& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 y$ in1 $end
$var wire 1 "% in2 $end
$var wire 1 2& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 0& in1 $end
$var wire 1 1& in2 $end
$var wire 1 2& in3 $end
$var wire 1 -& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 "% in3 $end
$var wire 1 d$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 S$ A $end
$var wire 1 x$ B $end
$var wire 1 p% C_in $end
$var wire 1 u% p $end
$var wire 1 v% g $end
$var wire 1 c$ S $end
$var wire 1 3& C_out $end
$var wire 1 4& g_bar $end
$var wire 1 5& p_bar $end
$var wire 1 6& nand2_1_out $end
$var wire 1 7& nand2_2_out $end
$var wire 1 8& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 4& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 4& in1 $end
$var wire 1 v% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 5& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 5& in1 $end
$var wire 1 u% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 6& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S$ in1 $end
$var wire 1 p% in2 $end
$var wire 1 7& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 x$ in1 $end
$var wire 1 p% in2 $end
$var wire 1 8& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 6& in1 $end
$var wire 1 7& in2 $end
$var wire 1 8& in3 $end
$var wire 1 3& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 p% in3 $end
$var wire 1 c$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 R$ A $end
$var wire 1 w$ B $end
$var wire 1 q% C_in $end
$var wire 1 w% p $end
$var wire 1 x% g $end
$var wire 1 b$ S $end
$var wire 1 9& C_out $end
$var wire 1 :& g_bar $end
$var wire 1 ;& p_bar $end
$var wire 1 <& nand2_1_out $end
$var wire 1 =& nand2_2_out $end
$var wire 1 >& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 :& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 :& in1 $end
$var wire 1 x% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 ;& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ;& in1 $end
$var wire 1 w% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 <& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R$ in1 $end
$var wire 1 q% in2 $end
$var wire 1 =& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 w$ in1 $end
$var wire 1 q% in2 $end
$var wire 1 >& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 <& in1 $end
$var wire 1 =& in2 $end
$var wire 1 >& in3 $end
$var wire 1 9& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 q% in3 $end
$var wire 1 b$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 Q$ A $end
$var wire 1 v$ B $end
$var wire 1 r% C_in $end
$var wire 1 y% p $end
$var wire 1 z% g $end
$var wire 1 a$ S $end
$var wire 1 ?& C_out $end
$var wire 1 @& g_bar $end
$var wire 1 A& p_bar $end
$var wire 1 B& nand2_1_out $end
$var wire 1 C& nand2_2_out $end
$var wire 1 D& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 @& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 @& in1 $end
$var wire 1 z% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 A& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 A& in1 $end
$var wire 1 y% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Q$ in1 $end
$var wire 1 r% in2 $end
$var wire 1 C& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 v$ in1 $end
$var wire 1 r% in2 $end
$var wire 1 D& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 B& in1 $end
$var wire 1 C& in2 $end
$var wire 1 D& in3 $end
$var wire 1 ?& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 r% in3 $end
$var wire 1 a$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 E& N $end
$var wire 1 M$ A [3] $end
$var wire 1 N$ A [2] $end
$var wire 1 O$ A [1] $end
$var wire 1 P$ A [0] $end
$var wire 1 r$ B [3] $end
$var wire 1 s$ B [2] $end
$var wire 1 t$ B [1] $end
$var wire 1 u$ B [0] $end
$var wire 1 #% C_in $end
$var wire 1 ]$ S [3] $end
$var wire 1 ^$ S [2] $end
$var wire 1 _$ S [1] $end
$var wire 1 `$ S [0] $end
$var wire 1 )% P $end
$var wire 1 1% G $end
$var wire 1 F& C_out $end
$var wire 1 G& c0 $end
$var wire 1 H& c1 $end
$var wire 1 I& c2 $end
$var wire 1 J& p0 $end
$var wire 1 K& g0 $end
$var wire 1 L& p1 $end
$var wire 1 M& g1 $end
$var wire 1 N& p2 $end
$var wire 1 O& g2 $end
$var wire 1 P& p3 $end
$var wire 1 Q& g3 $end
$var wire 1 R& g0_bar $end
$var wire 1 S& g1_bar $end
$var wire 1 T& g2_bar $end
$var wire 1 U& g3_bar $end
$var wire 1 V& nand2_c0_0_out $end
$var wire 1 W& nand2_c1_0_out $end
$var wire 1 X& nand2_c2_0_out $end
$var wire 1 Y& nand2_c3_0_out $end
$var wire 1 Z& nand2_p3_p2 $end
$var wire 1 [& nand2_p1_p0 $end
$var wire 1 \& nand2_p3g2_out $end
$var wire 1 ]& nand2_p3p2g1_out $end
$var wire 1 ^& nand3_G_0_out $end
$var wire 1 _& nand2_p1g0_out $end
$var wire 1 `& nor2_G_0_out $end
$var wire 1 a& G_bar $end

$scope module not1_c0_0 $end
$var wire 1 K& in1 $end
$var wire 1 R& out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 J& in1 $end
$var wire 1 #% in2 $end
$var wire 1 V& out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 R& in1 $end
$var wire 1 V& in2 $end
$var wire 1 G& out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 M& in1 $end
$var wire 1 S& out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 L& in1 $end
$var wire 1 G& in2 $end
$var wire 1 W& out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 S& in1 $end
$var wire 1 W& in2 $end
$var wire 1 H& out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 O& in1 $end
$var wire 1 T& out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 N& in1 $end
$var wire 1 H& in2 $end
$var wire 1 X& out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 T& in1 $end
$var wire 1 X& in2 $end
$var wire 1 I& out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 Q& in1 $end
$var wire 1 U& out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 P& in1 $end
$var wire 1 I& in2 $end
$var wire 1 Y& out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 U& in1 $end
$var wire 1 Y& in2 $end
$var wire 1 F& out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 P& in1 $end
$var wire 1 N& in2 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 L& in1 $end
$var wire 1 J& in2 $end
$var wire 1 [& out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 Z& in1 $end
$var wire 1 [& in2 $end
$var wire 1 )% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 P& in1 $end
$var wire 1 O& in2 $end
$var wire 1 \& out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 P& in1 $end
$var wire 1 N& in2 $end
$var wire 1 M& in3 $end
$var wire 1 ]& out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 U& in1 $end
$var wire 1 \& in2 $end
$var wire 1 ]& in3 $end
$var wire 1 ^& out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 L& in1 $end
$var wire 1 K& in2 $end
$var wire 1 _& out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 Z& in1 $end
$var wire 1 _& in2 $end
$var wire 1 `& out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 ^& in1 $end
$var wire 1 `& in2 $end
$var wire 1 a& out $end
$upscope $end

$scope module not1_G $end
$var wire 1 a& in1 $end
$var wire 1 1% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 P$ A $end
$var wire 1 u$ B $end
$var wire 1 #% C_in $end
$var wire 1 J& p $end
$var wire 1 K& g $end
$var wire 1 `$ S $end
$var wire 1 b& C_out $end
$var wire 1 c& g_bar $end
$var wire 1 d& p_bar $end
$var wire 1 e& nand2_1_out $end
$var wire 1 f& nand2_2_out $end
$var wire 1 g& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 c& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 c& in1 $end
$var wire 1 K& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 d& in1 $end
$var wire 1 J& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 e& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 P$ in1 $end
$var wire 1 #% in2 $end
$var wire 1 f& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 u$ in1 $end
$var wire 1 #% in2 $end
$var wire 1 g& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 e& in1 $end
$var wire 1 f& in2 $end
$var wire 1 g& in3 $end
$var wire 1 b& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 #% in3 $end
$var wire 1 `$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 O$ A $end
$var wire 1 t$ B $end
$var wire 1 G& C_in $end
$var wire 1 L& p $end
$var wire 1 M& g $end
$var wire 1 _$ S $end
$var wire 1 h& C_out $end
$var wire 1 i& g_bar $end
$var wire 1 j& p_bar $end
$var wire 1 k& nand2_1_out $end
$var wire 1 l& nand2_2_out $end
$var wire 1 m& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 i& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 i& in1 $end
$var wire 1 M& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 j& in1 $end
$var wire 1 L& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 k& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 O$ in1 $end
$var wire 1 G& in2 $end
$var wire 1 l& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 t$ in1 $end
$var wire 1 G& in2 $end
$var wire 1 m& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 k& in1 $end
$var wire 1 l& in2 $end
$var wire 1 m& in3 $end
$var wire 1 h& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 G& in3 $end
$var wire 1 _$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 N$ A $end
$var wire 1 s$ B $end
$var wire 1 H& C_in $end
$var wire 1 N& p $end
$var wire 1 O& g $end
$var wire 1 ^$ S $end
$var wire 1 n& C_out $end
$var wire 1 o& g_bar $end
$var wire 1 p& p_bar $end
$var wire 1 q& nand2_1_out $end
$var wire 1 r& nand2_2_out $end
$var wire 1 s& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 o& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 o& in1 $end
$var wire 1 O& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 p& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 p& in1 $end
$var wire 1 N& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 q& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 N$ in1 $end
$var wire 1 H& in2 $end
$var wire 1 r& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 s$ in1 $end
$var wire 1 H& in2 $end
$var wire 1 s& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 q& in1 $end
$var wire 1 r& in2 $end
$var wire 1 s& in3 $end
$var wire 1 n& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 H& in3 $end
$var wire 1 ^$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 M$ A $end
$var wire 1 r$ B $end
$var wire 1 I& C_in $end
$var wire 1 P& p $end
$var wire 1 Q& g $end
$var wire 1 ]$ S $end
$var wire 1 t& C_out $end
$var wire 1 u& g_bar $end
$var wire 1 v& p_bar $end
$var wire 1 w& nand2_1_out $end
$var wire 1 x& nand2_2_out $end
$var wire 1 y& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 u& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 u& in1 $end
$var wire 1 Q& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 v& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 v& in1 $end
$var wire 1 P& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 w& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 M$ in1 $end
$var wire 1 I& in2 $end
$var wire 1 x& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 r$ in1 $end
$var wire 1 I& in2 $end
$var wire 1 y& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 w& in1 $end
$var wire 1 x& in2 $end
$var wire 1 y& in3 $end
$var wire 1 t& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 I& in3 $end
$var wire 1 ]$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 z& N $end
$var wire 1 I$ A [3] $end
$var wire 1 J$ A [2] $end
$var wire 1 K$ A [1] $end
$var wire 1 L$ A [0] $end
$var wire 1 n$ B [3] $end
$var wire 1 o$ B [2] $end
$var wire 1 p$ B [1] $end
$var wire 1 q$ B [0] $end
$var wire 1 $% C_in $end
$var wire 1 Y$ S [3] $end
$var wire 1 Z$ S [2] $end
$var wire 1 [$ S [1] $end
$var wire 1 \$ S [0] $end
$var wire 1 +% P $end
$var wire 1 3% G $end
$var wire 1 {& C_out $end
$var wire 1 |& c0 $end
$var wire 1 }& c1 $end
$var wire 1 ~& c2 $end
$var wire 1 !' p0 $end
$var wire 1 "' g0 $end
$var wire 1 #' p1 $end
$var wire 1 $' g1 $end
$var wire 1 %' p2 $end
$var wire 1 &' g2 $end
$var wire 1 '' p3 $end
$var wire 1 (' g3 $end
$var wire 1 )' g0_bar $end
$var wire 1 *' g1_bar $end
$var wire 1 +' g2_bar $end
$var wire 1 ,' g3_bar $end
$var wire 1 -' nand2_c0_0_out $end
$var wire 1 .' nand2_c1_0_out $end
$var wire 1 /' nand2_c2_0_out $end
$var wire 1 0' nand2_c3_0_out $end
$var wire 1 1' nand2_p3_p2 $end
$var wire 1 2' nand2_p1_p0 $end
$var wire 1 3' nand2_p3g2_out $end
$var wire 1 4' nand2_p3p2g1_out $end
$var wire 1 5' nand3_G_0_out $end
$var wire 1 6' nand2_p1g0_out $end
$var wire 1 7' nor2_G_0_out $end
$var wire 1 8' G_bar $end

$scope module not1_c0_0 $end
$var wire 1 "' in1 $end
$var wire 1 )' out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 !' in1 $end
$var wire 1 $% in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 )' in1 $end
$var wire 1 -' in2 $end
$var wire 1 |& out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 $' in1 $end
$var wire 1 *' out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 #' in1 $end
$var wire 1 |& in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 *' in1 $end
$var wire 1 .' in2 $end
$var wire 1 }& out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 &' in1 $end
$var wire 1 +' out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 %' in1 $end
$var wire 1 }& in2 $end
$var wire 1 /' out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 +' in1 $end
$var wire 1 /' in2 $end
$var wire 1 ~& out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 (' in1 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 '' in1 $end
$var wire 1 ~& in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 ,' in1 $end
$var wire 1 0' in2 $end
$var wire 1 {& out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 '' in1 $end
$var wire 1 %' in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 #' in1 $end
$var wire 1 !' in2 $end
$var wire 1 2' out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 1' in1 $end
$var wire 1 2' in2 $end
$var wire 1 +% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 '' in1 $end
$var wire 1 &' in2 $end
$var wire 1 3' out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 '' in1 $end
$var wire 1 %' in2 $end
$var wire 1 $' in3 $end
$var wire 1 4' out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 ,' in1 $end
$var wire 1 3' in2 $end
$var wire 1 4' in3 $end
$var wire 1 5' out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 #' in1 $end
$var wire 1 "' in2 $end
$var wire 1 6' out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 1' in1 $end
$var wire 1 6' in2 $end
$var wire 1 7' out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 5' in1 $end
$var wire 1 7' in2 $end
$var wire 1 8' out $end
$upscope $end

$scope module not1_G $end
$var wire 1 8' in1 $end
$var wire 1 3% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 L$ A $end
$var wire 1 q$ B $end
$var wire 1 $% C_in $end
$var wire 1 !' p $end
$var wire 1 "' g $end
$var wire 1 \$ S $end
$var wire 1 9' C_out $end
$var wire 1 :' g_bar $end
$var wire 1 ;' p_bar $end
$var wire 1 <' nand2_1_out $end
$var wire 1 =' nand2_2_out $end
$var wire 1 >' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 :' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 :' in1 $end
$var wire 1 "' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 ;' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ;' in1 $end
$var wire 1 !' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 <' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 L$ in1 $end
$var wire 1 $% in2 $end
$var wire 1 =' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 q$ in1 $end
$var wire 1 $% in2 $end
$var wire 1 >' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 <' in1 $end
$var wire 1 =' in2 $end
$var wire 1 >' in3 $end
$var wire 1 9' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 $% in3 $end
$var wire 1 \$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 K$ A $end
$var wire 1 p$ B $end
$var wire 1 |& C_in $end
$var wire 1 #' p $end
$var wire 1 $' g $end
$var wire 1 [$ S $end
$var wire 1 ?' C_out $end
$var wire 1 @' g_bar $end
$var wire 1 A' p_bar $end
$var wire 1 B' nand2_1_out $end
$var wire 1 C' nand2_2_out $end
$var wire 1 D' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 @' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 @' in1 $end
$var wire 1 $' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 A' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 A' in1 $end
$var wire 1 #' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 B' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 K$ in1 $end
$var wire 1 |& in2 $end
$var wire 1 C' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 p$ in1 $end
$var wire 1 |& in2 $end
$var wire 1 D' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 B' in1 $end
$var wire 1 C' in2 $end
$var wire 1 D' in3 $end
$var wire 1 ?' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 |& in3 $end
$var wire 1 [$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 J$ A $end
$var wire 1 o$ B $end
$var wire 1 }& C_in $end
$var wire 1 %' p $end
$var wire 1 &' g $end
$var wire 1 Z$ S $end
$var wire 1 E' C_out $end
$var wire 1 F' g_bar $end
$var wire 1 G' p_bar $end
$var wire 1 H' nand2_1_out $end
$var wire 1 I' nand2_2_out $end
$var wire 1 J' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 F' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 F' in1 $end
$var wire 1 &' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 G' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 G' in1 $end
$var wire 1 %' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 H' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 J$ in1 $end
$var wire 1 }& in2 $end
$var wire 1 I' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 o$ in1 $end
$var wire 1 }& in2 $end
$var wire 1 J' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 H' in1 $end
$var wire 1 I' in2 $end
$var wire 1 J' in3 $end
$var wire 1 E' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 }& in3 $end
$var wire 1 Z$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 I$ A $end
$var wire 1 n$ B $end
$var wire 1 ~& C_in $end
$var wire 1 '' p $end
$var wire 1 (' g $end
$var wire 1 Y$ S $end
$var wire 1 K' C_out $end
$var wire 1 L' g_bar $end
$var wire 1 M' p_bar $end
$var wire 1 N' nand2_1_out $end
$var wire 1 O' nand2_2_out $end
$var wire 1 P' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 L' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 L' in1 $end
$var wire 1 (' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 M' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 M' in1 $end
$var wire 1 '' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 N' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 I$ in1 $end
$var wire 1 ~& in2 $end
$var wire 1 O' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 n$ in1 $end
$var wire 1 ~& in2 $end
$var wire 1 P' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 N' in1 $end
$var wire 1 O' in2 $end
$var wire 1 P' in3 $end
$var wire 1 K' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 ~& in3 $end
$var wire 1 Y$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 -% in1 $end
$var wire 1 .% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 %% in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 5% out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 .% in1 $end
$var wire 1 5% in2 $end
$var wire 1 "% out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 /% in1 $end
$var wire 1 0% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 '% in1 $end
$var wire 1 "% in2 $end
$var wire 1 6% out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 0% in1 $end
$var wire 1 6% in2 $end
$var wire 1 #% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 1% in1 $end
$var wire 1 2% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 )% in1 $end
$var wire 1 #% in2 $end
$var wire 1 7% out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 2% in1 $end
$var wire 1 7% in2 $end
$var wire 1 $% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 3% in1 $end
$var wire 1 4% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 +% in1 $end
$var wire 1 $% in2 $end
$var wire 1 8% out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 4% in1 $end
$var wire 1 8% in2 $end
$var wire 1 !% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module decodeStage $end
$var wire 1 $! writeEn $end
$var wire 1 +! jump $end
$var wire 1 0! immCtl $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 2! slbi $end
$var wire 1 E! writeRegSel [2] $end
$var wire 1 F! writeRegSel [1] $end
$var wire 1 G! writeRegSel [0] $end
$var wire 1 ?! read1RegSel [2] $end
$var wire 1 @! read1RegSel [1] $end
$var wire 1 A! read1RegSel [0] $end
$var wire 1 B! read2RegSel [2] $end
$var wire 1 C! read2RegSel [1] $end
$var wire 1 D! read2RegSel [0] $end
$var wire 1 l# writeData [15] $end
$var wire 1 m# writeData [14] $end
$var wire 1 n# writeData [13] $end
$var wire 1 o# writeData [12] $end
$var wire 1 p# writeData [11] $end
$var wire 1 q# writeData [10] $end
$var wire 1 r# writeData [9] $end
$var wire 1 s# writeData [8] $end
$var wire 1 t# writeData [7] $end
$var wire 1 u# writeData [6] $end
$var wire 1 v# writeData [5] $end
$var wire 1 w# writeData [4] $end
$var wire 1 x# writeData [3] $end
$var wire 1 y# writeData [2] $end
$var wire 1 z# writeData [1] $end
$var wire 1 {# writeData [0] $end
$var wire 1 H! immVal [15] $end
$var wire 1 I! immVal [14] $end
$var wire 1 J! immVal [13] $end
$var wire 1 K! immVal [12] $end
$var wire 1 L! immVal [11] $end
$var wire 1 M! immVal [10] $end
$var wire 1 N! immVal [9] $end
$var wire 1 O! immVal [8] $end
$var wire 1 P! immVal [7] $end
$var wire 1 Q! immVal [6] $end
$var wire 1 R! immVal [5] $end
$var wire 1 S! immVal [4] $end
$var wire 1 T! immVal [3] $end
$var wire 1 U! immVal [2] $end
$var wire 1 V! immVal [1] $end
$var wire 1 W! immVal [0] $end
$var wire 1 5! err $end
$var wire 1 <# read1Data [15] $end
$var wire 1 =# read1Data [14] $end
$var wire 1 ># read1Data [13] $end
$var wire 1 ?# read1Data [12] $end
$var wire 1 @# read1Data [11] $end
$var wire 1 A# read1Data [10] $end
$var wire 1 B# read1Data [9] $end
$var wire 1 C# read1Data [8] $end
$var wire 1 D# read1Data [7] $end
$var wire 1 E# read1Data [6] $end
$var wire 1 F# read1Data [5] $end
$var wire 1 G# read1Data [4] $end
$var wire 1 H# read1Data [3] $end
$var wire 1 I# read1Data [2] $end
$var wire 1 J# read1Data [1] $end
$var wire 1 K# read1Data [0] $end
$var wire 1 L# read2Data [15] $end
$var wire 1 M# read2Data [14] $end
$var wire 1 N# read2Data [13] $end
$var wire 1 O# read2Data [12] $end
$var wire 1 P# read2Data [11] $end
$var wire 1 Q# read2Data [10] $end
$var wire 1 R# read2Data [9] $end
$var wire 1 S# read2Data [8] $end
$var wire 1 T# read2Data [7] $end
$var wire 1 U# read2Data [6] $end
$var wire 1 V# read2Data [5] $end
$var wire 1 W# read2Data [4] $end
$var wire 1 X# read2Data [3] $end
$var wire 1 Y# read2Data [2] $end
$var wire 1 Z# read2Data [1] $end
$var wire 1 [# read2Data [0] $end
$var wire 1 <! regRs [2] $end
$var wire 1 =! regRs [1] $end
$var wire 1 >! regRs [0] $end
$var wire 1 x! signedImmVal [15] $end
$var wire 1 y! signedImmVal [14] $end
$var wire 1 z! signedImmVal [13] $end
$var wire 1 {! signedImmVal [12] $end
$var wire 1 |! signedImmVal [11] $end
$var wire 1 }! signedImmVal [10] $end
$var wire 1 ~! signedImmVal [9] $end
$var wire 1 !" signedImmVal [8] $end
$var wire 1 "" signedImmVal [7] $end
$var wire 1 #" signedImmVal [6] $end
$var wire 1 $" signedImmVal [5] $end
$var wire 1 %" signedImmVal [4] $end
$var wire 1 &" signedImmVal [3] $end
$var wire 1 '" signedImmVal [2] $end
$var wire 1 (" signedImmVal [1] $end
$var wire 1 )" signedImmVal [0] $end

$scope module decodeRegisters $end
$var parameter 32 Q' N $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 ?! read1RegSel [2] $end
$var wire 1 @! read1RegSel [1] $end
$var wire 1 A! read1RegSel [0] $end
$var wire 1 B! read2RegSel [2] $end
$var wire 1 C! read2RegSel [1] $end
$var wire 1 D! read2RegSel [0] $end
$var wire 1 E! writeRegSel [2] $end
$var wire 1 F! writeRegSel [1] $end
$var wire 1 G! writeRegSel [0] $end
$var wire 1 l# writeData [15] $end
$var wire 1 m# writeData [14] $end
$var wire 1 n# writeData [13] $end
$var wire 1 o# writeData [12] $end
$var wire 1 p# writeData [11] $end
$var wire 1 q# writeData [10] $end
$var wire 1 r# writeData [9] $end
$var wire 1 s# writeData [8] $end
$var wire 1 t# writeData [7] $end
$var wire 1 u# writeData [6] $end
$var wire 1 v# writeData [5] $end
$var wire 1 w# writeData [4] $end
$var wire 1 x# writeData [3] $end
$var wire 1 y# writeData [2] $end
$var wire 1 z# writeData [1] $end
$var wire 1 {# writeData [0] $end
$var wire 1 $! writeEn $end
$var wire 1 <# read1Data [15] $end
$var wire 1 =# read1Data [14] $end
$var wire 1 ># read1Data [13] $end
$var wire 1 ?# read1Data [12] $end
$var wire 1 @# read1Data [11] $end
$var wire 1 A# read1Data [10] $end
$var wire 1 B# read1Data [9] $end
$var wire 1 C# read1Data [8] $end
$var wire 1 D# read1Data [7] $end
$var wire 1 E# read1Data [6] $end
$var wire 1 F# read1Data [5] $end
$var wire 1 G# read1Data [4] $end
$var wire 1 H# read1Data [3] $end
$var wire 1 I# read1Data [2] $end
$var wire 1 J# read1Data [1] $end
$var wire 1 K# read1Data [0] $end
$var wire 1 L# read2Data [15] $end
$var wire 1 M# read2Data [14] $end
$var wire 1 N# read2Data [13] $end
$var wire 1 O# read2Data [12] $end
$var wire 1 P# read2Data [11] $end
$var wire 1 Q# read2Data [10] $end
$var wire 1 R# read2Data [9] $end
$var wire 1 S# read2Data [8] $end
$var wire 1 T# read2Data [7] $end
$var wire 1 U# read2Data [6] $end
$var wire 1 V# read2Data [5] $end
$var wire 1 W# read2Data [4] $end
$var wire 1 X# read2Data [3] $end
$var wire 1 Y# read2Data [2] $end
$var wire 1 Z# read2Data [1] $end
$var wire 1 [# read2Data [0] $end
$var wire 1 5! err $end
$var wire 1 R' writedec_out [7] $end
$var wire 1 S' writedec_out [6] $end
$var wire 1 T' writedec_out [5] $end
$var wire 1 U' writedec_out [4] $end
$var wire 1 V' writedec_out [3] $end
$var wire 1 W' writedec_out [2] $end
$var wire 1 X' writedec_out [1] $end
$var wire 1 Y' writedec_out [0] $end
$var wire 1 Z' writeRegSel_dec [7] $end
$var wire 1 [' writeRegSel_dec [6] $end
$var wire 1 \' writeRegSel_dec [5] $end
$var wire 1 ]' writeRegSel_dec [4] $end
$var wire 1 ^' writeRegSel_dec [3] $end
$var wire 1 _' writeRegSel_dec [2] $end
$var wire 1 `' writeRegSel_dec [1] $end
$var wire 1 a' writeRegSel_dec [0] $end
$var wire 1 b' R0_out [15] $end
$var wire 1 c' R0_out [14] $end
$var wire 1 d' R0_out [13] $end
$var wire 1 e' R0_out [12] $end
$var wire 1 f' R0_out [11] $end
$var wire 1 g' R0_out [10] $end
$var wire 1 h' R0_out [9] $end
$var wire 1 i' R0_out [8] $end
$var wire 1 j' R0_out [7] $end
$var wire 1 k' R0_out [6] $end
$var wire 1 l' R0_out [5] $end
$var wire 1 m' R0_out [4] $end
$var wire 1 n' R0_out [3] $end
$var wire 1 o' R0_out [2] $end
$var wire 1 p' R0_out [1] $end
$var wire 1 q' R0_out [0] $end
$var wire 1 r' R1_out [15] $end
$var wire 1 s' R1_out [14] $end
$var wire 1 t' R1_out [13] $end
$var wire 1 u' R1_out [12] $end
$var wire 1 v' R1_out [11] $end
$var wire 1 w' R1_out [10] $end
$var wire 1 x' R1_out [9] $end
$var wire 1 y' R1_out [8] $end
$var wire 1 z' R1_out [7] $end
$var wire 1 {' R1_out [6] $end
$var wire 1 |' R1_out [5] $end
$var wire 1 }' R1_out [4] $end
$var wire 1 ~' R1_out [3] $end
$var wire 1 !( R1_out [2] $end
$var wire 1 "( R1_out [1] $end
$var wire 1 #( R1_out [0] $end
$var wire 1 $( R2_out [15] $end
$var wire 1 %( R2_out [14] $end
$var wire 1 &( R2_out [13] $end
$var wire 1 '( R2_out [12] $end
$var wire 1 (( R2_out [11] $end
$var wire 1 )( R2_out [10] $end
$var wire 1 *( R2_out [9] $end
$var wire 1 +( R2_out [8] $end
$var wire 1 ,( R2_out [7] $end
$var wire 1 -( R2_out [6] $end
$var wire 1 .( R2_out [5] $end
$var wire 1 /( R2_out [4] $end
$var wire 1 0( R2_out [3] $end
$var wire 1 1( R2_out [2] $end
$var wire 1 2( R2_out [1] $end
$var wire 1 3( R2_out [0] $end
$var wire 1 4( R3_out [15] $end
$var wire 1 5( R3_out [14] $end
$var wire 1 6( R3_out [13] $end
$var wire 1 7( R3_out [12] $end
$var wire 1 8( R3_out [11] $end
$var wire 1 9( R3_out [10] $end
$var wire 1 :( R3_out [9] $end
$var wire 1 ;( R3_out [8] $end
$var wire 1 <( R3_out [7] $end
$var wire 1 =( R3_out [6] $end
$var wire 1 >( R3_out [5] $end
$var wire 1 ?( R3_out [4] $end
$var wire 1 @( R3_out [3] $end
$var wire 1 A( R3_out [2] $end
$var wire 1 B( R3_out [1] $end
$var wire 1 C( R3_out [0] $end
$var wire 1 D( R4_out [15] $end
$var wire 1 E( R4_out [14] $end
$var wire 1 F( R4_out [13] $end
$var wire 1 G( R4_out [12] $end
$var wire 1 H( R4_out [11] $end
$var wire 1 I( R4_out [10] $end
$var wire 1 J( R4_out [9] $end
$var wire 1 K( R4_out [8] $end
$var wire 1 L( R4_out [7] $end
$var wire 1 M( R4_out [6] $end
$var wire 1 N( R4_out [5] $end
$var wire 1 O( R4_out [4] $end
$var wire 1 P( R4_out [3] $end
$var wire 1 Q( R4_out [2] $end
$var wire 1 R( R4_out [1] $end
$var wire 1 S( R4_out [0] $end
$var wire 1 T( R5_out [15] $end
$var wire 1 U( R5_out [14] $end
$var wire 1 V( R5_out [13] $end
$var wire 1 W( R5_out [12] $end
$var wire 1 X( R5_out [11] $end
$var wire 1 Y( R5_out [10] $end
$var wire 1 Z( R5_out [9] $end
$var wire 1 [( R5_out [8] $end
$var wire 1 \( R5_out [7] $end
$var wire 1 ]( R5_out [6] $end
$var wire 1 ^( R5_out [5] $end
$var wire 1 _( R5_out [4] $end
$var wire 1 `( R5_out [3] $end
$var wire 1 a( R5_out [2] $end
$var wire 1 b( R5_out [1] $end
$var wire 1 c( R5_out [0] $end
$var wire 1 d( R6_out [15] $end
$var wire 1 e( R6_out [14] $end
$var wire 1 f( R6_out [13] $end
$var wire 1 g( R6_out [12] $end
$var wire 1 h( R6_out [11] $end
$var wire 1 i( R6_out [10] $end
$var wire 1 j( R6_out [9] $end
$var wire 1 k( R6_out [8] $end
$var wire 1 l( R6_out [7] $end
$var wire 1 m( R6_out [6] $end
$var wire 1 n( R6_out [5] $end
$var wire 1 o( R6_out [4] $end
$var wire 1 p( R6_out [3] $end
$var wire 1 q( R6_out [2] $end
$var wire 1 r( R6_out [1] $end
$var wire 1 s( R6_out [0] $end
$var wire 1 t( R7_out [15] $end
$var wire 1 u( R7_out [14] $end
$var wire 1 v( R7_out [13] $end
$var wire 1 w( R7_out [12] $end
$var wire 1 x( R7_out [11] $end
$var wire 1 y( R7_out [10] $end
$var wire 1 z( R7_out [9] $end
$var wire 1 {( R7_out [8] $end
$var wire 1 |( R7_out [7] $end
$var wire 1 }( R7_out [6] $end
$var wire 1 ~( R7_out [5] $end
$var wire 1 !) R7_out [4] $end
$var wire 1 ") R7_out [3] $end
$var wire 1 #) R7_out [2] $end
$var wire 1 $) R7_out [1] $end
$var wire 1 %) R7_out [0] $end
$var wire 1 &) en0 $end
$var wire 1 ') en1 $end
$var wire 1 () en2 $end
$var wire 1 )) en3 $end
$var wire 1 *) en4 $end
$var wire 1 +) en5 $end
$var wire 1 ,) en6 $end
$var wire 1 -) en7 $end

$scope module R0 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 &) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 b' Q [15] $end
$var wire 1 c' Q [14] $end
$var wire 1 d' Q [13] $end
$var wire 1 e' Q [12] $end
$var wire 1 f' Q [11] $end
$var wire 1 g' Q [10] $end
$var wire 1 h' Q [9] $end
$var wire 1 i' Q [8] $end
$var wire 1 j' Q [7] $end
$var wire 1 k' Q [6] $end
$var wire 1 l' Q [5] $end
$var wire 1 m' Q [4] $end
$var wire 1 n' Q [3] $end
$var wire 1 o' Q [2] $end
$var wire 1 p' Q [1] $end
$var wire 1 q' Q [0] $end
$var wire 1 .) in [15] $end
$var wire 1 /) in [14] $end
$var wire 1 0) in [13] $end
$var wire 1 1) in [12] $end
$var wire 1 2) in [11] $end
$var wire 1 3) in [10] $end
$var wire 1 4) in [9] $end
$var wire 1 5) in [8] $end
$var wire 1 6) in [7] $end
$var wire 1 7) in [6] $end
$var wire 1 8) in [5] $end
$var wire 1 9) in [4] $end
$var wire 1 :) in [3] $end
$var wire 1 ;) in [2] $end
$var wire 1 <) in [1] $end
$var wire 1 =) in [0] $end
$var wire 1 >) out [15] $end
$var wire 1 ?) out [14] $end
$var wire 1 @) out [13] $end
$var wire 1 A) out [12] $end
$var wire 1 B) out [11] $end
$var wire 1 C) out [10] $end
$var wire 1 D) out [9] $end
$var wire 1 E) out [8] $end
$var wire 1 F) out [7] $end
$var wire 1 G) out [6] $end
$var wire 1 H) out [5] $end
$var wire 1 I) out [4] $end
$var wire 1 J) out [3] $end
$var wire 1 K) out [2] $end
$var wire 1 L) out [1] $end
$var wire 1 M) out [0] $end

$scope module dff_0 $end
$var wire 1 M) q $end
$var wire 1 =) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 L) q $end
$var wire 1 <) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 K) q $end
$var wire 1 ;) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 J) q $end
$var wire 1 :) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 I) q $end
$var wire 1 9) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 H) q $end
$var wire 1 8) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 G) q $end
$var wire 1 7) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 F) q $end
$var wire 1 6) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 E) q $end
$var wire 1 5) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 D) q $end
$var wire 1 4) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 C) q $end
$var wire 1 3) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 B) q $end
$var wire 1 2) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 A) q $end
$var wire 1 1) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 @) q $end
$var wire 1 0) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 ?) q $end
$var wire 1 /) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \) state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 >) q $end
$var wire 1 .) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ]) state $end
$upscope $end
$upscope $end

$scope module R1 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 ') en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 r' Q [15] $end
$var wire 1 s' Q [14] $end
$var wire 1 t' Q [13] $end
$var wire 1 u' Q [12] $end
$var wire 1 v' Q [11] $end
$var wire 1 w' Q [10] $end
$var wire 1 x' Q [9] $end
$var wire 1 y' Q [8] $end
$var wire 1 z' Q [7] $end
$var wire 1 {' Q [6] $end
$var wire 1 |' Q [5] $end
$var wire 1 }' Q [4] $end
$var wire 1 ~' Q [3] $end
$var wire 1 !( Q [2] $end
$var wire 1 "( Q [1] $end
$var wire 1 #( Q [0] $end
$var wire 1 ^) in [15] $end
$var wire 1 _) in [14] $end
$var wire 1 `) in [13] $end
$var wire 1 a) in [12] $end
$var wire 1 b) in [11] $end
$var wire 1 c) in [10] $end
$var wire 1 d) in [9] $end
$var wire 1 e) in [8] $end
$var wire 1 f) in [7] $end
$var wire 1 g) in [6] $end
$var wire 1 h) in [5] $end
$var wire 1 i) in [4] $end
$var wire 1 j) in [3] $end
$var wire 1 k) in [2] $end
$var wire 1 l) in [1] $end
$var wire 1 m) in [0] $end
$var wire 1 n) out [15] $end
$var wire 1 o) out [14] $end
$var wire 1 p) out [13] $end
$var wire 1 q) out [12] $end
$var wire 1 r) out [11] $end
$var wire 1 s) out [10] $end
$var wire 1 t) out [9] $end
$var wire 1 u) out [8] $end
$var wire 1 v) out [7] $end
$var wire 1 w) out [6] $end
$var wire 1 x) out [5] $end
$var wire 1 y) out [4] $end
$var wire 1 z) out [3] $end
$var wire 1 {) out [2] $end
$var wire 1 |) out [1] $end
$var wire 1 }) out [0] $end

$scope module dff_0 $end
$var wire 1 }) q $end
$var wire 1 m) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 |) q $end
$var wire 1 l) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 {) q $end
$var wire 1 k) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 z) q $end
$var wire 1 j) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 y) q $end
$var wire 1 i) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 x) q $end
$var wire 1 h) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %* state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 w) q $end
$var wire 1 g) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &* state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 v) q $end
$var wire 1 f) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '* state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 u) q $end
$var wire 1 e) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (* state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 t) q $end
$var wire 1 d) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )* state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 s) q $end
$var wire 1 c) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ** state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 r) q $end
$var wire 1 b) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +* state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 q) q $end
$var wire 1 a) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,* state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 p) q $end
$var wire 1 `) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -* state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 o) q $end
$var wire 1 _) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 .* state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 n) q $end
$var wire 1 ^) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /* state $end
$upscope $end
$upscope $end

$scope module R2 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 () en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 $( Q [15] $end
$var wire 1 %( Q [14] $end
$var wire 1 &( Q [13] $end
$var wire 1 '( Q [12] $end
$var wire 1 (( Q [11] $end
$var wire 1 )( Q [10] $end
$var wire 1 *( Q [9] $end
$var wire 1 +( Q [8] $end
$var wire 1 ,( Q [7] $end
$var wire 1 -( Q [6] $end
$var wire 1 .( Q [5] $end
$var wire 1 /( Q [4] $end
$var wire 1 0( Q [3] $end
$var wire 1 1( Q [2] $end
$var wire 1 2( Q [1] $end
$var wire 1 3( Q [0] $end
$var wire 1 0* in [15] $end
$var wire 1 1* in [14] $end
$var wire 1 2* in [13] $end
$var wire 1 3* in [12] $end
$var wire 1 4* in [11] $end
$var wire 1 5* in [10] $end
$var wire 1 6* in [9] $end
$var wire 1 7* in [8] $end
$var wire 1 8* in [7] $end
$var wire 1 9* in [6] $end
$var wire 1 :* in [5] $end
$var wire 1 ;* in [4] $end
$var wire 1 <* in [3] $end
$var wire 1 =* in [2] $end
$var wire 1 >* in [1] $end
$var wire 1 ?* in [0] $end
$var wire 1 @* out [15] $end
$var wire 1 A* out [14] $end
$var wire 1 B* out [13] $end
$var wire 1 C* out [12] $end
$var wire 1 D* out [11] $end
$var wire 1 E* out [10] $end
$var wire 1 F* out [9] $end
$var wire 1 G* out [8] $end
$var wire 1 H* out [7] $end
$var wire 1 I* out [6] $end
$var wire 1 J* out [5] $end
$var wire 1 K* out [4] $end
$var wire 1 L* out [3] $end
$var wire 1 M* out [2] $end
$var wire 1 N* out [1] $end
$var wire 1 O* out [0] $end

$scope module dff_0 $end
$var wire 1 O* q $end
$var wire 1 ?* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 P* state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 N* q $end
$var wire 1 >* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Q* state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 M* q $end
$var wire 1 =* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R* state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 L* q $end
$var wire 1 <* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S* state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 K* q $end
$var wire 1 ;* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T* state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 J* q $end
$var wire 1 :* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U* state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 I* q $end
$var wire 1 9* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V* state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 H* q $end
$var wire 1 8* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 G* q $end
$var wire 1 7* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 F* q $end
$var wire 1 6* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 E* q $end
$var wire 1 5* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 D* q $end
$var wire 1 4* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 C* q $end
$var wire 1 3* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 B* q $end
$var wire 1 2* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 A* q $end
$var wire 1 1* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ^* state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 @* q $end
$var wire 1 0* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _* state $end
$upscope $end
$upscope $end

$scope module R3 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 )) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 4( Q [15] $end
$var wire 1 5( Q [14] $end
$var wire 1 6( Q [13] $end
$var wire 1 7( Q [12] $end
$var wire 1 8( Q [11] $end
$var wire 1 9( Q [10] $end
$var wire 1 :( Q [9] $end
$var wire 1 ;( Q [8] $end
$var wire 1 <( Q [7] $end
$var wire 1 =( Q [6] $end
$var wire 1 >( Q [5] $end
$var wire 1 ?( Q [4] $end
$var wire 1 @( Q [3] $end
$var wire 1 A( Q [2] $end
$var wire 1 B( Q [1] $end
$var wire 1 C( Q [0] $end
$var wire 1 `* in [15] $end
$var wire 1 a* in [14] $end
$var wire 1 b* in [13] $end
$var wire 1 c* in [12] $end
$var wire 1 d* in [11] $end
$var wire 1 e* in [10] $end
$var wire 1 f* in [9] $end
$var wire 1 g* in [8] $end
$var wire 1 h* in [7] $end
$var wire 1 i* in [6] $end
$var wire 1 j* in [5] $end
$var wire 1 k* in [4] $end
$var wire 1 l* in [3] $end
$var wire 1 m* in [2] $end
$var wire 1 n* in [1] $end
$var wire 1 o* in [0] $end
$var wire 1 p* out [15] $end
$var wire 1 q* out [14] $end
$var wire 1 r* out [13] $end
$var wire 1 s* out [12] $end
$var wire 1 t* out [11] $end
$var wire 1 u* out [10] $end
$var wire 1 v* out [9] $end
$var wire 1 w* out [8] $end
$var wire 1 x* out [7] $end
$var wire 1 y* out [6] $end
$var wire 1 z* out [5] $end
$var wire 1 {* out [4] $end
$var wire 1 |* out [3] $end
$var wire 1 }* out [2] $end
$var wire 1 ~* out [1] $end
$var wire 1 !+ out [0] $end

$scope module dff_0 $end
$var wire 1 !+ q $end
$var wire 1 o* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ~* q $end
$var wire 1 n* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 }* q $end
$var wire 1 m* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 |* q $end
$var wire 1 l* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 {* q $end
$var wire 1 k* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 z* q $end
$var wire 1 j* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 y* q $end
$var wire 1 i* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 x* q $end
$var wire 1 h* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 w* q $end
$var wire 1 g* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 v* q $end
$var wire 1 f* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 u* q $end
$var wire 1 e* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 t* q $end
$var wire 1 d* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 s* q $end
$var wire 1 c* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 r* q $end
$var wire 1 b* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 q* q $end
$var wire 1 a* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 p* q $end
$var wire 1 `* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end
$upscope $end

$scope module R4 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 *) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 D( Q [15] $end
$var wire 1 E( Q [14] $end
$var wire 1 F( Q [13] $end
$var wire 1 G( Q [12] $end
$var wire 1 H( Q [11] $end
$var wire 1 I( Q [10] $end
$var wire 1 J( Q [9] $end
$var wire 1 K( Q [8] $end
$var wire 1 L( Q [7] $end
$var wire 1 M( Q [6] $end
$var wire 1 N( Q [5] $end
$var wire 1 O( Q [4] $end
$var wire 1 P( Q [3] $end
$var wire 1 Q( Q [2] $end
$var wire 1 R( Q [1] $end
$var wire 1 S( Q [0] $end
$var wire 1 2+ in [15] $end
$var wire 1 3+ in [14] $end
$var wire 1 4+ in [13] $end
$var wire 1 5+ in [12] $end
$var wire 1 6+ in [11] $end
$var wire 1 7+ in [10] $end
$var wire 1 8+ in [9] $end
$var wire 1 9+ in [8] $end
$var wire 1 :+ in [7] $end
$var wire 1 ;+ in [6] $end
$var wire 1 <+ in [5] $end
$var wire 1 =+ in [4] $end
$var wire 1 >+ in [3] $end
$var wire 1 ?+ in [2] $end
$var wire 1 @+ in [1] $end
$var wire 1 A+ in [0] $end
$var wire 1 B+ out [15] $end
$var wire 1 C+ out [14] $end
$var wire 1 D+ out [13] $end
$var wire 1 E+ out [12] $end
$var wire 1 F+ out [11] $end
$var wire 1 G+ out [10] $end
$var wire 1 H+ out [9] $end
$var wire 1 I+ out [8] $end
$var wire 1 J+ out [7] $end
$var wire 1 K+ out [6] $end
$var wire 1 L+ out [5] $end
$var wire 1 M+ out [4] $end
$var wire 1 N+ out [3] $end
$var wire 1 O+ out [2] $end
$var wire 1 P+ out [1] $end
$var wire 1 Q+ out [0] $end

$scope module dff_0 $end
$var wire 1 Q+ q $end
$var wire 1 A+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 P+ q $end
$var wire 1 @+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S+ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 O+ q $end
$var wire 1 ?+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 N+ q $end
$var wire 1 >+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 M+ q $end
$var wire 1 =+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V+ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 L+ q $end
$var wire 1 <+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 K+ q $end
$var wire 1 ;+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X+ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 J+ q $end
$var wire 1 :+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 I+ q $end
$var wire 1 9+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z+ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 H+ q $end
$var wire 1 8+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 G+ q $end
$var wire 1 7+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \+ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 F+ q $end
$var wire 1 6+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 E+ q $end
$var wire 1 5+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 D+ q $end
$var wire 1 4+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _+ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 C+ q $end
$var wire 1 3+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 `+ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 B+ q $end
$var wire 1 2+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 a+ state $end
$upscope $end
$upscope $end

$scope module R5 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 +) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 T( Q [15] $end
$var wire 1 U( Q [14] $end
$var wire 1 V( Q [13] $end
$var wire 1 W( Q [12] $end
$var wire 1 X( Q [11] $end
$var wire 1 Y( Q [10] $end
$var wire 1 Z( Q [9] $end
$var wire 1 [( Q [8] $end
$var wire 1 \( Q [7] $end
$var wire 1 ]( Q [6] $end
$var wire 1 ^( Q [5] $end
$var wire 1 _( Q [4] $end
$var wire 1 `( Q [3] $end
$var wire 1 a( Q [2] $end
$var wire 1 b( Q [1] $end
$var wire 1 c( Q [0] $end
$var wire 1 b+ in [15] $end
$var wire 1 c+ in [14] $end
$var wire 1 d+ in [13] $end
$var wire 1 e+ in [12] $end
$var wire 1 f+ in [11] $end
$var wire 1 g+ in [10] $end
$var wire 1 h+ in [9] $end
$var wire 1 i+ in [8] $end
$var wire 1 j+ in [7] $end
$var wire 1 k+ in [6] $end
$var wire 1 l+ in [5] $end
$var wire 1 m+ in [4] $end
$var wire 1 n+ in [3] $end
$var wire 1 o+ in [2] $end
$var wire 1 p+ in [1] $end
$var wire 1 q+ in [0] $end
$var wire 1 r+ out [15] $end
$var wire 1 s+ out [14] $end
$var wire 1 t+ out [13] $end
$var wire 1 u+ out [12] $end
$var wire 1 v+ out [11] $end
$var wire 1 w+ out [10] $end
$var wire 1 x+ out [9] $end
$var wire 1 y+ out [8] $end
$var wire 1 z+ out [7] $end
$var wire 1 {+ out [6] $end
$var wire 1 |+ out [5] $end
$var wire 1 }+ out [4] $end
$var wire 1 ~+ out [3] $end
$var wire 1 !, out [2] $end
$var wire 1 ", out [1] $end
$var wire 1 #, out [0] $end

$scope module dff_0 $end
$var wire 1 #, q $end
$var wire 1 q+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $, state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ", q $end
$var wire 1 p+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %, state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 !, q $end
$var wire 1 o+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &, state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 ~+ q $end
$var wire 1 n+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ', state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 }+ q $end
$var wire 1 m+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (, state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 |+ q $end
$var wire 1 l+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ), state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 {+ q $end
$var wire 1 k+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *, state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 z+ q $end
$var wire 1 j+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +, state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 y+ q $end
$var wire 1 i+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,, state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 x+ q $end
$var wire 1 h+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -, state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 w+ q $end
$var wire 1 g+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ., state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 v+ q $end
$var wire 1 f+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /, state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 u+ q $end
$var wire 1 e+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 0, state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 t+ q $end
$var wire 1 d+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 1, state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 s+ q $end
$var wire 1 c+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 2, state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 r+ q $end
$var wire 1 b+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 3, state $end
$upscope $end
$upscope $end

$scope module R6 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 ,) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 d( Q [15] $end
$var wire 1 e( Q [14] $end
$var wire 1 f( Q [13] $end
$var wire 1 g( Q [12] $end
$var wire 1 h( Q [11] $end
$var wire 1 i( Q [10] $end
$var wire 1 j( Q [9] $end
$var wire 1 k( Q [8] $end
$var wire 1 l( Q [7] $end
$var wire 1 m( Q [6] $end
$var wire 1 n( Q [5] $end
$var wire 1 o( Q [4] $end
$var wire 1 p( Q [3] $end
$var wire 1 q( Q [2] $end
$var wire 1 r( Q [1] $end
$var wire 1 s( Q [0] $end
$var wire 1 4, in [15] $end
$var wire 1 5, in [14] $end
$var wire 1 6, in [13] $end
$var wire 1 7, in [12] $end
$var wire 1 8, in [11] $end
$var wire 1 9, in [10] $end
$var wire 1 :, in [9] $end
$var wire 1 ;, in [8] $end
$var wire 1 <, in [7] $end
$var wire 1 =, in [6] $end
$var wire 1 >, in [5] $end
$var wire 1 ?, in [4] $end
$var wire 1 @, in [3] $end
$var wire 1 A, in [2] $end
$var wire 1 B, in [1] $end
$var wire 1 C, in [0] $end
$var wire 1 D, out [15] $end
$var wire 1 E, out [14] $end
$var wire 1 F, out [13] $end
$var wire 1 G, out [12] $end
$var wire 1 H, out [11] $end
$var wire 1 I, out [10] $end
$var wire 1 J, out [9] $end
$var wire 1 K, out [8] $end
$var wire 1 L, out [7] $end
$var wire 1 M, out [6] $end
$var wire 1 N, out [5] $end
$var wire 1 O, out [4] $end
$var wire 1 P, out [3] $end
$var wire 1 Q, out [2] $end
$var wire 1 R, out [1] $end
$var wire 1 S, out [0] $end

$scope module dff_0 $end
$var wire 1 S, q $end
$var wire 1 C, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T, state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 R, q $end
$var wire 1 B, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U, state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 Q, q $end
$var wire 1 A, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V, state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 P, q $end
$var wire 1 @, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W, state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 O, q $end
$var wire 1 ?, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X, state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 N, q $end
$var wire 1 >, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y, state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 M, q $end
$var wire 1 =, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z, state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 L, q $end
$var wire 1 <, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [, state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 K, q $end
$var wire 1 ;, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \, state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 J, q $end
$var wire 1 :, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ], state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 I, q $end
$var wire 1 9, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ^, state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 H, q $end
$var wire 1 8, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _, state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 G, q $end
$var wire 1 7, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 `, state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 F, q $end
$var wire 1 6, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 a, state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 E, q $end
$var wire 1 5, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 b, state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 D, q $end
$var wire 1 4, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 c, state $end
$upscope $end
$upscope $end

$scope module R7 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 -) en $end
$var wire 1 l# D [15] $end
$var wire 1 m# D [14] $end
$var wire 1 n# D [13] $end
$var wire 1 o# D [12] $end
$var wire 1 p# D [11] $end
$var wire 1 q# D [10] $end
$var wire 1 r# D [9] $end
$var wire 1 s# D [8] $end
$var wire 1 t# D [7] $end
$var wire 1 u# D [6] $end
$var wire 1 v# D [5] $end
$var wire 1 w# D [4] $end
$var wire 1 x# D [3] $end
$var wire 1 y# D [2] $end
$var wire 1 z# D [1] $end
$var wire 1 {# D [0] $end
$var wire 1 t( Q [15] $end
$var wire 1 u( Q [14] $end
$var wire 1 v( Q [13] $end
$var wire 1 w( Q [12] $end
$var wire 1 x( Q [11] $end
$var wire 1 y( Q [10] $end
$var wire 1 z( Q [9] $end
$var wire 1 {( Q [8] $end
$var wire 1 |( Q [7] $end
$var wire 1 }( Q [6] $end
$var wire 1 ~( Q [5] $end
$var wire 1 !) Q [4] $end
$var wire 1 ") Q [3] $end
$var wire 1 #) Q [2] $end
$var wire 1 $) Q [1] $end
$var wire 1 %) Q [0] $end
$var wire 1 d, in [15] $end
$var wire 1 e, in [14] $end
$var wire 1 f, in [13] $end
$var wire 1 g, in [12] $end
$var wire 1 h, in [11] $end
$var wire 1 i, in [10] $end
$var wire 1 j, in [9] $end
$var wire 1 k, in [8] $end
$var wire 1 l, in [7] $end
$var wire 1 m, in [6] $end
$var wire 1 n, in [5] $end
$var wire 1 o, in [4] $end
$var wire 1 p, in [3] $end
$var wire 1 q, in [2] $end
$var wire 1 r, in [1] $end
$var wire 1 s, in [0] $end
$var wire 1 t, out [15] $end
$var wire 1 u, out [14] $end
$var wire 1 v, out [13] $end
$var wire 1 w, out [12] $end
$var wire 1 x, out [11] $end
$var wire 1 y, out [10] $end
$var wire 1 z, out [9] $end
$var wire 1 {, out [8] $end
$var wire 1 |, out [7] $end
$var wire 1 }, out [6] $end
$var wire 1 ~, out [5] $end
$var wire 1 !- out [4] $end
$var wire 1 "- out [3] $end
$var wire 1 #- out [2] $end
$var wire 1 $- out [1] $end
$var wire 1 %- out [0] $end

$scope module dff_0 $end
$var wire 1 %- q $end
$var wire 1 s, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 $- q $end
$var wire 1 r, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 #- q $end
$var wire 1 q, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 "- q $end
$var wire 1 p, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )- state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 !- q $end
$var wire 1 o, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *- state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 ~, q $end
$var wire 1 n, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +- state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 }, q $end
$var wire 1 m, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,- state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 |, q $end
$var wire 1 l, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -- state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 {, q $end
$var wire 1 k, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 .- state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 z, q $end
$var wire 1 j, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /- state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 y, q $end
$var wire 1 i, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 0- state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 x, q $end
$var wire 1 h, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 1- state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 w, q $end
$var wire 1 g, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 2- state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 v, q $end
$var wire 1 f, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 3- state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 u, q $end
$var wire 1 e, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 4- state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 t, q $end
$var wire 1 d, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 5- state $end
$upscope $end
$upscope $end

$scope module decoder_write $end
$var wire 1 E! in [2] $end
$var wire 1 F! in [1] $end
$var wire 1 G! in [0] $end
$var wire 1 Z' out [7] $end
$var wire 1 [' out [6] $end
$var wire 1 \' out [5] $end
$var wire 1 ]' out [4] $end
$var wire 1 ^' out [3] $end
$var wire 1 _' out [2] $end
$var wire 1 `' out [1] $end
$var wire 1 a' out [0] $end
$upscope $end

$scope module read1mux $end
$var wire 1 ?! sel [2] $end
$var wire 1 @! sel [1] $end
$var wire 1 A! sel [0] $end
$var wire 1 b' in0 [15] $end
$var wire 1 c' in0 [14] $end
$var wire 1 d' in0 [13] $end
$var wire 1 e' in0 [12] $end
$var wire 1 f' in0 [11] $end
$var wire 1 g' in0 [10] $end
$var wire 1 h' in0 [9] $end
$var wire 1 i' in0 [8] $end
$var wire 1 j' in0 [7] $end
$var wire 1 k' in0 [6] $end
$var wire 1 l' in0 [5] $end
$var wire 1 m' in0 [4] $end
$var wire 1 n' in0 [3] $end
$var wire 1 o' in0 [2] $end
$var wire 1 p' in0 [1] $end
$var wire 1 q' in0 [0] $end
$var wire 1 r' in1 [15] $end
$var wire 1 s' in1 [14] $end
$var wire 1 t' in1 [13] $end
$var wire 1 u' in1 [12] $end
$var wire 1 v' in1 [11] $end
$var wire 1 w' in1 [10] $end
$var wire 1 x' in1 [9] $end
$var wire 1 y' in1 [8] $end
$var wire 1 z' in1 [7] $end
$var wire 1 {' in1 [6] $end
$var wire 1 |' in1 [5] $end
$var wire 1 }' in1 [4] $end
$var wire 1 ~' in1 [3] $end
$var wire 1 !( in1 [2] $end
$var wire 1 "( in1 [1] $end
$var wire 1 #( in1 [0] $end
$var wire 1 $( in2 [15] $end
$var wire 1 %( in2 [14] $end
$var wire 1 &( in2 [13] $end
$var wire 1 '( in2 [12] $end
$var wire 1 (( in2 [11] $end
$var wire 1 )( in2 [10] $end
$var wire 1 *( in2 [9] $end
$var wire 1 +( in2 [8] $end
$var wire 1 ,( in2 [7] $end
$var wire 1 -( in2 [6] $end
$var wire 1 .( in2 [5] $end
$var wire 1 /( in2 [4] $end
$var wire 1 0( in2 [3] $end
$var wire 1 1( in2 [2] $end
$var wire 1 2( in2 [1] $end
$var wire 1 3( in2 [0] $end
$var wire 1 4( in3 [15] $end
$var wire 1 5( in3 [14] $end
$var wire 1 6( in3 [13] $end
$var wire 1 7( in3 [12] $end
$var wire 1 8( in3 [11] $end
$var wire 1 9( in3 [10] $end
$var wire 1 :( in3 [9] $end
$var wire 1 ;( in3 [8] $end
$var wire 1 <( in3 [7] $end
$var wire 1 =( in3 [6] $end
$var wire 1 >( in3 [5] $end
$var wire 1 ?( in3 [4] $end
$var wire 1 @( in3 [3] $end
$var wire 1 A( in3 [2] $end
$var wire 1 B( in3 [1] $end
$var wire 1 C( in3 [0] $end
$var wire 1 D( in4 [15] $end
$var wire 1 E( in4 [14] $end
$var wire 1 F( in4 [13] $end
$var wire 1 G( in4 [12] $end
$var wire 1 H( in4 [11] $end
$var wire 1 I( in4 [10] $end
$var wire 1 J( in4 [9] $end
$var wire 1 K( in4 [8] $end
$var wire 1 L( in4 [7] $end
$var wire 1 M( in4 [6] $end
$var wire 1 N( in4 [5] $end
$var wire 1 O( in4 [4] $end
$var wire 1 P( in4 [3] $end
$var wire 1 Q( in4 [2] $end
$var wire 1 R( in4 [1] $end
$var wire 1 S( in4 [0] $end
$var wire 1 T( in5 [15] $end
$var wire 1 U( in5 [14] $end
$var wire 1 V( in5 [13] $end
$var wire 1 W( in5 [12] $end
$var wire 1 X( in5 [11] $end
$var wire 1 Y( in5 [10] $end
$var wire 1 Z( in5 [9] $end
$var wire 1 [( in5 [8] $end
$var wire 1 \( in5 [7] $end
$var wire 1 ]( in5 [6] $end
$var wire 1 ^( in5 [5] $end
$var wire 1 _( in5 [4] $end
$var wire 1 `( in5 [3] $end
$var wire 1 a( in5 [2] $end
$var wire 1 b( in5 [1] $end
$var wire 1 c( in5 [0] $end
$var wire 1 d( in6 [15] $end
$var wire 1 e( in6 [14] $end
$var wire 1 f( in6 [13] $end
$var wire 1 g( in6 [12] $end
$var wire 1 h( in6 [11] $end
$var wire 1 i( in6 [10] $end
$var wire 1 j( in6 [9] $end
$var wire 1 k( in6 [8] $end
$var wire 1 l( in6 [7] $end
$var wire 1 m( in6 [6] $end
$var wire 1 n( in6 [5] $end
$var wire 1 o( in6 [4] $end
$var wire 1 p( in6 [3] $end
$var wire 1 q( in6 [2] $end
$var wire 1 r( in6 [1] $end
$var wire 1 s( in6 [0] $end
$var wire 1 t( in7 [15] $end
$var wire 1 u( in7 [14] $end
$var wire 1 v( in7 [13] $end
$var wire 1 w( in7 [12] $end
$var wire 1 x( in7 [11] $end
$var wire 1 y( in7 [10] $end
$var wire 1 z( in7 [9] $end
$var wire 1 {( in7 [8] $end
$var wire 1 |( in7 [7] $end
$var wire 1 }( in7 [6] $end
$var wire 1 ~( in7 [5] $end
$var wire 1 !) in7 [4] $end
$var wire 1 ") in7 [3] $end
$var wire 1 #) in7 [2] $end
$var wire 1 $) in7 [1] $end
$var wire 1 %) in7 [0] $end
$var reg 16 6- out [15:0] $end
$upscope $end

$scope module read2mux $end
$var wire 1 B! sel [2] $end
$var wire 1 C! sel [1] $end
$var wire 1 D! sel [0] $end
$var wire 1 b' in0 [15] $end
$var wire 1 c' in0 [14] $end
$var wire 1 d' in0 [13] $end
$var wire 1 e' in0 [12] $end
$var wire 1 f' in0 [11] $end
$var wire 1 g' in0 [10] $end
$var wire 1 h' in0 [9] $end
$var wire 1 i' in0 [8] $end
$var wire 1 j' in0 [7] $end
$var wire 1 k' in0 [6] $end
$var wire 1 l' in0 [5] $end
$var wire 1 m' in0 [4] $end
$var wire 1 n' in0 [3] $end
$var wire 1 o' in0 [2] $end
$var wire 1 p' in0 [1] $end
$var wire 1 q' in0 [0] $end
$var wire 1 r' in1 [15] $end
$var wire 1 s' in1 [14] $end
$var wire 1 t' in1 [13] $end
$var wire 1 u' in1 [12] $end
$var wire 1 v' in1 [11] $end
$var wire 1 w' in1 [10] $end
$var wire 1 x' in1 [9] $end
$var wire 1 y' in1 [8] $end
$var wire 1 z' in1 [7] $end
$var wire 1 {' in1 [6] $end
$var wire 1 |' in1 [5] $end
$var wire 1 }' in1 [4] $end
$var wire 1 ~' in1 [3] $end
$var wire 1 !( in1 [2] $end
$var wire 1 "( in1 [1] $end
$var wire 1 #( in1 [0] $end
$var wire 1 $( in2 [15] $end
$var wire 1 %( in2 [14] $end
$var wire 1 &( in2 [13] $end
$var wire 1 '( in2 [12] $end
$var wire 1 (( in2 [11] $end
$var wire 1 )( in2 [10] $end
$var wire 1 *( in2 [9] $end
$var wire 1 +( in2 [8] $end
$var wire 1 ,( in2 [7] $end
$var wire 1 -( in2 [6] $end
$var wire 1 .( in2 [5] $end
$var wire 1 /( in2 [4] $end
$var wire 1 0( in2 [3] $end
$var wire 1 1( in2 [2] $end
$var wire 1 2( in2 [1] $end
$var wire 1 3( in2 [0] $end
$var wire 1 4( in3 [15] $end
$var wire 1 5( in3 [14] $end
$var wire 1 6( in3 [13] $end
$var wire 1 7( in3 [12] $end
$var wire 1 8( in3 [11] $end
$var wire 1 9( in3 [10] $end
$var wire 1 :( in3 [9] $end
$var wire 1 ;( in3 [8] $end
$var wire 1 <( in3 [7] $end
$var wire 1 =( in3 [6] $end
$var wire 1 >( in3 [5] $end
$var wire 1 ?( in3 [4] $end
$var wire 1 @( in3 [3] $end
$var wire 1 A( in3 [2] $end
$var wire 1 B( in3 [1] $end
$var wire 1 C( in3 [0] $end
$var wire 1 D( in4 [15] $end
$var wire 1 E( in4 [14] $end
$var wire 1 F( in4 [13] $end
$var wire 1 G( in4 [12] $end
$var wire 1 H( in4 [11] $end
$var wire 1 I( in4 [10] $end
$var wire 1 J( in4 [9] $end
$var wire 1 K( in4 [8] $end
$var wire 1 L( in4 [7] $end
$var wire 1 M( in4 [6] $end
$var wire 1 N( in4 [5] $end
$var wire 1 O( in4 [4] $end
$var wire 1 P( in4 [3] $end
$var wire 1 Q( in4 [2] $end
$var wire 1 R( in4 [1] $end
$var wire 1 S( in4 [0] $end
$var wire 1 T( in5 [15] $end
$var wire 1 U( in5 [14] $end
$var wire 1 V( in5 [13] $end
$var wire 1 W( in5 [12] $end
$var wire 1 X( in5 [11] $end
$var wire 1 Y( in5 [10] $end
$var wire 1 Z( in5 [9] $end
$var wire 1 [( in5 [8] $end
$var wire 1 \( in5 [7] $end
$var wire 1 ]( in5 [6] $end
$var wire 1 ^( in5 [5] $end
$var wire 1 _( in5 [4] $end
$var wire 1 `( in5 [3] $end
$var wire 1 a( in5 [2] $end
$var wire 1 b( in5 [1] $end
$var wire 1 c( in5 [0] $end
$var wire 1 d( in6 [15] $end
$var wire 1 e( in6 [14] $end
$var wire 1 f( in6 [13] $end
$var wire 1 g( in6 [12] $end
$var wire 1 h( in6 [11] $end
$var wire 1 i( in6 [10] $end
$var wire 1 j( in6 [9] $end
$var wire 1 k( in6 [8] $end
$var wire 1 l( in6 [7] $end
$var wire 1 m( in6 [6] $end
$var wire 1 n( in6 [5] $end
$var wire 1 o( in6 [4] $end
$var wire 1 p( in6 [3] $end
$var wire 1 q( in6 [2] $end
$var wire 1 r( in6 [1] $end
$var wire 1 s( in6 [0] $end
$var wire 1 t( in7 [15] $end
$var wire 1 u( in7 [14] $end
$var wire 1 v( in7 [13] $end
$var wire 1 w( in7 [12] $end
$var wire 1 x( in7 [11] $end
$var wire 1 y( in7 [10] $end
$var wire 1 z( in7 [9] $end
$var wire 1 {( in7 [8] $end
$var wire 1 |( in7 [7] $end
$var wire 1 }( in7 [6] $end
$var wire 1 ~( in7 [5] $end
$var wire 1 !) in7 [4] $end
$var wire 1 ") in7 [3] $end
$var wire 1 #) in7 [2] $end
$var wire 1 $) in7 [1] $end
$var wire 1 %) in7 [0] $end
$var reg 16 7- out [15:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module executeStage $end
$var wire 1 6! sl $end
$var wire 1 7! sco $end
$var wire 1 8! seq $end
$var wire 1 9! ldOrSt $end
$var wire 1 2! slbi $end
$var wire 1 +! jump $end
$var wire 1 *! branch $end
$var wire 1 0! immCtl $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 &! aluSrc $end
$var wire 1 3! immPres $end
$var wire 1 %! btr $end
$var wire 1 <# regData1 [15] $end
$var wire 1 =# regData1 [14] $end
$var wire 1 ># regData1 [13] $end
$var wire 1 ?# regData1 [12] $end
$var wire 1 @# regData1 [11] $end
$var wire 1 A# regData1 [10] $end
$var wire 1 B# regData1 [9] $end
$var wire 1 C# regData1 [8] $end
$var wire 1 D# regData1 [7] $end
$var wire 1 E# regData1 [6] $end
$var wire 1 F# regData1 [5] $end
$var wire 1 G# regData1 [4] $end
$var wire 1 H# regData1 [3] $end
$var wire 1 I# regData1 [2] $end
$var wire 1 J# regData1 [1] $end
$var wire 1 K# regData1 [0] $end
$var wire 1 L# regData2 [15] $end
$var wire 1 M# regData2 [14] $end
$var wire 1 N# regData2 [13] $end
$var wire 1 O# regData2 [12] $end
$var wire 1 P# regData2 [11] $end
$var wire 1 Q# regData2 [10] $end
$var wire 1 R# regData2 [9] $end
$var wire 1 S# regData2 [8] $end
$var wire 1 T# regData2 [7] $end
$var wire 1 U# regData2 [6] $end
$var wire 1 V# regData2 [5] $end
$var wire 1 W# regData2 [4] $end
$var wire 1 X# regData2 [3] $end
$var wire 1 Y# regData2 [2] $end
$var wire 1 Z# regData2 [1] $end
$var wire 1 [# regData2 [0] $end
$var wire 1 x! immVal [15] $end
$var wire 1 y! immVal [14] $end
$var wire 1 z! immVal [13] $end
$var wire 1 {! immVal [12] $end
$var wire 1 |! immVal [11] $end
$var wire 1 }! immVal [10] $end
$var wire 1 ~! immVal [9] $end
$var wire 1 !" immVal [8] $end
$var wire 1 "" immVal [7] $end
$var wire 1 #" immVal [6] $end
$var wire 1 $" immVal [5] $end
$var wire 1 %" immVal [4] $end
$var wire 1 &" immVal [3] $end
$var wire 1 '" immVal [2] $end
$var wire 1 (" immVal [1] $end
$var wire 1 )" immVal [0] $end
$var wire 1 *" branchVal [15] $end
$var wire 1 +" branchVal [14] $end
$var wire 1 ," branchVal [13] $end
$var wire 1 -" branchVal [12] $end
$var wire 1 ." branchVal [11] $end
$var wire 1 /" branchVal [10] $end
$var wire 1 0" branchVal [9] $end
$var wire 1 1" branchVal [8] $end
$var wire 1 2" branchVal [7] $end
$var wire 1 3" branchVal [6] $end
$var wire 1 4" branchVal [5] $end
$var wire 1 5" branchVal [4] $end
$var wire 1 6" branchVal [3] $end
$var wire 1 7" branchVal [2] $end
$var wire 1 8" branchVal [1] $end
$var wire 1 9" branchVal [0] $end
$var wire 1 :" jumpVal [15] $end
$var wire 1 ;" jumpVal [14] $end
$var wire 1 <" jumpVal [13] $end
$var wire 1 =" jumpVal [12] $end
$var wire 1 >" jumpVal [11] $end
$var wire 1 ?" jumpVal [10] $end
$var wire 1 @" jumpVal [9] $end
$var wire 1 A" jumpVal [8] $end
$var wire 1 B" jumpVal [7] $end
$var wire 1 C" jumpVal [6] $end
$var wire 1 D" jumpVal [5] $end
$var wire 1 E" jumpVal [4] $end
$var wire 1 F" jumpVal [3] $end
$var wire 1 G" jumpVal [2] $end
$var wire 1 H" jumpVal [1] $end
$var wire 1 I" jumpVal [0] $end
$var wire 1 X! instr [15] $end
$var wire 1 Y! instr [14] $end
$var wire 1 Z! instr [13] $end
$var wire 1 [! instr [12] $end
$var wire 1 \! instr [11] $end
$var wire 1 ]! instr [10] $end
$var wire 1 ^! instr [9] $end
$var wire 1 _! instr [8] $end
$var wire 1 `! instr [7] $end
$var wire 1 a! instr [6] $end
$var wire 1 b! instr [5] $end
$var wire 1 c! instr [4] $end
$var wire 1 d! instr [3] $end
$var wire 1 e! instr [2] $end
$var wire 1 f! instr [1] $end
$var wire 1 g! instr [0] $end
$var wire 1 J" pc [15] $end
$var wire 1 K" pc [14] $end
$var wire 1 L" pc [13] $end
$var wire 1 M" pc [12] $end
$var wire 1 N" pc [11] $end
$var wire 1 O" pc [10] $end
$var wire 1 P" pc [9] $end
$var wire 1 Q" pc [8] $end
$var wire 1 R" pc [7] $end
$var wire 1 S" pc [6] $end
$var wire 1 T" pc [5] $end
$var wire 1 U" pc [4] $end
$var wire 1 V" pc [3] $end
$var wire 1 W" pc [2] $end
$var wire 1 X" pc [1] $end
$var wire 1 Y" pc [0] $end
$var wire 1 8- almost_newPc [15] $end
$var wire 1 9- almost_newPc [14] $end
$var wire 1 :- almost_newPc [13] $end
$var wire 1 ;- almost_newPc [12] $end
$var wire 1 <- almost_newPc [11] $end
$var wire 1 =- almost_newPc [10] $end
$var wire 1 >- almost_newPc [9] $end
$var wire 1 ?- almost_newPc [8] $end
$var wire 1 @- almost_newPc [7] $end
$var wire 1 A- almost_newPc [6] $end
$var wire 1 B- almost_newPc [5] $end
$var wire 1 C- almost_newPc [4] $end
$var wire 1 D- almost_newPc [3] $end
$var wire 1 E- almost_newPc [2] $end
$var wire 1 F- almost_newPc [1] $end
$var wire 1 G- almost_newPc [0] $end
$var wire 1 H- newPc [15] $end
$var wire 1 I- newPc [14] $end
$var wire 1 J- newPc [13] $end
$var wire 1 K- newPc [12] $end
$var wire 1 L- newPc [11] $end
$var wire 1 M- newPc [10] $end
$var wire 1 N- newPc [9] $end
$var wire 1 O- newPc [8] $end
$var wire 1 P- newPc [7] $end
$var wire 1 Q- newPc [6] $end
$var wire 1 R- newPc [5] $end
$var wire 1 S- newPc [4] $end
$var wire 1 T- newPc [3] $end
$var wire 1 U- newPc [2] $end
$var wire 1 V- newPc [1] $end
$var wire 1 W- newPc [0] $end
$var wire 1 X- InA [15] $end
$var wire 1 Y- InA [14] $end
$var wire 1 Z- InA [13] $end
$var wire 1 [- InA [12] $end
$var wire 1 \- InA [11] $end
$var wire 1 ]- InA [10] $end
$var wire 1 ^- InA [9] $end
$var wire 1 _- InA [8] $end
$var wire 1 `- InA [7] $end
$var wire 1 a- InA [6] $end
$var wire 1 b- InA [5] $end
$var wire 1 c- InA [4] $end
$var wire 1 d- InA [3] $end
$var wire 1 e- InA [2] $end
$var wire 1 f- InA [1] $end
$var wire 1 g- InA [0] $end
$var wire 1 h- InB [15] $end
$var wire 1 i- InB [14] $end
$var wire 1 j- InB [13] $end
$var wire 1 k- InB [12] $end
$var wire 1 l- InB [11] $end
$var wire 1 m- InB [10] $end
$var wire 1 n- InB [9] $end
$var wire 1 o- InB [8] $end
$var wire 1 p- InB [7] $end
$var wire 1 q- InB [6] $end
$var wire 1 r- InB [5] $end
$var wire 1 s- InB [4] $end
$var wire 1 t- InB [3] $end
$var wire 1 u- InB [2] $end
$var wire 1 v- InB [1] $end
$var wire 1 w- InB [0] $end
$var wire 1 x- immValShifted [15] $end
$var wire 1 y- immValShifted [14] $end
$var wire 1 z- immValShifted [13] $end
$var wire 1 {- immValShifted [12] $end
$var wire 1 |- immValShifted [11] $end
$var wire 1 }- immValShifted [10] $end
$var wire 1 ~- immValShifted [9] $end
$var wire 1 !. immValShifted [8] $end
$var wire 1 ". immValShifted [7] $end
$var wire 1 #. immValShifted [6] $end
$var wire 1 $. immValShifted [5] $end
$var wire 1 %. immValShifted [4] $end
$var wire 1 &. immValShifted [3] $end
$var wire 1 '. immValShifted [2] $end
$var wire 1 (. immValShifted [1] $end
$var wire 1 ). immValShifted [0] $end
$var wire 1 *. jumpValSigned [15] $end
$var wire 1 +. jumpValSigned [14] $end
$var wire 1 ,. jumpValSigned [13] $end
$var wire 1 -. jumpValSigned [12] $end
$var wire 1 .. jumpValSigned [11] $end
$var wire 1 /. jumpValSigned [10] $end
$var wire 1 0. jumpValSigned [9] $end
$var wire 1 1. jumpValSigned [8] $end
$var wire 1 2. jumpValSigned [7] $end
$var wire 1 3. jumpValSigned [6] $end
$var wire 1 4. jumpValSigned [5] $end
$var wire 1 5. jumpValSigned [4] $end
$var wire 1 6. jumpValSigned [3] $end
$var wire 1 7. jumpValSigned [2] $end
$var wire 1 8. jumpValSigned [1] $end
$var wire 1 9. jumpValSigned [0] $end
$var wire 1 :. branchValSigned [15] $end
$var wire 1 ;. branchValSigned [14] $end
$var wire 1 <. branchValSigned [13] $end
$var wire 1 =. branchValSigned [12] $end
$var wire 1 >. branchValSigned [11] $end
$var wire 1 ?. branchValSigned [10] $end
$var wire 1 @. branchValSigned [9] $end
$var wire 1 A. branchValSigned [8] $end
$var wire 1 B. branchValSigned [7] $end
$var wire 1 C. branchValSigned [6] $end
$var wire 1 D. branchValSigned [5] $end
$var wire 1 E. branchValSigned [4] $end
$var wire 1 F. branchValSigned [3] $end
$var wire 1 G. branchValSigned [2] $end
$var wire 1 H. branchValSigned [1] $end
$var wire 1 I. branchValSigned [0] $end
$var wire 1 J. pc_or_rs [15] $end
$var wire 1 K. pc_or_rs [14] $end
$var wire 1 L. pc_or_rs [13] $end
$var wire 1 M. pc_or_rs [12] $end
$var wire 1 N. pc_or_rs [11] $end
$var wire 1 O. pc_or_rs [10] $end
$var wire 1 P. pc_or_rs [9] $end
$var wire 1 Q. pc_or_rs [8] $end
$var wire 1 R. pc_or_rs [7] $end
$var wire 1 S. pc_or_rs [6] $end
$var wire 1 T. pc_or_rs [5] $end
$var wire 1 U. pc_or_rs [4] $end
$var wire 1 V. pc_or_rs [3] $end
$var wire 1 W. pc_or_rs [2] $end
$var wire 1 X. pc_or_rs [1] $end
$var wire 1 Y. pc_or_rs [0] $end
$var wire 1 Z. aluOut [15] $end
$var wire 1 [. aluOut [14] $end
$var wire 1 \. aluOut [13] $end
$var wire 1 ]. aluOut [12] $end
$var wire 1 ^. aluOut [11] $end
$var wire 1 _. aluOut [10] $end
$var wire 1 `. aluOut [9] $end
$var wire 1 a. aluOut [8] $end
$var wire 1 b. aluOut [7] $end
$var wire 1 c. aluOut [6] $end
$var wire 1 d. aluOut [5] $end
$var wire 1 e. aluOut [4] $end
$var wire 1 f. aluOut [3] $end
$var wire 1 g. aluOut [2] $end
$var wire 1 h. aluOut [1] $end
$var wire 1 i. aluOut [0] $end
$var wire 1 j. opCode [2] $end
$var wire 1 k. opCode [1] $end
$var wire 1 l. opCode [0] $end
$var wire 1 m. sign $end
$var wire 1 n. setOutput $end
$var wire 1 o. cout $end
$var wire 1 p. doWeBranch $end
$var wire 1 h! next_pc [15] $end
$var wire 1 i! next_pc [14] $end
$var wire 1 j! next_pc [13] $end
$var wire 1 k! next_pc [12] $end
$var wire 1 l! next_pc [11] $end
$var wire 1 m! next_pc [10] $end
$var wire 1 n! next_pc [9] $end
$var wire 1 o! next_pc [8] $end
$var wire 1 p! next_pc [7] $end
$var wire 1 q! next_pc [6] $end
$var wire 1 r! next_pc [5] $end
$var wire 1 s! next_pc [4] $end
$var wire 1 t! next_pc [3] $end
$var wire 1 u! next_pc [2] $end
$var wire 1 v! next_pc [1] $end
$var wire 1 w! next_pc [0] $end
$var wire 1 Z" Out [15] $end
$var wire 1 [" Out [14] $end
$var wire 1 \" Out [13] $end
$var wire 1 ]" Out [12] $end
$var wire 1 ^" Out [11] $end
$var wire 1 _" Out [10] $end
$var wire 1 `" Out [9] $end
$var wire 1 a" Out [8] $end
$var wire 1 b" Out [7] $end
$var wire 1 c" Out [6] $end
$var wire 1 d" Out [5] $end
$var wire 1 e" Out [4] $end
$var wire 1 f" Out [3] $end
$var wire 1 g" Out [2] $end
$var wire 1 h" Out [1] $end
$var wire 1 i" Out [0] $end
$var wire 1 j" wrData [15] $end
$var wire 1 k" wrData [14] $end
$var wire 1 l" wrData [13] $end
$var wire 1 m" wrData [12] $end
$var wire 1 n" wrData [11] $end
$var wire 1 o" wrData [10] $end
$var wire 1 p" wrData [9] $end
$var wire 1 q" wrData [8] $end
$var wire 1 r" wrData [7] $end
$var wire 1 s" wrData [6] $end
$var wire 1 t" wrData [5] $end
$var wire 1 u" wrData [4] $end
$var wire 1 v" wrData [3] $end
$var wire 1 w" wrData [2] $end
$var wire 1 x" wrData [1] $end
$var wire 1 y" wrData [0] $end
$var wire 1 /$ Zero $end
$var wire 1 0$ Ofl $end

$scope module executeALU $end
$var parameter 32 q. N $end
$var parameter 32 r. O $end
$var wire 1 X- InA [15] $end
$var wire 1 Y- InA [14] $end
$var wire 1 Z- InA [13] $end
$var wire 1 [- InA [12] $end
$var wire 1 \- InA [11] $end
$var wire 1 ]- InA [10] $end
$var wire 1 ^- InA [9] $end
$var wire 1 _- InA [8] $end
$var wire 1 `- InA [7] $end
$var wire 1 a- InA [6] $end
$var wire 1 b- InA [5] $end
$var wire 1 c- InA [4] $end
$var wire 1 d- InA [3] $end
$var wire 1 e- InA [2] $end
$var wire 1 f- InA [1] $end
$var wire 1 g- InA [0] $end
$var wire 1 h- InB [15] $end
$var wire 1 i- InB [14] $end
$var wire 1 j- InB [13] $end
$var wire 1 k- InB [12] $end
$var wire 1 l- InB [11] $end
$var wire 1 m- InB [10] $end
$var wire 1 n- InB [9] $end
$var wire 1 o- InB [8] $end
$var wire 1 p- InB [7] $end
$var wire 1 q- InB [6] $end
$var wire 1 r- InB [5] $end
$var wire 1 s- InB [4] $end
$var wire 1 t- InB [3] $end
$var wire 1 u- InB [2] $end
$var wire 1 v- InB [1] $end
$var wire 1 w- InB [0] $end
$var wire 1 s. Cin $end
$var wire 1 j. Op [2] $end
$var wire 1 k. Op [1] $end
$var wire 1 l. Op [0] $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 m. sign $end
$var wire 1 2! slbi $end
$var wire 1 Z. Out [15] $end
$var wire 1 [. Out [14] $end
$var wire 1 \. Out [13] $end
$var wire 1 ]. Out [12] $end
$var wire 1 ^. Out [11] $end
$var wire 1 _. Out [10] $end
$var wire 1 `. Out [9] $end
$var wire 1 a. Out [8] $end
$var wire 1 b. Out [7] $end
$var wire 1 c. Out [6] $end
$var wire 1 d. Out [5] $end
$var wire 1 e. Out [4] $end
$var wire 1 f. Out [3] $end
$var wire 1 g. Out [2] $end
$var wire 1 h. Out [1] $end
$var wire 1 i. Out [0] $end
$var wire 1 0$ Ofl $end
$var wire 1 /$ Zero $end
$var wire 1 o. cout $end
$var wire 1 t. rotate [15] $end
$var wire 1 u. rotate [14] $end
$var wire 1 v. rotate [13] $end
$var wire 1 w. rotate [12] $end
$var wire 1 x. rotate [11] $end
$var wire 1 y. rotate [10] $end
$var wire 1 z. rotate [9] $end
$var wire 1 {. rotate [8] $end
$var wire 1 |. rotate [7] $end
$var wire 1 }. rotate [6] $end
$var wire 1 ~. rotate [5] $end
$var wire 1 !/ rotate [4] $end
$var wire 1 "/ rotate [3] $end
$var wire 1 #/ rotate [2] $end
$var wire 1 $/ rotate [1] $end
$var wire 1 %/ rotate [0] $end
$var reg 32 &/ tmp [31:0] $end
$var wire 1 '/ shifter_out [15] $end
$var wire 1 (/ shifter_out [14] $end
$var wire 1 )/ shifter_out [13] $end
$var wire 1 */ shifter_out [12] $end
$var wire 1 +/ shifter_out [11] $end
$var wire 1 ,/ shifter_out [10] $end
$var wire 1 -/ shifter_out [9] $end
$var wire 1 ./ shifter_out [8] $end
$var wire 1 // shifter_out [7] $end
$var wire 1 0/ shifter_out [6] $end
$var wire 1 1/ shifter_out [5] $end
$var wire 1 2/ shifter_out [4] $end
$var wire 1 3/ shifter_out [3] $end
$var wire 1 4/ shifter_out [2] $end
$var wire 1 5/ shifter_out [1] $end
$var wire 1 6/ shifter_out [0] $end
$var wire 1 7/ ror_check [15] $end
$var wire 1 8/ ror_check [14] $end
$var wire 1 9/ ror_check [13] $end
$var wire 1 :/ ror_check [12] $end
$var wire 1 ;/ ror_check [11] $end
$var wire 1 </ ror_check [10] $end
$var wire 1 =/ ror_check [9] $end
$var wire 1 >/ ror_check [8] $end
$var wire 1 ?/ ror_check [7] $end
$var wire 1 @/ ror_check [6] $end
$var wire 1 A/ ror_check [5] $end
$var wire 1 B/ ror_check [4] $end
$var wire 1 C/ ror_check [3] $end
$var wire 1 D/ ror_check [2] $end
$var wire 1 E/ ror_check [1] $end
$var wire 1 F/ ror_check [0] $end
$var wire 1 G/ AND_RESULT [15] $end
$var wire 1 H/ AND_RESULT [14] $end
$var wire 1 I/ AND_RESULT [13] $end
$var wire 1 J/ AND_RESULT [12] $end
$var wire 1 K/ AND_RESULT [11] $end
$var wire 1 L/ AND_RESULT [10] $end
$var wire 1 M/ AND_RESULT [9] $end
$var wire 1 N/ AND_RESULT [8] $end
$var wire 1 O/ AND_RESULT [7] $end
$var wire 1 P/ AND_RESULT [6] $end
$var wire 1 Q/ AND_RESULT [5] $end
$var wire 1 R/ AND_RESULT [4] $end
$var wire 1 S/ AND_RESULT [3] $end
$var wire 1 T/ AND_RESULT [2] $end
$var wire 1 U/ AND_RESULT [1] $end
$var wire 1 V/ AND_RESULT [0] $end
$var wire 1 W/ OR_RESULT [15] $end
$var wire 1 X/ OR_RESULT [14] $end
$var wire 1 Y/ OR_RESULT [13] $end
$var wire 1 Z/ OR_RESULT [12] $end
$var wire 1 [/ OR_RESULT [11] $end
$var wire 1 \/ OR_RESULT [10] $end
$var wire 1 ]/ OR_RESULT [9] $end
$var wire 1 ^/ OR_RESULT [8] $end
$var wire 1 _/ OR_RESULT [7] $end
$var wire 1 `/ OR_RESULT [6] $end
$var wire 1 a/ OR_RESULT [5] $end
$var wire 1 b/ OR_RESULT [4] $end
$var wire 1 c/ OR_RESULT [3] $end
$var wire 1 d/ OR_RESULT [2] $end
$var wire 1 e/ OR_RESULT [1] $end
$var wire 1 f/ OR_RESULT [0] $end
$var wire 1 g/ XOR_RESULT [15] $end
$var wire 1 h/ XOR_RESULT [14] $end
$var wire 1 i/ XOR_RESULT [13] $end
$var wire 1 j/ XOR_RESULT [12] $end
$var wire 1 k/ XOR_RESULT [11] $end
$var wire 1 l/ XOR_RESULT [10] $end
$var wire 1 m/ XOR_RESULT [9] $end
$var wire 1 n/ XOR_RESULT [8] $end
$var wire 1 o/ XOR_RESULT [7] $end
$var wire 1 p/ XOR_RESULT [6] $end
$var wire 1 q/ XOR_RESULT [5] $end
$var wire 1 r/ XOR_RESULT [4] $end
$var wire 1 s/ XOR_RESULT [3] $end
$var wire 1 t/ XOR_RESULT [2] $end
$var wire 1 u/ XOR_RESULT [1] $end
$var wire 1 v/ XOR_RESULT [0] $end
$var wire 1 w/ ADD_RESULT [15] $end
$var wire 1 x/ ADD_RESULT [14] $end
$var wire 1 y/ ADD_RESULT [13] $end
$var wire 1 z/ ADD_RESULT [12] $end
$var wire 1 {/ ADD_RESULT [11] $end
$var wire 1 |/ ADD_RESULT [10] $end
$var wire 1 }/ ADD_RESULT [9] $end
$var wire 1 ~/ ADD_RESULT [8] $end
$var wire 1 !0 ADD_RESULT [7] $end
$var wire 1 "0 ADD_RESULT [6] $end
$var wire 1 #0 ADD_RESULT [5] $end
$var wire 1 $0 ADD_RESULT [4] $end
$var wire 1 %0 ADD_RESULT [3] $end
$var wire 1 &0 ADD_RESULT [2] $end
$var wire 1 '0 ADD_RESULT [1] $end
$var wire 1 (0 ADD_RESULT [0] $end
$var wire 1 )0 LOGIC_RESULT [15] $end
$var wire 1 *0 LOGIC_RESULT [14] $end
$var wire 1 +0 LOGIC_RESULT [13] $end
$var wire 1 ,0 LOGIC_RESULT [12] $end
$var wire 1 -0 LOGIC_RESULT [11] $end
$var wire 1 .0 LOGIC_RESULT [10] $end
$var wire 1 /0 LOGIC_RESULT [9] $end
$var wire 1 00 LOGIC_RESULT [8] $end
$var wire 1 10 LOGIC_RESULT [7] $end
$var wire 1 20 LOGIC_RESULT [6] $end
$var wire 1 30 LOGIC_RESULT [5] $end
$var wire 1 40 LOGIC_RESULT [4] $end
$var wire 1 50 LOGIC_RESULT [3] $end
$var wire 1 60 LOGIC_RESULT [2] $end
$var wire 1 70 LOGIC_RESULT [1] $end
$var wire 1 80 LOGIC_RESULT [0] $end
$var wire 1 90 SUB_RESULT [15] $end
$var wire 1 :0 SUB_RESULT [14] $end
$var wire 1 ;0 SUB_RESULT [13] $end
$var wire 1 <0 SUB_RESULT [12] $end
$var wire 1 =0 SUB_RESULT [11] $end
$var wire 1 >0 SUB_RESULT [10] $end
$var wire 1 ?0 SUB_RESULT [9] $end
$var wire 1 @0 SUB_RESULT [8] $end
$var wire 1 A0 SUB_RESULT [7] $end
$var wire 1 B0 SUB_RESULT [6] $end
$var wire 1 C0 SUB_RESULT [5] $end
$var wire 1 D0 SUB_RESULT [4] $end
$var wire 1 E0 SUB_RESULT [3] $end
$var wire 1 F0 SUB_RESULT [2] $end
$var wire 1 G0 SUB_RESULT [1] $end
$var wire 1 H0 SUB_RESULT [0] $end
$var wire 1 I0 A [15] $end
$var wire 1 J0 A [14] $end
$var wire 1 K0 A [13] $end
$var wire 1 L0 A [12] $end
$var wire 1 M0 A [11] $end
$var wire 1 N0 A [10] $end
$var wire 1 O0 A [9] $end
$var wire 1 P0 A [8] $end
$var wire 1 Q0 A [7] $end
$var wire 1 R0 A [6] $end
$var wire 1 S0 A [5] $end
$var wire 1 T0 A [4] $end
$var wire 1 U0 A [3] $end
$var wire 1 V0 A [2] $end
$var wire 1 W0 A [1] $end
$var wire 1 X0 A [0] $end
$var wire 1 Y0 B [15] $end
$var wire 1 Z0 B [14] $end
$var wire 1 [0 B [13] $end
$var wire 1 \0 B [12] $end
$var wire 1 ]0 B [11] $end
$var wire 1 ^0 B [10] $end
$var wire 1 _0 B [9] $end
$var wire 1 `0 B [8] $end
$var wire 1 a0 B [7] $end
$var wire 1 b0 B [6] $end
$var wire 1 c0 B [5] $end
$var wire 1 d0 B [4] $end
$var wire 1 e0 B [3] $end
$var wire 1 f0 B [2] $end
$var wire 1 g0 B [1] $end
$var wire 1 h0 B [0] $end
$var wire 1 i0 Overflow $end

$scope module shift $end
$var parameter 32 j0 N $end
$var parameter 32 k0 C $end
$var parameter 32 l0 O $end
$var wire 1 I0 In [15] $end
$var wire 1 J0 In [14] $end
$var wire 1 K0 In [13] $end
$var wire 1 L0 In [12] $end
$var wire 1 M0 In [11] $end
$var wire 1 N0 In [10] $end
$var wire 1 O0 In [9] $end
$var wire 1 P0 In [8] $end
$var wire 1 Q0 In [7] $end
$var wire 1 R0 In [6] $end
$var wire 1 S0 In [5] $end
$var wire 1 T0 In [4] $end
$var wire 1 U0 In [3] $end
$var wire 1 V0 In [2] $end
$var wire 1 W0 In [1] $end
$var wire 1 X0 In [0] $end
$var wire 1 e0 Cnt [3] $end
$var wire 1 f0 Cnt [2] $end
$var wire 1 g0 Cnt [1] $end
$var wire 1 h0 Cnt [0] $end
$var wire 1 k. Op [1] $end
$var wire 1 l. Op [0] $end
$var wire 1 '/ Out [15] $end
$var wire 1 (/ Out [14] $end
$var wire 1 )/ Out [13] $end
$var wire 1 */ Out [12] $end
$var wire 1 +/ Out [11] $end
$var wire 1 ,/ Out [10] $end
$var wire 1 -/ Out [9] $end
$var wire 1 ./ Out [8] $end
$var wire 1 // Out [7] $end
$var wire 1 0/ Out [6] $end
$var wire 1 1/ Out [5] $end
$var wire 1 2/ Out [4] $end
$var wire 1 3/ Out [3] $end
$var wire 1 4/ Out [2] $end
$var wire 1 5/ Out [1] $end
$var wire 1 6/ Out [0] $end
$var wire 1 m0 out_stage1 [15] $end
$var wire 1 n0 out_stage1 [14] $end
$var wire 1 o0 out_stage1 [13] $end
$var wire 1 p0 out_stage1 [12] $end
$var wire 1 q0 out_stage1 [11] $end
$var wire 1 r0 out_stage1 [10] $end
$var wire 1 s0 out_stage1 [9] $end
$var wire 1 t0 out_stage1 [8] $end
$var wire 1 u0 out_stage1 [7] $end
$var wire 1 v0 out_stage1 [6] $end
$var wire 1 w0 out_stage1 [5] $end
$var wire 1 x0 out_stage1 [4] $end
$var wire 1 y0 out_stage1 [3] $end
$var wire 1 z0 out_stage1 [2] $end
$var wire 1 {0 out_stage1 [1] $end
$var wire 1 |0 out_stage1 [0] $end
$var wire 1 }0 out_stage2 [15] $end
$var wire 1 ~0 out_stage2 [14] $end
$var wire 1 !1 out_stage2 [13] $end
$var wire 1 "1 out_stage2 [12] $end
$var wire 1 #1 out_stage2 [11] $end
$var wire 1 $1 out_stage2 [10] $end
$var wire 1 %1 out_stage2 [9] $end
$var wire 1 &1 out_stage2 [8] $end
$var wire 1 '1 out_stage2 [7] $end
$var wire 1 (1 out_stage2 [6] $end
$var wire 1 )1 out_stage2 [5] $end
$var wire 1 *1 out_stage2 [4] $end
$var wire 1 +1 out_stage2 [3] $end
$var wire 1 ,1 out_stage2 [2] $end
$var wire 1 -1 out_stage2 [1] $end
$var wire 1 .1 out_stage2 [0] $end
$var wire 1 /1 out_stage3 [15] $end
$var wire 1 01 out_stage3 [14] $end
$var wire 1 11 out_stage3 [13] $end
$var wire 1 21 out_stage3 [12] $end
$var wire 1 31 out_stage3 [11] $end
$var wire 1 41 out_stage3 [10] $end
$var wire 1 51 out_stage3 [9] $end
$var wire 1 61 out_stage3 [8] $end
$var wire 1 71 out_stage3 [7] $end
$var wire 1 81 out_stage3 [6] $end
$var wire 1 91 out_stage3 [5] $end
$var wire 1 :1 out_stage3 [4] $end
$var wire 1 ;1 out_stage3 [3] $end
$var wire 1 <1 out_stage3 [2] $end
$var wire 1 =1 out_stage3 [1] $end
$var wire 1 >1 out_stage3 [0] $end
$upscope $end

$scope module adder $end
$var parameter 32 ?1 N $end
$var wire 1 I0 A [15] $end
$var wire 1 J0 A [14] $end
$var wire 1 K0 A [13] $end
$var wire 1 L0 A [12] $end
$var wire 1 M0 A [11] $end
$var wire 1 N0 A [10] $end
$var wire 1 O0 A [9] $end
$var wire 1 P0 A [8] $end
$var wire 1 Q0 A [7] $end
$var wire 1 R0 A [6] $end
$var wire 1 S0 A [5] $end
$var wire 1 T0 A [4] $end
$var wire 1 U0 A [3] $end
$var wire 1 V0 A [2] $end
$var wire 1 W0 A [1] $end
$var wire 1 X0 A [0] $end
$var wire 1 Y0 B [15] $end
$var wire 1 Z0 B [14] $end
$var wire 1 [0 B [13] $end
$var wire 1 \0 B [12] $end
$var wire 1 ]0 B [11] $end
$var wire 1 ^0 B [10] $end
$var wire 1 _0 B [9] $end
$var wire 1 `0 B [8] $end
$var wire 1 a0 B [7] $end
$var wire 1 b0 B [6] $end
$var wire 1 c0 B [5] $end
$var wire 1 d0 B [4] $end
$var wire 1 e0 B [3] $end
$var wire 1 f0 B [2] $end
$var wire 1 g0 B [1] $end
$var wire 1 h0 B [0] $end
$var wire 1 s. C_in $end
$var wire 1 w/ S [15] $end
$var wire 1 x/ S [14] $end
$var wire 1 y/ S [13] $end
$var wire 1 z/ S [12] $end
$var wire 1 {/ S [11] $end
$var wire 1 |/ S [10] $end
$var wire 1 }/ S [9] $end
$var wire 1 ~/ S [8] $end
$var wire 1 !0 S [7] $end
$var wire 1 "0 S [6] $end
$var wire 1 #0 S [5] $end
$var wire 1 $0 S [4] $end
$var wire 1 %0 S [3] $end
$var wire 1 &0 S [2] $end
$var wire 1 '0 S [1] $end
$var wire 1 (0 S [0] $end
$var wire 1 i0 C_out $end
$var wire 1 @1 C0 $end
$var wire 1 A1 C1 $end
$var wire 1 B1 C2 $end
$var wire 1 C1 P0 $end
$var wire 1 D1 P0_bar $end
$var wire 1 E1 P1 $end
$var wire 1 F1 P1_bar $end
$var wire 1 G1 P2 $end
$var wire 1 H1 P2_bar $end
$var wire 1 I1 P3 $end
$var wire 1 J1 P3_bar $end
$var wire 1 K1 G0 $end
$var wire 1 L1 G0_bar $end
$var wire 1 M1 G1 $end
$var wire 1 N1 G1_bar $end
$var wire 1 O1 G2 $end
$var wire 1 P1 G2_bar $end
$var wire 1 Q1 G3 $end
$var wire 1 R1 G3_bar $end
$var wire 1 S1 nand2_c0_0_out $end
$var wire 1 T1 nand2_c1_0_out $end
$var wire 1 U1 nand2_c2_0_out $end
$var wire 1 V1 nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 W1 N $end
$var wire 1 U0 A [3] $end
$var wire 1 V0 A [2] $end
$var wire 1 W0 A [1] $end
$var wire 1 X0 A [0] $end
$var wire 1 e0 B [3] $end
$var wire 1 f0 B [2] $end
$var wire 1 g0 B [1] $end
$var wire 1 h0 B [0] $end
$var wire 1 s. C_in $end
$var wire 1 %0 S [3] $end
$var wire 1 &0 S [2] $end
$var wire 1 '0 S [1] $end
$var wire 1 (0 S [0] $end
$var wire 1 C1 P $end
$var wire 1 K1 G $end
$var wire 1 X1 C_out $end
$var wire 1 Y1 c0 $end
$var wire 1 Z1 c1 $end
$var wire 1 [1 c2 $end
$var wire 1 \1 p0 $end
$var wire 1 ]1 g0 $end
$var wire 1 ^1 p1 $end
$var wire 1 _1 g1 $end
$var wire 1 `1 p2 $end
$var wire 1 a1 g2 $end
$var wire 1 b1 p3 $end
$var wire 1 c1 g3 $end
$var wire 1 d1 g0_bar $end
$var wire 1 e1 g1_bar $end
$var wire 1 f1 g2_bar $end
$var wire 1 g1 g3_bar $end
$var wire 1 h1 nand2_c0_0_out $end
$var wire 1 i1 nand2_c1_0_out $end
$var wire 1 j1 nand2_c2_0_out $end
$var wire 1 k1 nand2_c3_0_out $end
$var wire 1 l1 nand2_p3_p2 $end
$var wire 1 m1 nand2_p1_p0 $end
$var wire 1 n1 nand2_p3g2_out $end
$var wire 1 o1 nand2_p3p2g1_out $end
$var wire 1 p1 nand3_G_0_out $end
$var wire 1 q1 nand2_p1g0_out $end
$var wire 1 r1 nor2_G_0_out $end
$var wire 1 s1 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 ]1 in1 $end
$var wire 1 d1 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 \1 in1 $end
$var wire 1 s. in2 $end
$var wire 1 h1 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 d1 in1 $end
$var wire 1 h1 in2 $end
$var wire 1 Y1 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 _1 in1 $end
$var wire 1 e1 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 ^1 in1 $end
$var wire 1 Y1 in2 $end
$var wire 1 i1 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 e1 in1 $end
$var wire 1 i1 in2 $end
$var wire 1 Z1 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 a1 in1 $end
$var wire 1 f1 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 `1 in1 $end
$var wire 1 Z1 in2 $end
$var wire 1 j1 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 f1 in1 $end
$var wire 1 j1 in2 $end
$var wire 1 [1 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 c1 in1 $end
$var wire 1 g1 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 b1 in1 $end
$var wire 1 [1 in2 $end
$var wire 1 k1 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 g1 in1 $end
$var wire 1 k1 in2 $end
$var wire 1 X1 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 b1 in1 $end
$var wire 1 `1 in2 $end
$var wire 1 l1 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 ^1 in1 $end
$var wire 1 \1 in2 $end
$var wire 1 m1 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 l1 in1 $end
$var wire 1 m1 in2 $end
$var wire 1 C1 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 b1 in1 $end
$var wire 1 a1 in2 $end
$var wire 1 n1 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 b1 in1 $end
$var wire 1 `1 in2 $end
$var wire 1 _1 in3 $end
$var wire 1 o1 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 g1 in1 $end
$var wire 1 n1 in2 $end
$var wire 1 o1 in3 $end
$var wire 1 p1 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 ^1 in1 $end
$var wire 1 ]1 in2 $end
$var wire 1 q1 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 l1 in1 $end
$var wire 1 q1 in2 $end
$var wire 1 r1 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 p1 in1 $end
$var wire 1 r1 in2 $end
$var wire 1 s1 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 s1 in1 $end
$var wire 1 K1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 X0 A $end
$var wire 1 h0 B $end
$var wire 1 s. C_in $end
$var wire 1 \1 p $end
$var wire 1 ]1 g $end
$var wire 1 (0 S $end
$var wire 1 t1 C_out $end
$var wire 1 u1 g_bar $end
$var wire 1 v1 p_bar $end
$var wire 1 w1 nand2_1_out $end
$var wire 1 x1 nand2_2_out $end
$var wire 1 y1 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 X0 in1 $end
$var wire 1 h0 in2 $end
$var wire 1 u1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 u1 in1 $end
$var wire 1 ]1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 X0 in1 $end
$var wire 1 h0 in2 $end
$var wire 1 v1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 v1 in1 $end
$var wire 1 \1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 X0 in1 $end
$var wire 1 h0 in2 $end
$var wire 1 w1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 X0 in1 $end
$var wire 1 s. in2 $end
$var wire 1 x1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 h0 in1 $end
$var wire 1 s. in2 $end
$var wire 1 y1 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 w1 in1 $end
$var wire 1 x1 in2 $end
$var wire 1 y1 in3 $end
$var wire 1 t1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 X0 in1 $end
$var wire 1 h0 in2 $end
$var wire 1 s. in3 $end
$var wire 1 (0 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 W0 A $end
$var wire 1 g0 B $end
$var wire 1 Y1 C_in $end
$var wire 1 ^1 p $end
$var wire 1 _1 g $end
$var wire 1 '0 S $end
$var wire 1 z1 C_out $end
$var wire 1 {1 g_bar $end
$var wire 1 |1 p_bar $end
$var wire 1 }1 nand2_1_out $end
$var wire 1 ~1 nand2_2_out $end
$var wire 1 !2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 W0 in1 $end
$var wire 1 g0 in2 $end
$var wire 1 {1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 {1 in1 $end
$var wire 1 _1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 W0 in1 $end
$var wire 1 g0 in2 $end
$var wire 1 |1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 |1 in1 $end
$var wire 1 ^1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 W0 in1 $end
$var wire 1 g0 in2 $end
$var wire 1 }1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 W0 in1 $end
$var wire 1 Y1 in2 $end
$var wire 1 ~1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 g0 in1 $end
$var wire 1 Y1 in2 $end
$var wire 1 !2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 }1 in1 $end
$var wire 1 ~1 in2 $end
$var wire 1 !2 in3 $end
$var wire 1 z1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 W0 in1 $end
$var wire 1 g0 in2 $end
$var wire 1 Y1 in3 $end
$var wire 1 '0 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 V0 A $end
$var wire 1 f0 B $end
$var wire 1 Z1 C_in $end
$var wire 1 `1 p $end
$var wire 1 a1 g $end
$var wire 1 &0 S $end
$var wire 1 "2 C_out $end
$var wire 1 #2 g_bar $end
$var wire 1 $2 p_bar $end
$var wire 1 %2 nand2_1_out $end
$var wire 1 &2 nand2_2_out $end
$var wire 1 '2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V0 in1 $end
$var wire 1 f0 in2 $end
$var wire 1 #2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 #2 in1 $end
$var wire 1 a1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V0 in1 $end
$var wire 1 f0 in2 $end
$var wire 1 $2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 $2 in1 $end
$var wire 1 `1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V0 in1 $end
$var wire 1 f0 in2 $end
$var wire 1 %2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V0 in1 $end
$var wire 1 Z1 in2 $end
$var wire 1 &2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 f0 in1 $end
$var wire 1 Z1 in2 $end
$var wire 1 '2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 %2 in1 $end
$var wire 1 &2 in2 $end
$var wire 1 '2 in3 $end
$var wire 1 "2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V0 in1 $end
$var wire 1 f0 in2 $end
$var wire 1 Z1 in3 $end
$var wire 1 &0 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 U0 A $end
$var wire 1 e0 B $end
$var wire 1 [1 C_in $end
$var wire 1 b1 p $end
$var wire 1 c1 g $end
$var wire 1 %0 S $end
$var wire 1 (2 C_out $end
$var wire 1 )2 g_bar $end
$var wire 1 *2 p_bar $end
$var wire 1 +2 nand2_1_out $end
$var wire 1 ,2 nand2_2_out $end
$var wire 1 -2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U0 in1 $end
$var wire 1 e0 in2 $end
$var wire 1 )2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 )2 in1 $end
$var wire 1 c1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U0 in1 $end
$var wire 1 e0 in2 $end
$var wire 1 *2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 *2 in1 $end
$var wire 1 b1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U0 in1 $end
$var wire 1 e0 in2 $end
$var wire 1 +2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U0 in1 $end
$var wire 1 [1 in2 $end
$var wire 1 ,2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 e0 in1 $end
$var wire 1 [1 in2 $end
$var wire 1 -2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 +2 in1 $end
$var wire 1 ,2 in2 $end
$var wire 1 -2 in3 $end
$var wire 1 (2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U0 in1 $end
$var wire 1 e0 in2 $end
$var wire 1 [1 in3 $end
$var wire 1 %0 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 .2 N $end
$var wire 1 Q0 A [3] $end
$var wire 1 R0 A [2] $end
$var wire 1 S0 A [1] $end
$var wire 1 T0 A [0] $end
$var wire 1 a0 B [3] $end
$var wire 1 b0 B [2] $end
$var wire 1 c0 B [1] $end
$var wire 1 d0 B [0] $end
$var wire 1 @1 C_in $end
$var wire 1 !0 S [3] $end
$var wire 1 "0 S [2] $end
$var wire 1 #0 S [1] $end
$var wire 1 $0 S [0] $end
$var wire 1 E1 P $end
$var wire 1 M1 G $end
$var wire 1 /2 C_out $end
$var wire 1 02 c0 $end
$var wire 1 12 c1 $end
$var wire 1 22 c2 $end
$var wire 1 32 p0 $end
$var wire 1 42 g0 $end
$var wire 1 52 p1 $end
$var wire 1 62 g1 $end
$var wire 1 72 p2 $end
$var wire 1 82 g2 $end
$var wire 1 92 p3 $end
$var wire 1 :2 g3 $end
$var wire 1 ;2 g0_bar $end
$var wire 1 <2 g1_bar $end
$var wire 1 =2 g2_bar $end
$var wire 1 >2 g3_bar $end
$var wire 1 ?2 nand2_c0_0_out $end
$var wire 1 @2 nand2_c1_0_out $end
$var wire 1 A2 nand2_c2_0_out $end
$var wire 1 B2 nand2_c3_0_out $end
$var wire 1 C2 nand2_p3_p2 $end
$var wire 1 D2 nand2_p1_p0 $end
$var wire 1 E2 nand2_p3g2_out $end
$var wire 1 F2 nand2_p3p2g1_out $end
$var wire 1 G2 nand3_G_0_out $end
$var wire 1 H2 nand2_p1g0_out $end
$var wire 1 I2 nor2_G_0_out $end
$var wire 1 J2 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 42 in1 $end
$var wire 1 ;2 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 32 in1 $end
$var wire 1 @1 in2 $end
$var wire 1 ?2 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 ;2 in1 $end
$var wire 1 ?2 in2 $end
$var wire 1 02 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 62 in1 $end
$var wire 1 <2 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 52 in1 $end
$var wire 1 02 in2 $end
$var wire 1 @2 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 <2 in1 $end
$var wire 1 @2 in2 $end
$var wire 1 12 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 82 in1 $end
$var wire 1 =2 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 72 in1 $end
$var wire 1 12 in2 $end
$var wire 1 A2 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 =2 in1 $end
$var wire 1 A2 in2 $end
$var wire 1 22 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 :2 in1 $end
$var wire 1 >2 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 92 in1 $end
$var wire 1 22 in2 $end
$var wire 1 B2 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 >2 in1 $end
$var wire 1 B2 in2 $end
$var wire 1 /2 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 92 in1 $end
$var wire 1 72 in2 $end
$var wire 1 C2 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 52 in1 $end
$var wire 1 32 in2 $end
$var wire 1 D2 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 C2 in1 $end
$var wire 1 D2 in2 $end
$var wire 1 E1 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 92 in1 $end
$var wire 1 82 in2 $end
$var wire 1 E2 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 92 in1 $end
$var wire 1 72 in2 $end
$var wire 1 62 in3 $end
$var wire 1 F2 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 >2 in1 $end
$var wire 1 E2 in2 $end
$var wire 1 F2 in3 $end
$var wire 1 G2 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 52 in1 $end
$var wire 1 42 in2 $end
$var wire 1 H2 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 C2 in1 $end
$var wire 1 H2 in2 $end
$var wire 1 I2 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 G2 in1 $end
$var wire 1 I2 in2 $end
$var wire 1 J2 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 J2 in1 $end
$var wire 1 M1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 T0 A $end
$var wire 1 d0 B $end
$var wire 1 @1 C_in $end
$var wire 1 32 p $end
$var wire 1 42 g $end
$var wire 1 $0 S $end
$var wire 1 K2 C_out $end
$var wire 1 L2 g_bar $end
$var wire 1 M2 p_bar $end
$var wire 1 N2 nand2_1_out $end
$var wire 1 O2 nand2_2_out $end
$var wire 1 P2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T0 in1 $end
$var wire 1 d0 in2 $end
$var wire 1 L2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 L2 in1 $end
$var wire 1 42 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T0 in1 $end
$var wire 1 d0 in2 $end
$var wire 1 M2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 M2 in1 $end
$var wire 1 32 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T0 in1 $end
$var wire 1 d0 in2 $end
$var wire 1 N2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T0 in1 $end
$var wire 1 @1 in2 $end
$var wire 1 O2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 d0 in1 $end
$var wire 1 @1 in2 $end
$var wire 1 P2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 N2 in1 $end
$var wire 1 O2 in2 $end
$var wire 1 P2 in3 $end
$var wire 1 K2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T0 in1 $end
$var wire 1 d0 in2 $end
$var wire 1 @1 in3 $end
$var wire 1 $0 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 S0 A $end
$var wire 1 c0 B $end
$var wire 1 02 C_in $end
$var wire 1 52 p $end
$var wire 1 62 g $end
$var wire 1 #0 S $end
$var wire 1 Q2 C_out $end
$var wire 1 R2 g_bar $end
$var wire 1 S2 p_bar $end
$var wire 1 T2 nand2_1_out $end
$var wire 1 U2 nand2_2_out $end
$var wire 1 V2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S0 in1 $end
$var wire 1 c0 in2 $end
$var wire 1 R2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 R2 in1 $end
$var wire 1 62 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S0 in1 $end
$var wire 1 c0 in2 $end
$var wire 1 S2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 S2 in1 $end
$var wire 1 52 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S0 in1 $end
$var wire 1 c0 in2 $end
$var wire 1 T2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S0 in1 $end
$var wire 1 02 in2 $end
$var wire 1 U2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 c0 in1 $end
$var wire 1 02 in2 $end
$var wire 1 V2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 T2 in1 $end
$var wire 1 U2 in2 $end
$var wire 1 V2 in3 $end
$var wire 1 Q2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S0 in1 $end
$var wire 1 c0 in2 $end
$var wire 1 02 in3 $end
$var wire 1 #0 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 R0 A $end
$var wire 1 b0 B $end
$var wire 1 12 C_in $end
$var wire 1 72 p $end
$var wire 1 82 g $end
$var wire 1 "0 S $end
$var wire 1 W2 C_out $end
$var wire 1 X2 g_bar $end
$var wire 1 Y2 p_bar $end
$var wire 1 Z2 nand2_1_out $end
$var wire 1 [2 nand2_2_out $end
$var wire 1 \2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R0 in1 $end
$var wire 1 b0 in2 $end
$var wire 1 X2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 X2 in1 $end
$var wire 1 82 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R0 in1 $end
$var wire 1 b0 in2 $end
$var wire 1 Y2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 Y2 in1 $end
$var wire 1 72 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R0 in1 $end
$var wire 1 b0 in2 $end
$var wire 1 Z2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R0 in1 $end
$var wire 1 12 in2 $end
$var wire 1 [2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 b0 in1 $end
$var wire 1 12 in2 $end
$var wire 1 \2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 Z2 in1 $end
$var wire 1 [2 in2 $end
$var wire 1 \2 in3 $end
$var wire 1 W2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R0 in1 $end
$var wire 1 b0 in2 $end
$var wire 1 12 in3 $end
$var wire 1 "0 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 Q0 A $end
$var wire 1 a0 B $end
$var wire 1 22 C_in $end
$var wire 1 92 p $end
$var wire 1 :2 g $end
$var wire 1 !0 S $end
$var wire 1 ]2 C_out $end
$var wire 1 ^2 g_bar $end
$var wire 1 _2 p_bar $end
$var wire 1 `2 nand2_1_out $end
$var wire 1 a2 nand2_2_out $end
$var wire 1 b2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Q0 in1 $end
$var wire 1 a0 in2 $end
$var wire 1 ^2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ^2 in1 $end
$var wire 1 :2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Q0 in1 $end
$var wire 1 a0 in2 $end
$var wire 1 _2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 _2 in1 $end
$var wire 1 92 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Q0 in1 $end
$var wire 1 a0 in2 $end
$var wire 1 `2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Q0 in1 $end
$var wire 1 22 in2 $end
$var wire 1 a2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 a0 in1 $end
$var wire 1 22 in2 $end
$var wire 1 b2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 `2 in1 $end
$var wire 1 a2 in2 $end
$var wire 1 b2 in3 $end
$var wire 1 ]2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Q0 in1 $end
$var wire 1 a0 in2 $end
$var wire 1 22 in3 $end
$var wire 1 !0 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 c2 N $end
$var wire 1 M0 A [3] $end
$var wire 1 N0 A [2] $end
$var wire 1 O0 A [1] $end
$var wire 1 P0 A [0] $end
$var wire 1 ]0 B [3] $end
$var wire 1 ^0 B [2] $end
$var wire 1 _0 B [1] $end
$var wire 1 `0 B [0] $end
$var wire 1 A1 C_in $end
$var wire 1 {/ S [3] $end
$var wire 1 |/ S [2] $end
$var wire 1 }/ S [1] $end
$var wire 1 ~/ S [0] $end
$var wire 1 G1 P $end
$var wire 1 O1 G $end
$var wire 1 d2 C_out $end
$var wire 1 e2 c0 $end
$var wire 1 f2 c1 $end
$var wire 1 g2 c2 $end
$var wire 1 h2 p0 $end
$var wire 1 i2 g0 $end
$var wire 1 j2 p1 $end
$var wire 1 k2 g1 $end
$var wire 1 l2 p2 $end
$var wire 1 m2 g2 $end
$var wire 1 n2 p3 $end
$var wire 1 o2 g3 $end
$var wire 1 p2 g0_bar $end
$var wire 1 q2 g1_bar $end
$var wire 1 r2 g2_bar $end
$var wire 1 s2 g3_bar $end
$var wire 1 t2 nand2_c0_0_out $end
$var wire 1 u2 nand2_c1_0_out $end
$var wire 1 v2 nand2_c2_0_out $end
$var wire 1 w2 nand2_c3_0_out $end
$var wire 1 x2 nand2_p3_p2 $end
$var wire 1 y2 nand2_p1_p0 $end
$var wire 1 z2 nand2_p3g2_out $end
$var wire 1 {2 nand2_p3p2g1_out $end
$var wire 1 |2 nand3_G_0_out $end
$var wire 1 }2 nand2_p1g0_out $end
$var wire 1 ~2 nor2_G_0_out $end
$var wire 1 !3 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 i2 in1 $end
$var wire 1 p2 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 h2 in1 $end
$var wire 1 A1 in2 $end
$var wire 1 t2 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 p2 in1 $end
$var wire 1 t2 in2 $end
$var wire 1 e2 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 k2 in1 $end
$var wire 1 q2 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 j2 in1 $end
$var wire 1 e2 in2 $end
$var wire 1 u2 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 q2 in1 $end
$var wire 1 u2 in2 $end
$var wire 1 f2 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 m2 in1 $end
$var wire 1 r2 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 l2 in1 $end
$var wire 1 f2 in2 $end
$var wire 1 v2 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 r2 in1 $end
$var wire 1 v2 in2 $end
$var wire 1 g2 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 o2 in1 $end
$var wire 1 s2 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 n2 in1 $end
$var wire 1 g2 in2 $end
$var wire 1 w2 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 s2 in1 $end
$var wire 1 w2 in2 $end
$var wire 1 d2 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 n2 in1 $end
$var wire 1 l2 in2 $end
$var wire 1 x2 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 j2 in1 $end
$var wire 1 h2 in2 $end
$var wire 1 y2 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 x2 in1 $end
$var wire 1 y2 in2 $end
$var wire 1 G1 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 n2 in1 $end
$var wire 1 m2 in2 $end
$var wire 1 z2 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 n2 in1 $end
$var wire 1 l2 in2 $end
$var wire 1 k2 in3 $end
$var wire 1 {2 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 s2 in1 $end
$var wire 1 z2 in2 $end
$var wire 1 {2 in3 $end
$var wire 1 |2 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 j2 in1 $end
$var wire 1 i2 in2 $end
$var wire 1 }2 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 x2 in1 $end
$var wire 1 }2 in2 $end
$var wire 1 ~2 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 |2 in1 $end
$var wire 1 ~2 in2 $end
$var wire 1 !3 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 !3 in1 $end
$var wire 1 O1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 P0 A $end
$var wire 1 `0 B $end
$var wire 1 A1 C_in $end
$var wire 1 h2 p $end
$var wire 1 i2 g $end
$var wire 1 ~/ S $end
$var wire 1 "3 C_out $end
$var wire 1 #3 g_bar $end
$var wire 1 $3 p_bar $end
$var wire 1 %3 nand2_1_out $end
$var wire 1 &3 nand2_2_out $end
$var wire 1 '3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 P0 in1 $end
$var wire 1 `0 in2 $end
$var wire 1 #3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 #3 in1 $end
$var wire 1 i2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 P0 in1 $end
$var wire 1 `0 in2 $end
$var wire 1 $3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 $3 in1 $end
$var wire 1 h2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 P0 in1 $end
$var wire 1 `0 in2 $end
$var wire 1 %3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 P0 in1 $end
$var wire 1 A1 in2 $end
$var wire 1 &3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 `0 in1 $end
$var wire 1 A1 in2 $end
$var wire 1 '3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 %3 in1 $end
$var wire 1 &3 in2 $end
$var wire 1 '3 in3 $end
$var wire 1 "3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 P0 in1 $end
$var wire 1 `0 in2 $end
$var wire 1 A1 in3 $end
$var wire 1 ~/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 O0 A $end
$var wire 1 _0 B $end
$var wire 1 e2 C_in $end
$var wire 1 j2 p $end
$var wire 1 k2 g $end
$var wire 1 }/ S $end
$var wire 1 (3 C_out $end
$var wire 1 )3 g_bar $end
$var wire 1 *3 p_bar $end
$var wire 1 +3 nand2_1_out $end
$var wire 1 ,3 nand2_2_out $end
$var wire 1 -3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 O0 in1 $end
$var wire 1 _0 in2 $end
$var wire 1 )3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 )3 in1 $end
$var wire 1 k2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 O0 in1 $end
$var wire 1 _0 in2 $end
$var wire 1 *3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 *3 in1 $end
$var wire 1 j2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 O0 in1 $end
$var wire 1 _0 in2 $end
$var wire 1 +3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 O0 in1 $end
$var wire 1 e2 in2 $end
$var wire 1 ,3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 _0 in1 $end
$var wire 1 e2 in2 $end
$var wire 1 -3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 +3 in1 $end
$var wire 1 ,3 in2 $end
$var wire 1 -3 in3 $end
$var wire 1 (3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 O0 in1 $end
$var wire 1 _0 in2 $end
$var wire 1 e2 in3 $end
$var wire 1 }/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 N0 A $end
$var wire 1 ^0 B $end
$var wire 1 f2 C_in $end
$var wire 1 l2 p $end
$var wire 1 m2 g $end
$var wire 1 |/ S $end
$var wire 1 .3 C_out $end
$var wire 1 /3 g_bar $end
$var wire 1 03 p_bar $end
$var wire 1 13 nand2_1_out $end
$var wire 1 23 nand2_2_out $end
$var wire 1 33 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 N0 in1 $end
$var wire 1 ^0 in2 $end
$var wire 1 /3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 /3 in1 $end
$var wire 1 m2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 N0 in1 $end
$var wire 1 ^0 in2 $end
$var wire 1 03 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 03 in1 $end
$var wire 1 l2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 N0 in1 $end
$var wire 1 ^0 in2 $end
$var wire 1 13 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 N0 in1 $end
$var wire 1 f2 in2 $end
$var wire 1 23 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ^0 in1 $end
$var wire 1 f2 in2 $end
$var wire 1 33 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 13 in1 $end
$var wire 1 23 in2 $end
$var wire 1 33 in3 $end
$var wire 1 .3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 N0 in1 $end
$var wire 1 ^0 in2 $end
$var wire 1 f2 in3 $end
$var wire 1 |/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 M0 A $end
$var wire 1 ]0 B $end
$var wire 1 g2 C_in $end
$var wire 1 n2 p $end
$var wire 1 o2 g $end
$var wire 1 {/ S $end
$var wire 1 43 C_out $end
$var wire 1 53 g_bar $end
$var wire 1 63 p_bar $end
$var wire 1 73 nand2_1_out $end
$var wire 1 83 nand2_2_out $end
$var wire 1 93 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 M0 in1 $end
$var wire 1 ]0 in2 $end
$var wire 1 53 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 53 in1 $end
$var wire 1 o2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 M0 in1 $end
$var wire 1 ]0 in2 $end
$var wire 1 63 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 63 in1 $end
$var wire 1 n2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 M0 in1 $end
$var wire 1 ]0 in2 $end
$var wire 1 73 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 M0 in1 $end
$var wire 1 g2 in2 $end
$var wire 1 83 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ]0 in1 $end
$var wire 1 g2 in2 $end
$var wire 1 93 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 73 in1 $end
$var wire 1 83 in2 $end
$var wire 1 93 in3 $end
$var wire 1 43 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 M0 in1 $end
$var wire 1 ]0 in2 $end
$var wire 1 g2 in3 $end
$var wire 1 {/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 :3 N $end
$var wire 1 I0 A [3] $end
$var wire 1 J0 A [2] $end
$var wire 1 K0 A [1] $end
$var wire 1 L0 A [0] $end
$var wire 1 Y0 B [3] $end
$var wire 1 Z0 B [2] $end
$var wire 1 [0 B [1] $end
$var wire 1 \0 B [0] $end
$var wire 1 B1 C_in $end
$var wire 1 w/ S [3] $end
$var wire 1 x/ S [2] $end
$var wire 1 y/ S [1] $end
$var wire 1 z/ S [0] $end
$var wire 1 I1 P $end
$var wire 1 Q1 G $end
$var wire 1 ;3 C_out $end
$var wire 1 <3 c0 $end
$var wire 1 =3 c1 $end
$var wire 1 >3 c2 $end
$var wire 1 ?3 p0 $end
$var wire 1 @3 g0 $end
$var wire 1 A3 p1 $end
$var wire 1 B3 g1 $end
$var wire 1 C3 p2 $end
$var wire 1 D3 g2 $end
$var wire 1 E3 p3 $end
$var wire 1 F3 g3 $end
$var wire 1 G3 g0_bar $end
$var wire 1 H3 g1_bar $end
$var wire 1 I3 g2_bar $end
$var wire 1 J3 g3_bar $end
$var wire 1 K3 nand2_c0_0_out $end
$var wire 1 L3 nand2_c1_0_out $end
$var wire 1 M3 nand2_c2_0_out $end
$var wire 1 N3 nand2_c3_0_out $end
$var wire 1 O3 nand2_p3_p2 $end
$var wire 1 P3 nand2_p1_p0 $end
$var wire 1 Q3 nand2_p3g2_out $end
$var wire 1 R3 nand2_p3p2g1_out $end
$var wire 1 S3 nand3_G_0_out $end
$var wire 1 T3 nand2_p1g0_out $end
$var wire 1 U3 nor2_G_0_out $end
$var wire 1 V3 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 @3 in1 $end
$var wire 1 G3 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 ?3 in1 $end
$var wire 1 B1 in2 $end
$var wire 1 K3 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 G3 in1 $end
$var wire 1 K3 in2 $end
$var wire 1 <3 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 B3 in1 $end
$var wire 1 H3 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 A3 in1 $end
$var wire 1 <3 in2 $end
$var wire 1 L3 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 H3 in1 $end
$var wire 1 L3 in2 $end
$var wire 1 =3 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 D3 in1 $end
$var wire 1 I3 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 C3 in1 $end
$var wire 1 =3 in2 $end
$var wire 1 M3 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 I3 in1 $end
$var wire 1 M3 in2 $end
$var wire 1 >3 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 F3 in1 $end
$var wire 1 J3 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 E3 in1 $end
$var wire 1 >3 in2 $end
$var wire 1 N3 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 J3 in1 $end
$var wire 1 N3 in2 $end
$var wire 1 ;3 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 E3 in1 $end
$var wire 1 C3 in2 $end
$var wire 1 O3 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 A3 in1 $end
$var wire 1 ?3 in2 $end
$var wire 1 P3 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 O3 in1 $end
$var wire 1 P3 in2 $end
$var wire 1 I1 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 E3 in1 $end
$var wire 1 D3 in2 $end
$var wire 1 Q3 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 E3 in1 $end
$var wire 1 C3 in2 $end
$var wire 1 B3 in3 $end
$var wire 1 R3 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 J3 in1 $end
$var wire 1 Q3 in2 $end
$var wire 1 R3 in3 $end
$var wire 1 S3 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 A3 in1 $end
$var wire 1 @3 in2 $end
$var wire 1 T3 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 O3 in1 $end
$var wire 1 T3 in2 $end
$var wire 1 U3 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 S3 in1 $end
$var wire 1 U3 in2 $end
$var wire 1 V3 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 V3 in1 $end
$var wire 1 Q1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 L0 A $end
$var wire 1 \0 B $end
$var wire 1 B1 C_in $end
$var wire 1 ?3 p $end
$var wire 1 @3 g $end
$var wire 1 z/ S $end
$var wire 1 W3 C_out $end
$var wire 1 X3 g_bar $end
$var wire 1 Y3 p_bar $end
$var wire 1 Z3 nand2_1_out $end
$var wire 1 [3 nand2_2_out $end
$var wire 1 \3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 L0 in1 $end
$var wire 1 \0 in2 $end
$var wire 1 X3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 X3 in1 $end
$var wire 1 @3 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 L0 in1 $end
$var wire 1 \0 in2 $end
$var wire 1 Y3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 Y3 in1 $end
$var wire 1 ?3 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 L0 in1 $end
$var wire 1 \0 in2 $end
$var wire 1 Z3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 L0 in1 $end
$var wire 1 B1 in2 $end
$var wire 1 [3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 \0 in1 $end
$var wire 1 B1 in2 $end
$var wire 1 \3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 Z3 in1 $end
$var wire 1 [3 in2 $end
$var wire 1 \3 in3 $end
$var wire 1 W3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 L0 in1 $end
$var wire 1 \0 in2 $end
$var wire 1 B1 in3 $end
$var wire 1 z/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 K0 A $end
$var wire 1 [0 B $end
$var wire 1 <3 C_in $end
$var wire 1 A3 p $end
$var wire 1 B3 g $end
$var wire 1 y/ S $end
$var wire 1 ]3 C_out $end
$var wire 1 ^3 g_bar $end
$var wire 1 _3 p_bar $end
$var wire 1 `3 nand2_1_out $end
$var wire 1 a3 nand2_2_out $end
$var wire 1 b3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 K0 in1 $end
$var wire 1 [0 in2 $end
$var wire 1 ^3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ^3 in1 $end
$var wire 1 B3 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 K0 in1 $end
$var wire 1 [0 in2 $end
$var wire 1 _3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 _3 in1 $end
$var wire 1 A3 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 K0 in1 $end
$var wire 1 [0 in2 $end
$var wire 1 `3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 K0 in1 $end
$var wire 1 <3 in2 $end
$var wire 1 a3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 [0 in1 $end
$var wire 1 <3 in2 $end
$var wire 1 b3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 `3 in1 $end
$var wire 1 a3 in2 $end
$var wire 1 b3 in3 $end
$var wire 1 ]3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 K0 in1 $end
$var wire 1 [0 in2 $end
$var wire 1 <3 in3 $end
$var wire 1 y/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 J0 A $end
$var wire 1 Z0 B $end
$var wire 1 =3 C_in $end
$var wire 1 C3 p $end
$var wire 1 D3 g $end
$var wire 1 x/ S $end
$var wire 1 c3 C_out $end
$var wire 1 d3 g_bar $end
$var wire 1 e3 p_bar $end
$var wire 1 f3 nand2_1_out $end
$var wire 1 g3 nand2_2_out $end
$var wire 1 h3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 J0 in1 $end
$var wire 1 Z0 in2 $end
$var wire 1 d3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 d3 in1 $end
$var wire 1 D3 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 J0 in1 $end
$var wire 1 Z0 in2 $end
$var wire 1 e3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 e3 in1 $end
$var wire 1 C3 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 J0 in1 $end
$var wire 1 Z0 in2 $end
$var wire 1 f3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 J0 in1 $end
$var wire 1 =3 in2 $end
$var wire 1 g3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Z0 in1 $end
$var wire 1 =3 in2 $end
$var wire 1 h3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 f3 in1 $end
$var wire 1 g3 in2 $end
$var wire 1 h3 in3 $end
$var wire 1 c3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 J0 in1 $end
$var wire 1 Z0 in2 $end
$var wire 1 =3 in3 $end
$var wire 1 x/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 I0 A $end
$var wire 1 Y0 B $end
$var wire 1 >3 C_in $end
$var wire 1 E3 p $end
$var wire 1 F3 g $end
$var wire 1 w/ S $end
$var wire 1 i3 C_out $end
$var wire 1 j3 g_bar $end
$var wire 1 k3 p_bar $end
$var wire 1 l3 nand2_1_out $end
$var wire 1 m3 nand2_2_out $end
$var wire 1 n3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 I0 in1 $end
$var wire 1 Y0 in2 $end
$var wire 1 j3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 j3 in1 $end
$var wire 1 F3 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 I0 in1 $end
$var wire 1 Y0 in2 $end
$var wire 1 k3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 k3 in1 $end
$var wire 1 E3 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 I0 in1 $end
$var wire 1 Y0 in2 $end
$var wire 1 l3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 I0 in1 $end
$var wire 1 >3 in2 $end
$var wire 1 m3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Y0 in1 $end
$var wire 1 >3 in2 $end
$var wire 1 n3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 l3 in1 $end
$var wire 1 m3 in2 $end
$var wire 1 n3 in3 $end
$var wire 1 i3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 I0 in1 $end
$var wire 1 Y0 in2 $end
$var wire 1 >3 in3 $end
$var wire 1 w/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 K1 in1 $end
$var wire 1 L1 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 C1 in1 $end
$var wire 1 s. in2 $end
$var wire 1 S1 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 L1 in1 $end
$var wire 1 S1 in2 $end
$var wire 1 @1 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 M1 in1 $end
$var wire 1 N1 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 E1 in1 $end
$var wire 1 @1 in2 $end
$var wire 1 T1 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 N1 in1 $end
$var wire 1 T1 in2 $end
$var wire 1 A1 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 O1 in1 $end
$var wire 1 P1 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 G1 in1 $end
$var wire 1 A1 in2 $end
$var wire 1 U1 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 P1 in1 $end
$var wire 1 U1 in2 $end
$var wire 1 B1 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 Q1 in1 $end
$var wire 1 R1 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 I1 in1 $end
$var wire 1 B1 in2 $end
$var wire 1 V1 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 R1 in1 $end
$var wire 1 V1 in2 $end
$var wire 1 i0 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module memoryStage $end
$var wire 1 (! memRead $end
$var wire 1 '! memWrite $end
$var wire 1 )! memToReg $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 .! halt $end
$var wire 1 j" wrData [15] $end
$var wire 1 k" wrData [14] $end
$var wire 1 l" wrData [13] $end
$var wire 1 m" wrData [12] $end
$var wire 1 n" wrData [11] $end
$var wire 1 o" wrData [10] $end
$var wire 1 p" wrData [9] $end
$var wire 1 q" wrData [8] $end
$var wire 1 r" wrData [7] $end
$var wire 1 s" wrData [6] $end
$var wire 1 t" wrData [5] $end
$var wire 1 u" wrData [4] $end
$var wire 1 v" wrData [3] $end
$var wire 1 w" wrData [2] $end
$var wire 1 x" wrData [1] $end
$var wire 1 y" wrData [0] $end
$var wire 1 Z" aluOut [15] $end
$var wire 1 [" aluOut [14] $end
$var wire 1 \" aluOut [13] $end
$var wire 1 ]" aluOut [12] $end
$var wire 1 ^" aluOut [11] $end
$var wire 1 _" aluOut [10] $end
$var wire 1 `" aluOut [9] $end
$var wire 1 a" aluOut [8] $end
$var wire 1 b" aluOut [7] $end
$var wire 1 c" aluOut [6] $end
$var wire 1 d" aluOut [5] $end
$var wire 1 e" aluOut [4] $end
$var wire 1 f" aluOut [3] $end
$var wire 1 g" aluOut [2] $end
$var wire 1 h" aluOut [1] $end
$var wire 1 i" aluOut [0] $end
$var wire 1 |# memoryOut [15] $end
$var wire 1 }# memoryOut [14] $end
$var wire 1 ~# memoryOut [13] $end
$var wire 1 !$ memoryOut [12] $end
$var wire 1 "$ memoryOut [11] $end
$var wire 1 #$ memoryOut [10] $end
$var wire 1 $$ memoryOut [9] $end
$var wire 1 %$ memoryOut [8] $end
$var wire 1 &$ memoryOut [7] $end
$var wire 1 '$ memoryOut [6] $end
$var wire 1 ($ memoryOut [5] $end
$var wire 1 )$ memoryOut [4] $end
$var wire 1 *$ memoryOut [3] $end
$var wire 1 +$ memoryOut [2] $end
$var wire 1 ,$ memoryOut [1] $end
$var wire 1 -$ memoryOut [0] $end

$scope module data_mem $end
$var wire 1 |# data_out [15] $end
$var wire 1 }# data_out [14] $end
$var wire 1 ~# data_out [13] $end
$var wire 1 !$ data_out [12] $end
$var wire 1 "$ data_out [11] $end
$var wire 1 #$ data_out [10] $end
$var wire 1 $$ data_out [9] $end
$var wire 1 %$ data_out [8] $end
$var wire 1 &$ data_out [7] $end
$var wire 1 '$ data_out [6] $end
$var wire 1 ($ data_out [5] $end
$var wire 1 )$ data_out [4] $end
$var wire 1 *$ data_out [3] $end
$var wire 1 +$ data_out [2] $end
$var wire 1 ,$ data_out [1] $end
$var wire 1 -$ data_out [0] $end
$var wire 1 j" data_in [15] $end
$var wire 1 k" data_in [14] $end
$var wire 1 l" data_in [13] $end
$var wire 1 m" data_in [12] $end
$var wire 1 n" data_in [11] $end
$var wire 1 o" data_in [10] $end
$var wire 1 p" data_in [9] $end
$var wire 1 q" data_in [8] $end
$var wire 1 r" data_in [7] $end
$var wire 1 s" data_in [6] $end
$var wire 1 t" data_in [5] $end
$var wire 1 u" data_in [4] $end
$var wire 1 v" data_in [3] $end
$var wire 1 w" data_in [2] $end
$var wire 1 x" data_in [1] $end
$var wire 1 y" data_in [0] $end
$var wire 1 Z" addr [15] $end
$var wire 1 [" addr [14] $end
$var wire 1 \" addr [13] $end
$var wire 1 ]" addr [12] $end
$var wire 1 ^" addr [11] $end
$var wire 1 _" addr [10] $end
$var wire 1 `" addr [9] $end
$var wire 1 a" addr [8] $end
$var wire 1 b" addr [7] $end
$var wire 1 c" addr [6] $end
$var wire 1 d" addr [5] $end
$var wire 1 e" addr [4] $end
$var wire 1 f" addr [3] $end
$var wire 1 g" addr [2] $end
$var wire 1 h" addr [1] $end
$var wire 1 i" addr [0] $end
$var wire 1 (! enable $end
$var wire 1 '! wr $end
$var wire 1 | createdump $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 o3 loaded $end
$var reg 17 p3 largest [16:0] $end
$var integer 32 q3 mcd $end
$var integer 32 r3 i $end
$upscope $end
$upscope $end

$scope module wbStage $end
$var wire 1 )! memToReg $end
$var wire 1 4! lbi $end
$var wire 1 +! jumpCtl $end
$var wire 1 |# memData [15] $end
$var wire 1 }# memData [14] $end
$var wire 1 ~# memData [13] $end
$var wire 1 !$ memData [12] $end
$var wire 1 "$ memData [11] $end
$var wire 1 #$ memData [10] $end
$var wire 1 $$ memData [9] $end
$var wire 1 %$ memData [8] $end
$var wire 1 &$ memData [7] $end
$var wire 1 '$ memData [6] $end
$var wire 1 ($ memData [5] $end
$var wire 1 )$ memData [4] $end
$var wire 1 *$ memData [3] $end
$var wire 1 +$ memData [2] $end
$var wire 1 ,$ memData [1] $end
$var wire 1 -$ memData [0] $end
$var wire 1 Z" aluOut [15] $end
$var wire 1 [" aluOut [14] $end
$var wire 1 \" aluOut [13] $end
$var wire 1 ]" aluOut [12] $end
$var wire 1 ^" aluOut [11] $end
$var wire 1 _" aluOut [10] $end
$var wire 1 `" aluOut [9] $end
$var wire 1 a" aluOut [8] $end
$var wire 1 b" aluOut [7] $end
$var wire 1 c" aluOut [6] $end
$var wire 1 d" aluOut [5] $end
$var wire 1 e" aluOut [4] $end
$var wire 1 f" aluOut [3] $end
$var wire 1 g" aluOut [2] $end
$var wire 1 h" aluOut [1] $end
$var wire 1 i" aluOut [0] $end
$var wire 1 x! immVal [15] $end
$var wire 1 y! immVal [14] $end
$var wire 1 z! immVal [13] $end
$var wire 1 {! immVal [12] $end
$var wire 1 |! immVal [11] $end
$var wire 1 }! immVal [10] $end
$var wire 1 ~! immVal [9] $end
$var wire 1 !" immVal [8] $end
$var wire 1 "" immVal [7] $end
$var wire 1 #" immVal [6] $end
$var wire 1 $" immVal [5] $end
$var wire 1 %" immVal [4] $end
$var wire 1 &" immVal [3] $end
$var wire 1 '" immVal [2] $end
$var wire 1 (" immVal [1] $end
$var wire 1 )" immVal [0] $end
$var wire 1 s3 pc [15] $end
$var wire 1 t3 pc [14] $end
$var wire 1 u3 pc [13] $end
$var wire 1 v3 pc [12] $end
$var wire 1 w3 pc [11] $end
$var wire 1 x3 pc [10] $end
$var wire 1 y3 pc [9] $end
$var wire 1 z3 pc [8] $end
$var wire 1 {3 pc [7] $end
$var wire 1 |3 pc [6] $end
$var wire 1 }3 pc [5] $end
$var wire 1 ~3 pc [4] $end
$var wire 1 !4 pc [3] $end
$var wire 1 "4 pc [2] $end
$var wire 1 #4 pc [1] $end
$var wire 1 $4 pc [0] $end
$var wire 1 l# writeData [15] $end
$var wire 1 m# writeData [14] $end
$var wire 1 n# writeData [13] $end
$var wire 1 o# writeData [12] $end
$var wire 1 p# writeData [11] $end
$var wire 1 q# writeData [10] $end
$var wire 1 r# writeData [9] $end
$var wire 1 s# writeData [8] $end
$var wire 1 t# writeData [7] $end
$var wire 1 u# writeData [6] $end
$var wire 1 v# writeData [5] $end
$var wire 1 w# writeData [4] $end
$var wire 1 x# writeData [3] $end
$var wire 1 y# writeData [2] $end
$var wire 1 z# writeData [1] $end
$var wire 1 {# writeData [0] $end
$var wire 1 %4 inter_writeData [15] $end
$var wire 1 &4 inter_writeData [14] $end
$var wire 1 '4 inter_writeData [13] $end
$var wire 1 (4 inter_writeData [12] $end
$var wire 1 )4 inter_writeData [11] $end
$var wire 1 *4 inter_writeData [10] $end
$var wire 1 +4 inter_writeData [9] $end
$var wire 1 ,4 inter_writeData [8] $end
$var wire 1 -4 inter_writeData [7] $end
$var wire 1 .4 inter_writeData [6] $end
$var wire 1 /4 inter_writeData [5] $end
$var wire 1 04 inter_writeData [4] $end
$var wire 1 14 inter_writeData [3] $end
$var wire 1 24 inter_writeData [2] $end
$var wire 1 34 inter_writeData [1] $end
$var wire 1 44 inter_writeData [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0&*
0'*
0(*
0)*
0**
0+*
0,*
0-*
0.*
0/*
0P*
0Q*
0R*
0S*
0T*
0U*
0V*
0W*
0X*
0Y*
0Z*
0[*
0\*
0]*
0^*
0_*
0"+
0#+
0$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
00+
01+
0R+
0S+
0T+
0U+
0V+
0W+
0X+
0Y+
0Z+
0[+
0\+
0]+
0^+
0_+
0`+
0a+
0$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
00,
01,
02,
03,
0T,
0U,
0V,
0W,
0X,
0Y,
0Z,
0[,
0\,
0],
0^,
0_,
0`,
0a,
0b,
0c,
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
00-
01-
02-
03-
04-
05-
bx 6-
bx 7-
bx &/
1o3
b0 p3
1!!
1"!
b0 .$
11$
12$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
0<$
1=$
0>$
0?$
1@$
1A$
0B$
0C$
0D$
0E$
b0 F$
1i$
b0 j$
0N)
0O)
0P)
0Q)
0R)
0S)
0T)
0U)
0V)
0W)
0X)
0Y)
0Z)
0[)
0\)
0])
0~)
0!*
0"*
0#*
0$*
0%*
b10000 m$
b100 9%
b100 n%
b100 E&
b100 z&
b10000 Q'
b10000 q.
b11 r.
b10000 j0
b100 k0
b10 l0
b10000 ?1
b100 W1
b100 .2
b100 c2
b100 :3
bx q3
b10000000000000000 r3
b0 x
b10 y
b100 z
b1 #!
bx k$
b10000000000000000 l$
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
12
11
1A
0D
0C
0B
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0U
0V
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
0w
1|
0}
1~
1$!
0%!
1&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
10!
01!
02!
13!
14!
z5!
06!
07!
08!
09!
0;!
0:!
0>!
0=!
0<!
0A!
0@!
0?!
0D!
0C!
0B!
0G!
0F!
0E!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
1Y!
1X!
0w!
1v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
09"
08"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0I"
0H"
0G"
0F"
0E"
0D"
0C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
0Y"
1X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xy"
xx"
xw"
xv"
xu"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
z+#
z*#
z)#
z(#
z'#
z&#
z%#
z$#
z##
z"#
z!#
z~"
z}"
z|"
z{"
zz"
z;#
z:#
z9#
z8#
z7#
z6#
z5#
z4#
z3#
z2#
z1#
z0#
z/#
z.#
z-#
z,#
xK#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x[#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
zk#
zj#
zi#
zh#
zg#
zf#
ze#
zd#
zc#
zb#
za#
z`#
z_#
z^#
z]#
z\#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0-$
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0h$
1g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0"%
0#%
0$%
0%%
z&%
0'%
z(%
0)%
z*%
0+%
z,%
0-%
1.%
0/%
10%
01%
12%
03%
14%
15%
16%
17%
18%
0;%
0<%
0=%
0>%
0?%
1@%
0A%
0B%
0C%
0D%
0E%
1F%
1G%
1H%
1I%
1J%
1K%
1L%
1M%
1N%
1O%
1P%
1Q%
0R%
1S%
0T%
1U%
1W%
1X%
1Y%
1Z%
1[%
1]%
0^%
1_%
1`%
1a%
1c%
1d%
1e%
1f%
1g%
1i%
1j%
1k%
1l%
1m%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
1{%
1|%
1}%
1~%
1!&
1"&
1#&
1$&
1%&
1&&
1'&
1(&
0)&
1*&
0+&
1,&
1.&
1/&
10&
11&
12&
14&
15&
16&
17&
18&
1:&
1;&
1<&
1=&
1>&
1@&
1A&
1B&
1C&
1D&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
0P&
0Q&
1R&
1S&
1T&
1U&
1V&
1W&
1X&
1Y&
1Z&
1[&
1\&
1]&
0^&
1_&
0`&
1a&
1c&
1d&
1e&
1f&
1g&
1i&
1j&
1k&
1l&
1m&
1o&
1p&
1q&
1r&
1s&
1u&
1v&
1w&
1x&
1y&
0|&
0}&
0~&
0!'
0"'
0#'
0$'
0%'
0&'
0''
0('
1)'
1*'
1+'
1,'
1-'
1.'
1/'
10'
11'
12'
13'
14'
05'
16'
07'
18'
1:'
1;'
1<'
1='
1>'
1@'
1A'
1B'
1C'
1D'
1F'
1G'
1H'
1I'
1J'
1L'
1M'
1N'
1O'
1P'
zY'
zX'
zW'
zV'
zU'
zT'
zS'
zR'
1a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
xq'
xp'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
x#(
x"(
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
x3(
x2(
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
xS(
xR(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xc(
xb(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xs(
xr(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
x%)
x$)
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
1&)
0')
0()
0))
0*)
0+)
0,)
0-)
0=)
0<)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
xM)
xL)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
xa)
x`)
x_)
x^)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xs,
xr,
xq,
xp,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
x%-
x$-
x#-
x"-
x!-
x~,
x},
x|,
x{,
xz,
xy,
xx,
xw,
xv,
xu,
xt,
x/$
x0$
0G-
0F-
0E-
0D-
0C-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
0W-
1V-
0U-
0T-
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
0w-
0v-
0u-
0t-
0s-
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0).
0(.
0'.
0&.
0%.
0$.
0#.
0".
0!.
0~-
0}-
0|-
0{-
0z-
0y-
0x-
09.
08.
07.
06.
05.
04.
03.
02.
01.
00.
0/.
0..
0-.
0,.
0+.
0*.
0I.
0H.
0G.
0F.
0E.
0D.
0C.
0B.
0A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
0Y.
1X.
0W.
0V.
0U.
0T.
0S.
0R.
0Q.
0P.
0O.
0N.
0M.
0L.
0K.
0J.
xi.
xh.
xg.
xf.
xe.
xd.
xc.
xb.
xa.
x`.
x_.
x^.
x].
x\.
x[.
xZ.
0l.
0k.
1j.
xm.
xn.
0o.
0p.
x%/
x$/
x#/
x"/
x!/
x~.
x}.
x|.
x{.
xz.
xy.
xx.
xw.
xv.
xu.
xt.
x6/
x5/
x4/
x3/
x2/
x1/
x0/
x//
x./
x-/
x,/
x+/
x*/
x)/
x(/
x'/
xF/
xE/
xD/
xC/
xB/
xA/
x@/
x?/
x>/
x=/
x</
x;/
x:/
x9/
x8/
x7/
xV/
xU/
xT/
xS/
xR/
xQ/
xP/
xO/
xN/
xM/
xL/
xK/
xJ/
xI/
xH/
xG/
xf/
xe/
xd/
xc/
xb/
xa/
x`/
x_/
x^/
x]/
x\/
x[/
xZ/
xY/
xX/
xW/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xh/
xg/
x(0
x'0
x&0
x%0
x$0
x#0
x"0
x!0
x~/
x}/
x|/
x{/
xz/
xy/
xx/
xw/
x80
x70
x60
x50
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
xH0
xG0
xF0
xE0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
xX0
xW0
xV0
xU0
xT0
xS0
xR0
xQ0
xP0
xO0
xN0
xM0
xL0
xK0
xJ0
xI0
0h0
0g0
0f0
0e0
0d0
0c0
0b0
0a0
0`0
0_0
0^0
0]0
0\0
0[0
0Z0
0Y0
0i0
x|0
x{0
xz0
xy0
xx0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
x.1
x-1
x,1
x+1
x*1
x)1
x(1
x'1
x&1
x%1
x$1
x#1
x"1
x!1
x~0
x}0
x>1
x=1
x<1
x;1
x:1
x91
x81
x71
x61
x51
x41
x31
x21
x11
x01
x/1
0@1
0A1
0B1
xC1
zD1
xE1
zF1
xG1
zH1
xI1
zJ1
0K1
1L1
0M1
1N1
0O1
1P1
0Q1
1R1
1S1
1T1
1U1
1V1
0Y1
0Z1
0[1
x\1
0]1
x^1
0_1
x`1
0a1
xb1
0c1
1d1
1e1
1f1
1g1
1h1
1i1
1j1
1k1
xl1
xm1
1n1
1o1
0p1
1q1
0r1
1s1
1u1
xv1
1w1
1x1
1y1
1{1
x|1
1}1
1~1
1!2
1#2
x$2
1%2
1&2
1'2
1)2
x*2
1+2
1,2
1-2
002
012
022
x32
042
x52
062
x72
082
x92
0:2
1;2
1<2
1=2
1>2
1?2
1@2
1A2
1B2
xC2
xD2
1E2
1F2
0G2
1H2
0I2
1J2
1L2
xM2
1N2
1O2
1P2
1R2
xS2
1T2
1U2
1V2
1X2
xY2
1Z2
1[2
1\2
1^2
x_2
1`2
1a2
1b2
0e2
0f2
0g2
xh2
0i2
xj2
0k2
xl2
0m2
xn2
0o2
1p2
1q2
1r2
1s2
1t2
1u2
1v2
1w2
xx2
xy2
1z2
1{2
0|2
1}2
0~2
1!3
1#3
x$3
1%3
1&3
1'3
1)3
x*3
1+3
1,3
1-3
1/3
x03
113
123
133
153
x63
173
183
193
0<3
0=3
0>3
x?3
0@3
xA3
0B3
xC3
0D3
xE3
0F3
1G3
1H3
1I3
1J3
1K3
1L3
1M3
1N3
xO3
xP3
1Q3
1R3
0S3
1T3
0U3
1V3
1X3
xY3
1Z3
1[3
1\3
1^3
x_3
1`3
1a3
1b3
1d3
xe3
1f3
1g3
1h3
1j3
xk3
1l3
1m3
1n3
x44
x34
x24
x14
x04
x/4
x.4
x-4
x,4
x+4
x*4
x)4
x(4
x'4
x&4
x%4
0{
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0$4
0#4
0"4
0!4
0~3
0}3
0|3
0{3
0z3
0y3
0x3
0w3
0v3
0u3
0t3
0s3
1H$
0G$
0~$
0}$
1|$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0!%
0:%
0V%
0\%
0b%
0h%
0o%
0-&
03&
09&
0?&
0F&
0b&
0h&
0n&
0t&
0{&
09'
0?'
0E'
0K'
0s.
0X1
0t1
0z1
0"2
0(2
0/2
0K2
0Q2
0W2
0]2
0d2
0"3
0(3
0.3
043
0;3
0W3
0]3
0c3
0i3
$end
#1
0t,
0u,
0v,
0w,
0x,
0y,
0z,
0{,
0|,
0},
0~,
0!-
0"-
0#-
0$-
0%-
0D,
0E,
0F,
0G,
0H,
0I,
0J,
0K,
0L,
0M,
0N,
0O,
0P,
0Q,
0R,
0S,
0r+
0s+
0t+
0u+
0v+
0w+
0x+
0y+
0z+
0{+
0|+
0}+
0~+
0!,
0",
0#,
0B+
0C+
0D+
0E+
0F+
0G+
0H+
0I+
0J+
0K+
0L+
0M+
0N+
0O+
0P+
0Q+
0p*
0q*
0r*
0s*
0t*
0u*
0v*
0w*
0x*
0y*
0z*
0{*
0|*
0}*
0~*
0!+
0@*
0A*
0B*
0C*
0D*
0E*
0F*
0G*
0H*
0I*
0J*
0K*
0L*
0M*
0N*
0O*
0n)
0o)
0p)
0q)
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
0>)
0?)
0@)
0A)
0B)
0C)
0D)
0E)
0F)
0G)
0H)
0I)
0J)
0K)
0L)
0M)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0?*
0>*
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0o*
0n*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
03+
02+
0q+
0p+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
0s,
0r,
0q,
0p,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
0f,
0e,
0d,
0q'
0p'
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0#(
0"(
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
03(
02(
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
0S(
0R(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0c(
0b(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0s(
0r(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0%)
0$)
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
b0 6-
b0 7-
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0m.
00$
0g-
0f-
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0Z-
0Y-
0X-
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
1n.
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0X0
0W0
0V0
0U0
0T0
0S0
0R0
0Q0
0P0
0O0
0N0
0M0
0L0
0K0
0J0
0I0
1k3
0w/
1e3
0x/
1_3
0y/
1Y3
0z/
163
0{/
103
0|/
1*3
0}/
1$3
0~/
1_2
0!0
1Y2
0"0
1S2
0#0
1M2
0$0
1*2
0%0
1$2
0&0
1|1
0'0
1v1
0(0
0\1
0^1
0`1
0b1
032
052
072
092
0h2
0j2
0l2
0n2
0?3
0A3
0C3
0E3
1O3
1P3
1x2
1y2
1C2
1D2
1l1
1m1
0C1
0E1
0G1
0I1
080
070
060
050
040
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0|0
0{0
0z0
0y0
0x0
0w0
0v0
0u0
0t0
0s0
0r0
0q0
0p0
0o0
0n0
0m0
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
0M/
0L/
0K/
0J/
0I/
0H/
0G/
0f/
0e/
0d/
0c/
0b/
0a/
0`/
0_/
0^/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
0h/
0g/
0H0
0G0
0F0
0E0
0D0
0C0
0B0
0A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
1/$
0.1
0-1
0,1
0+1
0*1
0)1
0(1
0'1
0&1
0%1
0$1
0#1
0"1
0!1
0~0
0}0
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0>1
0=1
0<1
0;1
0:1
091
081
071
061
051
041
031
021
011
001
0/1
06/
05/
04/
03/
02/
01/
00/
0//
0./
0-/
0,/
0+/
0*/
0)/
0(/
0'/
044
034
024
014
004
0/4
0.4
0-4
0,4
0+4
0*4
0)4
0(4
0'4
0&4
0%4
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
b0 &/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
#50
0!!
0|
#100
1!!
1|
b10 #!
#150
0!!
0|
#200
1!!
1|
b11 #!
#201
0"!
0~
#250
0!!
0|
#300
1!!
1|
b10000000000000000000000000000011 k$
b0 l$
b1 l$
b10 l$
b10000000000000000000000000000011 q3
b0 r3
b1 r3
b10 r3
b100 #!
b1 x
b10 .$
1#4
1W$
0]%
0_%
0g$
1\%
1A%
0G%
1<%
1f$
0X"
1W"
1/
0X.
1W.
0v!
1u!
0V-
1U-
1e!
1d!
1a!
1[!
0Y!
1k.
1U!
1T!
1Q!
17"
16"
13"
1G"
1F"
1C"
1>
1=
1:
14
02
17.
16.
13.
1G.
1F.
1C.
1'"
1&"
1#"
1u-
1t-
1q-
1&.
1%.
1".
1y#
1x#
1u#
1E-
1D-
1A-
0U-
1S-
1Q-
1;)
1:)
17)
1R
1Q
1N
1f0
1e0
1b0
1C!
0Y2
1"0
0*2
1%0
0$2
1&0
1`1
1b1
172
0l1
1d/
1c/
1`/
1t/
1s/
1p/
1F0
1E0
1B0
160
150
120
1g.
1f.
1c.
1g"
1f"
1c"
124
114
1.4
1d
1c
1`
1?$
0A$
12!
04!
#350
0!!
0|
#400
1!!
1|
b0 l$
b1 l$
b10 l$
1P)
1Q)
1T)
b0 r3
b1 r3
b10 r3
b101 #!
b10 x
b100 .$
0#4
1"4
0W$
1V$
0d%
0f%
0f$
1]%
1_%
1g$
0\%
0A%
1b%
1B%
0L%
1G%
0<%
1=%
1e$
1L%
1f%
1f$
0b%
0=%
0e$
1X"
0/
1.
1X.
1v!
1V-
0e!
0d!
0a!
1_!
0[!
1Y!
0k.
1G!
0U!
0T!
0Q!
07"
06"
03"
0G"
0F"
0C"
1A"
0>
0=
0:
18
04
12
0a'
1`'
1')
0&)
0;)
0:)
07)
1k)
1j)
1g)
07.
06.
03.
11.
0G.
0F.
0C.
0'"
0&"
0#"
1D
0u-
0t-
0q-
0&.
0%.
0".
0E-
0D-
0A-
1U-
0S-
0Q-
0f0
0e0
0b0
1A!
0C!
1Y2
0"0
1*2
0%0
1$2
0&0
0`1
0b1
072
1l1
1>!
0d/
0c/
0`/
0t/
0s/
0p/
0F0
0E0
0B0
1{
060
050
020
0g.
0f.
0c.
0g"
0f"
0c"
024
014
0.4
0d
0c
0`
0y#
0x#
0u#
0k)
0j)
0g)
0R
0Q
0N
0?$
1A$
02!
14!
#401
1G)
1J)
1K)
1;)
1:)
17)
1o'
1n'
1k'
b1001100 7-
1Y#
1X#
1U#
1w"
1v"
1s"
1t
1s
1p
#450
0!!
0|
#500
1!!
1|
b0 l$
b1 l$
b10 l$
b0 r3
b1 r3
b10 r3
b110 #!
b11 x
b110 .$
1#4
1W$
0]%
0_%
0g$
1\%
1A%
0G%
1<%
0L%
0f%
0f$
1b%
1=%
1e$
0X"
0W"
1V"
1/
0X.
0W.
1V.
0v!
0u!
1t!
0V-
0U-
1T-
1e!
1c!
1a!
1[!
0Y!
1k.
1U!
1S!
1Q!
17"
15"
13"
1G"
1E"
1C"
1>
1<
1:
14
02
17.
15.
13.
1G.
1E.
1C.
1'"
1%"
1#"
1u-
1s-
1q-
1&.
1$.
1".
1y#
1w#
1u#
1E-
1C-
1A-
1U-
1S-
1Q-
1k)
1i)
1g)
1R
1P
1N
1f0
1d0
1b0
1C!
0Y2
1"0
0M2
1$0
0$2
1&0
1`1
132
172
1d/
1b/
1`/
1t/
1r/
1p/
1F0
1D0
1B0
160
140
120
1g.
1e.
1c.
1g"
1e"
1c"
124
104
1.4
1d
1b
1`
b0 7-
1?$
0A$
0Y#
0X#
0U#
12!
04!
0w"
0v"
0s"
0t
0s
0p
#550
0!!
0|
#600
1!!
1|
b0 l$
b1 l$
b10 l$
1"*
1$*
1&*
b0 r3
b1 r3
b10 r3
b111 #!
b100 x
b1000 .$
0#4
0"4
1!4
0W$
0V$
1U$
0j%
0l%
0e$
1d%
1f%
1f$
1]%
1_%
1g$
0\%
0A%
0b%
0B%
1h%
1D%
0M%
1L%
1G%
0<%
0=%
1:%
1M%
1l%
1e$
0f$
0h%
0:%
1X"
0/
0.
1-
1X.
1v!
1V-
1g!
1f!
0c!
0a!
0_!
1^!
0[!
1Y!
0G!
1F!
1W!
1V!
0S!
0Q!
19"
18"
05"
03"
1I"
1H"
0E"
0C"
0A"
1@"
0k.
1@
1?
0<
0:
08
17
04
12
1_'
0`'
0')
1()
1=*
1;*
19*
0k)
0i)
0g)
19.
18.
05.
03.
01.
10.
1I.
1H.
0E.
0C.
1)"
1("
0%"
0#"
0D
1C
1w-
1v-
0s-
0q-
1(.
1'.
0$.
0".
1G-
1F-
0C-
0A-
1W-
0V-
0U-
0T-
0Q-
1h0
1g0
0d0
0b0
0A!
1@!
0C!
1Y2
0"0
1M2
0$0
0|1
1'0
0v1
1(0
1\1
1^1
032
072
0m1
0>!
1=!
1f/
1e/
0b/
0`/
1v/
1u/
0r/
0p/
1H0
1G0
0D0
0B0
0{
180
170
040
020
1i.
1h.
0e.
0c.
1i"
1h"
0e"
0c"
144
134
004
0.4
1f
1e
0b
0`
1{#
1z#
0w#
0u#
1?*
1>*
0;*
09*
1T
1S
0P
0N
b1001100 7-
0?$
1A$
1Y#
1X#
1U#
02!
14!
1w"
1v"
1s"
1t
1s
1p
#601
1w)
1y)
1{)
1k)
1i)
1g)
1!(
1}'
1{'
#650
0!!
0|
#700
1!!
1|
b0 l$
b1 l$
b10 l$
1P*
1Q*
1R*
b0 r3
b1 r3
b10 r3
b1000 #!
b101 x
b1010 .$
1#4
1W$
0]%
0_%
0g$
1\%
1A%
0G%
1<%
1f$
0X"
1W"
1/
0X.
1W.
0v!
1u!
1V-
0g!
0f!
0e!
1a!
0^!
0Y!
0F!
0W!
0V!
0U!
1Q!
09"
08"
07"
13"
0I"
0H"
0G"
1C"
0@"
0@
0?
0>
1:
07
02
1a'
0_'
0()
1&)
1=)
1<)
0:)
07)
0?*
0>*
0=*
09.
08.
07.
13.
00.
0I.
0H.
0G.
1C.
0)"
0("
0'"
1#"
0C
0w-
0v-
0u-
1q-
0(.
0'.
0&.
1".
0{#
0z#
0y#
1u#
0G-
0F-
0E-
1A-
0W-
0V-
1U-
1T-
0S-
1Q-
0=)
0<)
0;)
17)
0T
0S
0R
1N
0h0
0g0
0f0
1b0
0@!
1C!
0Y2
1"0
1$2
0&0
1|1
0'0
1v1
0(0
0\1
0^1
0`1
172
1m1
080
070
060
120
0=!
0f/
0e/
0d/
1`/
0v/
0u/
0t/
1p/
0H0
0G0
0F0
1B0
0i.
0h.
0g.
1c.
0i"
0h"
0g"
1c"
044
034
024
1.4
0f
0e
0d
1`
b0 7-
b1001100 6-
01$
14$
16$
0=$
0A$
1E$
1I#
1H#
1E#
0Y#
0X#
0U#
0$!
1'!
1)!
00!
04!
19!
0&)
0A
1U
1;)
1:)
1F!
0Q!
0#"
0.4
0w"
0v"
0s"
1e-
1d-
1a-
0a'
1_'
0t
0s
0p
0q-
0".
0A-
0u#
1C
0n.
0N
0Q-
0b0
1V0
1U0
1R0
0*2
1%0
0$2
1&0
1`1
1b1
0l1
160
150
1z0
1y0
1v0
1T/
1S/
1P/
1d/
1c/
1t/
1s/
1F0
1D0
1C0
0B0
1A0
1@0
1?0
1>0
1=0
1<0
1;0
1:0
190
1,1
1+1
1(1
1g.
1f.
1g"
1f"
1<1
1;1
181
14/
13/
10/
1d
1c
1D/
1C/
1@/
0/$
b10011000000000001001100 &/
1#/
1"/
1}.
#701
1M*
1N*
1O*
1?*
1>*
1=*
13(
12(
11(
b111 7-
1[#
1Z#
1Y#
1y"
1x"
1w"
1v
1u
1t
#750
0!!
0|
#800
1!!
1|
b0 l$
b1 l$
b10 l$
b0 r3
b1 r3
b10 r3
b1001 #!
b110 x
b1100 .$
0#4
1"4
0W$
1V$
0d%
0f%
0f$
1]%
1_%
1g$
0\%
0A%
1b%
1B%
0L%
0N%
1G%
0<%
1=%
0M%
0l%
0e$
1L%
1f%
1f$
0b%
0=%
1h%
1:%
1M%
1l%
1e$
0h%
0:%
1X"
0/
1.
1X.
1v!
1V-
1b!
1\!
1G!
14"
1D"
1;
15
0_'
1^'
14.
1D.
1D
1D!
b0 7-
0E$
11$
04$
15$
1E$
0[#
0Z#
0Y#
1$!
0'!
1(!
1))
0y"
0x"
0w"
1A
0U
1V
0v
0u
0t
#850
0!!
0|
#900
1!!
1|
b0 l$
b1 l$
b10 l$
b0 r3
b1 r3
b10 r3
b1010 #!
b111 x
b1110 .$
1#4
1W$
0]%
0_%
0g$
1\%
1A%
0G%
0Q%
1R%
1<%
0L%
0f%
0f$
0U%
1-%
1b%
1=%
0M%
0l%
0e$
0.%
1"%
1h%
1:%
1d$
0X"
0W"
0V"
1U"
1/
0X.
0W.
0V.
1U.
0v!
0u!
0t!
1s!
0V-
0U-
0T-
1S-
1g!
1d!
1c!
1`!
1]!
0\!
1Y!
1E!
1W!
1T!
1S!
19"
16"
15"
12"
1I"
1F"
1E"
1B"
1?"
1k.
1@
1=
1<
19
16
05
12
0^'
1Z'
1-)
0))
19.
16.
15.
12.
1/.
1..
1-.
1,.
1+.
1I.
1F.
1E.
1B.
1A.
1@.
1?.
1>.
1=.
1<.
1;.
1:.
1)"
1&"
1%"
1$"
1#"
1""
1!"
1~!
1}!
1|!
1{!
1z!
1y!
1x!
1B
1w-
1t-
1s-
1r-
1q-
1p-
1o-
1n-
1m-
1l-
1k-
1j-
1i-
1h-
1(.
1%.
1$.
1#.
1".
1!.
1~-
1}-
1|-
1{-
1z-
1y-
1x-
1G-
1D-
1C-
1B-
1A-
1@-
1?-
1>-
1=-
1<-
1;-
1:-
19-
18-
1W-
1T-
0S-
1h0
1e0
1d0
1c0
1b0
1a0
1`0
1_0
1^0
1]0
1\0
1[0
1Z0
1Y0
1?!
1B!
0k3
1w/
0e3
1x/
0_3
1y/
0Y3
1z/
063
1{/
003
1|/
0*3
1}/
0$3
1~/
0_2
1!0
0X2
0Z2
0"0
0S2
1#0
0M2
1$0
0)2
0+2
0%0
0v1
1(0
1\1
1(2
1c1
132
152
1W2
182
192
1h2
1j2
1l2
1n2
1?3
1A3
1C3
1E3
0O3
0P3
0x2
0y2
0C2
0E2
0=2
0D2
0g1
1X1
1p1
1E1
122
1G2
1G1
1I1
0J2
0B2
0b2
0!0
0s1
1K1
1]2
1/2
1M1
0N1
0L1
1@1
1A1
0t2
0'3
0~/
0U1
0?2
0P2
0$0
0T1
1K2
102
1B1
1"3
1e2
0u2
0-3
0}/
0K3
0\3
0z/
0V1
0@2
0V2
0#0
1Q2
112
1i0
1W3
1<3
1(3
1f2
0v2
033
0|/
0L3
0b3
0y/
1o.
10$
0A2
0[2
0\2
1"0
1]3
1=3
1.3
1g2
0w2
093
0{/
0M3
0h3
0x/
1c3
1>3
143
1d2
0N3
0n3
0w/
1i3
1;3
1<!
04/
03/
00/
1{0
0y0
1w0
0v0
0S/
0P/
1f/
1b/
1a/
1_/
1^/
1]/
1\/
1[/
1Z/
1Y/
1X/
1W/
1v/
0s/
1r/
1q/
0p/
1o/
1n/
1m/
1l/
1k/
1j/
1i/
1h/
1g/
1H0
1E0
0D0
1/$
180
050
140
130
020
110
100
1/0
1.0
1-0
1,0
1+0
1*0
1)0
1-1
0+1
1)1
0(1
1=1
0;1
191
081
1i.
0f.
1e.
1d.
0c.
1b.
1a.
1`.
1_.
1^.
1].
1\.
1[.
1Z.
1i"
0f"
1e"
1d"
0c"
1b"
1a"
1`"
1_"
1^"
1]"
1\"
1["
1Z"
1f
0c
1b
1a
0`
1_
1^
1]
1\
1[
1Z
1Y
1X
1W
b0 6-
b10011000000000 &/
0E$
05$
06$
1=$
1A$
0#/
0"/
0}.
1z.
1y.
1v.
0I#
0H#
0E#
09!
0(!
0)!
10!
14!
0V
1{#
1x#
1w#
1v#
1u#
1t#
1s#
1r#
1q#
1p#
1o#
1n#
1m#
1l#
0G!
0F!
1R!
1Q!
1P!
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
144
124
104
1/4
1-4
1,4
1+4
1*4
1)4
1(4
1'4
1&4
1%4
0k.
0e-
0d-
0a-
0D/
0C/
0@/
1=/
1</
19/
1]'
0Z'
0-)
1*)
0{0
0z0
1y0
1x0
0w0
1u0
1-/
1,/
1)/
040
030
120
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0=/
0</
09/
0r-
0q-
0p-
0o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0#.
0".
0!.
0~-
0}-
0|-
0{-
0z-
0y-
0x-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
1$"
1#"
1""
1!"
1~!
1}!
1|!
1{!
1z!
1y!
1x!
0D
0C
1A+
1>+
1=+
1<+
1;+
1:+
19+
18+
17+
16+
15+
14+
13+
12+
1T
1Q
1P
1O
1N
1M
1L
1K
1J
1I
1H
1G
1F
1E
0/$
1n.
1r-
1q-
1p-
1o-
1n-
1m-
1l-
1k-
1j-
1i-
1h-
1#.
1".
1!.
1~-
1}-
1|-
1{-
1z-
1y-
1x-
1B-
1A-
1@-
1?-
1>-
1=-
1<-
1;-
1:-
19-
18-
1v#
1u#
1t#
1s#
1r#
1q#
1p#
1o#
1n#
1m#
1l#
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
03+
02+
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
1R-
0e.
0d.
1c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
1=/
1</
19/
0-1
0,1
1+1
1*1
0)1
1'1
0n.
0=1
0<1
1;1
1:1
091
171
1<+
1;+
1:+
19+
18+
17+
16+
15+
14+
13+
12+
1O
1N
1M
1L
1K
1J
1I
1H
1G
1F
1E
0R-
0e"
0d"
1c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
004
0/4
1.4
0-4
0,4
0+4
0*4
0)4
0(4
0'4
0&4
0%4
0b
0a
1`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0-/
0,/
1+/
1*/
0)/
1'/
0=/
0</
1;/
1:/
09/
17/
0V0
0U0
0R0
1X2
1Z2
1[2
0"0
1)2
1+2
1%0
1$2
0&0
0`1
0(2
0c1
082
1=2
1E2
1g1
1l1
0X1
0p1
0G2
1J2
1s1
0K1
0M1
1N1
1L1
0@1
1?2
1P2
1$0
1T1
0A1
0K2
002
1@2
1V2
1#0
1t2
1'3
1~/
1U1
0B1
0"3
0e2
0Q2
012
1A2
1\2
1"0
1u2
1-3
1}/
1K3
1\3
1z/
1V1
0i0
0W3
0<3
0(3
0f2
0W2
022
1B2
1b2
1!0
1v2
133
1|/
1L3
1b3
1y/
0o.
00$
0]3
0=3
0.3
0g2
0]2
0/2
1w2
193
1{/
1M3
1h3
1x/
0c3
0>3
043
0d2
1N3
1n3
1w/
0i3
0;3
060
150
140
130
110
100
1/0
1.0
1-0
1,0
1+0
1*0
1)0
0y0
0x0
0u0
0T/
0d/
0t/
1s/
1p/
0F0
1D0
1B0
0+1
0*1
0'1
0g.
1f.
1e.
1d.
1b.
1a.
1`.
1_.
1^.
1].
1\.
1[.
1Z.
0g"
1f"
1e"
1d"
1b"
1a"
1`"
1_"
1^"
1]"
1\"
1["
1Z"
0;1
0:1
071
0+/
0*/
0'/
024
114
104
1/4
1-4
1,4
1+4
1*4
1)4
1(4
1'4
1&4
1%4
0d
1c
1b
1a
1_
1^
1]
1\
1[
1Z
1Y
1X
1W
0;/
0:/
07/
1/$
b0 &/
0z.
0y.
0v.
#950
0!!
0|
#1000
1!!
1|
b0 l$
b1 l$
b10 l$
1R+
1U+
1V+
1W+
1X+
1Y+
1Z+
1[+
1\+
1]+
1^+
1_+
1`+
1a+
b0 r3
b1 r3
b10 r3
b1011 #!
b1000 x
b10000 .$
0#4
0"4
0!4
1~3
0W$
0V$
0U$
1T$
0/&
01&
0d$
1j%
1l%
1e$
1d%
1f%
1f$
1]%
1_%
1g$
0\%
0A%
0b%
0B%
0h%
0D%
1-&
1s%
0!&
1M%
1L%
1N%
1G%
1Q%
0R%
0<%
0=%
0:%
1p%
1c$
0e$
0f$
1U%
0-%
1.%
0"%
1!&
11&
1d$
0-&
0p%
0c$
1X"
0/
0.
0-
1,
1X.
1v!
1V-
0g!
1e!
0d!
0c!
0b!
0a!
0]!
0Y!
0E!
0W!
1U!
0T!
0S!
0R!
0Q!
09"
17"
06"
05"
04"
03"
0I"
1G"
0F"
0E"
0D"
0C"
0?"
0@
1>
0=
0<
0;
0:
06
02
1