$date
	Fri Mar 13 19:03:28 2020
$end
$version
	ModelSim Version 10.6d
$end
$timescale
	1ns
$end

$scope module proc_hier_bench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemData [15] $end
$var wire 1 h MemData [14] $end
$var wire 1 i MemData [13] $end
$var wire 1 j MemData [12] $end
$var wire 1 k MemData [11] $end
$var wire 1 l MemData [10] $end
$var wire 1 m MemData [9] $end
$var wire 1 n MemData [8] $end
$var wire 1 o MemData [7] $end
$var wire 1 p MemData [6] $end
$var wire 1 q MemData [5] $end
$var wire 1 r MemData [4] $end
$var wire 1 s MemData [3] $end
$var wire 1 t MemData [2] $end
$var wire 1 u MemData [1] $end
$var wire 1 v MemData [0] $end
$var wire 1 w Halt $end
$var integer 32 x inst_count $end
$var integer 32 y trace_file $end
$var integer 32 z sim_log_file $end
$var wire 1 { Rs $end

$scope module DUT $end
$var wire 1 | clk $end
$var wire 1 } err $end
$var wire 1 ~ rst $end

$scope module c0 $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 } err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 } err $end
$var wire 1 $! regWrite $end
$var wire 1 %! btr $end
$var wire 1 &! aluSrc $end
$var wire 1 '! memWrite $end
$var wire 1 (! memRead $end
$var wire 1 )! memToReg $end
$var wire 1 *! branchCtl $end
$var wire 1 +! jumpCtl $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 .! halt $end
$var wire 1 /! noOp $end
$var wire 1 0! immCtl $end
$var wire 1 1! stu $end
$var wire 1 2! slbi $end
$var wire 1 3! immPres $end
$var wire 1 4! lbi $end
$var wire 1 5! decode_err $end
$var wire 1 6! sl $end
$var wire 1 7! sco $end
$var wire 1 8! seq $end
$var wire 1 9! aluCtl [1] $end
$var wire 1 :! aluCtl [0] $end
$var wire 1 ;! regRs [2] $end
$var wire 1 <! regRs [1] $end
$var wire 1 =! regRs [0] $end
$var wire 1 >! readReg1 [2] $end
$var wire 1 ?! readReg1 [1] $end
$var wire 1 @! readReg1 [0] $end
$var wire 1 A! readReg2 [2] $end
$var wire 1 B! readReg2 [1] $end
$var wire 1 C! readReg2 [0] $end
$var wire 1 D! writeReg1 [2] $end
$var wire 1 E! writeReg1 [1] $end
$var wire 1 F! writeReg1 [0] $end
$var wire 1 G! immVal [15] $end
$var wire 1 H! immVal [14] $end
$var wire 1 I! immVal [13] $end
$var wire 1 J! immVal [12] $end
$var wire 1 K! immVal [11] $end
$var wire 1 L! immVal [10] $end
$var wire 1 M! immVal [9] $end
$var wire 1 N! immVal [8] $end
$var wire 1 O! immVal [7] $end
$var wire 1 P! immVal [6] $end
$var wire 1 Q! immVal [5] $end
$var wire 1 R! immVal [4] $end
$var wire 1 S! immVal [3] $end
$var wire 1 T! immVal [2] $end
$var wire 1 U! immVal [1] $end
$var wire 1 V! immVal [0] $end
$var wire 1 W! currInstr [15] $end
$var wire 1 X! currInstr [14] $end
$var wire 1 Y! currInstr [13] $end
$var wire 1 Z! currInstr [12] $end
$var wire 1 [! currInstr [11] $end
$var wire 1 \! currInstr [10] $end
$var wire 1 ]! currInstr [9] $end
$var wire 1 ^! currInstr [8] $end
$var wire 1 _! currInstr [7] $end
$var wire 1 `! currInstr [6] $end
$var wire 1 a! currInstr [5] $end
$var wire 1 b! currInstr [4] $end
$var wire 1 c! currInstr [3] $end
$var wire 1 d! currInstr [2] $end
$var wire 1 e! currInstr [1] $end
$var wire 1 f! currInstr [0] $end
$var wire 1 g! next_pc [15] $end
$var wire 1 h! next_pc [14] $end
$var wire 1 i! next_pc [13] $end
$var wire 1 j! next_pc [12] $end
$var wire 1 k! next_pc [11] $end
$var wire 1 l! next_pc [10] $end
$var wire 1 m! next_pc [9] $end
$var wire 1 n! next_pc [8] $end
$var wire 1 o! next_pc [7] $end
$var wire 1 p! next_pc [6] $end
$var wire 1 q! next_pc [5] $end
$var wire 1 r! next_pc [4] $end
$var wire 1 s! next_pc [3] $end
$var wire 1 t! next_pc [2] $end
$var wire 1 u! next_pc [1] $end
$var wire 1 v! next_pc [0] $end
$var wire 1 w! signedImmVal [15] $end
$var wire 1 x! signedImmVal [14] $end
$var wire 1 y! signedImmVal [13] $end
$var wire 1 z! signedImmVal [12] $end
$var wire 1 {! signedImmVal [11] $end
$var wire 1 |! signedImmVal [10] $end
$var wire 1 }! signedImmVal [9] $end
$var wire 1 ~! signedImmVal [8] $end
$var wire 1 !" signedImmVal [7] $end
$var wire 1 "" signedImmVal [6] $end
$var wire 1 #" signedImmVal [5] $end
$var wire 1 $" signedImmVal [4] $end
$var wire 1 %" signedImmVal [3] $end
$var wire 1 &" signedImmVal [2] $end
$var wire 1 '" signedImmVal [1] $end
$var wire 1 (" signedImmVal [0] $end
$var wire 1 )" branch [15] $end
$var wire 1 *" branch [14] $end
$var wire 1 +" branch [13] $end
$var wire 1 ," branch [12] $end
$var wire 1 -" branch [11] $end
$var wire 1 ." branch [10] $end
$var wire 1 /" branch [9] $end
$var wire 1 0" branch [8] $end
$var wire 1 1" branch [7] $end
$var wire 1 2" branch [6] $end
$var wire 1 3" branch [5] $end
$var wire 1 4" branch [4] $end
$var wire 1 5" branch [3] $end
$var wire 1 6" branch [2] $end
$var wire 1 7" branch [1] $end
$var wire 1 8" branch [0] $end
$var wire 1 9" jump [15] $end
$var wire 1 :" jump [14] $end
$var wire 1 ;" jump [13] $end
$var wire 1 <" jump [12] $end
$var wire 1 =" jump [11] $end
$var wire 1 >" jump [10] $end
$var wire 1 ?" jump [9] $end
$var wire 1 @" jump [8] $end
$var wire 1 A" jump [7] $end
$var wire 1 B" jump [6] $end
$var wire 1 C" jump [5] $end
$var wire 1 D" jump [4] $end
$var wire 1 E" jump [3] $end
$var wire 1 F" jump [2] $end
$var wire 1 G" jump [1] $end
$var wire 1 H" jump [0] $end
$var wire 1 I" new_pc [15] $end
$var wire 1 J" new_pc [14] $end
$var wire 1 K" new_pc [13] $end
$var wire 1 L" new_pc [12] $end
$var wire 1 M" new_pc [11] $end
$var wire 1 N" new_pc [10] $end
$var wire 1 O" new_pc [9] $end
$var wire 1 P" new_pc [8] $end
$var wire 1 Q" new_pc [7] $end
$var wire 1 R" new_pc [6] $end
$var wire 1 S" new_pc [5] $end
$var wire 1 T" new_pc [4] $end
$var wire 1 U" new_pc [3] $end
$var wire 1 V" new_pc [2] $end
$var wire 1 W" new_pc [1] $end
$var wire 1 X" new_pc [0] $end
$var wire 1 Y" Out [15] $end
$var wire 1 Z" Out [14] $end
$var wire 1 [" Out [13] $end
$var wire 1 \" Out [12] $end
$var wire 1 ]" Out [11] $end
$var wire 1 ^" Out [10] $end
$var wire 1 _" Out [9] $end
$var wire 1 `" Out [8] $end
$var wire 1 a" Out [7] $end
$var wire 1 b" Out [6] $end
$var wire 1 c" Out [5] $end
$var wire 1 d" Out [4] $end
$var wire 1 e" Out [3] $end
$var wire 1 f" Out [2] $end
$var wire 1 g" Out [1] $end
$var wire 1 h" Out [0] $end
$var wire 1 i" wrData [15] $end
$var wire 1 j" wrData [14] $end
$var wire 1 k" wrData [13] $end
$var wire 1 l" wrData [12] $end
$var wire 1 m" wrData [11] $end
$var wire 1 n" wrData [10] $end
$var wire 1 o" wrData [9] $end
$var wire 1 p" wrData [8] $end
$var wire 1 q" wrData [7] $end
$var wire 1 r" wrData [6] $end
$var wire 1 s" wrData [5] $end
$var wire 1 t" wrData [4] $end
$var wire 1 u" wrData [3] $end
$var wire 1 v" wrData [2] $end
$var wire 1 w" wrData [1] $end
$var wire 1 x" wrData [0] $end
$var wire 1 y" regData1 [15] $end
$var wire 1 z" regData1 [14] $end
$var wire 1 {" regData1 [13] $end
$var wire 1 |" regData1 [12] $end
$var wire 1 }" regData1 [11] $end
$var wire 1 ~" regData1 [10] $end
$var wire 1 !# regData1 [9] $end
$var wire 1 "# regData1 [8] $end
$var wire 1 ## regData1 [7] $end
$var wire 1 $# regData1 [6] $end
$var wire 1 %# regData1 [5] $end
$var wire 1 &# regData1 [4] $end
$var wire 1 '# regData1 [3] $end
$var wire 1 (# regData1 [2] $end
$var wire 1 )# regData1 [1] $end
$var wire 1 *# regData1 [0] $end
$var wire 1 +# regData2 [15] $end
$var wire 1 ,# regData2 [14] $end
$var wire 1 -# regData2 [13] $end
$var wire 1 .# regData2 [12] $end
$var wire 1 /# regData2 [11] $end
$var wire 1 0# regData2 [10] $end
$var wire 1 1# regData2 [9] $end
$var wire 1 2# regData2 [8] $end
$var wire 1 3# regData2 [7] $end
$var wire 1 4# regData2 [6] $end
$var wire 1 5# regData2 [5] $end
$var wire 1 6# regData2 [4] $end
$var wire 1 7# regData2 [3] $end
$var wire 1 8# regData2 [2] $end
$var wire 1 9# regData2 [1] $end
$var wire 1 :# regData2 [0] $end
$var wire 1 ;# read1Data [15] $end
$var wire 1 <# read1Data [14] $end
$var wire 1 =# read1Data [13] $end
$var wire 1 ># read1Data [12] $end
$var wire 1 ?# read1Data [11] $end
$var wire 1 @# read1Data [10] $end
$var wire 1 A# read1Data [9] $end
$var wire 1 B# read1Data [8] $end
$var wire 1 C# read1Data [7] $end
$var wire 1 D# read1Data [6] $end
$var wire 1 E# read1Data [5] $end
$var wire 1 F# read1Data [4] $end
$var wire 1 G# read1Data [3] $end
$var wire 1 H# read1Data [2] $end
$var wire 1 I# read1Data [1] $end
$var wire 1 J# read1Data [0] $end
$var wire 1 K# read2Data [15] $end
$var wire 1 L# read2Data [14] $end
$var wire 1 M# read2Data [13] $end
$var wire 1 N# read2Data [12] $end
$var wire 1 O# read2Data [11] $end
$var wire 1 P# read2Data [10] $end
$var wire 1 Q# read2Data [9] $end
$var wire 1 R# read2Data [8] $end
$var wire 1 S# read2Data [7] $end
$var wire 1 T# read2Data [6] $end
$var wire 1 U# read2Data [5] $end
$var wire 1 V# read2Data [4] $end
$var wire 1 W# read2Data [3] $end
$var wire 1 X# read2Data [2] $end
$var wire 1 Y# read2Data [1] $end
$var wire 1 Z# read2Data [0] $end
$var wire 1 [# aluOut [15] $end
$var wire 1 \# aluOut [14] $end
$var wire 1 ]# aluOut [13] $end
$var wire 1 ^# aluOut [12] $end
$var wire 1 _# aluOut [11] $end
$var wire 1 `# aluOut [10] $end
$var wire 1 a# aluOut [9] $end
$var wire 1 b# aluOut [8] $end
$var wire 1 c# aluOut [7] $end
$var wire 1 d# aluOut [6] $end
$var wire 1 e# aluOut [5] $end
$var wire 1 f# aluOut [4] $end
$var wire 1 g# aluOut [3] $end
$var wire 1 h# aluOut [2] $end
$var wire 1 i# aluOut [1] $end
$var wire 1 j# aluOut [0] $end
$var wire 1 k# writeData [15] $end
$var wire 1 l# writeData [14] $end
$var wire 1 m# writeData [13] $end
$var wire 1 n# writeData [12] $end
$var wire 1 o# writeData [11] $end
$var wire 1 p# writeData [10] $end
$var wire 1 q# writeData [9] $end
$var wire 1 r# writeData [8] $end
$var wire 1 s# writeData [7] $end
$var wire 1 t# writeData [6] $end
$var wire 1 u# writeData [5] $end
$var wire 1 v# writeData [4] $end
$var wire 1 w# writeData [3] $end
$var wire 1 x# writeData [2] $end
$var wire 1 y# writeData [1] $end
$var wire 1 z# writeData [0] $end
$var wire 1 {# memoryOut [15] $end
$var wire 1 |# memoryOut [14] $end
$var wire 1 }# memoryOut [13] $end
$var wire 1 ~# memoryOut [12] $end
$var wire 1 !$ memoryOut [11] $end
$var wire 1 "$ memoryOut [10] $end
$var wire 1 #$ memoryOut [9] $end
$var wire 1 $$ memoryOut [8] $end
$var wire 1 %$ memoryOut [7] $end
$var wire 1 &$ memoryOut [6] $end
$var wire 1 '$ memoryOut [5] $end
$var wire 1 ($ memoryOut [4] $end
$var wire 1 )$ memoryOut [3] $end
$var wire 1 *$ memoryOut [2] $end
$var wire 1 +$ memoryOut [1] $end
$var wire 1 ,$ memoryOut [0] $end
$var reg 16 -$ pc [15:0] $end
$var wire 1 .$ Zero $end
$var wire 1 /$ Ofl $end

$scope module ctlSignals $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 W! instr [15] $end
$var wire 1 X! instr [14] $end
$var wire 1 Y! instr [13] $end
$var wire 1 Z! instr [12] $end
$var wire 1 [! instr [11] $end
$var wire 1 \! instr [10] $end
$var wire 1 ]! instr [9] $end
$var wire 1 ^! instr [8] $end
$var wire 1 _! instr [7] $end
$var wire 1 `! instr [6] $end
$var wire 1 a! instr [5] $end
$var wire 1 b! instr [4] $end
$var wire 1 c! instr [3] $end
$var wire 1 d! instr [2] $end
$var wire 1 e! instr [1] $end
$var wire 1 f! instr [0] $end
$var reg 1 0$ regWrite $end
$var reg 1 1$ aluSrc $end
$var reg 1 2$ btr $end
$var reg 1 3$ memWrite $end
$var reg 1 4$ memRead $end
$var reg 1 5$ memToReg $end
$var reg 1 6$ branchCtl $end
$var reg 1 7$ jumpCtl $end
$var reg 1 8$ invA $end
$var reg 1 9$ invB $end
$var reg 1 :$ halt $end
$var reg 1 ;$ noOp $end
$var reg 1 <$ immCtl $end
$var reg 1 =$ stu $end
$var reg 1 >$ slbi $end
$var reg 1 ?$ immPres $end
$var reg 1 @$ lbi $end
$var reg 1 A$ seq $end
$var reg 1 B$ sl $end
$var reg 1 C$ sco $end
$var reg 2 D$ aluCtl [1:0] $end
$upscope $end

$scope module fetchStage $end
$var wire 1 E$ wr $end
$var wire 1 F$ enable $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 .! halt $end
$var wire 1 /! noOp $end
$var wire 1 1! stu $end
$var wire 1 3! immPres $end
$var wire 1 0! immCtl $end
$var wire 1 4! lbi $end
$var wire 1 G$ pc [15] $end
$var wire 1 H$ pc [14] $end
$var wire 1 I$ pc [13] $end
$var wire 1 J$ pc [12] $end
$var wire 1 K$ pc [11] $end
$var wire 1 L$ pc [10] $end
$var wire 1 M$ pc [9] $end
$var wire 1 N$ pc [8] $end
$var wire 1 O$ pc [7] $end
$var wire 1 P$ pc [6] $end
$var wire 1 Q$ pc [5] $end
$var wire 1 R$ pc [4] $end
$var wire 1 S$ pc [3] $end
$var wire 1 T$ pc [2] $end
$var wire 1 U$ pc [1] $end
$var wire 1 V$ pc [0] $end
$var wire 1 >! readReg1 [2] $end
$var wire 1 ?! readReg1 [1] $end
$var wire 1 @! readReg1 [0] $end
$var wire 1 A! readReg2 [2] $end
$var wire 1 B! readReg2 [1] $end
$var wire 1 C! readReg2 [0] $end
$var wire 1 D! writeReg1 [2] $end
$var wire 1 E! writeReg1 [1] $end
$var wire 1 F! writeReg1 [0] $end
$var wire 1 G! immVal [15] $end
$var wire 1 H! immVal [14] $end
$var wire 1 I! immVal [13] $end
$var wire 1 J! immVal [12] $end
$var wire 1 K! immVal [11] $end
$var wire 1 L! immVal [10] $end
$var wire 1 M! immVal [9] $end
$var wire 1 N! immVal [8] $end
$var wire 1 O! immVal [7] $end
$var wire 1 P! immVal [6] $end
$var wire 1 Q! immVal [5] $end
$var wire 1 R! immVal [4] $end
$var wire 1 S! immVal [3] $end
$var wire 1 T! immVal [2] $end
$var wire 1 U! immVal [1] $end
$var wire 1 V! immVal [0] $end
$var wire 1 )" branch [15] $end
$var wire 1 *" branch [14] $end
$var wire 1 +" branch [13] $end
$var wire 1 ," branch [12] $end
$var wire 1 -" branch [11] $end
$var wire 1 ." branch [10] $end
$var wire 1 /" branch [9] $end
$var wire 1 0" branch [8] $end
$var wire 1 1" branch [7] $end
$var wire 1 2" branch [6] $end
$var wire 1 3" branch [5] $end
$var wire 1 4" branch [4] $end
$var wire 1 5" branch [3] $end
$var wire 1 6" branch [2] $end
$var wire 1 7" branch [1] $end
$var wire 1 8" branch [0] $end
$var wire 1 9" jump [15] $end
$var wire 1 :" jump [14] $end
$var wire 1 ;" jump [13] $end
$var wire 1 <" jump [12] $end
$var wire 1 =" jump [11] $end
$var wire 1 >" jump [10] $end
$var wire 1 ?" jump [9] $end
$var wire 1 @" jump [8] $end
$var wire 1 A" jump [7] $end
$var wire 1 B" jump [6] $end
$var wire 1 C" jump [5] $end
$var wire 1 D" jump [4] $end
$var wire 1 E" jump [3] $end
$var wire 1 F" jump [2] $end
$var wire 1 G" jump [1] $end
$var wire 1 H" jump [0] $end
$var wire 1 I" new_pc [15] $end
$var wire 1 J" new_pc [14] $end
$var wire 1 K" new_pc [13] $end
$var wire 1 L" new_pc [12] $end
$var wire 1 M" new_pc [11] $end
$var wire 1 N" new_pc [10] $end
$var wire 1 O" new_pc [9] $end
$var wire 1 P" new_pc [8] $end
$var wire 1 Q" new_pc [7] $end
$var wire 1 R" new_pc [6] $end
$var wire 1 S" new_pc [5] $end
$var wire 1 T" new_pc [4] $end
$var wire 1 U" new_pc [3] $end
$var wire 1 V" new_pc [2] $end
$var wire 1 W" new_pc [1] $end
$var wire 1 X" new_pc [0] $end
$var wire 1 W! instr [15] $end
$var wire 1 X! instr [14] $end
$var wire 1 Y! instr [13] $end
$var wire 1 Z! instr [12] $end
$var wire 1 [! instr [11] $end
$var wire 1 \! instr [10] $end
$var wire 1 ]! instr [9] $end
$var wire 1 ^! instr [8] $end
$var wire 1 _! instr [7] $end
$var wire 1 `! instr [6] $end
$var wire 1 a! instr [5] $end
$var wire 1 b! instr [4] $end
$var wire 1 c! instr [3] $end
$var wire 1 d! instr [2] $end
$var wire 1 e! instr [1] $end
$var wire 1 f! instr [0] $end
$var wire 1 W$ pc_inc [15] $end
$var wire 1 X$ pc_inc [14] $end
$var wire 1 Y$ pc_inc [13] $end
$var wire 1 Z$ pc_inc [12] $end
$var wire 1 [$ pc_inc [11] $end
$var wire 1 \$ pc_inc [10] $end
$var wire 1 ]$ pc_inc [9] $end
$var wire 1 ^$ pc_inc [8] $end
$var wire 1 _$ pc_inc [7] $end
$var wire 1 `$ pc_inc [6] $end
$var wire 1 a$ pc_inc [5] $end
$var wire 1 b$ pc_inc [4] $end
$var wire 1 c$ pc_inc [3] $end
$var wire 1 d$ pc_inc [2] $end
$var wire 1 e$ pc_inc [1] $end
$var wire 1 f$ pc_inc [0] $end

$scope module instr_mem $end
$var wire 1 W! data_out [15] $end
$var wire 1 X! data_out [14] $end
$var wire 1 Y! data_out [13] $end
$var wire 1 Z! data_out [12] $end
$var wire 1 [! data_out [11] $end
$var wire 1 \! data_out [10] $end
$var wire 1 ]! data_out [9] $end
$var wire 1 ^! data_out [8] $end
$var wire 1 _! data_out [7] $end
$var wire 1 `! data_out [6] $end
$var wire 1 a! data_out [5] $end
$var wire 1 b! data_out [4] $end
$var wire 1 c! data_out [3] $end
$var wire 1 d! data_out [2] $end
$var wire 1 e! data_out [1] $end
$var wire 1 f! data_out [0] $end
$var wire 1 G$ data_in [15] $end
$var wire 1 H$ data_in [14] $end
$var wire 1 I$ data_in [13] $end
$var wire 1 J$ data_in [12] $end
$var wire 1 K$ data_in [11] $end
$var wire 1 L$ data_in [10] $end
$var wire 1 M$ data_in [9] $end
$var wire 1 N$ data_in [8] $end
$var wire 1 O$ data_in [7] $end
$var wire 1 P$ data_in [6] $end
$var wire 1 Q$ data_in [5] $end
$var wire 1 R$ data_in [4] $end
$var wire 1 S$ data_in [3] $end
$var wire 1 T$ data_in [2] $end
$var wire 1 U$ data_in [1] $end
$var wire 1 V$ data_in [0] $end
$var wire 1 G$ addr [15] $end
$var wire 1 H$ addr [14] $end
$var wire 1 I$ addr [13] $end
$var wire 1 J$ addr [12] $end
$var wire 1 K$ addr [11] $end
$var wire 1 L$ addr [10] $end
$var wire 1 M$ addr [9] $end
$var wire 1 N$ addr [8] $end
$var wire 1 O$ addr [7] $end
$var wire 1 P$ addr [6] $end
$var wire 1 Q$ addr [5] $end
$var wire 1 R$ addr [4] $end
$var wire 1 S$ addr [3] $end
$var wire 1 T$ addr [2] $end
$var wire 1 U$ addr [1] $end
$var wire 1 V$ addr [0] $end
$var wire 1 F$ enable $end
$var wire 1 E$ wr $end
$var wire 1 | createdump $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 g$ loaded $end
$var reg 17 h$ largest [16:0] $end
$var integer 32 i$ mcd $end
$var integer 32 j$ i $end
$upscope $end

$scope module incPC $end
$var parameter 32 k$ N $end
$var wire 1 G$ A [15] $end
$var wire 1 H$ A [14] $end
$var wire 1 I$ A [13] $end
$var wire 1 J$ A [12] $end
$var wire 1 K$ A [11] $end
$var wire 1 L$ A [10] $end
$var wire 1 M$ A [9] $end
$var wire 1 N$ A [8] $end
$var wire 1 O$ A [7] $end
$var wire 1 P$ A [6] $end
$var wire 1 Q$ A [5] $end
$var wire 1 R$ A [4] $end
$var wire 1 S$ A [3] $end
$var wire 1 T$ A [2] $end
$var wire 1 U$ A [1] $end
$var wire 1 V$ A [0] $end
$var wire 1 l$ B [15] $end
$var wire 1 m$ B [14] $end
$var wire 1 n$ B [13] $end
$var wire 1 o$ B [12] $end
$var wire 1 p$ B [11] $end
$var wire 1 q$ B [10] $end
$var wire 1 r$ B [9] $end
$var wire 1 s$ B [8] $end
$var wire 1 t$ B [7] $end
$var wire 1 u$ B [6] $end
$var wire 1 v$ B [5] $end
$var wire 1 w$ B [4] $end
$var wire 1 x$ B [3] $end
$var wire 1 y$ B [2] $end
$var wire 1 z$ B [1] $end
$var wire 1 {$ B [0] $end
$var wire 1 |$ C_in $end
$var wire 1 W$ S [15] $end
$var wire 1 X$ S [14] $end
$var wire 1 Y$ S [13] $end
$var wire 1 Z$ S [12] $end
$var wire 1 [$ S [11] $end
$var wire 1 \$ S [10] $end
$var wire 1 ]$ S [9] $end
$var wire 1 ^$ S [8] $end
$var wire 1 _$ S [7] $end
$var wire 1 `$ S [6] $end
$var wire 1 a$ S [5] $end
$var wire 1 b$ S [4] $end
$var wire 1 c$ S [3] $end
$var wire 1 d$ S [2] $end
$var wire 1 e$ S [1] $end
$var wire 1 f$ S [0] $end
$var wire 1 }$ C_out $end
$var wire 1 ~$ C0 $end
$var wire 1 !% C1 $end
$var wire 1 "% C2 $end
$var wire 1 #% P0 $end
$var wire 1 $% P0_bar $end
$var wire 1 %% P1 $end
$var wire 1 &% P1_bar $end
$var wire 1 '% P2 $end
$var wire 1 (% P2_bar $end
$var wire 1 )% P3 $end
$var wire 1 *% P3_bar $end
$var wire 1 +% G0 $end
$var wire 1 ,% G0_bar $end
$var wire 1 -% G1 $end
$var wire 1 .% G1_bar $end
$var wire 1 /% G2 $end
$var wire 1 0% G2_bar $end
$var wire 1 1% G3 $end
$var wire 1 2% G3_bar $end
$var wire 1 3% nand2_c0_0_out $end
$var wire 1 4% nand2_c1_0_out $end
$var wire 1 5% nand2_c2_0_out $end
$var wire 1 6% nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 7% N $end
$var wire 1 S$ A [3] $end
$var wire 1 T$ A [2] $end
$var wire 1 U$ A [1] $end
$var wire 1 V$ A [0] $end
$var wire 1 x$ B [3] $end
$var wire 1 y$ B [2] $end
$var wire 1 z$ B [1] $end
$var wire 1 {$ B [0] $end
$var wire 1 |$ C_in $end
$var wire 1 c$ S [3] $end
$var wire 1 d$ S [2] $end
$var wire 1 e$ S [1] $end
$var wire 1 f$ S [0] $end
$var wire 1 #% P $end
$var wire 1 +% G $end
$var wire 1 8% C_out $end
$var wire 1 9% c0 $end
$var wire 1 :% c1 $end
$var wire 1 ;% c2 $end
$var wire 1 <% p0 $end
$var wire 1 =% g0 $end
$var wire 1 >% p1 $end
$var wire 1 ?% g1 $end
$var wire 1 @% p2 $end
$var wire 1 A% g2 $end
$var wire 1 B% p3 $end
$var wire 1 C% g3 $end
$var wire 1 D% g0_bar $end
$var wire 1 E% g1_bar $end
$var wire 1 F% g2_bar $end
$var wire 1 G% g3_bar $end
$var wire 1 H% nand2_c0_0_out $end
$var wire 1 I% nand2_c1_0_out $end
$var wire 1 J% nand2_c2_0_out $end
$var wire 1 K% nand2_c3_0_out $end
$var wire 1 L% nand2_p3_p2 $end
$var wire 1 M% nand2_p1_p0 $end
$var wire 1 N% nand2_p3g2_out $end
$var wire 1 O% nand2_p3p2g1_out $end
$var wire 1 P% nand3_G_0_out $end
$var wire 1 Q% nand2_p1g0_out $end
$var wire 1 R% nor2_G_0_out $end
$var wire 1 S% G_bar $end

$scope module not1_c0_0 $end
$var wire 1 =% in1 $end
$var wire 1 D% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 <% in1 $end
$var wire 1 |$ in2 $end
$var wire 1 H% out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 D% in1 $end
$var wire 1 H% in2 $end
$var wire 1 9% out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 ?% in1 $end
$var wire 1 E% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 >% in1 $end
$var wire 1 9% in2 $end
$var wire 1 I% out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 E% in1 $end
$var wire 1 I% in2 $end
$var wire 1 :% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 A% in1 $end
$var wire 1 F% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 @% in1 $end
$var wire 1 :% in2 $end
$var wire 1 J% out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 F% in1 $end
$var wire 1 J% in2 $end
$var wire 1 ;% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 C% in1 $end
$var wire 1 G% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 B% in1 $end
$var wire 1 ;% in2 $end
$var wire 1 K% out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 G% in1 $end
$var wire 1 K% in2 $end
$var wire 1 8% out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 B% in1 $end
$var wire 1 @% in2 $end
$var wire 1 L% out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 >% in1 $end
$var wire 1 <% in2 $end
$var wire 1 M% out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 L% in1 $end
$var wire 1 M% in2 $end
$var wire 1 #% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 B% in1 $end
$var wire 1 A% in2 $end
$var wire 1 N% out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 B% in1 $end
$var wire 1 @% in2 $end
$var wire 1 ?% in3 $end
$var wire 1 O% out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 G% in1 $end
$var wire 1 N% in2 $end
$var wire 1 O% in3 $end
$var wire 1 P% out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 >% in1 $end
$var wire 1 =% in2 $end
$var wire 1 Q% out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 L% in1 $end
$var wire 1 Q% in2 $end
$var wire 1 R% out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 P% in1 $end
$var wire 1 R% in2 $end
$var wire 1 S% out $end
$upscope $end

$scope module not1_G $end
$var wire 1 S% in1 $end
$var wire 1 +% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 V$ A $end
$var wire 1 {$ B $end
$var wire 1 |$ C_in $end
$var wire 1 <% p $end
$var wire 1 =% g $end
$var wire 1 f$ S $end
$var wire 1 T% C_out $end
$var wire 1 U% g_bar $end
$var wire 1 V% p_bar $end
$var wire 1 W% nand2_1_out $end
$var wire 1 X% nand2_2_out $end
$var wire 1 Y% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 U% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 U% in1 $end
$var wire 1 =% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 V% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 V% in1 $end
$var wire 1 <% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 W% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 X% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 {$ in1 $end
$var wire 1 |$ in2 $end
$var wire 1 Y% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 W% in1 $end
$var wire 1 X% in2 $end
$var wire 1 Y% in3 $end
$var wire 1 T% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 |$ in3 $end
$var wire 1 f$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 U$ A $end
$var wire 1 z$ B $end
$var wire 1 9% C_in $end
$var wire 1 >% p $end
$var wire 1 ?% g $end
$var wire 1 e$ S $end
$var wire 1 Z% C_out $end
$var wire 1 [% g_bar $end
$var wire 1 \% p_bar $end
$var wire 1 ]% nand2_1_out $end
$var wire 1 ^% nand2_2_out $end
$var wire 1 _% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 [% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 [% in1 $end
$var wire 1 ?% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 \% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 \% in1 $end
$var wire 1 >% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 ]% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U$ in1 $end
$var wire 1 9% in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 z$ in1 $end
$var wire 1 9% in2 $end
$var wire 1 _% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ]% in1 $end
$var wire 1 ^% in2 $end
$var wire 1 _% in3 $end
$var wire 1 Z% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U$ in1 $end
$var wire 1 z$ in2 $end
$var wire 1 9% in3 $end
$var wire 1 e$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 T$ A $end
$var wire 1 y$ B $end
$var wire 1 :% C_in $end
$var wire 1 @% p $end
$var wire 1 A% g $end
$var wire 1 d$ S $end
$var wire 1 `% C_out $end
$var wire 1 a% g_bar $end
$var wire 1 b% p_bar $end
$var wire 1 c% nand2_1_out $end
$var wire 1 d% nand2_2_out $end
$var wire 1 e% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 a% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 a% in1 $end
$var wire 1 A% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 b% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 b% in1 $end
$var wire 1 @% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 c% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T$ in1 $end
$var wire 1 :% in2 $end
$var wire 1 d% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 y$ in1 $end
$var wire 1 :% in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 c% in1 $end
$var wire 1 d% in2 $end
$var wire 1 e% in3 $end
$var wire 1 `% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T$ in1 $end
$var wire 1 y$ in2 $end
$var wire 1 :% in3 $end
$var wire 1 d$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 S$ A $end
$var wire 1 x$ B $end
$var wire 1 ;% C_in $end
$var wire 1 B% p $end
$var wire 1 C% g $end
$var wire 1 c$ S $end
$var wire 1 f% C_out $end
$var wire 1 g% g_bar $end
$var wire 1 h% p_bar $end
$var wire 1 i% nand2_1_out $end
$var wire 1 j% nand2_2_out $end
$var wire 1 k% nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 g% out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 g% in1 $end
$var wire 1 C% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 h% out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 h% in1 $end
$var wire 1 B% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S$ in1 $end
$var wire 1 ;% in2 $end
$var wire 1 j% out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 x$ in1 $end
$var wire 1 ;% in2 $end
$var wire 1 k% out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 i% in1 $end
$var wire 1 j% in2 $end
$var wire 1 k% in3 $end
$var wire 1 f% out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S$ in1 $end
$var wire 1 x$ in2 $end
$var wire 1 ;% in3 $end
$var wire 1 c$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 l% N $end
$var wire 1 O$ A [3] $end
$var wire 1 P$ A [2] $end
$var wire 1 Q$ A [1] $end
$var wire 1 R$ A [0] $end
$var wire 1 t$ B [3] $end
$var wire 1 u$ B [2] $end
$var wire 1 v$ B [1] $end
$var wire 1 w$ B [0] $end
$var wire 1 ~$ C_in $end
$var wire 1 _$ S [3] $end
$var wire 1 `$ S [2] $end
$var wire 1 a$ S [1] $end
$var wire 1 b$ S [0] $end
$var wire 1 %% P $end
$var wire 1 -% G $end
$var wire 1 m% C_out $end
$var wire 1 n% c0 $end
$var wire 1 o% c1 $end
$var wire 1 p% c2 $end
$var wire 1 q% p0 $end
$var wire 1 r% g0 $end
$var wire 1 s% p1 $end
$var wire 1 t% g1 $end
$var wire 1 u% p2 $end
$var wire 1 v% g2 $end
$var wire 1 w% p3 $end
$var wire 1 x% g3 $end
$var wire 1 y% g0_bar $end
$var wire 1 z% g1_bar $end
$var wire 1 {% g2_bar $end
$var wire 1 |% g3_bar $end
$var wire 1 }% nand2_c0_0_out $end
$var wire 1 ~% nand2_c1_0_out $end
$var wire 1 !& nand2_c2_0_out $end
$var wire 1 "& nand2_c3_0_out $end
$var wire 1 #& nand2_p3_p2 $end
$var wire 1 $& nand2_p1_p0 $end
$var wire 1 %& nand2_p3g2_out $end
$var wire 1 && nand2_p3p2g1_out $end
$var wire 1 '& nand3_G_0_out $end
$var wire 1 (& nand2_p1g0_out $end
$var wire 1 )& nor2_G_0_out $end
$var wire 1 *& G_bar $end

$scope module not1_c0_0 $end
$var wire 1 r% in1 $end
$var wire 1 y% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 q% in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 }% out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 y% in1 $end
$var wire 1 }% in2 $end
$var wire 1 n% out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 t% in1 $end
$var wire 1 z% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 s% in1 $end
$var wire 1 n% in2 $end
$var wire 1 ~% out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 z% in1 $end
$var wire 1 ~% in2 $end
$var wire 1 o% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 v% in1 $end
$var wire 1 {% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 u% in1 $end
$var wire 1 o% in2 $end
$var wire 1 !& out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 {% in1 $end
$var wire 1 !& in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 x% in1 $end
$var wire 1 |% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 w% in1 $end
$var wire 1 p% in2 $end
$var wire 1 "& out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 |% in1 $end
$var wire 1 "& in2 $end
$var wire 1 m% out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 w% in1 $end
$var wire 1 u% in2 $end
$var wire 1 #& out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 s% in1 $end
$var wire 1 q% in2 $end
$var wire 1 $& out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 #& in1 $end
$var wire 1 $& in2 $end
$var wire 1 %% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 w% in1 $end
$var wire 1 v% in2 $end
$var wire 1 %& out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 w% in1 $end
$var wire 1 u% in2 $end
$var wire 1 t% in3 $end
$var wire 1 && out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 |% in1 $end
$var wire 1 %& in2 $end
$var wire 1 && in3 $end
$var wire 1 '& out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 s% in1 $end
$var wire 1 r% in2 $end
$var wire 1 (& out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 #& in1 $end
$var wire 1 (& in2 $end
$var wire 1 )& out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 '& in1 $end
$var wire 1 )& in2 $end
$var wire 1 *& out $end
$upscope $end

$scope module not1_G $end
$var wire 1 *& in1 $end
$var wire 1 -% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 R$ A $end
$var wire 1 w$ B $end
$var wire 1 ~$ C_in $end
$var wire 1 q% p $end
$var wire 1 r% g $end
$var wire 1 b$ S $end
$var wire 1 +& C_out $end
$var wire 1 ,& g_bar $end
$var wire 1 -& p_bar $end
$var wire 1 .& nand2_1_out $end
$var wire 1 /& nand2_2_out $end
$var wire 1 0& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ,& in1 $end
$var wire 1 r% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 -& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 -& in1 $end
$var wire 1 q% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 .& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R$ in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 /& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 w$ in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 0& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 .& in1 $end
$var wire 1 /& in2 $end
$var wire 1 0& in3 $end
$var wire 1 +& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R$ in1 $end
$var wire 1 w$ in2 $end
$var wire 1 ~$ in3 $end
$var wire 1 b$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 Q$ A $end
$var wire 1 v$ B $end
$var wire 1 n% C_in $end
$var wire 1 s% p $end
$var wire 1 t% g $end
$var wire 1 a$ S $end
$var wire 1 1& C_out $end
$var wire 1 2& g_bar $end
$var wire 1 3& p_bar $end
$var wire 1 4& nand2_1_out $end
$var wire 1 5& nand2_2_out $end
$var wire 1 6& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 2& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 2& in1 $end
$var wire 1 t% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 3& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 3& in1 $end
$var wire 1 s% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 4& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Q$ in1 $end
$var wire 1 n% in2 $end
$var wire 1 5& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 v$ in1 $end
$var wire 1 n% in2 $end
$var wire 1 6& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 4& in1 $end
$var wire 1 5& in2 $end
$var wire 1 6& in3 $end
$var wire 1 1& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Q$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 n% in3 $end
$var wire 1 a$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 P$ A $end
$var wire 1 u$ B $end
$var wire 1 o% C_in $end
$var wire 1 u% p $end
$var wire 1 v% g $end
$var wire 1 `$ S $end
$var wire 1 7& C_out $end
$var wire 1 8& g_bar $end
$var wire 1 9& p_bar $end
$var wire 1 :& nand2_1_out $end
$var wire 1 ;& nand2_2_out $end
$var wire 1 <& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 8& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 8& in1 $end
$var wire 1 v% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 9& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 9& in1 $end
$var wire 1 u% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 :& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 P$ in1 $end
$var wire 1 o% in2 $end
$var wire 1 ;& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 u$ in1 $end
$var wire 1 o% in2 $end
$var wire 1 <& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 :& in1 $end
$var wire 1 ;& in2 $end
$var wire 1 <& in3 $end
$var wire 1 7& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 P$ in1 $end
$var wire 1 u$ in2 $end
$var wire 1 o% in3 $end
$var wire 1 `$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 O$ A $end
$var wire 1 t$ B $end
$var wire 1 p% C_in $end
$var wire 1 w% p $end
$var wire 1 x% g $end
$var wire 1 _$ S $end
$var wire 1 =& C_out $end
$var wire 1 >& g_bar $end
$var wire 1 ?& p_bar $end
$var wire 1 @& nand2_1_out $end
$var wire 1 A& nand2_2_out $end
$var wire 1 B& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 >& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 >& in1 $end
$var wire 1 x% out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 ?& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ?& in1 $end
$var wire 1 w% out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 @& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 O$ in1 $end
$var wire 1 p% in2 $end
$var wire 1 A& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 t$ in1 $end
$var wire 1 p% in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 @& in1 $end
$var wire 1 A& in2 $end
$var wire 1 B& in3 $end
$var wire 1 =& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 O$ in1 $end
$var wire 1 t$ in2 $end
$var wire 1 p% in3 $end
$var wire 1 _$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 C& N $end
$var wire 1 K$ A [3] $end
$var wire 1 L$ A [2] $end
$var wire 1 M$ A [1] $end
$var wire 1 N$ A [0] $end
$var wire 1 p$ B [3] $end
$var wire 1 q$ B [2] $end
$var wire 1 r$ B [1] $end
$var wire 1 s$ B [0] $end
$var wire 1 !% C_in $end
$var wire 1 [$ S [3] $end
$var wire 1 \$ S [2] $end
$var wire 1 ]$ S [1] $end
$var wire 1 ^$ S [0] $end
$var wire 1 '% P $end
$var wire 1 /% G $end
$var wire 1 D& C_out $end
$var wire 1 E& c0 $end
$var wire 1 F& c1 $end
$var wire 1 G& c2 $end
$var wire 1 H& p0 $end
$var wire 1 I& g0 $end
$var wire 1 J& p1 $end
$var wire 1 K& g1 $end
$var wire 1 L& p2 $end
$var wire 1 M& g2 $end
$var wire 1 N& p3 $end
$var wire 1 O& g3 $end
$var wire 1 P& g0_bar $end
$var wire 1 Q& g1_bar $end
$var wire 1 R& g2_bar $end
$var wire 1 S& g3_bar $end
$var wire 1 T& nand2_c0_0_out $end
$var wire 1 U& nand2_c1_0_out $end
$var wire 1 V& nand2_c2_0_out $end
$var wire 1 W& nand2_c3_0_out $end
$var wire 1 X& nand2_p3_p2 $end
$var wire 1 Y& nand2_p1_p0 $end
$var wire 1 Z& nand2_p3g2_out $end
$var wire 1 [& nand2_p3p2g1_out $end
$var wire 1 \& nand3_G_0_out $end
$var wire 1 ]& nand2_p1g0_out $end
$var wire 1 ^& nor2_G_0_out $end
$var wire 1 _& G_bar $end

$scope module not1_c0_0 $end
$var wire 1 I& in1 $end
$var wire 1 P& out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 H& in1 $end
$var wire 1 !% in2 $end
$var wire 1 T& out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 P& in1 $end
$var wire 1 T& in2 $end
$var wire 1 E& out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 K& in1 $end
$var wire 1 Q& out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 J& in1 $end
$var wire 1 E& in2 $end
$var wire 1 U& out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 Q& in1 $end
$var wire 1 U& in2 $end
$var wire 1 F& out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 M& in1 $end
$var wire 1 R& out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 L& in1 $end
$var wire 1 F& in2 $end
$var wire 1 V& out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 R& in1 $end
$var wire 1 V& in2 $end
$var wire 1 G& out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 O& in1 $end
$var wire 1 S& out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 N& in1 $end
$var wire 1 G& in2 $end
$var wire 1 W& out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 S& in1 $end
$var wire 1 W& in2 $end
$var wire 1 D& out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 N& in1 $end
$var wire 1 L& in2 $end
$var wire 1 X& out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 J& in1 $end
$var wire 1 H& in2 $end
$var wire 1 Y& out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 X& in1 $end
$var wire 1 Y& in2 $end
$var wire 1 '% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 N& in1 $end
$var wire 1 M& in2 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 N& in1 $end
$var wire 1 L& in2 $end
$var wire 1 K& in3 $end
$var wire 1 [& out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 S& in1 $end
$var wire 1 Z& in2 $end
$var wire 1 [& in3 $end
$var wire 1 \& out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 J& in1 $end
$var wire 1 I& in2 $end
$var wire 1 ]& out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 X& in1 $end
$var wire 1 ]& in2 $end
$var wire 1 ^& out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 \& in1 $end
$var wire 1 ^& in2 $end
$var wire 1 _& out $end
$upscope $end

$scope module not1_G $end
$var wire 1 _& in1 $end
$var wire 1 /% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 N$ A $end
$var wire 1 s$ B $end
$var wire 1 !% C_in $end
$var wire 1 H& p $end
$var wire 1 I& g $end
$var wire 1 ^$ S $end
$var wire 1 `& C_out $end
$var wire 1 a& g_bar $end
$var wire 1 b& p_bar $end
$var wire 1 c& nand2_1_out $end
$var wire 1 d& nand2_2_out $end
$var wire 1 e& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 a& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 a& in1 $end
$var wire 1 I& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 b& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 b& in1 $end
$var wire 1 H& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 c& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 N$ in1 $end
$var wire 1 !% in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 s$ in1 $end
$var wire 1 !% in2 $end
$var wire 1 e& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 c& in1 $end
$var wire 1 d& in2 $end
$var wire 1 e& in3 $end
$var wire 1 `& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 N$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 !% in3 $end
$var wire 1 ^$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 M$ A $end
$var wire 1 r$ B $end
$var wire 1 E& C_in $end
$var wire 1 J& p $end
$var wire 1 K& g $end
$var wire 1 ]$ S $end
$var wire 1 f& C_out $end
$var wire 1 g& g_bar $end
$var wire 1 h& p_bar $end
$var wire 1 i& nand2_1_out $end
$var wire 1 j& nand2_2_out $end
$var wire 1 k& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 g& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 g& in1 $end
$var wire 1 K& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 h& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 h& in1 $end
$var wire 1 J& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 i& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 M$ in1 $end
$var wire 1 E& in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 r$ in1 $end
$var wire 1 E& in2 $end
$var wire 1 k& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 i& in1 $end
$var wire 1 j& in2 $end
$var wire 1 k& in3 $end
$var wire 1 f& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 M$ in1 $end
$var wire 1 r$ in2 $end
$var wire 1 E& in3 $end
$var wire 1 ]$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 L$ A $end
$var wire 1 q$ B $end
$var wire 1 F& C_in $end
$var wire 1 L& p $end
$var wire 1 M& g $end
$var wire 1 \$ S $end
$var wire 1 l& C_out $end
$var wire 1 m& g_bar $end
$var wire 1 n& p_bar $end
$var wire 1 o& nand2_1_out $end
$var wire 1 p& nand2_2_out $end
$var wire 1 q& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 m& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 m& in1 $end
$var wire 1 M& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 n& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 n& in1 $end
$var wire 1 L& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 o& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 L$ in1 $end
$var wire 1 F& in2 $end
$var wire 1 p& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 q$ in1 $end
$var wire 1 F& in2 $end
$var wire 1 q& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 o& in1 $end
$var wire 1 p& in2 $end
$var wire 1 q& in3 $end
$var wire 1 l& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 L$ in1 $end
$var wire 1 q$ in2 $end
$var wire 1 F& in3 $end
$var wire 1 \$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 K$ A $end
$var wire 1 p$ B $end
$var wire 1 G& C_in $end
$var wire 1 N& p $end
$var wire 1 O& g $end
$var wire 1 [$ S $end
$var wire 1 r& C_out $end
$var wire 1 s& g_bar $end
$var wire 1 t& p_bar $end
$var wire 1 u& nand2_1_out $end
$var wire 1 v& nand2_2_out $end
$var wire 1 w& nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 s& out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 s& in1 $end
$var wire 1 O& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 t& out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 t& in1 $end
$var wire 1 N& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 u& out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 K$ in1 $end
$var wire 1 G& in2 $end
$var wire 1 v& out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 p$ in1 $end
$var wire 1 G& in2 $end
$var wire 1 w& out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 u& in1 $end
$var wire 1 v& in2 $end
$var wire 1 w& in3 $end
$var wire 1 r& out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 K$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 G& in3 $end
$var wire 1 [$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 x& N $end
$var wire 1 G$ A [3] $end
$var wire 1 H$ A [2] $end
$var wire 1 I$ A [1] $end
$var wire 1 J$ A [0] $end
$var wire 1 l$ B [3] $end
$var wire 1 m$ B [2] $end
$var wire 1 n$ B [1] $end
$var wire 1 o$ B [0] $end
$var wire 1 "% C_in $end
$var wire 1 W$ S [3] $end
$var wire 1 X$ S [2] $end
$var wire 1 Y$ S [1] $end
$var wire 1 Z$ S [0] $end
$var wire 1 )% P $end
$var wire 1 1% G $end
$var wire 1 y& C_out $end
$var wire 1 z& c0 $end
$var wire 1 {& c1 $end
$var wire 1 |& c2 $end
$var wire 1 }& p0 $end
$var wire 1 ~& g0 $end
$var wire 1 !' p1 $end
$var wire 1 "' g1 $end
$var wire 1 #' p2 $end
$var wire 1 $' g2 $end
$var wire 1 %' p3 $end
$var wire 1 &' g3 $end
$var wire 1 '' g0_bar $end
$var wire 1 (' g1_bar $end
$var wire 1 )' g2_bar $end
$var wire 1 *' g3_bar $end
$var wire 1 +' nand2_c0_0_out $end
$var wire 1 ,' nand2_c1_0_out $end
$var wire 1 -' nand2_c2_0_out $end
$var wire 1 .' nand2_c3_0_out $end
$var wire 1 /' nand2_p3_p2 $end
$var wire 1 0' nand2_p1_p0 $end
$var wire 1 1' nand2_p3g2_out $end
$var wire 1 2' nand2_p3p2g1_out $end
$var wire 1 3' nand3_G_0_out $end
$var wire 1 4' nand2_p1g0_out $end
$var wire 1 5' nor2_G_0_out $end
$var wire 1 6' G_bar $end

$scope module not1_c0_0 $end
$var wire 1 ~& in1 $end
$var wire 1 '' out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 }& in1 $end
$var wire 1 "% in2 $end
$var wire 1 +' out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 '' in1 $end
$var wire 1 +' in2 $end
$var wire 1 z& out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 "' in1 $end
$var wire 1 (' out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 !' in1 $end
$var wire 1 z& in2 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 (' in1 $end
$var wire 1 ,' in2 $end
$var wire 1 {& out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 $' in1 $end
$var wire 1 )' out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 #' in1 $end
$var wire 1 {& in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 )' in1 $end
$var wire 1 -' in2 $end
$var wire 1 |& out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 &' in1 $end
$var wire 1 *' out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 %' in1 $end
$var wire 1 |& in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 *' in1 $end
$var wire 1 .' in2 $end
$var wire 1 y& out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 %' in1 $end
$var wire 1 #' in2 $end
$var wire 1 /' out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 !' in1 $end
$var wire 1 }& in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 /' in1 $end
$var wire 1 0' in2 $end
$var wire 1 )% out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 %' in1 $end
$var wire 1 $' in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 %' in1 $end
$var wire 1 #' in2 $end
$var wire 1 "' in3 $end
$var wire 1 2' out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 *' in1 $end
$var wire 1 1' in2 $end
$var wire 1 2' in3 $end
$var wire 1 3' out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 !' in1 $end
$var wire 1 ~& in2 $end
$var wire 1 4' out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 /' in1 $end
$var wire 1 4' in2 $end
$var wire 1 5' out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 3' in1 $end
$var wire 1 5' in2 $end
$var wire 1 6' out $end
$upscope $end

$scope module not1_G $end
$var wire 1 6' in1 $end
$var wire 1 1% out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 J$ A $end
$var wire 1 o$ B $end
$var wire 1 "% C_in $end
$var wire 1 }& p $end
$var wire 1 ~& g $end
$var wire 1 Z$ S $end
$var wire 1 7' C_out $end
$var wire 1 8' g_bar $end
$var wire 1 9' p_bar $end
$var wire 1 :' nand2_1_out $end
$var wire 1 ;' nand2_2_out $end
$var wire 1 <' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 8' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 8' in1 $end
$var wire 1 ~& out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 9' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 9' in1 $end
$var wire 1 }& out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 :' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 J$ in1 $end
$var wire 1 "% in2 $end
$var wire 1 ;' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 o$ in1 $end
$var wire 1 "% in2 $end
$var wire 1 <' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 :' in1 $end
$var wire 1 ;' in2 $end
$var wire 1 <' in3 $end
$var wire 1 7' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 J$ in1 $end
$var wire 1 o$ in2 $end
$var wire 1 "% in3 $end
$var wire 1 Z$ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 I$ A $end
$var wire 1 n$ B $end
$var wire 1 z& C_in $end
$var wire 1 !' p $end
$var wire 1 "' g $end
$var wire 1 Y$ S $end
$var wire 1 =' C_out $end
$var wire 1 >' g_bar $end
$var wire 1 ?' p_bar $end
$var wire 1 @' nand2_1_out $end
$var wire 1 A' nand2_2_out $end
$var wire 1 B' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 >' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 >' in1 $end
$var wire 1 "' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 ?' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ?' in1 $end
$var wire 1 !' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 @' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 I$ in1 $end
$var wire 1 z& in2 $end
$var wire 1 A' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 n$ in1 $end
$var wire 1 z& in2 $end
$var wire 1 B' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 @' in1 $end
$var wire 1 A' in2 $end
$var wire 1 B' in3 $end
$var wire 1 =' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 I$ in1 $end
$var wire 1 n$ in2 $end
$var wire 1 z& in3 $end
$var wire 1 Y$ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 H$ A $end
$var wire 1 m$ B $end
$var wire 1 {& C_in $end
$var wire 1 #' p $end
$var wire 1 $' g $end
$var wire 1 X$ S $end
$var wire 1 C' C_out $end
$var wire 1 D' g_bar $end
$var wire 1 E' p_bar $end
$var wire 1 F' nand2_1_out $end
$var wire 1 G' nand2_2_out $end
$var wire 1 H' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 H$ in1 $end
$var wire 1 m$ in2 $end
$var wire 1 D' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 D' in1 $end
$var wire 1 $' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 H$ in1 $end
$var wire 1 m$ in2 $end
$var wire 1 E' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 E' in1 $end
$var wire 1 #' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 H$ in1 $end
$var wire 1 m$ in2 $end
$var wire 1 F' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 H$ in1 $end
$var wire 1 {& in2 $end
$var wire 1 G' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 m$ in1 $end
$var wire 1 {& in2 $end
$var wire 1 H' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 F' in1 $end
$var wire 1 G' in2 $end
$var wire 1 H' in3 $end
$var wire 1 C' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 H$ in1 $end
$var wire 1 m$ in2 $end
$var wire 1 {& in3 $end
$var wire 1 X$ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 G$ A $end
$var wire 1 l$ B $end
$var wire 1 |& C_in $end
$var wire 1 %' p $end
$var wire 1 &' g $end
$var wire 1 W$ S $end
$var wire 1 I' C_out $end
$var wire 1 J' g_bar $end
$var wire 1 K' p_bar $end
$var wire 1 L' nand2_1_out $end
$var wire 1 M' nand2_2_out $end
$var wire 1 N' nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 G$ in1 $end
$var wire 1 l$ in2 $end
$var wire 1 J' out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 J' in1 $end
$var wire 1 &' out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 G$ in1 $end
$var wire 1 l$ in2 $end
$var wire 1 K' out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 K' in1 $end
$var wire 1 %' out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 G$ in1 $end
$var wire 1 l$ in2 $end
$var wire 1 L' out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 G$ in1 $end
$var wire 1 |& in2 $end
$var wire 1 M' out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 l$ in1 $end
$var wire 1 |& in2 $end
$var wire 1 N' out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 L' in1 $end
$var wire 1 M' in2 $end
$var wire 1 N' in3 $end
$var wire 1 I' out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 G$ in1 $end
$var wire 1 l$ in2 $end
$var wire 1 |& in3 $end
$var wire 1 W$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 +% in1 $end
$var wire 1 ,% out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 #% in1 $end
$var wire 1 |$ in2 $end
$var wire 1 3% out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 ,% in1 $end
$var wire 1 3% in2 $end
$var wire 1 ~$ out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 -% in1 $end
$var wire 1 .% out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 %% in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 4% out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 .% in1 $end
$var wire 1 4% in2 $end
$var wire 1 !% out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 /% in1 $end
$var wire 1 0% out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 '% in1 $end
$var wire 1 !% in2 $end
$var wire 1 5% out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 0% in1 $end
$var wire 1 5% in2 $end
$var wire 1 "% out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 1% in1 $end
$var wire 1 2% out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 )% in1 $end
$var wire 1 "% in2 $end
$var wire 1 6% out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 2% in1 $end
$var wire 1 6% in2 $end
$var wire 1 }$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module decodeStage $end
$var wire 1 $! writeEn $end
$var wire 1 +! jump $end
$var wire 1 0! immCtl $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 2! slbi $end
$var wire 1 D! writeRegSel [2] $end
$var wire 1 E! writeRegSel [1] $end
$var wire 1 F! writeRegSel [0] $end
$var wire 1 >! read1RegSel [2] $end
$var wire 1 ?! read1RegSel [1] $end
$var wire 1 @! read1RegSel [0] $end
$var wire 1 A! read2RegSel [2] $end
$var wire 1 B! read2RegSel [1] $end
$var wire 1 C! read2RegSel [0] $end
$var wire 1 k# writeData [15] $end
$var wire 1 l# writeData [14] $end
$var wire 1 m# writeData [13] $end
$var wire 1 n# writeData [12] $end
$var wire 1 o# writeData [11] $end
$var wire 1 p# writeData [10] $end
$var wire 1 q# writeData [9] $end
$var wire 1 r# writeData [8] $end
$var wire 1 s# writeData [7] $end
$var wire 1 t# writeData [6] $end
$var wire 1 u# writeData [5] $end
$var wire 1 v# writeData [4] $end
$var wire 1 w# writeData [3] $end
$var wire 1 x# writeData [2] $end
$var wire 1 y# writeData [1] $end
$var wire 1 z# writeData [0] $end
$var wire 1 G! immVal [15] $end
$var wire 1 H! immVal [14] $end
$var wire 1 I! immVal [13] $end
$var wire 1 J! immVal [12] $end
$var wire 1 K! immVal [11] $end
$var wire 1 L! immVal [10] $end
$var wire 1 M! immVal [9] $end
$var wire 1 N! immVal [8] $end
$var wire 1 O! immVal [7] $end
$var wire 1 P! immVal [6] $end
$var wire 1 Q! immVal [5] $end
$var wire 1 R! immVal [4] $end
$var wire 1 S! immVal [3] $end
$var wire 1 T! immVal [2] $end
$var wire 1 U! immVal [1] $end
$var wire 1 V! immVal [0] $end
$var wire 1 5! err $end
$var wire 1 ;# read1Data [15] $end
$var wire 1 <# read1Data [14] $end
$var wire 1 =# read1Data [13] $end
$var wire 1 ># read1Data [12] $end
$var wire 1 ?# read1Data [11] $end
$var wire 1 @# read1Data [10] $end
$var wire 1 A# read1Data [9] $end
$var wire 1 B# read1Data [8] $end
$var wire 1 C# read1Data [7] $end
$var wire 1 D# read1Data [6] $end
$var wire 1 E# read1Data [5] $end
$var wire 1 F# read1Data [4] $end
$var wire 1 G# read1Data [3] $end
$var wire 1 H# read1Data [2] $end
$var wire 1 I# read1Data [1] $end
$var wire 1 J# read1Data [0] $end
$var wire 1 K# read2Data [15] $end
$var wire 1 L# read2Data [14] $end
$var wire 1 M# read2Data [13] $end
$var wire 1 N# read2Data [12] $end
$var wire 1 O# read2Data [11] $end
$var wire 1 P# read2Data [10] $end
$var wire 1 Q# read2Data [9] $end
$var wire 1 R# read2Data [8] $end
$var wire 1 S# read2Data [7] $end
$var wire 1 T# read2Data [6] $end
$var wire 1 U# read2Data [5] $end
$var wire 1 V# read2Data [4] $end
$var wire 1 W# read2Data [3] $end
$var wire 1 X# read2Data [2] $end
$var wire 1 Y# read2Data [1] $end
$var wire 1 Z# read2Data [0] $end
$var wire 1 ;! regRs [2] $end
$var wire 1 <! regRs [1] $end
$var wire 1 =! regRs [0] $end
$var wire 1 w! signedImmVal [15] $end
$var wire 1 x! signedImmVal [14] $end
$var wire 1 y! signedImmVal [13] $end
$var wire 1 z! signedImmVal [12] $end
$var wire 1 {! signedImmVal [11] $end
$var wire 1 |! signedImmVal [10] $end
$var wire 1 }! signedImmVal [9] $end
$var wire 1 ~! signedImmVal [8] $end
$var wire 1 !" signedImmVal [7] $end
$var wire 1 "" signedImmVal [6] $end
$var wire 1 #" signedImmVal [5] $end
$var wire 1 $" signedImmVal [4] $end
$var wire 1 %" signedImmVal [3] $end
$var wire 1 &" signedImmVal [2] $end
$var wire 1 '" signedImmVal [1] $end
$var wire 1 (" signedImmVal [0] $end

$scope module decodeRegisters $end
$var parameter 32 O' N $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 >! read1RegSel [2] $end
$var wire 1 ?! read1RegSel [1] $end
$var wire 1 @! read1RegSel [0] $end
$var wire 1 A! read2RegSel [2] $end
$var wire 1 B! read2RegSel [1] $end
$var wire 1 C! read2RegSel [0] $end
$var wire 1 D! writeRegSel [2] $end
$var wire 1 E! writeRegSel [1] $end
$var wire 1 F! writeRegSel [0] $end
$var wire 1 k# writeData [15] $end
$var wire 1 l# writeData [14] $end
$var wire 1 m# writeData [13] $end
$var wire 1 n# writeData [12] $end
$var wire 1 o# writeData [11] $end
$var wire 1 p# writeData [10] $end
$var wire 1 q# writeData [9] $end
$var wire 1 r# writeData [8] $end
$var wire 1 s# writeData [7] $end
$var wire 1 t# writeData [6] $end
$var wire 1 u# writeData [5] $end
$var wire 1 v# writeData [4] $end
$var wire 1 w# writeData [3] $end
$var wire 1 x# writeData [2] $end
$var wire 1 y# writeData [1] $end
$var wire 1 z# writeData [0] $end
$var wire 1 $! writeEn $end
$var wire 1 ;# read1Data [15] $end
$var wire 1 <# read1Data [14] $end
$var wire 1 =# read1Data [13] $end
$var wire 1 ># read1Data [12] $end
$var wire 1 ?# read1Data [11] $end
$var wire 1 @# read1Data [10] $end
$var wire 1 A# read1Data [9] $end
$var wire 1 B# read1Data [8] $end
$var wire 1 C# read1Data [7] $end
$var wire 1 D# read1Data [6] $end
$var wire 1 E# read1Data [5] $end
$var wire 1 F# read1Data [4] $end
$var wire 1 G# read1Data [3] $end
$var wire 1 H# read1Data [2] $end
$var wire 1 I# read1Data [1] $end
$var wire 1 J# read1Data [0] $end
$var wire 1 K# read2Data [15] $end
$var wire 1 L# read2Data [14] $end
$var wire 1 M# read2Data [13] $end
$var wire 1 N# read2Data [12] $end
$var wire 1 O# read2Data [11] $end
$var wire 1 P# read2Data [10] $end
$var wire 1 Q# read2Data [9] $end
$var wire 1 R# read2Data [8] $end
$var wire 1 S# read2Data [7] $end
$var wire 1 T# read2Data [6] $end
$var wire 1 U# read2Data [5] $end
$var wire 1 V# read2Data [4] $end
$var wire 1 W# read2Data [3] $end
$var wire 1 X# read2Data [2] $end
$var wire 1 Y# read2Data [1] $end
$var wire 1 Z# read2Data [0] $end
$var wire 1 5! err $end
$var wire 1 P' writedec_out [7] $end
$var wire 1 Q' writedec_out [6] $end
$var wire 1 R' writedec_out [5] $end
$var wire 1 S' writedec_out [4] $end
$var wire 1 T' writedec_out [3] $end
$var wire 1 U' writedec_out [2] $end
$var wire 1 V' writedec_out [1] $end
$var wire 1 W' writedec_out [0] $end
$var wire 1 X' writeRegSel_dec [7] $end
$var wire 1 Y' writeRegSel_dec [6] $end
$var wire 1 Z' writeRegSel_dec [5] $end
$var wire 1 [' writeRegSel_dec [4] $end
$var wire 1 \' writeRegSel_dec [3] $end
$var wire 1 ]' writeRegSel_dec [2] $end
$var wire 1 ^' writeRegSel_dec [1] $end
$var wire 1 _' writeRegSel_dec [0] $end
$var wire 1 `' R0_out [15] $end
$var wire 1 a' R0_out [14] $end
$var wire 1 b' R0_out [13] $end
$var wire 1 c' R0_out [12] $end
$var wire 1 d' R0_out [11] $end
$var wire 1 e' R0_out [10] $end
$var wire 1 f' R0_out [9] $end
$var wire 1 g' R0_out [8] $end
$var wire 1 h' R0_out [7] $end
$var wire 1 i' R0_out [6] $end
$var wire 1 j' R0_out [5] $end
$var wire 1 k' R0_out [4] $end
$var wire 1 l' R0_out [3] $end
$var wire 1 m' R0_out [2] $end
$var wire 1 n' R0_out [1] $end
$var wire 1 o' R0_out [0] $end
$var wire 1 p' R1_out [15] $end
$var wire 1 q' R1_out [14] $end
$var wire 1 r' R1_out [13] $end
$var wire 1 s' R1_out [12] $end
$var wire 1 t' R1_out [11] $end
$var wire 1 u' R1_out [10] $end
$var wire 1 v' R1_out [9] $end
$var wire 1 w' R1_out [8] $end
$var wire 1 x' R1_out [7] $end
$var wire 1 y' R1_out [6] $end
$var wire 1 z' R1_out [5] $end
$var wire 1 {' R1_out [4] $end
$var wire 1 |' R1_out [3] $end
$var wire 1 }' R1_out [2] $end
$var wire 1 ~' R1_out [1] $end
$var wire 1 !( R1_out [0] $end
$var wire 1 "( R2_out [15] $end
$var wire 1 #( R2_out [14] $end
$var wire 1 $( R2_out [13] $end
$var wire 1 %( R2_out [12] $end
$var wire 1 &( R2_out [11] $end
$var wire 1 '( R2_out [10] $end
$var wire 1 (( R2_out [9] $end
$var wire 1 )( R2_out [8] $end
$var wire 1 *( R2_out [7] $end
$var wire 1 +( R2_out [6] $end
$var wire 1 ,( R2_out [5] $end
$var wire 1 -( R2_out [4] $end
$var wire 1 .( R2_out [3] $end
$var wire 1 /( R2_out [2] $end
$var wire 1 0( R2_out [1] $end
$var wire 1 1( R2_out [0] $end
$var wire 1 2( R3_out [15] $end
$var wire 1 3( R3_out [14] $end
$var wire 1 4( R3_out [13] $end
$var wire 1 5( R3_out [12] $end
$var wire 1 6( R3_out [11] $end
$var wire 1 7( R3_out [10] $end
$var wire 1 8( R3_out [9] $end
$var wire 1 9( R3_out [8] $end
$var wire 1 :( R3_out [7] $end
$var wire 1 ;( R3_out [6] $end
$var wire 1 <( R3_out [5] $end
$var wire 1 =( R3_out [4] $end
$var wire 1 >( R3_out [3] $end
$var wire 1 ?( R3_out [2] $end
$var wire 1 @( R3_out [1] $end
$var wire 1 A( R3_out [0] $end
$var wire 1 B( R4_out [15] $end
$var wire 1 C( R4_out [14] $end
$var wire 1 D( R4_out [13] $end
$var wire 1 E( R4_out [12] $end
$var wire 1 F( R4_out [11] $end
$var wire 1 G( R4_out [10] $end
$var wire 1 H( R4_out [9] $end
$var wire 1 I( R4_out [8] $end
$var wire 1 J( R4_out [7] $end
$var wire 1 K( R4_out [6] $end
$var wire 1 L( R4_out [5] $end
$var wire 1 M( R4_out [4] $end
$var wire 1 N( R4_out [3] $end
$var wire 1 O( R4_out [2] $end
$var wire 1 P( R4_out [1] $end
$var wire 1 Q( R4_out [0] $end
$var wire 1 R( R5_out [15] $end
$var wire 1 S( R5_out [14] $end
$var wire 1 T( R5_out [13] $end
$var wire 1 U( R5_out [12] $end
$var wire 1 V( R5_out [11] $end
$var wire 1 W( R5_out [10] $end
$var wire 1 X( R5_out [9] $end
$var wire 1 Y( R5_out [8] $end
$var wire 1 Z( R5_out [7] $end
$var wire 1 [( R5_out [6] $end
$var wire 1 \( R5_out [5] $end
$var wire 1 ]( R5_out [4] $end
$var wire 1 ^( R5_out [3] $end
$var wire 1 _( R5_out [2] $end
$var wire 1 `( R5_out [1] $end
$var wire 1 a( R5_out [0] $end
$var wire 1 b( R6_out [15] $end
$var wire 1 c( R6_out [14] $end
$var wire 1 d( R6_out [13] $end
$var wire 1 e( R6_out [12] $end
$var wire 1 f( R6_out [11] $end
$var wire 1 g( R6_out [10] $end
$var wire 1 h( R6_out [9] $end
$var wire 1 i( R6_out [8] $end
$var wire 1 j( R6_out [7] $end
$var wire 1 k( R6_out [6] $end
$var wire 1 l( R6_out [5] $end
$var wire 1 m( R6_out [4] $end
$var wire 1 n( R6_out [3] $end
$var wire 1 o( R6_out [2] $end
$var wire 1 p( R6_out [1] $end
$var wire 1 q( R6_out [0] $end
$var wire 1 r( R7_out [15] $end
$var wire 1 s( R7_out [14] $end
$var wire 1 t( R7_out [13] $end
$var wire 1 u( R7_out [12] $end
$var wire 1 v( R7_out [11] $end
$var wire 1 w( R7_out [10] $end
$var wire 1 x( R7_out [9] $end
$var wire 1 y( R7_out [8] $end
$var wire 1 z( R7_out [7] $end
$var wire 1 {( R7_out [6] $end
$var wire 1 |( R7_out [5] $end
$var wire 1 }( R7_out [4] $end
$var wire 1 ~( R7_out [3] $end
$var wire 1 !) R7_out [2] $end
$var wire 1 ") R7_out [1] $end
$var wire 1 #) R7_out [0] $end
$var wire 1 $) en0 $end
$var wire 1 %) en1 $end
$var wire 1 &) en2 $end
$var wire 1 ') en3 $end
$var wire 1 () en4 $end
$var wire 1 )) en5 $end
$var wire 1 *) en6 $end
$var wire 1 +) en7 $end

$scope module R0 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 $) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 `' Q [15] $end
$var wire 1 a' Q [14] $end
$var wire 1 b' Q [13] $end
$var wire 1 c' Q [12] $end
$var wire 1 d' Q [11] $end
$var wire 1 e' Q [10] $end
$var wire 1 f' Q [9] $end
$var wire 1 g' Q [8] $end
$var wire 1 h' Q [7] $end
$var wire 1 i' Q [6] $end
$var wire 1 j' Q [5] $end
$var wire 1 k' Q [4] $end
$var wire 1 l' Q [3] $end
$var wire 1 m' Q [2] $end
$var wire 1 n' Q [1] $end
$var wire 1 o' Q [0] $end
$var wire 1 ,) in [15] $end
$var wire 1 -) in [14] $end
$var wire 1 .) in [13] $end
$var wire 1 /) in [12] $end
$var wire 1 0) in [11] $end
$var wire 1 1) in [10] $end
$var wire 1 2) in [9] $end
$var wire 1 3) in [8] $end
$var wire 1 4) in [7] $end
$var wire 1 5) in [6] $end
$var wire 1 6) in [5] $end
$var wire 1 7) in [4] $end
$var wire 1 8) in [3] $end
$var wire 1 9) in [2] $end
$var wire 1 :) in [1] $end
$var wire 1 ;) in [0] $end
$var wire 1 <) out [15] $end
$var wire 1 =) out [14] $end
$var wire 1 >) out [13] $end
$var wire 1 ?) out [12] $end
$var wire 1 @) out [11] $end
$var wire 1 A) out [10] $end
$var wire 1 B) out [9] $end
$var wire 1 C) out [8] $end
$var wire 1 D) out [7] $end
$var wire 1 E) out [6] $end
$var wire 1 F) out [5] $end
$var wire 1 G) out [4] $end
$var wire 1 H) out [3] $end
$var wire 1 I) out [2] $end
$var wire 1 J) out [1] $end
$var wire 1 K) out [0] $end

$scope module dff_0 $end
$var wire 1 K) q $end
$var wire 1 ;) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 L) state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 J) q $end
$var wire 1 :) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 M) state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 I) q $end
$var wire 1 9) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 N) state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 H) q $end
$var wire 1 8) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 O) state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 G) q $end
$var wire 1 7) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 P) state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 F) q $end
$var wire 1 6) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Q) state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 E) q $end
$var wire 1 5) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R) state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 D) q $end
$var wire 1 4) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S) state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 C) q $end
$var wire 1 3) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T) state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 B) q $end
$var wire 1 2) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U) state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 A) q $end
$var wire 1 1) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V) state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 @) q $end
$var wire 1 0) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W) state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 ?) q $end
$var wire 1 /) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X) state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 >) q $end
$var wire 1 .) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y) state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 =) q $end
$var wire 1 -) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z) state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 <) q $end
$var wire 1 ,) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [) state $end
$upscope $end
$upscope $end

$scope module R1 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 %) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 p' Q [15] $end
$var wire 1 q' Q [14] $end
$var wire 1 r' Q [13] $end
$var wire 1 s' Q [12] $end
$var wire 1 t' Q [11] $end
$var wire 1 u' Q [10] $end
$var wire 1 v' Q [9] $end
$var wire 1 w' Q [8] $end
$var wire 1 x' Q [7] $end
$var wire 1 y' Q [6] $end
$var wire 1 z' Q [5] $end
$var wire 1 {' Q [4] $end
$var wire 1 |' Q [3] $end
$var wire 1 }' Q [2] $end
$var wire 1 ~' Q [1] $end
$var wire 1 !( Q [0] $end
$var wire 1 \) in [15] $end
$var wire 1 ]) in [14] $end
$var wire 1 ^) in [13] $end
$var wire 1 _) in [12] $end
$var wire 1 `) in [11] $end
$var wire 1 a) in [10] $end
$var wire 1 b) in [9] $end
$var wire 1 c) in [8] $end
$var wire 1 d) in [7] $end
$var wire 1 e) in [6] $end
$var wire 1 f) in [5] $end
$var wire 1 g) in [4] $end
$var wire 1 h) in [3] $end
$var wire 1 i) in [2] $end
$var wire 1 j) in [1] $end
$var wire 1 k) in [0] $end
$var wire 1 l) out [15] $end
$var wire 1 m) out [14] $end
$var wire 1 n) out [13] $end
$var wire 1 o) out [12] $end
$var wire 1 p) out [11] $end
$var wire 1 q) out [10] $end
$var wire 1 r) out [9] $end
$var wire 1 s) out [8] $end
$var wire 1 t) out [7] $end
$var wire 1 u) out [6] $end
$var wire 1 v) out [5] $end
$var wire 1 w) out [4] $end
$var wire 1 x) out [3] $end
$var wire 1 y) out [2] $end
$var wire 1 z) out [1] $end
$var wire 1 {) out [0] $end

$scope module dff_0 $end
$var wire 1 {) q $end
$var wire 1 k) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 |) state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 z) q $end
$var wire 1 j) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 }) state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 y) q $end
$var wire 1 i) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 x) q $end
$var wire 1 h) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 w) q $end
$var wire 1 g) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 v) q $end
$var wire 1 f) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 u) q $end
$var wire 1 e) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 t) q $end
$var wire 1 d) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %* state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 s) q $end
$var wire 1 c) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &* state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 r) q $end
$var wire 1 b) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '* state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 q) q $end
$var wire 1 a) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (* state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 p) q $end
$var wire 1 `) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )* state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 o) q $end
$var wire 1 _) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ** state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 n) q $end
$var wire 1 ^) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +* state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 m) q $end
$var wire 1 ]) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,* state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 l) q $end
$var wire 1 \) d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -* state $end
$upscope $end
$upscope $end

$scope module R2 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 &) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 "( Q [15] $end
$var wire 1 #( Q [14] $end
$var wire 1 $( Q [13] $end
$var wire 1 %( Q [12] $end
$var wire 1 &( Q [11] $end
$var wire 1 '( Q [10] $end
$var wire 1 (( Q [9] $end
$var wire 1 )( Q [8] $end
$var wire 1 *( Q [7] $end
$var wire 1 +( Q [6] $end
$var wire 1 ,( Q [5] $end
$var wire 1 -( Q [4] $end
$var wire 1 .( Q [3] $end
$var wire 1 /( Q [2] $end
$var wire 1 0( Q [1] $end
$var wire 1 1( Q [0] $end
$var wire 1 .* in [15] $end
$var wire 1 /* in [14] $end
$var wire 1 0* in [13] $end
$var wire 1 1* in [12] $end
$var wire 1 2* in [11] $end
$var wire 1 3* in [10] $end
$var wire 1 4* in [9] $end
$var wire 1 5* in [8] $end
$var wire 1 6* in [7] $end
$var wire 1 7* in [6] $end
$var wire 1 8* in [5] $end
$var wire 1 9* in [4] $end
$var wire 1 :* in [3] $end
$var wire 1 ;* in [2] $end
$var wire 1 <* in [1] $end
$var wire 1 =* in [0] $end
$var wire 1 >* out [15] $end
$var wire 1 ?* out [14] $end
$var wire 1 @* out [13] $end
$var wire 1 A* out [12] $end
$var wire 1 B* out [11] $end
$var wire 1 C* out [10] $end
$var wire 1 D* out [9] $end
$var wire 1 E* out [8] $end
$var wire 1 F* out [7] $end
$var wire 1 G* out [6] $end
$var wire 1 H* out [5] $end
$var wire 1 I* out [4] $end
$var wire 1 J* out [3] $end
$var wire 1 K* out [2] $end
$var wire 1 L* out [1] $end
$var wire 1 M* out [0] $end

$scope module dff_0 $end
$var wire 1 M* q $end
$var wire 1 =* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 N* state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 L* q $end
$var wire 1 <* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 O* state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 K* q $end
$var wire 1 ;* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 P* state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 J* q $end
$var wire 1 :* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Q* state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 I* q $end
$var wire 1 9* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R* state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 H* q $end
$var wire 1 8* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S* state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 G* q $end
$var wire 1 7* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T* state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 F* q $end
$var wire 1 6* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U* state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 E* q $end
$var wire 1 5* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V* state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 D* q $end
$var wire 1 4* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W* state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 C* q $end
$var wire 1 3* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X* state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 B* q $end
$var wire 1 2* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y* state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 A* q $end
$var wire 1 1* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z* state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 @* q $end
$var wire 1 0* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [* state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 ?* q $end
$var wire 1 /* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \* state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 >* q $end
$var wire 1 .* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ]* state $end
$upscope $end
$upscope $end

$scope module R3 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 ') en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 2( Q [15] $end
$var wire 1 3( Q [14] $end
$var wire 1 4( Q [13] $end
$var wire 1 5( Q [12] $end
$var wire 1 6( Q [11] $end
$var wire 1 7( Q [10] $end
$var wire 1 8( Q [9] $end
$var wire 1 9( Q [8] $end
$var wire 1 :( Q [7] $end
$var wire 1 ;( Q [6] $end
$var wire 1 <( Q [5] $end
$var wire 1 =( Q [4] $end
$var wire 1 >( Q [3] $end
$var wire 1 ?( Q [2] $end
$var wire 1 @( Q [1] $end
$var wire 1 A( Q [0] $end
$var wire 1 ^* in [15] $end
$var wire 1 _* in [14] $end
$var wire 1 `* in [13] $end
$var wire 1 a* in [12] $end
$var wire 1 b* in [11] $end
$var wire 1 c* in [10] $end
$var wire 1 d* in [9] $end
$var wire 1 e* in [8] $end
$var wire 1 f* in [7] $end
$var wire 1 g* in [6] $end
$var wire 1 h* in [5] $end
$var wire 1 i* in [4] $end
$var wire 1 j* in [3] $end
$var wire 1 k* in [2] $end
$var wire 1 l* in [1] $end
$var wire 1 m* in [0] $end
$var wire 1 n* out [15] $end
$var wire 1 o* out [14] $end
$var wire 1 p* out [13] $end
$var wire 1 q* out [12] $end
$var wire 1 r* out [11] $end
$var wire 1 s* out [10] $end
$var wire 1 t* out [9] $end
$var wire 1 u* out [8] $end
$var wire 1 v* out [7] $end
$var wire 1 w* out [6] $end
$var wire 1 x* out [5] $end
$var wire 1 y* out [4] $end
$var wire 1 z* out [3] $end
$var wire 1 {* out [2] $end
$var wire 1 |* out [1] $end
$var wire 1 }* out [0] $end

$scope module dff_0 $end
$var wire 1 }* q $end
$var wire 1 m* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 |* q $end
$var wire 1 l* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 {* q $end
$var wire 1 k* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 z* q $end
$var wire 1 j* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 y* q $end
$var wire 1 i* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 x* q $end
$var wire 1 h* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 w* q $end
$var wire 1 g* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 v* q $end
$var wire 1 f* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 u* q $end
$var wire 1 e* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 t* q $end
$var wire 1 d* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 s* q $end
$var wire 1 c* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 r* q $end
$var wire 1 b* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 q* q $end
$var wire 1 a* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 p* q $end
$var wire 1 `* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 o* q $end
$var wire 1 _* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 n* q $end
$var wire 1 ^* d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end
$upscope $end

$scope module R4 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 () en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 B( Q [15] $end
$var wire 1 C( Q [14] $end
$var wire 1 D( Q [13] $end
$var wire 1 E( Q [12] $end
$var wire 1 F( Q [11] $end
$var wire 1 G( Q [10] $end
$var wire 1 H( Q [9] $end
$var wire 1 I( Q [8] $end
$var wire 1 J( Q [7] $end
$var wire 1 K( Q [6] $end
$var wire 1 L( Q [5] $end
$var wire 1 M( Q [4] $end
$var wire 1 N( Q [3] $end
$var wire 1 O( Q [2] $end
$var wire 1 P( Q [1] $end
$var wire 1 Q( Q [0] $end
$var wire 1 0+ in [15] $end
$var wire 1 1+ in [14] $end
$var wire 1 2+ in [13] $end
$var wire 1 3+ in [12] $end
$var wire 1 4+ in [11] $end
$var wire 1 5+ in [10] $end
$var wire 1 6+ in [9] $end
$var wire 1 7+ in [8] $end
$var wire 1 8+ in [7] $end
$var wire 1 9+ in [6] $end
$var wire 1 :+ in [5] $end
$var wire 1 ;+ in [4] $end
$var wire 1 <+ in [3] $end
$var wire 1 =+ in [2] $end
$var wire 1 >+ in [1] $end
$var wire 1 ?+ in [0] $end
$var wire 1 @+ out [15] $end
$var wire 1 A+ out [14] $end
$var wire 1 B+ out [13] $end
$var wire 1 C+ out [12] $end
$var wire 1 D+ out [11] $end
$var wire 1 E+ out [10] $end
$var wire 1 F+ out [9] $end
$var wire 1 G+ out [8] $end
$var wire 1 H+ out [7] $end
$var wire 1 I+ out [6] $end
$var wire 1 J+ out [5] $end
$var wire 1 K+ out [4] $end
$var wire 1 L+ out [3] $end
$var wire 1 M+ out [2] $end
$var wire 1 N+ out [1] $end
$var wire 1 O+ out [0] $end

$scope module dff_0 $end
$var wire 1 O+ q $end
$var wire 1 ?+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 N+ q $end
$var wire 1 >+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Q+ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 M+ q $end
$var wire 1 =+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R+ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 L+ q $end
$var wire 1 <+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S+ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 K+ q $end
$var wire 1 ;+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T+ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 J+ q $end
$var wire 1 :+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U+ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 I+ q $end
$var wire 1 9+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V+ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 H+ q $end
$var wire 1 8+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W+ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 G+ q $end
$var wire 1 7+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X+ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 F+ q $end
$var wire 1 6+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y+ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 E+ q $end
$var wire 1 5+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z+ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 D+ q $end
$var wire 1 4+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [+ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 C+ q $end
$var wire 1 3+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \+ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 B+ q $end
$var wire 1 2+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ]+ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 A+ q $end
$var wire 1 1+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ^+ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 @+ q $end
$var wire 1 0+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _+ state $end
$upscope $end
$upscope $end

$scope module R5 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 )) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 R( Q [15] $end
$var wire 1 S( Q [14] $end
$var wire 1 T( Q [13] $end
$var wire 1 U( Q [12] $end
$var wire 1 V( Q [11] $end
$var wire 1 W( Q [10] $end
$var wire 1 X( Q [9] $end
$var wire 1 Y( Q [8] $end
$var wire 1 Z( Q [7] $end
$var wire 1 [( Q [6] $end
$var wire 1 \( Q [5] $end
$var wire 1 ]( Q [4] $end
$var wire 1 ^( Q [3] $end
$var wire 1 _( Q [2] $end
$var wire 1 `( Q [1] $end
$var wire 1 a( Q [0] $end
$var wire 1 `+ in [15] $end
$var wire 1 a+ in [14] $end
$var wire 1 b+ in [13] $end
$var wire 1 c+ in [12] $end
$var wire 1 d+ in [11] $end
$var wire 1 e+ in [10] $end
$var wire 1 f+ in [9] $end
$var wire 1 g+ in [8] $end
$var wire 1 h+ in [7] $end
$var wire 1 i+ in [6] $end
$var wire 1 j+ in [5] $end
$var wire 1 k+ in [4] $end
$var wire 1 l+ in [3] $end
$var wire 1 m+ in [2] $end
$var wire 1 n+ in [1] $end
$var wire 1 o+ in [0] $end
$var wire 1 p+ out [15] $end
$var wire 1 q+ out [14] $end
$var wire 1 r+ out [13] $end
$var wire 1 s+ out [12] $end
$var wire 1 t+ out [11] $end
$var wire 1 u+ out [10] $end
$var wire 1 v+ out [9] $end
$var wire 1 w+ out [8] $end
$var wire 1 x+ out [7] $end
$var wire 1 y+ out [6] $end
$var wire 1 z+ out [5] $end
$var wire 1 {+ out [4] $end
$var wire 1 |+ out [3] $end
$var wire 1 }+ out [2] $end
$var wire 1 ~+ out [1] $end
$var wire 1 !, out [0] $end

$scope module dff_0 $end
$var wire 1 !, q $end
$var wire 1 o+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ", state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ~+ q $end
$var wire 1 n+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 #, state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 }+ q $end
$var wire 1 m+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $, state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 |+ q $end
$var wire 1 l+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %, state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 {+ q $end
$var wire 1 k+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &, state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 z+ q $end
$var wire 1 j+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ', state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 y+ q $end
$var wire 1 i+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (, state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 x+ q $end
$var wire 1 h+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ), state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 w+ q $end
$var wire 1 g+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *, state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 v+ q $end
$var wire 1 f+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +, state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 u+ q $end
$var wire 1 e+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,, state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 t+ q $end
$var wire 1 d+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -, state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 s+ q $end
$var wire 1 c+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ., state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 r+ q $end
$var wire 1 b+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /, state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 q+ q $end
$var wire 1 a+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 0, state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 p+ q $end
$var wire 1 `+ d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 1, state $end
$upscope $end
$upscope $end

$scope module R6 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 *) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 b( Q [15] $end
$var wire 1 c( Q [14] $end
$var wire 1 d( Q [13] $end
$var wire 1 e( Q [12] $end
$var wire 1 f( Q [11] $end
$var wire 1 g( Q [10] $end
$var wire 1 h( Q [9] $end
$var wire 1 i( Q [8] $end
$var wire 1 j( Q [7] $end
$var wire 1 k( Q [6] $end
$var wire 1 l( Q [5] $end
$var wire 1 m( Q [4] $end
$var wire 1 n( Q [3] $end
$var wire 1 o( Q [2] $end
$var wire 1 p( Q [1] $end
$var wire 1 q( Q [0] $end
$var wire 1 2, in [15] $end
$var wire 1 3, in [14] $end
$var wire 1 4, in [13] $end
$var wire 1 5, in [12] $end
$var wire 1 6, in [11] $end
$var wire 1 7, in [10] $end
$var wire 1 8, in [9] $end
$var wire 1 9, in [8] $end
$var wire 1 :, in [7] $end
$var wire 1 ;, in [6] $end
$var wire 1 <, in [5] $end
$var wire 1 =, in [4] $end
$var wire 1 >, in [3] $end
$var wire 1 ?, in [2] $end
$var wire 1 @, in [1] $end
$var wire 1 A, in [0] $end
$var wire 1 B, out [15] $end
$var wire 1 C, out [14] $end
$var wire 1 D, out [13] $end
$var wire 1 E, out [12] $end
$var wire 1 F, out [11] $end
$var wire 1 G, out [10] $end
$var wire 1 H, out [9] $end
$var wire 1 I, out [8] $end
$var wire 1 J, out [7] $end
$var wire 1 K, out [6] $end
$var wire 1 L, out [5] $end
$var wire 1 M, out [4] $end
$var wire 1 N, out [3] $end
$var wire 1 O, out [2] $end
$var wire 1 P, out [1] $end
$var wire 1 Q, out [0] $end

$scope module dff_0 $end
$var wire 1 Q, q $end
$var wire 1 A, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 R, state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 P, q $end
$var wire 1 @, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 S, state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 O, q $end
$var wire 1 ?, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 T, state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 N, q $end
$var wire 1 >, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 U, state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 M, q $end
$var wire 1 =, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 V, state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 L, q $end
$var wire 1 <, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 W, state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 K, q $end
$var wire 1 ;, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 X, state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 J, q $end
$var wire 1 :, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Y, state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 I, q $end
$var wire 1 9, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 Z, state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 H, q $end
$var wire 1 8, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 [, state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 G, q $end
$var wire 1 7, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 \, state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 F, q $end
$var wire 1 6, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ], state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 E, q $end
$var wire 1 5, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ^, state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 D, q $end
$var wire 1 4, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _, state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 C, q $end
$var wire 1 3, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 `, state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 B, q $end
$var wire 1 2, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 a, state $end
$upscope $end
$upscope $end

$scope module R7 $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 +) en $end
$var wire 1 k# D [15] $end
$var wire 1 l# D [14] $end
$var wire 1 m# D [13] $end
$var wire 1 n# D [12] $end
$var wire 1 o# D [11] $end
$var wire 1 p# D [10] $end
$var wire 1 q# D [9] $end
$var wire 1 r# D [8] $end
$var wire 1 s# D [7] $end
$var wire 1 t# D [6] $end
$var wire 1 u# D [5] $end
$var wire 1 v# D [4] $end
$var wire 1 w# D [3] $end
$var wire 1 x# D [2] $end
$var wire 1 y# D [1] $end
$var wire 1 z# D [0] $end
$var wire 1 r( Q [15] $end
$var wire 1 s( Q [14] $end
$var wire 1 t( Q [13] $end
$var wire 1 u( Q [12] $end
$var wire 1 v( Q [11] $end
$var wire 1 w( Q [10] $end
$var wire 1 x( Q [9] $end
$var wire 1 y( Q [8] $end
$var wire 1 z( Q [7] $end
$var wire 1 {( Q [6] $end
$var wire 1 |( Q [5] $end
$var wire 1 }( Q [4] $end
$var wire 1 ~( Q [3] $end
$var wire 1 !) Q [2] $end
$var wire 1 ") Q [1] $end
$var wire 1 #) Q [0] $end
$var wire 1 b, in [15] $end
$var wire 1 c, in [14] $end
$var wire 1 d, in [13] $end
$var wire 1 e, in [12] $end
$var wire 1 f, in [11] $end
$var wire 1 g, in [10] $end
$var wire 1 h, in [9] $end
$var wire 1 i, in [8] $end
$var wire 1 j, in [7] $end
$var wire 1 k, in [6] $end
$var wire 1 l, in [5] $end
$var wire 1 m, in [4] $end
$var wire 1 n, in [3] $end
$var wire 1 o, in [2] $end
$var wire 1 p, in [1] $end
$var wire 1 q, in [0] $end
$var wire 1 r, out [15] $end
$var wire 1 s, out [14] $end
$var wire 1 t, out [13] $end
$var wire 1 u, out [12] $end
$var wire 1 v, out [11] $end
$var wire 1 w, out [10] $end
$var wire 1 x, out [9] $end
$var wire 1 y, out [8] $end
$var wire 1 z, out [7] $end
$var wire 1 {, out [6] $end
$var wire 1 |, out [5] $end
$var wire 1 }, out [4] $end
$var wire 1 ~, out [3] $end
$var wire 1 !- out [2] $end
$var wire 1 "- out [1] $end
$var wire 1 #- out [0] $end

$scope module dff_0 $end
$var wire 1 #- q $end
$var wire 1 q, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 $- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 "- q $end
$var wire 1 p, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 %- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 !- q $end
$var wire 1 o, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 &- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 ~, q $end
$var wire 1 n, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 '- state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 }, q $end
$var wire 1 m, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 (- state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 |, q $end
$var wire 1 l, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 )- state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 {, q $end
$var wire 1 k, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 *- state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 z, q $end
$var wire 1 j, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 +- state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 y, q $end
$var wire 1 i, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 ,- state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 x, q $end
$var wire 1 h, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 -- state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 w, q $end
$var wire 1 g, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 .- state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 v, q $end
$var wire 1 f, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 /- state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 u, q $end
$var wire 1 e, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 0- state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 t, q $end
$var wire 1 d, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 1- state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 s, q $end
$var wire 1 c, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 2- state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 r, q $end
$var wire 1 b, d $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 3- state $end
$upscope $end
$upscope $end

$scope module decoder_write $end
$var wire 1 D! in [2] $end
$var wire 1 E! in [1] $end
$var wire 1 F! in [0] $end
$var wire 1 X' out [7] $end
$var wire 1 Y' out [6] $end
$var wire 1 Z' out [5] $end
$var wire 1 [' out [4] $end
$var wire 1 \' out [3] $end
$var wire 1 ]' out [2] $end
$var wire 1 ^' out [1] $end
$var wire 1 _' out [0] $end
$upscope $end

$scope module read1mux $end
$var wire 1 >! sel [2] $end
$var wire 1 ?! sel [1] $end
$var wire 1 @! sel [0] $end
$var wire 1 `' in0 [15] $end
$var wire 1 a' in0 [14] $end
$var wire 1 b' in0 [13] $end
$var wire 1 c' in0 [12] $end
$var wire 1 d' in0 [11] $end
$var wire 1 e' in0 [10] $end
$var wire 1 f' in0 [9] $end
$var wire 1 g' in0 [8] $end
$var wire 1 h' in0 [7] $end
$var wire 1 i' in0 [6] $end
$var wire 1 j' in0 [5] $end
$var wire 1 k' in0 [4] $end
$var wire 1 l' in0 [3] $end
$var wire 1 m' in0 [2] $end
$var wire 1 n' in0 [1] $end
$var wire 1 o' in0 [0] $end
$var wire 1 p' in1 [15] $end
$var wire 1 q' in1 [14] $end
$var wire 1 r' in1 [13] $end
$var wire 1 s' in1 [12] $end
$var wire 1 t' in1 [11] $end
$var wire 1 u' in1 [10] $end
$var wire 1 v' in1 [9] $end
$var wire 1 w' in1 [8] $end
$var wire 1 x' in1 [7] $end
$var wire 1 y' in1 [6] $end
$var wire 1 z' in1 [5] $end
$var wire 1 {' in1 [4] $end
$var wire 1 |' in1 [3] $end
$var wire 1 }' in1 [2] $end
$var wire 1 ~' in1 [1] $end
$var wire 1 !( in1 [0] $end
$var wire 1 "( in2 [15] $end
$var wire 1 #( in2 [14] $end
$var wire 1 $( in2 [13] $end
$var wire 1 %( in2 [12] $end
$var wire 1 &( in2 [11] $end
$var wire 1 '( in2 [10] $end
$var wire 1 (( in2 [9] $end
$var wire 1 )( in2 [8] $end
$var wire 1 *( in2 [7] $end
$var wire 1 +( in2 [6] $end
$var wire 1 ,( in2 [5] $end
$var wire 1 -( in2 [4] $end
$var wire 1 .( in2 [3] $end
$var wire 1 /( in2 [2] $end
$var wire 1 0( in2 [1] $end
$var wire 1 1( in2 [0] $end
$var wire 1 2( in3 [15] $end
$var wire 1 3( in3 [14] $end
$var wire 1 4( in3 [13] $end
$var wire 1 5( in3 [12] $end
$var wire 1 6( in3 [11] $end
$var wire 1 7( in3 [10] $end
$var wire 1 8( in3 [9] $end
$var wire 1 9( in3 [8] $end
$var wire 1 :( in3 [7] $end
$var wire 1 ;( in3 [6] $end
$var wire 1 <( in3 [5] $end
$var wire 1 =( in3 [4] $end
$var wire 1 >( in3 [3] $end
$var wire 1 ?( in3 [2] $end
$var wire 1 @( in3 [1] $end
$var wire 1 A( in3 [0] $end
$var wire 1 B( in4 [15] $end
$var wire 1 C( in4 [14] $end
$var wire 1 D( in4 [13] $end
$var wire 1 E( in4 [12] $end
$var wire 1 F( in4 [11] $end
$var wire 1 G( in4 [10] $end
$var wire 1 H( in4 [9] $end
$var wire 1 I( in4 [8] $end
$var wire 1 J( in4 [7] $end
$var wire 1 K( in4 [6] $end
$var wire 1 L( in4 [5] $end
$var wire 1 M( in4 [4] $end
$var wire 1 N( in4 [3] $end
$var wire 1 O( in4 [2] $end
$var wire 1 P( in4 [1] $end
$var wire 1 Q( in4 [0] $end
$var wire 1 R( in5 [15] $end
$var wire 1 S( in5 [14] $end
$var wire 1 T( in5 [13] $end
$var wire 1 U( in5 [12] $end
$var wire 1 V( in5 [11] $end
$var wire 1 W( in5 [10] $end
$var wire 1 X( in5 [9] $end
$var wire 1 Y( in5 [8] $end
$var wire 1 Z( in5 [7] $end
$var wire 1 [( in5 [6] $end
$var wire 1 \( in5 [5] $end
$var wire 1 ]( in5 [4] $end
$var wire 1 ^( in5 [3] $end
$var wire 1 _( in5 [2] $end
$var wire 1 `( in5 [1] $end
$var wire 1 a( in5 [0] $end
$var wire 1 b( in6 [15] $end
$var wire 1 c( in6 [14] $end
$var wire 1 d( in6 [13] $end
$var wire 1 e( in6 [12] $end
$var wire 1 f( in6 [11] $end
$var wire 1 g( in6 [10] $end
$var wire 1 h( in6 [9] $end
$var wire 1 i( in6 [8] $end
$var wire 1 j( in6 [7] $end
$var wire 1 k( in6 [6] $end
$var wire 1 l( in6 [5] $end
$var wire 1 m( in6 [4] $end
$var wire 1 n( in6 [3] $end
$var wire 1 o( in6 [2] $end
$var wire 1 p( in6 [1] $end
$var wire 1 q( in6 [0] $end
$var wire 1 r( in7 [15] $end
$var wire 1 s( in7 [14] $end
$var wire 1 t( in7 [13] $end
$var wire 1 u( in7 [12] $end
$var wire 1 v( in7 [11] $end
$var wire 1 w( in7 [10] $end
$var wire 1 x( in7 [9] $end
$var wire 1 y( in7 [8] $end
$var wire 1 z( in7 [7] $end
$var wire 1 {( in7 [6] $end
$var wire 1 |( in7 [5] $end
$var wire 1 }( in7 [4] $end
$var wire 1 ~( in7 [3] $end
$var wire 1 !) in7 [2] $end
$var wire 1 ") in7 [1] $end
$var wire 1 #) in7 [0] $end
$var reg 16 4- out [15:0] $end
$upscope $end

$scope module read2mux $end
$var wire 1 A! sel [2] $end
$var wire 1 B! sel [1] $end
$var wire 1 C! sel [0] $end
$var wire 1 `' in0 [15] $end
$var wire 1 a' in0 [14] $end
$var wire 1 b' in0 [13] $end
$var wire 1 c' in0 [12] $end
$var wire 1 d' in0 [11] $end
$var wire 1 e' in0 [10] $end
$var wire 1 f' in0 [9] $end
$var wire 1 g' in0 [8] $end
$var wire 1 h' in0 [7] $end
$var wire 1 i' in0 [6] $end
$var wire 1 j' in0 [5] $end
$var wire 1 k' in0 [4] $end
$var wire 1 l' in0 [3] $end
$var wire 1 m' in0 [2] $end
$var wire 1 n' in0 [1] $end
$var wire 1 o' in0 [0] $end
$var wire 1 p' in1 [15] $end
$var wire 1 q' in1 [14] $end
$var wire 1 r' in1 [13] $end
$var wire 1 s' in1 [12] $end
$var wire 1 t' in1 [11] $end
$var wire 1 u' in1 [10] $end
$var wire 1 v' in1 [9] $end
$var wire 1 w' in1 [8] $end
$var wire 1 x' in1 [7] $end
$var wire 1 y' in1 [6] $end
$var wire 1 z' in1 [5] $end
$var wire 1 {' in1 [4] $end
$var wire 1 |' in1 [3] $end
$var wire 1 }' in1 [2] $end
$var wire 1 ~' in1 [1] $end
$var wire 1 !( in1 [0] $end
$var wire 1 "( in2 [15] $end
$var wire 1 #( in2 [14] $end
$var wire 1 $( in2 [13] $end
$var wire 1 %( in2 [12] $end
$var wire 1 &( in2 [11] $end
$var wire 1 '( in2 [10] $end
$var wire 1 (( in2 [9] $end
$var wire 1 )( in2 [8] $end
$var wire 1 *( in2 [7] $end
$var wire 1 +( in2 [6] $end
$var wire 1 ,( in2 [5] $end
$var wire 1 -( in2 [4] $end
$var wire 1 .( in2 [3] $end
$var wire 1 /( in2 [2] $end
$var wire 1 0( in2 [1] $end
$var wire 1 1( in2 [0] $end
$var wire 1 2( in3 [15] $end
$var wire 1 3( in3 [14] $end
$var wire 1 4( in3 [13] $end
$var wire 1 5( in3 [12] $end
$var wire 1 6( in3 [11] $end
$var wire 1 7( in3 [10] $end
$var wire 1 8( in3 [9] $end
$var wire 1 9( in3 [8] $end
$var wire 1 :( in3 [7] $end
$var wire 1 ;( in3 [6] $end
$var wire 1 <( in3 [5] $end
$var wire 1 =( in3 [4] $end
$var wire 1 >( in3 [3] $end
$var wire 1 ?( in3 [2] $end
$var wire 1 @( in3 [1] $end
$var wire 1 A( in3 [0] $end
$var wire 1 B( in4 [15] $end
$var wire 1 C( in4 [14] $end
$var wire 1 D( in4 [13] $end
$var wire 1 E( in4 [12] $end
$var wire 1 F( in4 [11] $end
$var wire 1 G( in4 [10] $end
$var wire 1 H( in4 [9] $end
$var wire 1 I( in4 [8] $end
$var wire 1 J( in4 [7] $end
$var wire 1 K( in4 [6] $end
$var wire 1 L( in4 [5] $end
$var wire 1 M( in4 [4] $end
$var wire 1 N( in4 [3] $end
$var wire 1 O( in4 [2] $end
$var wire 1 P( in4 [1] $end
$var wire 1 Q( in4 [0] $end
$var wire 1 R( in5 [15] $end
$var wire 1 S( in5 [14] $end
$var wire 1 T( in5 [13] $end
$var wire 1 U( in5 [12] $end
$var wire 1 V( in5 [11] $end
$var wire 1 W( in5 [10] $end
$var wire 1 X( in5 [9] $end
$var wire 1 Y( in5 [8] $end
$var wire 1 Z( in5 [7] $end
$var wire 1 [( in5 [6] $end
$var wire 1 \( in5 [5] $end
$var wire 1 ]( in5 [4] $end
$var wire 1 ^( in5 [3] $end
$var wire 1 _( in5 [2] $end
$var wire 1 `( in5 [1] $end
$var wire 1 a( in5 [0] $end
$var wire 1 b( in6 [15] $end
$var wire 1 c( in6 [14] $end
$var wire 1 d( in6 [13] $end
$var wire 1 e( in6 [12] $end
$var wire 1 f( in6 [11] $end
$var wire 1 g( in6 [10] $end
$var wire 1 h( in6 [9] $end
$var wire 1 i( in6 [8] $end
$var wire 1 j( in6 [7] $end
$var wire 1 k( in6 [6] $end
$var wire 1 l( in6 [5] $end
$var wire 1 m( in6 [4] $end
$var wire 1 n( in6 [3] $end
$var wire 1 o( in6 [2] $end
$var wire 1 p( in6 [1] $end
$var wire 1 q( in6 [0] $end
$var wire 1 r( in7 [15] $end
$var wire 1 s( in7 [14] $end
$var wire 1 t( in7 [13] $end
$var wire 1 u( in7 [12] $end
$var wire 1 v( in7 [11] $end
$var wire 1 w( in7 [10] $end
$var wire 1 x( in7 [9] $end
$var wire 1 y( in7 [8] $end
$var wire 1 z( in7 [7] $end
$var wire 1 {( in7 [6] $end
$var wire 1 |( in7 [5] $end
$var wire 1 }( in7 [4] $end
$var wire 1 ~( in7 [3] $end
$var wire 1 !) in7 [2] $end
$var wire 1 ") in7 [1] $end
$var wire 1 #) in7 [0] $end
$var reg 16 5- out [15:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module executeStage $end
$var wire 1 6! sl $end
$var wire 1 7! sco $end
$var wire 1 8! seq $end
$var wire 1 2! slbi $end
$var wire 1 +! jump $end
$var wire 1 *! branch $end
$var wire 1 0! immCtl $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 &! aluSrc $end
$var wire 1 3! immPres $end
$var wire 1 %! btr $end
$var wire 1 ;# regData1 [15] $end
$var wire 1 <# regData1 [14] $end
$var wire 1 =# regData1 [13] $end
$var wire 1 ># regData1 [12] $end
$var wire 1 ?# regData1 [11] $end
$var wire 1 @# regData1 [10] $end
$var wire 1 A# regData1 [9] $end
$var wire 1 B# regData1 [8] $end
$var wire 1 C# regData1 [7] $end
$var wire 1 D# regData1 [6] $end
$var wire 1 E# regData1 [5] $end
$var wire 1 F# regData1 [4] $end
$var wire 1 G# regData1 [3] $end
$var wire 1 H# regData1 [2] $end
$var wire 1 I# regData1 [1] $end
$var wire 1 J# regData1 [0] $end
$var wire 1 K# regData2 [15] $end
$var wire 1 L# regData2 [14] $end
$var wire 1 M# regData2 [13] $end
$var wire 1 N# regData2 [12] $end
$var wire 1 O# regData2 [11] $end
$var wire 1 P# regData2 [10] $end
$var wire 1 Q# regData2 [9] $end
$var wire 1 R# regData2 [8] $end
$var wire 1 S# regData2 [7] $end
$var wire 1 T# regData2 [6] $end
$var wire 1 U# regData2 [5] $end
$var wire 1 V# regData2 [4] $end
$var wire 1 W# regData2 [3] $end
$var wire 1 X# regData2 [2] $end
$var wire 1 Y# regData2 [1] $end
$var wire 1 Z# regData2 [0] $end
$var wire 1 w! immVal [15] $end
$var wire 1 x! immVal [14] $end
$var wire 1 y! immVal [13] $end
$var wire 1 z! immVal [12] $end
$var wire 1 {! immVal [11] $end
$var wire 1 |! immVal [10] $end
$var wire 1 }! immVal [9] $end
$var wire 1 ~! immVal [8] $end
$var wire 1 !" immVal [7] $end
$var wire 1 "" immVal [6] $end
$var wire 1 #" immVal [5] $end
$var wire 1 $" immVal [4] $end
$var wire 1 %" immVal [3] $end
$var wire 1 &" immVal [2] $end
$var wire 1 '" immVal [1] $end
$var wire 1 (" immVal [0] $end
$var wire 1 )" branchVal [15] $end
$var wire 1 *" branchVal [14] $end
$var wire 1 +" branchVal [13] $end
$var wire 1 ," branchVal [12] $end
$var wire 1 -" branchVal [11] $end
$var wire 1 ." branchVal [10] $end
$var wire 1 /" branchVal [9] $end
$var wire 1 0" branchVal [8] $end
$var wire 1 1" branchVal [7] $end
$var wire 1 2" branchVal [6] $end
$var wire 1 3" branchVal [5] $end
$var wire 1 4" branchVal [4] $end
$var wire 1 5" branchVal [3] $end
$var wire 1 6" branchVal [2] $end
$var wire 1 7" branchVal [1] $end
$var wire 1 8" branchVal [0] $end
$var wire 1 9" jumpVal [15] $end
$var wire 1 :" jumpVal [14] $end
$var wire 1 ;" jumpVal [13] $end
$var wire 1 <" jumpVal [12] $end
$var wire 1 =" jumpVal [11] $end
$var wire 1 >" jumpVal [10] $end
$var wire 1 ?" jumpVal [9] $end
$var wire 1 @" jumpVal [8] $end
$var wire 1 A" jumpVal [7] $end
$var wire 1 B" jumpVal [6] $end
$var wire 1 C" jumpVal [5] $end
$var wire 1 D" jumpVal [4] $end
$var wire 1 E" jumpVal [3] $end
$var wire 1 F" jumpVal [2] $end
$var wire 1 G" jumpVal [1] $end
$var wire 1 H" jumpVal [0] $end
$var wire 1 W! instr [15] $end
$var wire 1 X! instr [14] $end
$var wire 1 Y! instr [13] $end
$var wire 1 Z! instr [12] $end
$var wire 1 [! instr [11] $end
$var wire 1 \! instr [10] $end
$var wire 1 ]! instr [9] $end
$var wire 1 ^! instr [8] $end
$var wire 1 _! instr [7] $end
$var wire 1 `! instr [6] $end
$var wire 1 a! instr [5] $end
$var wire 1 b! instr [4] $end
$var wire 1 c! instr [3] $end
$var wire 1 d! instr [2] $end
$var wire 1 e! instr [1] $end
$var wire 1 f! instr [0] $end
$var wire 1 I" pc [15] $end
$var wire 1 J" pc [14] $end
$var wire 1 K" pc [13] $end
$var wire 1 L" pc [12] $end
$var wire 1 M" pc [11] $end
$var wire 1 N" pc [10] $end
$var wire 1 O" pc [9] $end
$var wire 1 P" pc [8] $end
$var wire 1 Q" pc [7] $end
$var wire 1 R" pc [6] $end
$var wire 1 S" pc [5] $end
$var wire 1 T" pc [4] $end
$var wire 1 U" pc [3] $end
$var wire 1 V" pc [2] $end
$var wire 1 W" pc [1] $end
$var wire 1 X" pc [0] $end
$var wire 1 6- almost_newPc [15] $end
$var wire 1 7- almost_newPc [14] $end
$var wire 1 8- almost_newPc [13] $end
$var wire 1 9- almost_newPc [12] $end
$var wire 1 :- almost_newPc [11] $end
$var wire 1 ;- almost_newPc [10] $end
$var wire 1 <- almost_newPc [9] $end
$var wire 1 =- almost_newPc [8] $end
$var wire 1 >- almost_newPc [7] $end
$var wire 1 ?- almost_newPc [6] $end
$var wire 1 @- almost_newPc [5] $end
$var wire 1 A- almost_newPc [4] $end
$var wire 1 B- almost_newPc [3] $end
$var wire 1 C- almost_newPc [2] $end
$var wire 1 D- almost_newPc [1] $end
$var wire 1 E- almost_newPc [0] $end
$var wire 1 F- newPc [15] $end
$var wire 1 G- newPc [14] $end
$var wire 1 H- newPc [13] $end
$var wire 1 I- newPc [12] $end
$var wire 1 J- newPc [11] $end
$var wire 1 K- newPc [10] $end
$var wire 1 L- newPc [9] $end
$var wire 1 M- newPc [8] $end
$var wire 1 N- newPc [7] $end
$var wire 1 O- newPc [6] $end
$var wire 1 P- newPc [5] $end
$var wire 1 Q- newPc [4] $end
$var wire 1 R- newPc [3] $end
$var wire 1 S- newPc [2] $end
$var wire 1 T- newPc [1] $end
$var wire 1 U- newPc [0] $end
$var wire 1 V- InA [15] $end
$var wire 1 W- InA [14] $end
$var wire 1 X- InA [13] $end
$var wire 1 Y- InA [12] $end
$var wire 1 Z- InA [11] $end
$var wire 1 [- InA [10] $end
$var wire 1 \- InA [9] $end
$var wire 1 ]- InA [8] $end
$var wire 1 ^- InA [7] $end
$var wire 1 _- InA [6] $end
$var wire 1 `- InA [5] $end
$var wire 1 a- InA [4] $end
$var wire 1 b- InA [3] $end
$var wire 1 c- InA [2] $end
$var wire 1 d- InA [1] $end
$var wire 1 e- InA [0] $end
$var wire 1 f- InB [15] $end
$var wire 1 g- InB [14] $end
$var wire 1 h- InB [13] $end
$var wire 1 i- InB [12] $end
$var wire 1 j- InB [11] $end
$var wire 1 k- InB [10] $end
$var wire 1 l- InB [9] $end
$var wire 1 m- InB [8] $end
$var wire 1 n- InB [7] $end
$var wire 1 o- InB [6] $end
$var wire 1 p- InB [5] $end
$var wire 1 q- InB [4] $end
$var wire 1 r- InB [3] $end
$var wire 1 s- InB [2] $end
$var wire 1 t- InB [1] $end
$var wire 1 u- InB [0] $end
$var wire 1 v- immValShifted [15] $end
$var wire 1 w- immValShifted [14] $end
$var wire 1 x- immValShifted [13] $end
$var wire 1 y- immValShifted [12] $end
$var wire 1 z- immValShifted [11] $end
$var wire 1 {- immValShifted [10] $end
$var wire 1 |- immValShifted [9] $end
$var wire 1 }- immValShifted [8] $end
$var wire 1 ~- immValShifted [7] $end
$var wire 1 !. immValShifted [6] $end
$var wire 1 ". immValShifted [5] $end
$var wire 1 #. immValShifted [4] $end
$var wire 1 $. immValShifted [3] $end
$var wire 1 %. immValShifted [2] $end
$var wire 1 &. immValShifted [1] $end
$var wire 1 '. immValShifted [0] $end
$var wire 1 (. jumpValSigned [15] $end
$var wire 1 ). jumpValSigned [14] $end
$var wire 1 *. jumpValSigned [13] $end
$var wire 1 +. jumpValSigned [12] $end
$var wire 1 ,. jumpValSigned [11] $end
$var wire 1 -. jumpValSigned [10] $end
$var wire 1 .. jumpValSigned [9] $end
$var wire 1 /. jumpValSigned [8] $end
$var wire 1 0. jumpValSigned [7] $end
$var wire 1 1. jumpValSigned [6] $end
$var wire 1 2. jumpValSigned [5] $end
$var wire 1 3. jumpValSigned [4] $end
$var wire 1 4. jumpValSigned [3] $end
$var wire 1 5. jumpValSigned [2] $end
$var wire 1 6. jumpValSigned [1] $end
$var wire 1 7. jumpValSigned [0] $end
$var wire 1 8. branchValSigned [15] $end
$var wire 1 9. branchValSigned [14] $end
$var wire 1 :. branchValSigned [13] $end
$var wire 1 ;. branchValSigned [12] $end
$var wire 1 <. branchValSigned [11] $end
$var wire 1 =. branchValSigned [10] $end
$var wire 1 >. branchValSigned [9] $end
$var wire 1 ?. branchValSigned [8] $end
$var wire 1 @. branchValSigned [7] $end
$var wire 1 A. branchValSigned [6] $end
$var wire 1 B. branchValSigned [5] $end
$var wire 1 C. branchValSigned [4] $end
$var wire 1 D. branchValSigned [3] $end
$var wire 1 E. branchValSigned [2] $end
$var wire 1 F. branchValSigned [1] $end
$var wire 1 G. branchValSigned [0] $end
$var wire 1 H. pc_or_rs [15] $end
$var wire 1 I. pc_or_rs [14] $end
$var wire 1 J. pc_or_rs [13] $end
$var wire 1 K. pc_or_rs [12] $end
$var wire 1 L. pc_or_rs [11] $end
$var wire 1 M. pc_or_rs [10] $end
$var wire 1 N. pc_or_rs [9] $end
$var wire 1 O. pc_or_rs [8] $end
$var wire 1 P. pc_or_rs [7] $end
$var wire 1 Q. pc_or_rs [6] $end
$var wire 1 R. pc_or_rs [5] $end
$var wire 1 S. pc_or_rs [4] $end
$var wire 1 T. pc_or_rs [3] $end
$var wire 1 U. pc_or_rs [2] $end
$var wire 1 V. pc_or_rs [1] $end
$var wire 1 W. pc_or_rs [0] $end
$var wire 1 X. aluOut [15] $end
$var wire 1 Y. aluOut [14] $end
$var wire 1 Z. aluOut [13] $end
$var wire 1 [. aluOut [12] $end
$var wire 1 \. aluOut [11] $end
$var wire 1 ]. aluOut [10] $end
$var wire 1 ^. aluOut [9] $end
$var wire 1 _. aluOut [8] $end
$var wire 1 `. aluOut [7] $end
$var wire 1 a. aluOut [6] $end
$var wire 1 b. aluOut [5] $end
$var wire 1 c. aluOut [4] $end
$var wire 1 d. aluOut [3] $end
$var wire 1 e. aluOut [2] $end
$var wire 1 f. aluOut [1] $end
$var wire 1 g. aluOut [0] $end
$var wire 1 h. opCode [2] $end
$var wire 1 i. opCode [1] $end
$var wire 1 j. opCode [0] $end
$var wire 1 k. sign $end
$var wire 1 l. setOutput $end
$var wire 1 m. cout $end
$var wire 1 g! next_pc [15] $end
$var wire 1 h! next_pc [14] $end
$var wire 1 i! next_pc [13] $end
$var wire 1 j! next_pc [12] $end
$var wire 1 k! next_pc [11] $end
$var wire 1 l! next_pc [10] $end
$var wire 1 m! next_pc [9] $end
$var wire 1 n! next_pc [8] $end
$var wire 1 o! next_pc [7] $end
$var wire 1 p! next_pc [6] $end
$var wire 1 q! next_pc [5] $end
$var wire 1 r! next_pc [4] $end
$var wire 1 s! next_pc [3] $end
$var wire 1 t! next_pc [2] $end
$var wire 1 u! next_pc [1] $end
$var wire 1 v! next_pc [0] $end
$var wire 1 Y" Out [15] $end
$var wire 1 Z" Out [14] $end
$var wire 1 [" Out [13] $end
$var wire 1 \" Out [12] $end
$var wire 1 ]" Out [11] $end
$var wire 1 ^" Out [10] $end
$var wire 1 _" Out [9] $end
$var wire 1 `" Out [8] $end
$var wire 1 a" Out [7] $end
$var wire 1 b" Out [6] $end
$var wire 1 c" Out [5] $end
$var wire 1 d" Out [4] $end
$var wire 1 e" Out [3] $end
$var wire 1 f" Out [2] $end
$var wire 1 g" Out [1] $end
$var wire 1 h" Out [0] $end
$var wire 1 i" wrData [15] $end
$var wire 1 j" wrData [14] $end
$var wire 1 k" wrData [13] $end
$var wire 1 l" wrData [12] $end
$var wire 1 m" wrData [11] $end
$var wire 1 n" wrData [10] $end
$var wire 1 o" wrData [9] $end
$var wire 1 p" wrData [8] $end
$var wire 1 q" wrData [7] $end
$var wire 1 r" wrData [6] $end
$var wire 1 s" wrData [5] $end
$var wire 1 t" wrData [4] $end
$var wire 1 u" wrData [3] $end
$var wire 1 v" wrData [2] $end
$var wire 1 w" wrData [1] $end
$var wire 1 x" wrData [0] $end
$var wire 1 .$ Zero $end
$var wire 1 /$ Ofl $end

$scope module executeALU $end
$var parameter 32 n. N $end
$var parameter 32 o. O $end
$var wire 1 V- InA [15] $end
$var wire 1 W- InA [14] $end
$var wire 1 X- InA [13] $end
$var wire 1 Y- InA [12] $end
$var wire 1 Z- InA [11] $end
$var wire 1 [- InA [10] $end
$var wire 1 \- InA [9] $end
$var wire 1 ]- InA [8] $end
$var wire 1 ^- InA [7] $end
$var wire 1 _- InA [6] $end
$var wire 1 `- InA [5] $end
$var wire 1 a- InA [4] $end
$var wire 1 b- InA [3] $end
$var wire 1 c- InA [2] $end
$var wire 1 d- InA [1] $end
$var wire 1 e- InA [0] $end
$var wire 1 f- InB [15] $end
$var wire 1 g- InB [14] $end
$var wire 1 h- InB [13] $end
$var wire 1 i- InB [12] $end
$var wire 1 j- InB [11] $end
$var wire 1 k- InB [10] $end
$var wire 1 l- InB [9] $end
$var wire 1 m- InB [8] $end
$var wire 1 n- InB [7] $end
$var wire 1 o- InB [6] $end
$var wire 1 p- InB [5] $end
$var wire 1 q- InB [4] $end
$var wire 1 r- InB [3] $end
$var wire 1 s- InB [2] $end
$var wire 1 t- InB [1] $end
$var wire 1 u- InB [0] $end
$var wire 1 p. Cin $end
$var wire 1 h. Op [2] $end
$var wire 1 i. Op [1] $end
$var wire 1 j. Op [0] $end
$var wire 1 ,! invA $end
$var wire 1 -! invB $end
$var wire 1 k. sign $end
$var wire 1 2! slbi $end
$var wire 1 X. Out [15] $end
$var wire 1 Y. Out [14] $end
$var wire 1 Z. Out [13] $end
$var wire 1 [. Out [12] $end
$var wire 1 \. Out [11] $end
$var wire 1 ]. Out [10] $end
$var wire 1 ^. Out [9] $end
$var wire 1 _. Out [8] $end
$var wire 1 `. Out [7] $end
$var wire 1 a. Out [6] $end
$var wire 1 b. Out [5] $end
$var wire 1 c. Out [4] $end
$var wire 1 d. Out [3] $end
$var wire 1 e. Out [2] $end
$var wire 1 f. Out [1] $end
$var wire 1 g. Out [0] $end
$var wire 1 /$ Ofl $end
$var wire 1 .$ Zero $end
$var wire 1 m. cout $end
$var wire 1 q. shifter_out [15] $end
$var wire 1 r. shifter_out [14] $end
$var wire 1 s. shifter_out [13] $end
$var wire 1 t. shifter_out [12] $end
$var wire 1 u. shifter_out [11] $end
$var wire 1 v. shifter_out [10] $end
$var wire 1 w. shifter_out [9] $end
$var wire 1 x. shifter_out [8] $end
$var wire 1 y. shifter_out [7] $end
$var wire 1 z. shifter_out [6] $end
$var wire 1 {. shifter_out [5] $end
$var wire 1 |. shifter_out [4] $end
$var wire 1 }. shifter_out [3] $end
$var wire 1 ~. shifter_out [2] $end
$var wire 1 !/ shifter_out [1] $end
$var wire 1 "/ shifter_out [0] $end
$var wire 1 #/ ror_check [15] $end
$var wire 1 $/ ror_check [14] $end
$var wire 1 %/ ror_check [13] $end
$var wire 1 &/ ror_check [12] $end
$var wire 1 '/ ror_check [11] $end
$var wire 1 (/ ror_check [10] $end
$var wire 1 )/ ror_check [9] $end
$var wire 1 */ ror_check [8] $end
$var wire 1 +/ ror_check [7] $end
$var wire 1 ,/ ror_check [6] $end
$var wire 1 -/ ror_check [5] $end
$var wire 1 ./ ror_check [4] $end
$var wire 1 // ror_check [3] $end
$var wire 1 0/ ror_check [2] $end
$var wire 1 1/ ror_check [1] $end
$var wire 1 2/ ror_check [0] $end
$var wire 1 3/ AND_RESULT [15] $end
$var wire 1 4/ AND_RESULT [14] $end
$var wire 1 5/ AND_RESULT [13] $end
$var wire 1 6/ AND_RESULT [12] $end
$var wire 1 7/ AND_RESULT [11] $end
$var wire 1 8/ AND_RESULT [10] $end
$var wire 1 9/ AND_RESULT [9] $end
$var wire 1 :/ AND_RESULT [8] $end
$var wire 1 ;/ AND_RESULT [7] $end
$var wire 1 </ AND_RESULT [6] $end
$var wire 1 =/ AND_RESULT [5] $end
$var wire 1 >/ AND_RESULT [4] $end
$var wire 1 ?/ AND_RESULT [3] $end
$var wire 1 @/ AND_RESULT [2] $end
$var wire 1 A/ AND_RESULT [1] $end
$var wire 1 B/ AND_RESULT [0] $end
$var wire 1 C/ OR_RESULT [15] $end
$var wire 1 D/ OR_RESULT [14] $end
$var wire 1 E/ OR_RESULT [13] $end
$var wire 1 F/ OR_RESULT [12] $end
$var wire 1 G/ OR_RESULT [11] $end
$var wire 1 H/ OR_RESULT [10] $end
$var wire 1 I/ OR_RESULT [9] $end
$var wire 1 J/ OR_RESULT [8] $end
$var wire 1 K/ OR_RESULT [7] $end
$var wire 1 L/ OR_RESULT [6] $end
$var wire 1 M/ OR_RESULT [5] $end
$var wire 1 N/ OR_RESULT [4] $end
$var wire 1 O/ OR_RESULT [3] $end
$var wire 1 P/ OR_RESULT [2] $end
$var wire 1 Q/ OR_RESULT [1] $end
$var wire 1 R/ OR_RESULT [0] $end
$var wire 1 S/ XOR_RESULT [15] $end
$var wire 1 T/ XOR_RESULT [14] $end
$var wire 1 U/ XOR_RESULT [13] $end
$var wire 1 V/ XOR_RESULT [12] $end
$var wire 1 W/ XOR_RESULT [11] $end
$var wire 1 X/ XOR_RESULT [10] $end
$var wire 1 Y/ XOR_RESULT [9] $end
$var wire 1 Z/ XOR_RESULT [8] $end
$var wire 1 [/ XOR_RESULT [7] $end
$var wire 1 \/ XOR_RESULT [6] $end
$var wire 1 ]/ XOR_RESULT [5] $end
$var wire 1 ^/ XOR_RESULT [4] $end
$var wire 1 _/ XOR_RESULT [3] $end
$var wire 1 `/ XOR_RESULT [2] $end
$var wire 1 a/ XOR_RESULT [1] $end
$var wire 1 b/ XOR_RESULT [0] $end
$var wire 1 c/ ADD_RESULT [15] $end
$var wire 1 d/ ADD_RESULT [14] $end
$var wire 1 e/ ADD_RESULT [13] $end
$var wire 1 f/ ADD_RESULT [12] $end
$var wire 1 g/ ADD_RESULT [11] $end
$var wire 1 h/ ADD_RESULT [10] $end
$var wire 1 i/ ADD_RESULT [9] $end
$var wire 1 j/ ADD_RESULT [8] $end
$var wire 1 k/ ADD_RESULT [7] $end
$var wire 1 l/ ADD_RESULT [6] $end
$var wire 1 m/ ADD_RESULT [5] $end
$var wire 1 n/ ADD_RESULT [4] $end
$var wire 1 o/ ADD_RESULT [3] $end
$var wire 1 p/ ADD_RESULT [2] $end
$var wire 1 q/ ADD_RESULT [1] $end
$var wire 1 r/ ADD_RESULT [0] $end
$var wire 1 s/ LOGIC_RESULT [15] $end
$var wire 1 t/ LOGIC_RESULT [14] $end
$var wire 1 u/ LOGIC_RESULT [13] $end
$var wire 1 v/ LOGIC_RESULT [12] $end
$var wire 1 w/ LOGIC_RESULT [11] $end
$var wire 1 x/ LOGIC_RESULT [10] $end
$var wire 1 y/ LOGIC_RESULT [9] $end
$var wire 1 z/ LOGIC_RESULT [8] $end
$var wire 1 {/ LOGIC_RESULT [7] $end
$var wire 1 |/ LOGIC_RESULT [6] $end
$var wire 1 }/ LOGIC_RESULT [5] $end
$var wire 1 ~/ LOGIC_RESULT [4] $end
$var wire 1 !0 LOGIC_RESULT [3] $end
$var wire 1 "0 LOGIC_RESULT [2] $end
$var wire 1 #0 LOGIC_RESULT [1] $end
$var wire 1 $0 LOGIC_RESULT [0] $end
$var wire 1 %0 SUB_RESULT [15] $end
$var wire 1 &0 SUB_RESULT [14] $end
$var wire 1 '0 SUB_RESULT [13] $end
$var wire 1 (0 SUB_RESULT [12] $end
$var wire 1 )0 SUB_RESULT [11] $end
$var wire 1 *0 SUB_RESULT [10] $end
$var wire 1 +0 SUB_RESULT [9] $end
$var wire 1 ,0 SUB_RESULT [8] $end
$var wire 1 -0 SUB_RESULT [7] $end
$var wire 1 .0 SUB_RESULT [6] $end
$var wire 1 /0 SUB_RESULT [5] $end
$var wire 1 00 SUB_RESULT [4] $end
$var wire 1 10 SUB_RESULT [3] $end
$var wire 1 20 SUB_RESULT [2] $end
$var wire 1 30 SUB_RESULT [1] $end
$var wire 1 40 SUB_RESULT [0] $end
$var wire 1 50 A [15] $end
$var wire 1 60 A [14] $end
$var wire 1 70 A [13] $end
$var wire 1 80 A [12] $end
$var wire 1 90 A [11] $end
$var wire 1 :0 A [10] $end
$var wire 1 ;0 A [9] $end
$var wire 1 <0 A [8] $end
$var wire 1 =0 A [7] $end
$var wire 1 >0 A [6] $end
$var wire 1 ?0 A [5] $end
$var wire 1 @0 A [4] $end
$var wire 1 A0 A [3] $end
$var wire 1 B0 A [2] $end
$var wire 1 C0 A [1] $end
$var wire 1 D0 A [0] $end
$var wire 1 E0 B [15] $end
$var wire 1 F0 B [14] $end
$var wire 1 G0 B [13] $end
$var wire 1 H0 B [12] $end
$var wire 1 I0 B [11] $end
$var wire 1 J0 B [10] $end
$var wire 1 K0 B [9] $end
$var wire 1 L0 B [8] $end
$var wire 1 M0 B [7] $end
$var wire 1 N0 B [6] $end
$var wire 1 O0 B [5] $end
$var wire 1 P0 B [4] $end
$var wire 1 Q0 B [3] $end
$var wire 1 R0 B [2] $end
$var wire 1 S0 B [1] $end
$var wire 1 T0 B [0] $end
$var wire 1 U0 Overflow $end

$scope function rotate $end
$var reg 16 V0 rotate [15:0] $end
$var reg 16 W0 data [15:0] $end
$var reg 4 X0 shift [3:0] $end
$var reg 32 Y0 tmp [31:0] $end
$upscope $end

$scope module shift $end
$var parameter 32 Z0 N $end
$var parameter 32 [0 C $end
$var parameter 32 \0 O $end
$var wire 1 50 In [15] $end
$var wire 1 60 In [14] $end
$var wire 1 70 In [13] $end
$var wire 1 80 In [12] $end
$var wire 1 90 In [11] $end
$var wire 1 :0 In [10] $end
$var wire 1 ;0 In [9] $end
$var wire 1 <0 In [8] $end
$var wire 1 =0 In [7] $end
$var wire 1 >0 In [6] $end
$var wire 1 ?0 In [5] $end
$var wire 1 @0 In [4] $end
$var wire 1 A0 In [3] $end
$var wire 1 B0 In [2] $end
$var wire 1 C0 In [1] $end
$var wire 1 D0 In [0] $end
$var wire 1 Q0 Cnt [3] $end
$var wire 1 R0 Cnt [2] $end
$var wire 1 S0 Cnt [1] $end
$var wire 1 T0 Cnt [0] $end
$var wire 1 i. Op [1] $end
$var wire 1 j. Op [0] $end
$var wire 1 q. Out [15] $end
$var wire 1 r. Out [14] $end
$var wire 1 s. Out [13] $end
$var wire 1 t. Out [12] $end
$var wire 1 u. Out [11] $end
$var wire 1 v. Out [10] $end
$var wire 1 w. Out [9] $end
$var wire 1 x. Out [8] $end
$var wire 1 y. Out [7] $end
$var wire 1 z. Out [6] $end
$var wire 1 {. Out [5] $end
$var wire 1 |. Out [4] $end
$var wire 1 }. Out [3] $end
$var wire 1 ~. Out [2] $end
$var wire 1 !/ Out [1] $end
$var wire 1 "/ Out [0] $end
$var wire 1 ]0 out_stage1 [15] $end
$var wire 1 ^0 out_stage1 [14] $end
$var wire 1 _0 out_stage1 [13] $end
$var wire 1 `0 out_stage1 [12] $end
$var wire 1 a0 out_stage1 [11] $end
$var wire 1 b0 out_stage1 [10] $end
$var wire 1 c0 out_stage1 [9] $end
$var wire 1 d0 out_stage1 [8] $end
$var wire 1 e0 out_stage1 [7] $end
$var wire 1 f0 out_stage1 [6] $end
$var wire 1 g0 out_stage1 [5] $end
$var wire 1 h0 out_stage1 [4] $end
$var wire 1 i0 out_stage1 [3] $end
$var wire 1 j0 out_stage1 [2] $end
$var wire 1 k0 out_stage1 [1] $end
$var wire 1 l0 out_stage1 [0] $end
$var wire 1 m0 out_stage2 [15] $end
$var wire 1 n0 out_stage2 [14] $end
$var wire 1 o0 out_stage2 [13] $end
$var wire 1 p0 out_stage2 [12] $end
$var wire 1 q0 out_stage2 [11] $end
$var wire 1 r0 out_stage2 [10] $end
$var wire 1 s0 out_stage2 [9] $end
$var wire 1 t0 out_stage2 [8] $end
$var wire 1 u0 out_stage2 [7] $end
$var wire 1 v0 out_stage2 [6] $end
$var wire 1 w0 out_stage2 [5] $end
$var wire 1 x0 out_stage2 [4] $end
$var wire 1 y0 out_stage2 [3] $end
$var wire 1 z0 out_stage2 [2] $end
$var wire 1 {0 out_stage2 [1] $end
$var wire 1 |0 out_stage2 [0] $end
$var wire 1 }0 out_stage3 [15] $end
$var wire 1 ~0 out_stage3 [14] $end
$var wire 1 !1 out_stage3 [13] $end
$var wire 1 "1 out_stage3 [12] $end
$var wire 1 #1 out_stage3 [11] $end
$var wire 1 $1 out_stage3 [10] $end
$var wire 1 %1 out_stage3 [9] $end
$var wire 1 &1 out_stage3 [8] $end
$var wire 1 '1 out_stage3 [7] $end
$var wire 1 (1 out_stage3 [6] $end
$var wire 1 )1 out_stage3 [5] $end
$var wire 1 *1 out_stage3 [4] $end
$var wire 1 +1 out_stage3 [3] $end
$var wire 1 ,1 out_stage3 [2] $end
$var wire 1 -1 out_stage3 [1] $end
$var wire 1 .1 out_stage3 [0] $end
$upscope $end

$scope module adder $end
$var parameter 32 /1 N $end
$var wire 1 50 A [15] $end
$var wire 1 60 A [14] $end
$var wire 1 70 A [13] $end
$var wire 1 80 A [12] $end
$var wire 1 90 A [11] $end
$var wire 1 :0 A [10] $end
$var wire 1 ;0 A [9] $end
$var wire 1 <0 A [8] $end
$var wire 1 =0 A [7] $end
$var wire 1 >0 A [6] $end
$var wire 1 ?0 A [5] $end
$var wire 1 @0 A [4] $end
$var wire 1 A0 A [3] $end
$var wire 1 B0 A [2] $end
$var wire 1 C0 A [1] $end
$var wire 1 D0 A [0] $end
$var wire 1 E0 B [15] $end
$var wire 1 F0 B [14] $end
$var wire 1 G0 B [13] $end
$var wire 1 H0 B [12] $end
$var wire 1 I0 B [11] $end
$var wire 1 J0 B [10] $end
$var wire 1 K0 B [9] $end
$var wire 1 L0 B [8] $end
$var wire 1 M0 B [7] $end
$var wire 1 N0 B [6] $end
$var wire 1 O0 B [5] $end
$var wire 1 P0 B [4] $end
$var wire 1 Q0 B [3] $end
$var wire 1 R0 B [2] $end
$var wire 1 S0 B [1] $end
$var wire 1 T0 B [0] $end
$var wire 1 p. C_in $end
$var wire 1 c/ S [15] $end
$var wire 1 d/ S [14] $end
$var wire 1 e/ S [13] $end
$var wire 1 f/ S [12] $end
$var wire 1 g/ S [11] $end
$var wire 1 h/ S [10] $end
$var wire 1 i/ S [9] $end
$var wire 1 j/ S [8] $end
$var wire 1 k/ S [7] $end
$var wire 1 l/ S [6] $end
$var wire 1 m/ S [5] $end
$var wire 1 n/ S [4] $end
$var wire 1 o/ S [3] $end
$var wire 1 p/ S [2] $end
$var wire 1 q/ S [1] $end
$var wire 1 r/ S [0] $end
$var wire 1 U0 C_out $end
$var wire 1 01 C0 $end
$var wire 1 11 C1 $end
$var wire 1 21 C2 $end
$var wire 1 31 P0 $end
$var wire 1 41 P0_bar $end
$var wire 1 51 P1 $end
$var wire 1 61 P1_bar $end
$var wire 1 71 P2 $end
$var wire 1 81 P2_bar $end
$var wire 1 91 P3 $end
$var wire 1 :1 P3_bar $end
$var wire 1 ;1 G0 $end
$var wire 1 <1 G0_bar $end
$var wire 1 =1 G1 $end
$var wire 1 >1 G1_bar $end
$var wire 1 ?1 G2 $end
$var wire 1 @1 G2_bar $end
$var wire 1 A1 G3 $end
$var wire 1 B1 G3_bar $end
$var wire 1 C1 nand2_c0_0_out $end
$var wire 1 D1 nand2_c1_0_out $end
$var wire 1 E1 nand2_c2_0_out $end
$var wire 1 F1 nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 G1 N $end
$var wire 1 A0 A [3] $end
$var wire 1 B0 A [2] $end
$var wire 1 C0 A [1] $end
$var wire 1 D0 A [0] $end
$var wire 1 Q0 B [3] $end
$var wire 1 R0 B [2] $end
$var wire 1 S0 B [1] $end
$var wire 1 T0 B [0] $end
$var wire 1 p. C_in $end
$var wire 1 o/ S [3] $end
$var wire 1 p/ S [2] $end
$var wire 1 q/ S [1] $end
$var wire 1 r/ S [0] $end
$var wire 1 31 P $end
$var wire 1 ;1 G $end
$var wire 1 H1 C_out $end
$var wire 1 I1 c0 $end
$var wire 1 J1 c1 $end
$var wire 1 K1 c2 $end
$var wire 1 L1 p0 $end
$var wire 1 M1 g0 $end
$var wire 1 N1 p1 $end
$var wire 1 O1 g1 $end
$var wire 1 P1 p2 $end
$var wire 1 Q1 g2 $end
$var wire 1 R1 p3 $end
$var wire 1 S1 g3 $end
$var wire 1 T1 g0_bar $end
$var wire 1 U1 g1_bar $end
$var wire 1 V1 g2_bar $end
$var wire 1 W1 g3_bar $end
$var wire 1 X1 nand2_c0_0_out $end
$var wire 1 Y1 nand2_c1_0_out $end
$var wire 1 Z1 nand2_c2_0_out $end
$var wire 1 [1 nand2_c3_0_out $end
$var wire 1 \1 nand2_p3_p2 $end
$var wire 1 ]1 nand2_p1_p0 $end
$var wire 1 ^1 nand2_p3g2_out $end
$var wire 1 _1 nand2_p3p2g1_out $end
$var wire 1 `1 nand3_G_0_out $end
$var wire 1 a1 nand2_p1g0_out $end
$var wire 1 b1 nor2_G_0_out $end
$var wire 1 c1 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 M1 in1 $end
$var wire 1 T1 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 L1 in1 $end
$var wire 1 p. in2 $end
$var wire 1 X1 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 T1 in1 $end
$var wire 1 X1 in2 $end
$var wire 1 I1 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 O1 in1 $end
$var wire 1 U1 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 N1 in1 $end
$var wire 1 I1 in2 $end
$var wire 1 Y1 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 U1 in1 $end
$var wire 1 Y1 in2 $end
$var wire 1 J1 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 Q1 in1 $end
$var wire 1 V1 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 P1 in1 $end
$var wire 1 J1 in2 $end
$var wire 1 Z1 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 V1 in1 $end
$var wire 1 Z1 in2 $end
$var wire 1 K1 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 S1 in1 $end
$var wire 1 W1 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 R1 in1 $end
$var wire 1 K1 in2 $end
$var wire 1 [1 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 W1 in1 $end
$var wire 1 [1 in2 $end
$var wire 1 H1 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 R1 in1 $end
$var wire 1 P1 in2 $end
$var wire 1 \1 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 N1 in1 $end
$var wire 1 L1 in2 $end
$var wire 1 ]1 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 \1 in1 $end
$var wire 1 ]1 in2 $end
$var wire 1 31 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 R1 in1 $end
$var wire 1 Q1 in2 $end
$var wire 1 ^1 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 R1 in1 $end
$var wire 1 P1 in2 $end
$var wire 1 O1 in3 $end
$var wire 1 _1 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 W1 in1 $end
$var wire 1 ^1 in2 $end
$var wire 1 _1 in3 $end
$var wire 1 `1 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 N1 in1 $end
$var wire 1 M1 in2 $end
$var wire 1 a1 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 \1 in1 $end
$var wire 1 a1 in2 $end
$var wire 1 b1 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 `1 in1 $end
$var wire 1 b1 in2 $end
$var wire 1 c1 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 c1 in1 $end
$var wire 1 ;1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 D0 A $end
$var wire 1 T0 B $end
$var wire 1 p. C_in $end
$var wire 1 L1 p $end
$var wire 1 M1 g $end
$var wire 1 r/ S $end
$var wire 1 d1 C_out $end
$var wire 1 e1 g_bar $end
$var wire 1 f1 p_bar $end
$var wire 1 g1 nand2_1_out $end
$var wire 1 h1 nand2_2_out $end
$var wire 1 i1 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 D0 in1 $end
$var wire 1 T0 in2 $end
$var wire 1 e1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 e1 in1 $end
$var wire 1 M1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 D0 in1 $end
$var wire 1 T0 in2 $end
$var wire 1 f1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 f1 in1 $end
$var wire 1 L1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 D0 in1 $end
$var wire 1 T0 in2 $end
$var wire 1 g1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 D0 in1 $end
$var wire 1 p. in2 $end
$var wire 1 h1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 T0 in1 $end
$var wire 1 p. in2 $end
$var wire 1 i1 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 g1 in1 $end
$var wire 1 h1 in2 $end
$var wire 1 i1 in3 $end
$var wire 1 d1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 D0 in1 $end
$var wire 1 T0 in2 $end
$var wire 1 p. in3 $end
$var wire 1 r/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 C0 A $end
$var wire 1 S0 B $end
$var wire 1 I1 C_in $end
$var wire 1 N1 p $end
$var wire 1 O1 g $end
$var wire 1 q/ S $end
$var wire 1 j1 C_out $end
$var wire 1 k1 g_bar $end
$var wire 1 l1 p_bar $end
$var wire 1 m1 nand2_1_out $end
$var wire 1 n1 nand2_2_out $end
$var wire 1 o1 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 C0 in1 $end
$var wire 1 S0 in2 $end
$var wire 1 k1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 k1 in1 $end
$var wire 1 O1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 C0 in1 $end
$var wire 1 S0 in2 $end
$var wire 1 l1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 l1 in1 $end
$var wire 1 N1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 C0 in1 $end
$var wire 1 S0 in2 $end
$var wire 1 m1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 C0 in1 $end
$var wire 1 I1 in2 $end
$var wire 1 n1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 S0 in1 $end
$var wire 1 I1 in2 $end
$var wire 1 o1 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 m1 in1 $end
$var wire 1 n1 in2 $end
$var wire 1 o1 in3 $end
$var wire 1 j1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 C0 in1 $end
$var wire 1 S0 in2 $end
$var wire 1 I1 in3 $end
$var wire 1 q/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 B0 A $end
$var wire 1 R0 B $end
$var wire 1 J1 C_in $end
$var wire 1 P1 p $end
$var wire 1 Q1 g $end
$var wire 1 p/ S $end
$var wire 1 p1 C_out $end
$var wire 1 q1 g_bar $end
$var wire 1 r1 p_bar $end
$var wire 1 s1 nand2_1_out $end
$var wire 1 t1 nand2_2_out $end
$var wire 1 u1 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 B0 in1 $end
$var wire 1 R0 in2 $end
$var wire 1 q1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 q1 in1 $end
$var wire 1 Q1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 B0 in1 $end
$var wire 1 R0 in2 $end
$var wire 1 r1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 r1 in1 $end
$var wire 1 P1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 B0 in1 $end
$var wire 1 R0 in2 $end
$var wire 1 s1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 B0 in1 $end
$var wire 1 J1 in2 $end
$var wire 1 t1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 R0 in1 $end
$var wire 1 J1 in2 $end
$var wire 1 u1 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 s1 in1 $end
$var wire 1 t1 in2 $end
$var wire 1 u1 in3 $end
$var wire 1 p1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 B0 in1 $end
$var wire 1 R0 in2 $end
$var wire 1 J1 in3 $end
$var wire 1 p/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 A0 A $end
$var wire 1 Q0 B $end
$var wire 1 K1 C_in $end
$var wire 1 R1 p $end
$var wire 1 S1 g $end
$var wire 1 o/ S $end
$var wire 1 v1 C_out $end
$var wire 1 w1 g_bar $end
$var wire 1 x1 p_bar $end
$var wire 1 y1 nand2_1_out $end
$var wire 1 z1 nand2_2_out $end
$var wire 1 {1 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 A0 in1 $end
$var wire 1 Q0 in2 $end
$var wire 1 w1 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 w1 in1 $end
$var wire 1 S1 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 A0 in1 $end
$var wire 1 Q0 in2 $end
$var wire 1 x1 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 x1 in1 $end
$var wire 1 R1 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 A0 in1 $end
$var wire 1 Q0 in2 $end
$var wire 1 y1 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 A0 in1 $end
$var wire 1 K1 in2 $end
$var wire 1 z1 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Q0 in1 $end
$var wire 1 K1 in2 $end
$var wire 1 {1 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 y1 in1 $end
$var wire 1 z1 in2 $end
$var wire 1 {1 in3 $end
$var wire 1 v1 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 A0 in1 $end
$var wire 1 Q0 in2 $end
$var wire 1 K1 in3 $end
$var wire 1 o/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 |1 N $end
$var wire 1 =0 A [3] $end
$var wire 1 >0 A [2] $end
$var wire 1 ?0 A [1] $end
$var wire 1 @0 A [0] $end
$var wire 1 M0 B [3] $end
$var wire 1 N0 B [2] $end
$var wire 1 O0 B [1] $end
$var wire 1 P0 B [0] $end
$var wire 1 01 C_in $end
$var wire 1 k/ S [3] $end
$var wire 1 l/ S [2] $end
$var wire 1 m/ S [1] $end
$var wire 1 n/ S [0] $end
$var wire 1 51 P $end
$var wire 1 =1 G $end
$var wire 1 }1 C_out $end
$var wire 1 ~1 c0 $end
$var wire 1 !2 c1 $end
$var wire 1 "2 c2 $end
$var wire 1 #2 p0 $end
$var wire 1 $2 g0 $end
$var wire 1 %2 p1 $end
$var wire 1 &2 g1 $end
$var wire 1 '2 p2 $end
$var wire 1 (2 g2 $end
$var wire 1 )2 p3 $end
$var wire 1 *2 g3 $end
$var wire 1 +2 g0_bar $end
$var wire 1 ,2 g1_bar $end
$var wire 1 -2 g2_bar $end
$var wire 1 .2 g3_bar $end
$var wire 1 /2 nand2_c0_0_out $end
$var wire 1 02 nand2_c1_0_out $end
$var wire 1 12 nand2_c2_0_out $end
$var wire 1 22 nand2_c3_0_out $end
$var wire 1 32 nand2_p3_p2 $end
$var wire 1 42 nand2_p1_p0 $end
$var wire 1 52 nand2_p3g2_out $end
$var wire 1 62 nand2_p3p2g1_out $end
$var wire 1 72 nand3_G_0_out $end
$var wire 1 82 nand2_p1g0_out $end
$var wire 1 92 nor2_G_0_out $end
$var wire 1 :2 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 $2 in1 $end
$var wire 1 +2 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 #2 in1 $end
$var wire 1 01 in2 $end
$var wire 1 /2 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 +2 in1 $end
$var wire 1 /2 in2 $end
$var wire 1 ~1 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 &2 in1 $end
$var wire 1 ,2 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 %2 in1 $end
$var wire 1 ~1 in2 $end
$var wire 1 02 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 ,2 in1 $end
$var wire 1 02 in2 $end
$var wire 1 !2 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 (2 in1 $end
$var wire 1 -2 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 '2 in1 $end
$var wire 1 !2 in2 $end
$var wire 1 12 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 -2 in1 $end
$var wire 1 12 in2 $end
$var wire 1 "2 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 *2 in1 $end
$var wire 1 .2 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 )2 in1 $end
$var wire 1 "2 in2 $end
$var wire 1 22 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 .2 in1 $end
$var wire 1 22 in2 $end
$var wire 1 }1 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 )2 in1 $end
$var wire 1 '2 in2 $end
$var wire 1 32 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 %2 in1 $end
$var wire 1 #2 in2 $end
$var wire 1 42 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 32 in1 $end
$var wire 1 42 in2 $end
$var wire 1 51 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 )2 in1 $end
$var wire 1 (2 in2 $end
$var wire 1 52 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 )2 in1 $end
$var wire 1 '2 in2 $end
$var wire 1 &2 in3 $end
$var wire 1 62 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 .2 in1 $end
$var wire 1 52 in2 $end
$var wire 1 62 in3 $end
$var wire 1 72 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 %2 in1 $end
$var wire 1 $2 in2 $end
$var wire 1 82 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 32 in1 $end
$var wire 1 82 in2 $end
$var wire 1 92 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 72 in1 $end
$var wire 1 92 in2 $end
$var wire 1 :2 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 :2 in1 $end
$var wire 1 =1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 @0 A $end
$var wire 1 P0 B $end
$var wire 1 01 C_in $end
$var wire 1 #2 p $end
$var wire 1 $2 g $end
$var wire 1 n/ S $end
$var wire 1 ;2 C_out $end
$var wire 1 <2 g_bar $end
$var wire 1 =2 p_bar $end
$var wire 1 >2 nand2_1_out $end
$var wire 1 ?2 nand2_2_out $end
$var wire 1 @2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 @0 in1 $end
$var wire 1 P0 in2 $end
$var wire 1 <2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 <2 in1 $end
$var wire 1 $2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 @0 in1 $end
$var wire 1 P0 in2 $end
$var wire 1 =2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 =2 in1 $end
$var wire 1 #2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 @0 in1 $end
$var wire 1 P0 in2 $end
$var wire 1 >2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 @0 in1 $end
$var wire 1 01 in2 $end
$var wire 1 ?2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 P0 in1 $end
$var wire 1 01 in2 $end
$var wire 1 @2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 >2 in1 $end
$var wire 1 ?2 in2 $end
$var wire 1 @2 in3 $end
$var wire 1 ;2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 @0 in1 $end
$var wire 1 P0 in2 $end
$var wire 1 01 in3 $end
$var wire 1 n/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 ?0 A $end
$var wire 1 O0 B $end
$var wire 1 ~1 C_in $end
$var wire 1 %2 p $end
$var wire 1 &2 g $end
$var wire 1 m/ S $end
$var wire 1 A2 C_out $end
$var wire 1 B2 g_bar $end
$var wire 1 C2 p_bar $end
$var wire 1 D2 nand2_1_out $end
$var wire 1 E2 nand2_2_out $end
$var wire 1 F2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 ?0 in1 $end
$var wire 1 O0 in2 $end
$var wire 1 B2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 B2 in1 $end
$var wire 1 &2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 ?0 in1 $end
$var wire 1 O0 in2 $end
$var wire 1 C2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 C2 in1 $end
$var wire 1 %2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 ?0 in1 $end
$var wire 1 O0 in2 $end
$var wire 1 D2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 ?0 in1 $end
$var wire 1 ~1 in2 $end
$var wire 1 E2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 O0 in1 $end
$var wire 1 ~1 in2 $end
$var wire 1 F2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 D2 in1 $end
$var wire 1 E2 in2 $end
$var wire 1 F2 in3 $end
$var wire 1 A2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 ?0 in1 $end
$var wire 1 O0 in2 $end
$var wire 1 ~1 in3 $end
$var wire 1 m/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 >0 A $end
$var wire 1 N0 B $end
$var wire 1 !2 C_in $end
$var wire 1 '2 p $end
$var wire 1 (2 g $end
$var wire 1 l/ S $end
$var wire 1 G2 C_out $end
$var wire 1 H2 g_bar $end
$var wire 1 I2 p_bar $end
$var wire 1 J2 nand2_1_out $end
$var wire 1 K2 nand2_2_out $end
$var wire 1 L2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 >0 in1 $end
$var wire 1 N0 in2 $end
$var wire 1 H2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 H2 in1 $end
$var wire 1 (2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 >0 in1 $end
$var wire 1 N0 in2 $end
$var wire 1 I2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 I2 in1 $end
$var wire 1 '2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 >0 in1 $end
$var wire 1 N0 in2 $end
$var wire 1 J2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 >0 in1 $end
$var wire 1 !2 in2 $end
$var wire 1 K2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 N0 in1 $end
$var wire 1 !2 in2 $end
$var wire 1 L2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 J2 in1 $end
$var wire 1 K2 in2 $end
$var wire 1 L2 in3 $end
$var wire 1 G2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 >0 in1 $end
$var wire 1 N0 in2 $end
$var wire 1 !2 in3 $end
$var wire 1 l/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 =0 A $end
$var wire 1 M0 B $end
$var wire 1 "2 C_in $end
$var wire 1 )2 p $end
$var wire 1 *2 g $end
$var wire 1 k/ S $end
$var wire 1 M2 C_out $end
$var wire 1 N2 g_bar $end
$var wire 1 O2 p_bar $end
$var wire 1 P2 nand2_1_out $end
$var wire 1 Q2 nand2_2_out $end
$var wire 1 R2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 =0 in1 $end
$var wire 1 M0 in2 $end
$var wire 1 N2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 N2 in1 $end
$var wire 1 *2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 =0 in1 $end
$var wire 1 M0 in2 $end
$var wire 1 O2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 O2 in1 $end
$var wire 1 )2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 =0 in1 $end
$var wire 1 M0 in2 $end
$var wire 1 P2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 =0 in1 $end
$var wire 1 "2 in2 $end
$var wire 1 Q2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 M0 in1 $end
$var wire 1 "2 in2 $end
$var wire 1 R2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 P2 in1 $end
$var wire 1 Q2 in2 $end
$var wire 1 R2 in3 $end
$var wire 1 M2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 =0 in1 $end
$var wire 1 M0 in2 $end
$var wire 1 "2 in3 $end
$var wire 1 k/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 S2 N $end
$var wire 1 90 A [3] $end
$var wire 1 :0 A [2] $end
$var wire 1 ;0 A [1] $end
$var wire 1 <0 A [0] $end
$var wire 1 I0 B [3] $end
$var wire 1 J0 B [2] $end
$var wire 1 K0 B [1] $end
$var wire 1 L0 B [0] $end
$var wire 1 11 C_in $end
$var wire 1 g/ S [3] $end
$var wire 1 h/ S [2] $end
$var wire 1 i/ S [1] $end
$var wire 1 j/ S [0] $end
$var wire 1 71 P $end
$var wire 1 ?1 G $end
$var wire 1 T2 C_out $end
$var wire 1 U2 c0 $end
$var wire 1 V2 c1 $end
$var wire 1 W2 c2 $end
$var wire 1 X2 p0 $end
$var wire 1 Y2 g0 $end
$var wire 1 Z2 p1 $end
$var wire 1 [2 g1 $end
$var wire 1 \2 p2 $end
$var wire 1 ]2 g2 $end
$var wire 1 ^2 p3 $end
$var wire 1 _2 g3 $end
$var wire 1 `2 g0_bar $end
$var wire 1 a2 g1_bar $end
$var wire 1 b2 g2_bar $end
$var wire 1 c2 g3_bar $end
$var wire 1 d2 nand2_c0_0_out $end
$var wire 1 e2 nand2_c1_0_out $end
$var wire 1 f2 nand2_c2_0_out $end
$var wire 1 g2 nand2_c3_0_out $end
$var wire 1 h2 nand2_p3_p2 $end
$var wire 1 i2 nand2_p1_p0 $end
$var wire 1 j2 nand2_p3g2_out $end
$var wire 1 k2 nand2_p3p2g1_out $end
$var wire 1 l2 nand3_G_0_out $end
$var wire 1 m2 nand2_p1g0_out $end
$var wire 1 n2 nor2_G_0_out $end
$var wire 1 o2 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 Y2 in1 $end
$var wire 1 `2 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 X2 in1 $end
$var wire 1 11 in2 $end
$var wire 1 d2 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 `2 in1 $end
$var wire 1 d2 in2 $end
$var wire 1 U2 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 [2 in1 $end
$var wire 1 a2 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 Z2 in1 $end
$var wire 1 U2 in2 $end
$var wire 1 e2 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 a2 in1 $end
$var wire 1 e2 in2 $end
$var wire 1 V2 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ]2 in1 $end
$var wire 1 b2 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 \2 in1 $end
$var wire 1 V2 in2 $end
$var wire 1 f2 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 b2 in1 $end
$var wire 1 f2 in2 $end
$var wire 1 W2 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 _2 in1 $end
$var wire 1 c2 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 ^2 in1 $end
$var wire 1 W2 in2 $end
$var wire 1 g2 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 c2 in1 $end
$var wire 1 g2 in2 $end
$var wire 1 T2 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 ^2 in1 $end
$var wire 1 \2 in2 $end
$var wire 1 h2 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 Z2 in1 $end
$var wire 1 X2 in2 $end
$var wire 1 i2 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 h2 in1 $end
$var wire 1 i2 in2 $end
$var wire 1 71 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 ^2 in1 $end
$var wire 1 ]2 in2 $end
$var wire 1 j2 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 ^2 in1 $end
$var wire 1 \2 in2 $end
$var wire 1 [2 in3 $end
$var wire 1 k2 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 c2 in1 $end
$var wire 1 j2 in2 $end
$var wire 1 k2 in3 $end
$var wire 1 l2 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 Z2 in1 $end
$var wire 1 Y2 in2 $end
$var wire 1 m2 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 h2 in1 $end
$var wire 1 m2 in2 $end
$var wire 1 n2 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 l2 in1 $end
$var wire 1 n2 in2 $end
$var wire 1 o2 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 o2 in1 $end
$var wire 1 ?1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 <0 A $end
$var wire 1 L0 B $end
$var wire 1 11 C_in $end
$var wire 1 X2 p $end
$var wire 1 Y2 g $end
$var wire 1 j/ S $end
$var wire 1 p2 C_out $end
$var wire 1 q2 g_bar $end
$var wire 1 r2 p_bar $end
$var wire 1 s2 nand2_1_out $end
$var wire 1 t2 nand2_2_out $end
$var wire 1 u2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 <0 in1 $end
$var wire 1 L0 in2 $end
$var wire 1 q2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 q2 in1 $end
$var wire 1 Y2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 <0 in1 $end
$var wire 1 L0 in2 $end
$var wire 1 r2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 r2 in1 $end
$var wire 1 X2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 <0 in1 $end
$var wire 1 L0 in2 $end
$var wire 1 s2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 <0 in1 $end
$var wire 1 11 in2 $end
$var wire 1 t2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 L0 in1 $end
$var wire 1 11 in2 $end
$var wire 1 u2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 s2 in1 $end
$var wire 1 t2 in2 $end
$var wire 1 u2 in3 $end
$var wire 1 p2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 <0 in1 $end
$var wire 1 L0 in2 $end
$var wire 1 11 in3 $end
$var wire 1 j/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 ;0 A $end
$var wire 1 K0 B $end
$var wire 1 U2 C_in $end
$var wire 1 Z2 p $end
$var wire 1 [2 g $end
$var wire 1 i/ S $end
$var wire 1 v2 C_out $end
$var wire 1 w2 g_bar $end
$var wire 1 x2 p_bar $end
$var wire 1 y2 nand2_1_out $end
$var wire 1 z2 nand2_2_out $end
$var wire 1 {2 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 ;0 in1 $end
$var wire 1 K0 in2 $end
$var wire 1 w2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 w2 in1 $end
$var wire 1 [2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 ;0 in1 $end
$var wire 1 K0 in2 $end
$var wire 1 x2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 x2 in1 $end
$var wire 1 Z2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 ;0 in1 $end
$var wire 1 K0 in2 $end
$var wire 1 y2 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 ;0 in1 $end
$var wire 1 U2 in2 $end
$var wire 1 z2 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 K0 in1 $end
$var wire 1 U2 in2 $end
$var wire 1 {2 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 y2 in1 $end
$var wire 1 z2 in2 $end
$var wire 1 {2 in3 $end
$var wire 1 v2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 ;0 in1 $end
$var wire 1 K0 in2 $end
$var wire 1 U2 in3 $end
$var wire 1 i/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 :0 A $end
$var wire 1 J0 B $end
$var wire 1 V2 C_in $end
$var wire 1 \2 p $end
$var wire 1 ]2 g $end
$var wire 1 h/ S $end
$var wire 1 |2 C_out $end
$var wire 1 }2 g_bar $end
$var wire 1 ~2 p_bar $end
$var wire 1 !3 nand2_1_out $end
$var wire 1 "3 nand2_2_out $end
$var wire 1 #3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 :0 in1 $end
$var wire 1 J0 in2 $end
$var wire 1 }2 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 }2 in1 $end
$var wire 1 ]2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 :0 in1 $end
$var wire 1 J0 in2 $end
$var wire 1 ~2 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ~2 in1 $end
$var wire 1 \2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 :0 in1 $end
$var wire 1 J0 in2 $end
$var wire 1 !3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 :0 in1 $end
$var wire 1 V2 in2 $end
$var wire 1 "3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 J0 in1 $end
$var wire 1 V2 in2 $end
$var wire 1 #3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 !3 in1 $end
$var wire 1 "3 in2 $end
$var wire 1 #3 in3 $end
$var wire 1 |2 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 :0 in1 $end
$var wire 1 J0 in2 $end
$var wire 1 V2 in3 $end
$var wire 1 h/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 90 A $end
$var wire 1 I0 B $end
$var wire 1 W2 C_in $end
$var wire 1 ^2 p $end
$var wire 1 _2 g $end
$var wire 1 g/ S $end
$var wire 1 $3 C_out $end
$var wire 1 %3 g_bar $end
$var wire 1 &3 p_bar $end
$var wire 1 '3 nand2_1_out $end
$var wire 1 (3 nand2_2_out $end
$var wire 1 )3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 90 in1 $end
$var wire 1 I0 in2 $end
$var wire 1 %3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 %3 in1 $end
$var wire 1 _2 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 90 in1 $end
$var wire 1 I0 in2 $end
$var wire 1 &3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 &3 in1 $end
$var wire 1 ^2 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 90 in1 $end
$var wire 1 I0 in2 $end
$var wire 1 '3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 90 in1 $end
$var wire 1 W2 in2 $end
$var wire 1 (3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 I0 in1 $end
$var wire 1 W2 in2 $end
$var wire 1 )3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 '3 in1 $end
$var wire 1 (3 in2 $end
$var wire 1 )3 in3 $end
$var wire 1 $3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 90 in1 $end
$var wire 1 I0 in2 $end
$var wire 1 W2 in3 $end
$var wire 1 g/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 *3 N $end
$var wire 1 50 A [3] $end
$var wire 1 60 A [2] $end
$var wire 1 70 A [1] $end
$var wire 1 80 A [0] $end
$var wire 1 E0 B [3] $end
$var wire 1 F0 B [2] $end
$var wire 1 G0 B [1] $end
$var wire 1 H0 B [0] $end
$var wire 1 21 C_in $end
$var wire 1 c/ S [3] $end
$var wire 1 d/ S [2] $end
$var wire 1 e/ S [1] $end
$var wire 1 f/ S [0] $end
$var wire 1 91 P $end
$var wire 1 A1 G $end
$var wire 1 +3 C_out $end
$var wire 1 ,3 c0 $end
$var wire 1 -3 c1 $end
$var wire 1 .3 c2 $end
$var wire 1 /3 p0 $end
$var wire 1 03 g0 $end
$var wire 1 13 p1 $end
$var wire 1 23 g1 $end
$var wire 1 33 p2 $end
$var wire 1 43 g2 $end
$var wire 1 53 p3 $end
$var wire 1 63 g3 $end
$var wire 1 73 g0_bar $end
$var wire 1 83 g1_bar $end
$var wire 1 93 g2_bar $end
$var wire 1 :3 g3_bar $end
$var wire 1 ;3 nand2_c0_0_out $end
$var wire 1 <3 nand2_c1_0_out $end
$var wire 1 =3 nand2_c2_0_out $end
$var wire 1 >3 nand2_c3_0_out $end
$var wire 1 ?3 nand2_p3_p2 $end
$var wire 1 @3 nand2_p1_p0 $end
$var wire 1 A3 nand2_p3g2_out $end
$var wire 1 B3 nand2_p3p2g1_out $end
$var wire 1 C3 nand3_G_0_out $end
$var wire 1 D3 nand2_p1g0_out $end
$var wire 1 E3 nor2_G_0_out $end
$var wire 1 F3 G_bar $end

$scope module not1_c0_0 $end
$var wire 1 03 in1 $end
$var wire 1 73 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 /3 in1 $end
$var wire 1 21 in2 $end
$var wire 1 ;3 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 73 in1 $end
$var wire 1 ;3 in2 $end
$var wire 1 ,3 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 23 in1 $end
$var wire 1 83 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 13 in1 $end
$var wire 1 ,3 in2 $end
$var wire 1 <3 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 83 in1 $end
$var wire 1 <3 in2 $end
$var wire 1 -3 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 43 in1 $end
$var wire 1 93 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 33 in1 $end
$var wire 1 -3 in2 $end
$var wire 1 =3 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 93 in1 $end
$var wire 1 =3 in2 $end
$var wire 1 .3 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 63 in1 $end
$var wire 1 :3 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 53 in1 $end
$var wire 1 .3 in2 $end
$var wire 1 >3 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 :3 in1 $end
$var wire 1 >3 in2 $end
$var wire 1 +3 out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 53 in1 $end
$var wire 1 33 in2 $end
$var wire 1 ?3 out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 13 in1 $end
$var wire 1 /3 in2 $end
$var wire 1 @3 out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 ?3 in1 $end
$var wire 1 @3 in2 $end
$var wire 1 91 out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 53 in1 $end
$var wire 1 43 in2 $end
$var wire 1 A3 out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 53 in1 $end
$var wire 1 33 in2 $end
$var wire 1 23 in3 $end
$var wire 1 B3 out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 :3 in1 $end
$var wire 1 A3 in2 $end
$var wire 1 B3 in3 $end
$var wire 1 C3 out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 13 in1 $end
$var wire 1 03 in2 $end
$var wire 1 D3 out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 ?3 in1 $end
$var wire 1 D3 in2 $end
$var wire 1 E3 out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 C3 in1 $end
$var wire 1 E3 in2 $end
$var wire 1 F3 out $end
$upscope $end

$scope module not1_G $end
$var wire 1 F3 in1 $end
$var wire 1 A1 out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 80 A $end
$var wire 1 H0 B $end
$var wire 1 21 C_in $end
$var wire 1 /3 p $end
$var wire 1 03 g $end
$var wire 1 f/ S $end
$var wire 1 G3 C_out $end
$var wire 1 H3 g_bar $end
$var wire 1 I3 p_bar $end
$var wire 1 J3 nand2_1_out $end
$var wire 1 K3 nand2_2_out $end
$var wire 1 L3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 H3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 H3 in1 $end
$var wire 1 03 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 I3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 I3 in1 $end
$var wire 1 /3 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 J3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 80 in1 $end
$var wire 1 21 in2 $end
$var wire 1 K3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 H0 in1 $end
$var wire 1 21 in2 $end
$var wire 1 L3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 J3 in1 $end
$var wire 1 K3 in2 $end
$var wire 1 L3 in3 $end
$var wire 1 G3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 80 in1 $end
$var wire 1 H0 in2 $end
$var wire 1 21 in3 $end
$var wire 1 f/ out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 70 A $end
$var wire 1 G0 B $end
$var wire 1 ,3 C_in $end
$var wire 1 13 p $end
$var wire 1 23 g $end
$var wire 1 e/ S $end
$var wire 1 M3 C_out $end
$var wire 1 N3 g_bar $end
$var wire 1 O3 p_bar $end
$var wire 1 P3 nand2_1_out $end
$var wire 1 Q3 nand2_2_out $end
$var wire 1 R3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 N3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 N3 in1 $end
$var wire 1 23 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 O3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 O3 in1 $end
$var wire 1 13 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 P3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 70 in1 $end
$var wire 1 ,3 in2 $end
$var wire 1 Q3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 G0 in1 $end
$var wire 1 ,3 in2 $end
$var wire 1 R3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 P3 in1 $end
$var wire 1 Q3 in2 $end
$var wire 1 R3 in3 $end
$var wire 1 M3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 70 in1 $end
$var wire 1 G0 in2 $end
$var wire 1 ,3 in3 $end
$var wire 1 e/ out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 60 A $end
$var wire 1 F0 B $end
$var wire 1 -3 C_in $end
$var wire 1 33 p $end
$var wire 1 43 g $end
$var wire 1 d/ S $end
$var wire 1 S3 C_out $end
$var wire 1 T3 g_bar $end
$var wire 1 U3 p_bar $end
$var wire 1 V3 nand2_1_out $end
$var wire 1 W3 nand2_2_out $end
$var wire 1 X3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 T3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 T3 in1 $end
$var wire 1 43 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 U3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 U3 in1 $end
$var wire 1 33 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 V3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 60 in1 $end
$var wire 1 -3 in2 $end
$var wire 1 W3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 F0 in1 $end
$var wire 1 -3 in2 $end
$var wire 1 X3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 V3 in1 $end
$var wire 1 W3 in2 $end
$var wire 1 X3 in3 $end
$var wire 1 S3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 60 in1 $end
$var wire 1 F0 in2 $end
$var wire 1 -3 in3 $end
$var wire 1 d/ out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 50 A $end
$var wire 1 E0 B $end
$var wire 1 .3 C_in $end
$var wire 1 53 p $end
$var wire 1 63 g $end
$var wire 1 c/ S $end
$var wire 1 Y3 C_out $end
$var wire 1 Z3 g_bar $end
$var wire 1 [3 p_bar $end
$var wire 1 \3 nand2_1_out $end
$var wire 1 ]3 nand2_2_out $end
$var wire 1 ^3 nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 Z3 out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 Z3 in1 $end
$var wire 1 63 out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 [3 out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 [3 in1 $end
$var wire 1 53 out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 \3 out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 50 in1 $end
$var wire 1 .3 in2 $end
$var wire 1 ]3 out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 E0 in1 $end
$var wire 1 .3 in2 $end
$var wire 1 ^3 out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 \3 in1 $end
$var wire 1 ]3 in2 $end
$var wire 1 ^3 in3 $end
$var wire 1 Y3 out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 50 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 .3 in3 $end
$var wire 1 c/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 ;1 in1 $end
$var wire 1 <1 out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 31 in1 $end
$var wire 1 p. in2 $end
$var wire 1 C1 out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 <1 in1 $end
$var wire 1 C1 in2 $end
$var wire 1 01 out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 =1 in1 $end
$var wire 1 >1 out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 51 in1 $end
$var wire 1 01 in2 $end
$var wire 1 D1 out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 >1 in1 $end
$var wire 1 D1 in2 $end
$var wire 1 11 out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ?1 in1 $end
$var wire 1 @1 out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 71 in1 $end
$var wire 1 11 in2 $end
$var wire 1 E1 out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 @1 in1 $end
$var wire 1 E1 in2 $end
$var wire 1 21 out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 A1 in1 $end
$var wire 1 B1 out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 91 in1 $end
$var wire 1 21 in2 $end
$var wire 1 F1 out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 B1 in1 $end
$var wire 1 F1 in2 $end
$var wire 1 U0 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module memoryStage $end
$var wire 1 (! memRead $end
$var wire 1 '! memWrite $end
$var wire 1 )! memToReg $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var wire 1 .! halt $end
$var wire 1 i" wrData [15] $end
$var wire 1 j" wrData [14] $end
$var wire 1 k" wrData [13] $end
$var wire 1 l" wrData [12] $end
$var wire 1 m" wrData [11] $end
$var wire 1 n" wrData [10] $end
$var wire 1 o" wrData [9] $end
$var wire 1 p" wrData [8] $end
$var wire 1 q" wrData [7] $end
$var wire 1 r" wrData [6] $end
$var wire 1 s" wrData [5] $end
$var wire 1 t" wrData [4] $end
$var wire 1 u" wrData [3] $end
$var wire 1 v" wrData [2] $end
$var wire 1 w" wrData [1] $end
$var wire 1 x" wrData [0] $end
$var wire 1 Y" aluOut [15] $end
$var wire 1 Z" aluOut [14] $end
$var wire 1 [" aluOut [13] $end
$var wire 1 \" aluOut [12] $end
$var wire 1 ]" aluOut [11] $end
$var wire 1 ^" aluOut [10] $end
$var wire 1 _" aluOut [9] $end
$var wire 1 `" aluOut [8] $end
$var wire 1 a" aluOut [7] $end
$var wire 1 b" aluOut [6] $end
$var wire 1 c" aluOut [5] $end
$var wire 1 d" aluOut [4] $end
$var wire 1 e" aluOut [3] $end
$var wire 1 f" aluOut [2] $end
$var wire 1 g" aluOut [1] $end
$var wire 1 h" aluOut [0] $end
$var wire 1 {# memoryOut [15] $end
$var wire 1 |# memoryOut [14] $end
$var wire 1 }# memoryOut [13] $end
$var wire 1 ~# memoryOut [12] $end
$var wire 1 !$ memoryOut [11] $end
$var wire 1 "$ memoryOut [10] $end
$var wire 1 #$ memoryOut [9] $end
$var wire 1 $$ memoryOut [8] $end
$var wire 1 %$ memoryOut [7] $end
$var wire 1 &$ memoryOut [6] $end
$var wire 1 '$ memoryOut [5] $end
$var wire 1 ($ memoryOut [4] $end
$var wire 1 )$ memoryOut [3] $end
$var wire 1 *$ memoryOut [2] $end
$var wire 1 +$ memoryOut [1] $end
$var wire 1 ,$ memoryOut [0] $end

$scope module data_mem $end
$var wire 1 {# data_out [15] $end
$var wire 1 |# data_out [14] $end
$var wire 1 }# data_out [13] $end
$var wire 1 ~# data_out [12] $end
$var wire 1 !$ data_out [11] $end
$var wire 1 "$ data_out [10] $end
$var wire 1 #$ data_out [9] $end
$var wire 1 $$ data_out [8] $end
$var wire 1 %$ data_out [7] $end
$var wire 1 &$ data_out [6] $end
$var wire 1 '$ data_out [5] $end
$var wire 1 ($ data_out [4] $end
$var wire 1 )$ data_out [3] $end
$var wire 1 *$ data_out [2] $end
$var wire 1 +$ data_out [1] $end
$var wire 1 ,$ data_out [0] $end
$var wire 1 i" data_in [15] $end
$var wire 1 j" data_in [14] $end
$var wire 1 k" data_in [13] $end
$var wire 1 l" data_in [12] $end
$var wire 1 m" data_in [11] $end
$var wire 1 n" data_in [10] $end
$var wire 1 o" data_in [9] $end
$var wire 1 p" data_in [8] $end
$var wire 1 q" data_in [7] $end
$var wire 1 r" data_in [6] $end
$var wire 1 s" data_in [5] $end
$var wire 1 t" data_in [4] $end
$var wire 1 u" data_in [3] $end
$var wire 1 v" data_in [2] $end
$var wire 1 w" data_in [1] $end
$var wire 1 x" data_in [0] $end
$var wire 1 Y" addr [15] $end
$var wire 1 Z" addr [14] $end
$var wire 1 [" addr [13] $end
$var wire 1 \" addr [12] $end
$var wire 1 ]" addr [11] $end
$var wire 1 ^" addr [10] $end
$var wire 1 _" addr [9] $end
$var wire 1 `" addr [8] $end
$var wire 1 a" addr [7] $end
$var wire 1 b" addr [6] $end
$var wire 1 c" addr [5] $end
$var wire 1 d" addr [4] $end
$var wire 1 e" addr [3] $end
$var wire 1 f" addr [2] $end
$var wire 1 g" addr [1] $end
$var wire 1 h" addr [0] $end
$var wire 1 (! enable $end
$var wire 1 '! wr $end
$var wire 1 | createdump $end
$var wire 1 | clk $end
$var wire 1 ~ rst $end
$var reg 1 _3 loaded $end
$var reg 17 `3 largest [16:0] $end
$var integer 32 a3 mcd $end
$var integer 32 b3 i $end
$upscope $end
$upscope $end

$scope module wbStage $end
$var wire 1 )! memToReg $end
$var wire 1 4! lbi $end
$var wire 1 {# memData [15] $end
$var wire 1 |# memData [14] $end
$var wire 1 }# memData [13] $end
$var wire 1 ~# memData [12] $end
$var wire 1 !$ memData [11] $end
$var wire 1 "$ memData [10] $end
$var wire 1 #$ memData [9] $end
$var wire 1 $$ memData [8] $end
$var wire 1 %$ memData [7] $end
$var wire 1 &$ memData [6] $end
$var wire 1 '$ memData [5] $end
$var wire 1 ($ memData [4] $end
$var wire 1 )$ memData [3] $end
$var wire 1 *$ memData [2] $end
$var wire 1 +$ memData [1] $end
$var wire 1 ,$ memData [0] $end
$var wire 1 Y" aluOut [15] $end
$var wire 1 Z" aluOut [14] $end
$var wire 1 [" aluOut [13] $end
$var wire 1 \" aluOut [12] $end
$var wire 1 ]" aluOut [11] $end
$var wire 1 ^" aluOut [10] $end
$var wire 1 _" aluOut [9] $end
$var wire 1 `" aluOut [8] $end
$var wire 1 a" aluOut [7] $end
$var wire 1 b" aluOut [6] $end
$var wire 1 c" aluOut [5] $end
$var wire 1 d" aluOut [4] $end
$var wire 1 e" aluOut [3] $end
$var wire 1 f" aluOut [2] $end
$var wire 1 g" aluOut [1] $end
$var wire 1 h" aluOut [0] $end
$var wire 1 w! immVal [15] $end
$var wire 1 x! immVal [14] $end
$var wire 1 y! immVal [13] $end
$var wire 1 z! immVal [12] $end
$var wire 1 {! immVal [11] $end
$var wire 1 |! immVal [10] $end
$var wire 1 }! immVal [9] $end
$var wire 1 ~! immVal [8] $end
$var wire 1 !" immVal [7] $end
$var wire 1 "" immVal [6] $end
$var wire 1 #" immVal [5] $end
$var wire 1 $" immVal [4] $end
$var wire 1 %" immVal [3] $end
$var wire 1 &" immVal [2] $end
$var wire 1 '" immVal [1] $end
$var wire 1 (" immVal [0] $end
$var wire 1 k# writeData [15] $end
$var wire 1 l# writeData [14] $end
$var wire 1 m# writeData [13] $end
$var wire 1 n# writeData [12] $end
$var wire 1 o# writeData [11] $end
$var wire 1 p# writeData [10] $end
$var wire 1 q# writeData [9] $end
$var wire 1 r# writeData [8] $end
$var wire 1 s# writeData [7] $end
$var wire 1 t# writeData [6] $end
$var wire 1 u# writeData [5] $end
$var wire 1 v# writeData [4] $end
$var wire 1 w# writeData [3] $end
$var wire 1 x# writeData [2] $end
$var wire 1 y# writeData [1] $end
$var wire 1 z# writeData [0] $end
$var wire 1 c3 inter_writeData [15] $end
$var wire 1 d3 inter_writeData [14] $end
$var wire 1 e3 inter_writeData [13] $end
$var wire 1 f3 inter_writeData [12] $end
$var wire 1 g3 inter_writeData [11] $end
$var wire 1 h3 inter_writeData [10] $end
$var wire 1 i3 inter_writeData [9] $end
$var wire 1 j3 inter_writeData [8] $end
$var wire 1 k3 inter_writeData [7] $end
$var wire 1 l3 inter_writeData [6] $end
$var wire 1 m3 inter_writeData [5] $end
$var wire 1 n3 inter_writeData [4] $end
$var wire 1 o3 inter_writeData [3] $end
$var wire 1 p3 inter_writeData [2] $end
$var wire 1 q3 inter_writeData [1] $end
$var wire 1 r3 inter_writeData [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1g$
b0 h$
0L)
0M)
0N)
0O)
0P)
0Q)
0R)
0S)
0T)
0U)
0V)
0W)
0X)
0Y)
0Z)
0[)
0|)
0})
0~)
0!*
0"*
0#*
0$*
0%*
0&*
0'*
0(*
0)*
0**
0+*
0,*
0-*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
0U*
0V*
0W*
0X*
0Y*
0Z*
0[*
0\*
0]*
0~*
0!+
0"+
0#+
0$+
0%+
0&+
0'+
0(+
0)+
0*+
0++
0,+
0-+
0.+
0/+
0P+
0Q+
0R+
0S+
0T+
0U+
0V+
0W+
0X+
0Y+
0Z+
0[+
0\+
0]+
0^+
0_+
0",
0#,
0$,
0%,
0&,
0',
0(,
0),
0*,
0+,
0,,
0-,
0.,
0/,
00,
01,
0R,
0S,
0T,
0U,
0V,
0W,
0X,
0Y,
0Z,
0[,
0\,
0],
0^,
0_,
0`,
0a,
0$-
0%-
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
00-
01-
02-
03-
bx 4-
bx 5-
bx V0
bx W0
bx X0
bx Y0
1_3
b0 `3
1!!
1"!
b0 -$
10$
11$
02$
03$
04$
05$
06$
07$
08$
09$
0:$
0;$
1<$
0=$
0>$
1?$
1@$
0A$
0B$
0C$
b0 D$
b10000 k$
b100 7%
b100 l%
b100 C&
b100 x&
b10000 O'
b10000 n.
b11 o.
b10000 Z0
b100 [0
b10 \0
b10000 /1
b100 G1
b100 |1
b100 S2
b100 *3
bx i$
b10000000000000000 j$
bx a3
b10000000000000000 b3
b0 x
b10 y
b100 z
b1 #!
0~$
0!%
0"%
0#%
z$%
0%%
z&%
0'%
z(%
0)%
z*%
0+%
1,%
0-%
1.%
0/%
10%
01%
12%
13%
14%
15%
16%
09%
0:%
0;%
0<%
0=%
1>%
0?%
0@%
0A%
0B%
0C%
1D%
1E%
1F%
1G%
1H%
1I%
1J%
1K%
1L%
1M%
1N%
1O%
0P%
1Q%
0R%
1S%
1U%
1V%
1W%
1X%
1Y%
1[%
0\%
1]%
1^%
1_%
1a%
1b%
1c%
1d%
1e%
1g%
1h%
1i%
1j%
1k%
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
1y%
1z%
1{%
1|%
1}%
1~%
1!&
1"&
1#&
1$&
1%&
1&&
0'&
1(&
0)&
1*&
1,&
1-&
1.&
1/&
10&
12&
13&
14&
15&
16&
18&
19&
1:&
1;&
1<&
1>&
1?&
1@&
1A&
1B&
0E&
0F&
0G&
0H&
0I&
0J&
0K&
0L&
0M&
0N&
0O&
1P&
1Q&
1R&
1S&
1T&
1U&
1V&
1W&
1X&
1Y&
1Z&
1[&
0\&
1]&
0^&
1_&
1a&
1b&
1c&
1d&
1e&
1g&
1h&
1i&
1j&
1k&
1m&
1n&
1o&
1p&
1q&
1s&
1t&
1u&
1v&
1w&
0z&
0{&
0|&
0}&
0~&
0!'
0"'
0#'
0$'
0%'
0&'
1''
1('
1)'
1*'
1+'
1,'
1-'
1.'
1/'
10'
11'
12'
03'
14'
05'
16'
18'
19'
1:'
1;'
1<'
1>'
1?'
1@'
1A'
1B'
1D'
1E'
1F'
1G'
1H'
1J'
1K'
1L'
1M'
1N'
zW'
zV'
zU'
zT'
zS'
zR'
zQ'
zP'
0_'
1^'
0]'
0\'
0['
0Z'
0Y'
0X'
xo'
xn'
xm'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x!(
x~'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
x1(
x0(
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
xQ(
xP(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xa(
x`(
x_(
x^(
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xq(
xp(
xo(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
x#)
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
0$)
1%)
0&)
0')
0()
0))
0*)
0+)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
x1)
x0)
x/)
x.)
x-)
x,)
xK)
xJ)
xI)
xH)
xG)
xF)
xE)
xD)
xC)
xB)
xA)
x@)
x?)
x>)
x=)
x<)
0k)
0j)
1i)
0h)
0g)
1f)
1e)
0d)
0c)
0b)
0a)
0`)
0_)
0^)
0])
0\)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
xp)
xo)
xn)
xm)
xl)
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
x3*
x2*
x1*
x0*
x/*
x.*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xC*
xB*
xA*
x@*
x?*
x>*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
xv*
xu*
xt*
xs*
xr*
xq*
xp*
xo*
xn*
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
x3+
x2+
x1+
x0+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xC+
xB+
xA+
x@+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
xc+
xb+
xa+
x`+
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
xt+
xs+
xr+
xq+
xp+
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xq,
xp,
xo,
xn,
xm,
xl,
xk,
xj,
xi,
xh,
xg,
xf,
xe,
xd,
xc,
xb,
x#-
x"-
x!-
x~,
x},
x|,
x{,
xz,
xy,
xx,
xw,
xv,
xu,
xt,
xs,
xr,
x.$
x/$
0E-
0D-
1C-
0B-
0A-
1@-
1?-
0>-
0=-
0<-
0;-
0:-
09-
08-
07-
06-
0U-
1T-
1S-
0R-
0Q-
1P-
1O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
0u-
0t-
1s-
0r-
0q-
1p-
1o-
0n-
0m-
0l-
0k-
0j-
0i-
0h-
0g-
0f-
0'.
0&.
0%.
1$.
0#.
0".
1!.
1~-
0}-
0|-
0{-
0z-
0y-
0x-
0w-
0v-
07.
06.
15.
04.
03.
12.
11.
00.
1/.
0..
0-.
0,.
0+.
0*.
0).
0(.
0G.
0F.
1E.
0D.
0C.
1B.
1A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
0W.
1V.
0U.
0T.
0S.
0R.
0Q.
0P.
0O.
0N.
0M.
0L.
0K.
0J.
0I.
0H.
xg.
xf.
xe.
xd.
xc.
xb.
xa.
x`.
x_.
x^.
x].
x\.
x[.
xZ.
xY.
xX.
0j.
0i.
1h.
xk.
xl.
xm.
x"/
x!/
x~.
x}.
x|.
x{.
xz.
xy.
xx.
xw.
xv.
xu.
xt.
xs.
xr.
xq.
x2/
x1/
x0/
x//
x./
x-/
x,/
x+/
x*/
x)/
x(/
x'/
x&/
x%/
x$/
x#/
xB/
xA/
0@/
x?/
x>/
0=/
0</
x;/
x:/
x9/
x8/
x7/
x6/
x5/
x4/
x3/
xR/
xQ/
1P/
xO/
xN/
1M/
1L/
xK/
xJ/
xI/
xH/
xG/
xF/
xE/
xD/
xC/
xb/
xa/
x`/
x_/
x^/
x]/
x\/
x[/
xZ/
xY/
xX/
xW/
xV/
xU/
xT/
xS/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xh/
xg/
xf/
xe/
xd/
xc/
x$0
x#0
x"0
x!0
x~/
x}/
x|/
x{/
xz/
xy/
xx/
xw/
xv/
xu/
xt/
xs/
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
x(0
x'0
x&0
x%0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
x80
x70
x60
x50
0T0
0S0
1R0
0Q0
0P0
1O0
1N0
0M0
0L0
0K0
0J0
0I0
0H0
0G0
0F0
0E0
xU0
xl0
xk0
xj0
xi0
xh0
xg0
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x|0
x{0
xz0
xy0
xx0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
x.1
x-1
x,1
x+1
x*1
x)1
x(1
x'1
x&1
x%1
x$1
x#1
x"1
x!1
x~0
x}0
x01
x11
x21
x31
z41
x51
z61
x71
z81
x91
z:1
x;1
x<1
x=1
x>1
0?1
1@1
0A1
1B1
1C1
xD1
xE1
xF1
0I1
0J1
xK1
xL1
0M1
xN1
0O1
1P1
xQ1
xR1
0S1
1T1
1U1
xV1
1W1
1X1
1Y1
1Z1
x[1
x\1
x]1
x^1
1_1
x`1
1a1
0b1
xc1
1e1
xf1
1g1
1h1
1i1
1k1
xl1
1m1
1n1
1o1
xq1
0r1
xs1
1t1
1u1
1w1
xx1
1y1
xz1
1{1
x~1
x!2
x"2
x#2
0$2
1%2
x&2
1'2
x(2
x)2
0*2
1+2
x,2
x-2
1.2
x/2
x02
x12
x22
x32
x42
x52
x62
x72
182
092
x:2
1<2
x=2
1>2
x?2
1@2
xB2
0C2
xD2
xE2
xF2
xH2
0I2
xJ2
xK2
xL2
1N2
xO2
1P2
xQ2
1R2
xU2
xV2
xW2
xX2
0Y2
xZ2
0[2
x\2
0]2
x^2
0_2
1`2
1a2
1b2
1c2
xd2
xe2
xf2
xg2
xh2
xi2
1j2
1k2
0l2
1m2
0n2
1o2
1q2
xr2
1s2
xt2
1u2
1w2
xx2
1y2
xz2
1{2
1}2
x~2
1!3
x"3
1#3
1%3
x&3
1'3
x(3
1)3
x,3
x-3
x.3
x/3
003
x13
023
x33
043
x53
063
173
183
193
1:3
x;3
x<3
x=3
x>3
x?3
x@3
1A3
1B3
0C3
1D3
0E3
1F3
1H3
xI3
1J3
xK3
1L3
1N3
xO3
1P3
xQ3
1R3
1T3
xU3
1V3
xW3
1X3
1Z3
x[3
1\3
x]3
1^3
xr3
xq3
xp3
xo3
xn3
xm3
xl3
xk3
xj3
xi3
xh3
xg3
xf3
xe3
xd3
xc3
1{
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0H$
0G$
1F$
0E$
0|$
0{$
1z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0}$
08%
0T%
0Z%
0`%
0f%
0m%
0+&
01&
07&
0=&
0D&
0`&
0f&
0l&
0r&
0y&
07'
0='
0C'
0I'
0p.
xH1
0d1
0j1
xp1
xv1
x}1
x;2
xA2
xG2
xM2
xT2
xp2
xv2
x|2
x$3
x+3
xG3
xM3
xS3
xY3
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0@
0?
1>
0=
0<
1;
1:
09
18
07
06
05
04
03
12
11
1A
1D
0C
0B
0T
0S
1R
0Q
0P
1O
1N
0M
0L
0K
0J
0I
0H
0G
0F
0E
0U
0V
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
zv
zu
zt
zs
zr
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
0w
1|
0}
1~
1$!
0%!
1&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
10!
01!
02!
13!
14!
z5!
06!
07!
08!
0:!
09!
1=!
0<!
0;!
1@!
0?!
0>!
1C!
1B!
0A!
1F!
0E!
0D!
0V!
0U!
1T!
0S!
0R!
1Q!
1P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0f!
0e!
1d!
0c!
0b!
1a!
1`!
0_!
1^!
0]!
0\!
0[!
0Z!
0Y!
1X!
1W!
0v!
1u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0("
0'"
1&"
0%"
0$"
1#"
1""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
08"
07"
16"
05"
04"
13"
12"
01"
10"
0/"
0."
0-"
0,"
0+"
1*"
1)"
0H"
0G"
1F"
0E"
0D"
1C"
1B"
0A"
1@"
0?"
0>"
0="
0<"
0;"
1:"
19"
0X"
1W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
zx"
zw"
zv"
zu"
zt"
zs"
zr"
zq"
zp"
zo"
zn"
zm"
zl"
zk"
zj"
zi"
z*#
z)#
z(#
z'#
z&#
z%#
z$#
z##
z"#
z!#
z~"
z}"
z|"
z{"
zz"
zy"
z:#
z9#
z8#
z7#
z6#
z5#
z4#
z3#
z2#
z1#
z0#
z/#
z.#
z-#
z,#
z+#
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
zj#
zi#
zh#
zg#
zf#
ze#
zd#
zc#
zb#
za#
z`#
z_#
z^#
z]#
z\#
z[#
0z#
0y#
1x#
0w#
0v#
1u#
1t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0f$
1e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
$end
#1
0r,
0s,
0t,
0u,
0v,
0w,
0x,
0y,
0z,
0{,
0|,
0},
0~,
0!-
0"-
0#-
0B,
0C,
0D,
0E,
0F,
0G,
0H,
0I,
0J,
0K,
0L,
0M,
0N,
0O,
0P,
0Q,
0p+
0q+
0r+
0s+
0t+
0u+
0v+
0w+
0x+
0y+
0z+
0{+
0|+
0}+
0~+
0!,
0@+
0A+
0B+
0C+
0D+
0E+
0F+
0G+
0H+
0I+
0J+
0K+
0L+
0M+
0N+
0O+
0n*
0o*
0p*
0q*
0r*
0s*
0t*
0u*
0v*
0w*
0x*
0y*
0z*
0{*
0|*
0}*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0E*
0F*
0G*
0H*
0I*
0J*
0K*
0L*
0M*
0l)
0m)
0n)
0o)
0p)
0q)
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0<)
0=)
0>)
0?)
0@)
0A)
0B)
0C)
0D)
0E)
0F)
0G)
0H)
0I)
0J)
0K)
0;)
0:)
09)
08)
07)
06)
05)
04)
03)
02)
01)
00)
0/)
0.)
0-)
0,)
0=*
0<*
0;*
0:*
09*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0m*
0l*
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
03+
02+
01+
00+
0o+
0n+
0m+
0l+
0k+
0j+
0i+
0h+
0g+
0f+
0e+
0d+
0c+
0b+
0a+
0`+
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
0q,
0p,
0o,
0n,
0m,
0l,
0k,
0j,
0i,
0h,
0g,
0f,
0e,
0d,
0c,
0b,
0o'
0n'
0m'
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0!(
0~'
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
01(
00(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
0Q(
0P(
0O(
0N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0a(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0q(
0p(
0o(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0#)
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
b0 4-
b0 5-
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0k.
0e-
0d-
0c-
0b-
0a-
0`-
0_-
0^-
0]-
0\-
0[-
0Z-
0Y-
0X-
0W-
0V-
0D0
0C0
0B0
0A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
080
070
060
050
1l.
1[3
1]3
1U3
1W3
1O3
1Q3
1I3
1K3
1&3
1(3
1~2
1"3
1x2
1z2
1r2
1t2
1O2
1Q2
1H2
1J2
1K2
1B2
1D2
1E2
1=2
1?2
1x1
1z1
1q1
1s1
1p/
1l1
0q/
1f1
0r/
0L1
0N1
0p1
0Q1
0v1
0R1
0;2
0#2
0&2
0(2
0M2
0)2
0p2
0X2
0v2
0Z2
0|2
0\2
0$3
0^2
0G3
0/3
0M3
013
0S3
033
0Y3
053
1>3
1=3
1?3
1<3
1;3
1@3
1g2
1f2
1h2
1e2
1d2
1i2
122
132
1-2
152
1,2
162
1/2
142
1[1
1\1
1V1
1^1
1]1
0`1
0K1
031
0H1
0~1
072
051
0}1
0U2
0V2
071
0W2
0T2
0,3
0-3
091
0.3
0+3
0c/
1F1
0d/
0e/
0g/
1E1
0h/
0i/
1D1
1:2
102
1F2
1m/
0o/
1c1
0;1
0A2
0!2
0=1
021
0U0
0m.
0/$
0f/
1>1
112
1L2
1l/
1<1
001
0G2
0"2
011
0j/
0k/
0n/
0$0
0#0
1"0
0!0
0~/
1}/
1|/
0{/
0z/
0y/
0x/
0w/
0v/
0u/
0t/
0s/
0l0
0k0
0j0
0i0
0h0
0g0
0f0
0e0
0d0
0c0
0b0
0a0
0`0
0_0
0^0
0]0
0B/
0A/
0?/
0>/
0;/
0:/
09/
08/
07/
06/
05/
04/
03/
0R/
0Q/
0O/
0N/
0K/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0b/
0a/
1`/
0_/
0^/
1]/
1\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
040
030
120
010
000
1/0
1.0
0-0
0,0
0+0
0*0
0)0
0(0
0'0
0&0
0%0
0|0
0{0
0z0
0y0
0x0
0w0
0v0
0u0
0t0
0s0
0r0
0q0
0p0
0o0
0n0
0m0
0g.
0f.
1e.
0d.
0c.
1b.
1a.
0`.
0_.
0^.
0].
0\.
0[.
0Z.
0Y.
0X.
0h"
0g"
1f"
0e"
0d"
1c"
1b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0.1
0-1
0,1
0+1
0*1
0)1
0(1
0'1
0&1
0%1
0$1
0#1
0"1
0!1
0~0
0}0
0"/
0!/
0~.
0}.
0|.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0r3
0q3
1p3
0o3
0n3
1m3
1l3
0k3
0j3
0i3
0h3
0g3
0f3
0e3
0d3
0c3
0f
0e
1d
0c
0b
1a
1`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
02/
01/
00/
0//
0./
0-/
0,/
0+/
0*/
0)/
0(/
0'/
0&/
0%/
0$/
0#/
1.$
#50
0!!
0|
#100
1!!
1|
b10 #!
#150
0!!
0|
#200
1!!
1|
b11 #!
#201
0"!
0~
#250
0!!
0|
#300
1!!
1|
b10000000000000000000000000000011 i$
b0 j$
b1 j$
b10 j$
1~)
1#*
1$*
b10000000000000000000000000000011 a3
b0 b3
b1 b3
b10 b3
b100 #!
b1 x
b10 -$
1U$
0[%
0]%
0e$
1Z%
1?%
0E%
1:%
1d$
0W"
1V"
1/
0V.
1U.
0u!
1t!
0T-
0S-
1R-
1f!
1e!
0d!
0^!
1]!
0F!
1E!
1V!
1U!
0T!
18"
17"
06"
00"
1/"
1H"
1G"
0F"
0@"
1?"
1@
1?
0>
08
17
1]'
0^'
0%)
1&)
1;*
18*
17*
0i)
0f)
0e)
17.
16.
05.
0/.
1..
1G.
1F.
0E.
1("
1'"
0&"
0D
1C
1u-
1t-
0s-
1&.
1%.
0$.
1z#
1y#
0x#
1E-
1D-
0C-
1U-
1T-
1S-
0R-
1=*
1<*
0;*
1T
1S
0R
1T0
1S0
0R0
1r1
0p/
0l1
1q/
0f1
1r/
1L1
1N1
0P1
0]1
1$0
1#0
0"0
1R/
1Q/
0P/
1b/
1a/
0`/
140
130
020
1g.
1f.
0e.
1h"
1g"
0f"
1r3
1q3
0p3
1f
1e
0d
0@!
1?!
0=!
1<!
0{
#301
1u)
1v)
1y)
1i)
1f)
1e)
1}'
1z'
1y'
#350
0!!
0|
#400
1!!
1|
b0 j$
b1 j$
b10 j$
1N*
1O*
1S*
1T*
b0 b3
b1 b3
b10 b3
b101 #!
b10 x
b100 -$
0U$
1T$
0b%
0d%
0d$
1[%
1]%
1e$
0Z%
0?%
1`%
1@%
0J%
1E%
0:%
1;%
1c$
1J%
1d%
1d$
0`%
0;%
0c$
1W"
0/
1.
1V.
1u!
0T-
0S-
1R-
0f!
0e!
1d!
1c!
0a!
1^!
0]!
1[!
1Z!
1F!
0E!
0V!
0U!
1T!
1S!
0Q!
08"
07"
16"
15"
03"
10"
0/"
1-"
1,"
0H"
0G"
1F"
1E"
0C"
1@"
0?"
1="
1<"
1j.
1i.
0@
0?
1>
1=
0;
18
07
15
14
1^'
0]'
0&)
1%)
1k)
1j)
0i)
0=*
0<*
08*
07*
0$0
0#0
0}/
0|/
07.
06.
15.
14.
02.
1/.
0..
0G.
0F.
1E.
1D.
0B.
0("
0'"
1&"
1%"
0#"
1D
0C
0u-
0t-
1s-
1r-
0p-
0&.
0%.
1$.
1#.
0!.
0z#
0y#
1x#
1w#
0u#
0E-
0D-
1C-
1B-
0@-
0g.
0f.
0b.
0a.
0h"
0g"
0c"
0b"
0U-
1T-
0R-
1Q-
0P-
0k)
0j)
1i)
1h)
0f)
0T
0S
1R
1Q
0O
0T0
0S0
1R0
1Q0
0O0
1C2
0m/
0x1
1o/
0r1
1p/
1l1
0q/
1f1
0r/
0L1
0N1
1P1
1R1
0%2
0\1
1]1
0R/
0Q/
1P/
1O/
0M/
0b/
0a/
1`/
1_/
0]/
040
030
120
110
0/0
0r3
0q3
0m3
0l3
0f
0e
0a
0`
1@!
0?!
0C!
1=!
0<!
1{
b1100100 4-
01$
0<$
0?$
0@$
1H#
1E#
1D#
0&!
00!
03!
04!
0x#
0w#
0t#
0j.
0i.
1E!
0P!
0""
0s-
0r-
0o-
1c-
1`-
1_-
0^'
1\'
1')
0%)
0l.
1B0
1?0
1>0
0R0
0Q0
0N0
0~-
0?-
1C
1"0
1!0
1|/
0h)
1f)
0R
0Q
0N
1x1
0o/
0C2
1m/
1%2
0R1
1\1
0!0
1}/
1e.
1d.
1a.
0O-
1j0
1g0
1f0
1@/
1=/
1</
0O/
1M/
0_/
1]/
100
0.0
1-0
1,0
1+0
1*0
1)0
1(0
1'0
1&0
1%0
1z0
1w0
1v0
1f"
1e"
1b"
0d.
1b.
0e"
1c"
1p3
1o3
1l3
1d
1c
1`
1,1
1)1
1(1
1~.
1{.
1z.
1x#
1w#
1t#
0o3
1m3
0c
1a
0.$
0w#
1u#
1k*
1j*
1g*
1R
1Q
1N
10/
1-/
1,/
0j*
1h*
0Q
1O
#401
1G*
1H*
1L*
1M*
1=*
1<*
18*
17*
11(
10(
1,(
1+(
b1100011 5-
1Z#
1Y#
1U#
1T#
1u-
1t-
1p-
1o-
1T0
1S0
1O0
1N0
0H2
0J2
0l/
0B2
0D2
0m/
0l1
1q/
0f1
1r/
1L1
1N1
1A2
1&2
1G2
1(2
0-2
0,2
0]1
1!2
1"2
1k/
012
0K2
0L2
1l/
1$0
1#0
0}/
1{/
0z0
1x0
0w0
0v0
1u0
1t0
0j0
1i0
0g0
1e0
0=/
0</
1R/
1Q/
1b/
1a/
0]/
0\/
140
130
1/0
1.0
0x0
1w0
0u0
1s0
0,1
1*1
0)1
0(1
1'1
1&1
1g.
1f.
0b.
1`.
1h"
1g"
0c"
1a"
0~.
1|.
0{.
0z.
1y.
1x.
0*1
1)1
0'1
1%1
0|.
1{.
0y.
1w.
00/
1./
0-/
0,/
1+/
1*/
1r3
1q3
0m3
1k3
1f
1e
0a
1_
1z#
1y#
0u#
1s#
0./
1-/
0+/
1)/
1m*
1l*
0h*
1f*
1T
1S
0O
1M
#450
0!!
0|
#500
1!!
1|
b0 j$
b1 j$
b10 j$
1~*
1!+
1"+
1&+
1'+
b0 b3
b1 b3
b10 b3
b110 #!
b11 x
b110 -$
1U$
0[%
0]%
0e$
1Z%
1?%
0E%
1:%
0J%
0d%
0d$
1`%
1;%
1c$
0W"
0V"
1U"
1/
0V.
0U.
1T.
0u!
0t!
1s!
0T-
1S-
0d!
1a!
0`!
1]!
0F!
0T!
06"
13"
02"
1/"
0F"
1C"
0B"
1?"
0>
1;
0:
17
1]'
0\'
0')
1&)
1;*
08*
16*
0m*
0l*
0k*
0g*
0f*
05.
12.
01.
1..
0E.
1B.
0A.
0&"
0D
0$.
0C-
0S-
1?!
1C!
0B!
1<!
b1100100 5-
b0 4-
0H#
0E#
0D#
0Z#
0Y#
1X#
0u-
0t-
1s-
0c-
0`-
0_-
1l.
0B0
0?0
0>0
0T0
0S0
1R0
1l1
0q/
1f1
0r/
1H2
1J2
1K2
0l/
1B2
1D2
1m/
0A2
0&2
0(2
0L1
0N1
1]1
1-2
1,2
0!2
112
1L2
1l/
0G2
0"2
0k/
0$0
0#0
1}/
0{/
0)1
0&1
1"1
1!1
1y0
0w0
1v0
1u0
0t0
0s0
0i0
0f0
0e0
0@/
0R/
0Q/
0b/
0a/
1]/
1\/
040
030
010
000
0-0
0,0
0+0
0*0
0)0
0(0
0'0
0&0
0%0
0y0
0v0
0u0
1'1
0%1
1$1
1#1
0"1
0!1
0{.
0x.
1t.
1s.
0g.
0f.
1b.
0`.
0h"
0g"
1c"
0a"
0-/
0*/
1&/
1%/
1y.
0w.
1v.
1u.
0t.
0s.
0'1
0$1
0#1
0y.
0v.
0u.
1+/
0)/
1(/
1'/
0&/
0%/
0r3
0q3
1m3
0k3
0f
0e
1a
0_
1.$
0z#
0y#
1u#
0s#
0+/
0(/
0'/
0=*
0<*
18*
06*
0T
0S
1O
0M
#501
1v*
1w*
1{*
1|*
1}*
1m*
1l*
1k*
1g*
1f*
1A(
1@(
1?(
1;(
1:(
b11000111 4-
1J#
1I#
1H#
1D#
1C#
1e-
1d-
1c-
1_-
1^-
1D0
1C0
1B0
1>0
1=0
0l.
0O2
1k/
0H2
0J2
0l/
0q1
0s1
0p/
0l1
1q/
0f1
1r/
1L1
1N1
1p1
1Q1
1G2
1(2
1)2
032
052
0-2
0V1
0]1
1K1
1"2
172
0:2
022
0Q2
0k/
1o/
1M2
1}1
1=1
0>1
111
1j/
1$0
1#0
0"0
1!0
0|/
1z/
1l0
1k0
1j0
1f0
1e0
1B/
1A/
1;/
1R/
1Q/
1K/
1b/
1a/
0`/
0\/
1[/
140
110
100
0/0
0.0
1-0
1,0
1+0
1*0
1)0
1(0
1'0
1&0
1%0
1|0
1{0
1z0
1v0
1u0
1g.
1f.
0e.
1d.
0a.
1_.
1h"
1g"
0f"
1e"
0b"
1`"
1*1
1)1
1(1
1$1
1#1
1|.
1{.
1z.
1v.
1u.
1r3
1q3
0p3
1o3
0l3
1j3
1f
1e
0d
1c
0`
1^
0.$
1z#
1y#
0x#
1w#
0t#
1r#
1./
1-/
1,/
1(/
1'/
1=*
1<*
0;*
1:*
07*
15*
1T
1S
0R
1Q
0N
1L
#550
0!!
0|
#600
1!!
1|
b0 j$
b1 j$
b10 j$
1Q*
0T*
1V*
b0 b3
b1 b3
b10 b3
b111 #!
b100 x
b1000 -$
0U$
0T$
1S$
0h%
0j%
0c$
1b%
1d%
1d$
1[%
1]%
1e$
0Z%
0?%
0`%
0@%
1f%
1B%
0K%
1J%
1E%
0:%
0;%
18%
1K%
1j%
1c$
0d$
0f%
08%
1W"
0/
0.
1-
1V.
1u!
1T-
0c!
1b!
0a!
1`!
0]!
0E!
1D!
0S!
1R!
05"
14"
03"
12"
0/"
0E"
1D"
0C"
1B"
0?"
0=
1<
0;
1:
07
1['
0]'
0&)
1()
1?+
1>+
1<+
1:+
17+
0:*
17*
05*
04.
13.
02.
11.
0..
0D.
1C.
0B.
1A.
0%"
1$"
1#"
1""
1!"
1~!
1}!
1|!
1{!
1z!
1y!
1x!
1w!
0C
1B
0#.
1".
1!.
1~-
1}-
1|-
1{-
1z-
1y-
1x-
1w-
1v-
0B-
1A-
1@-
1?-
1>-
1=-
1<-
1;-
1:-
19-
18-
17-
16-
1R-
1P-
1O-
1N-
1M-
1L-
1K-
1J-
1I-
1H-
1G-
1F-
0?!
0C!
1B!
0<!
b1100011 5-
b1100100 4-
0J#
0I#
1E#
0C#
1Z#
1Y#
0X#
1u-
1t-
0s-
0e-
0d-
1`-
0^-
0D0
0C0
1?0
0=0
1T0
1S0
0R0
1q1
1s1
1p/
1O2
1Q2
1k/
0B2
0D2
0m/
1A2
1&2
0M2
0)2
0p1
0Q1
1V1
122
132
152
0,2
1!2
072
0}1
0K1
0o/
1:2
012
0K2
0L2
1l/
0=1
1>1
011
0j/
1"0
0!0
0}/
1|/
1{/
0z/
1.1
1-1
1,1
0*1
0)1
1'1
0$1
0#1
0|0
0{0
1y0
1x0
0v0
0u0
1t0
1s0
0l0
0k0
0j0
1i0
0B/
0A/
1@/
0;/
0K/
1`/
0]/
0[/
130
1/0
1.0
0z0
0y0
0x0
1w0
0.1
0-1
1+1
1*1
0(1
0'1
1&1
1%1
1"/
1!/
1~.
0|.
0{.
1y.
0v.
0u.
1e.
0d.
0b.
1a.
1`.
0_.
1f"
0e"
0c"
1b"
1a"
0`"
12/
11/
10/
0./
0-/
1+/
0(/
0'/
0"/
0!/
1}.
1|.
0z.
0y.
1x.
1w.
0,1
0+1
0*1
1)1
0~.
0}.
0|.
1{.
02/
01/
1//
1./
0,/
0+/
1*/
1)/
1p3
0o3
0m3
1l3
1k3
0j3
1d
0c
0a
1`
1_
0^
1x#
0w#
0u#
1t#
1s#
0r#
00/
0//
0./
1-/
1=+
0<+
0:+
19+
18+
07+
1R
0Q
0O
1N
1M
0L
#601
1E*
0G*
1J*
1:*
07*
15*
1.(
0+(
1)(
b100101011 5-
1W#
0T#
1R#
1r-
0o-
1m-
1Q0
0N0
1L0
1l.
0r2
1j/
1H2
1J2
1L2
0l/
0x1
1o/
1R1
0(2
1X2
1-2
0\1
131
1!0
0|/
1z/
1"/
1!/
0{.
0x.
0w.
1s.
1</
1O/
1J/
1_/
1\/
1Z/
010
000
0/0
0,0
0+0
0*0
0)0
0(0
0'0
0&0
0%0
12/
11/
0-/
0*/
0)/
1%/
1d.
0a.
1_.
1e"
0b"
1`"
1o3
0l3
1j3
1c
0`
1^
1w#
0t#
1r#
1<+
09+
17+
1Q
0N
1L
#650
0!!
0|
#700
1!!
1|
b0 j$
b1 j$
b10 j$
1P+
1Q+
1R+
1S+
1W+
1X+
b0 b3
b1 b3
b10 b3
b1000 #!
b101 x
b1010 -$
1U$
0[%
0]%
0e$
1Z%
1?%
0E%
1:%
1d$
0W"
1V"
1/
0V.
1U.
0u!
1t!
0T-
1S-
1c!
1a!
0`!
0^!
1]!
1E!
1S!
15"
13"
02"
00"
1/"
1E"
1C"
0B"
0@"
1?"
1=
1;
0:
08
17
0['
1Y'
1*)
0()
0?+
0>+
0=+
0<+
08+
07+
1A,
1@,
1?,
1>,
1:,
19,
14.
12.
01.
0/.
1..
1D.
1B.
0A.
1%"
1C
1#.
1B-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
0@!
1?!
1C!
0B!
0=!
1<!
0{
b1100100 5-
b100101011 4-
1J#
1I#
0H#
1G#
0D#
1B#
0Z#
0Y#
1X#
0W#
1T#
0R#
0u-
0t-
1s-
0r-
1o-
0m-
1e-
1d-
0c-
1b-
0_-
1]-
0l.
1D0
1C0
0B0
1A0
0>0
1<0
0T0
0S0
1R0
0Q0
1N0
0L0
0L2
1K2
0"/
0!/
1{.
1x.
1w.
0s.
0)1
0&1
1"1
1!1
1y0
0w0
1v0
1u0
0t0
0s0
1l0
1k0
1g0
0f0
0e0
1d0
1B/
1A/
0@/
1?/
0</
1:/
030
020
110
100
1/0
0.0
0-0
1,0
1+0
1*0
1)0
1(0
1'0
1&0
1%0
1|0
1{0
1w0
0v0
0u0
1t0
1'1
0%1
1$1
1#1
0"1
0!1
0{.
0x.
1t.
1s.
02/
01/
1-/
1*/
1)/
0%/
0-/
0*/
1&/
1%/
1y.
0w.
1v.
1u.
0t.
0s.
1*1
1)1
1%1
0$1
0#1
1"1
1|.
1{.
1w.
0v.
0u.
1t.
1+/
0)/
1(/
1'/
0&/
0%/
1./
1-/
1)/
0(/
0'/
1&/
#701
1G+
1H+
1L+
1M+
1N+
1O+
1?+
1>+
1=+
1<+
18+
17+
1Q(
1P(
1O(
1N(
1J(
1I(
#750
0!!
0|
#800
1!!
1|
b0 j$
b1 j$
b10 j$
1R,
1S,
1T,
1U,
1Y,
1Z,
b0 b3
b1 b3
b10 b3
b1001 #!
b110 x
b1100 -$
0U$
1T$
0b%
0d%
0d$
1[%
1]%
1e$
0Z%
0?%
1`%
1@%
0J%
0L%
1E%
0:%
1;%
0K%
0j%
0c$
1J%
1d%
1d$
0`%
0;%
1f%
18%
1K%
1j%
1c$
0f%
08%
1W"
0/
1.
1V.
1u!
1T-
1d!
0c!
0a!
1_!
1^!
0]!
1F!
0E!
1T!
0S!
16"
05"
03"
11"
10"
0/"
1F"
0E"
0C"
1A"
1@"
0?"
1>
0=
0;
19
18
07
1Z'
0Y'
0*)
1))
1o+
1n+
1m+
1l+
1h+
1g+
0A,
0@,
0?,
0>,
0:,
09,
15.
04.
02.
10.
1/.
0..
1E.
0D.
0B.
1@.
1?.
1>.
1=.
1<.
1;.
1:.
19.
18.
1&"
0%"
1D
0C
1$.
0#.
1C-
0B-
0S-
1@!
0?!
0C!
1A!
1=!
0<!
1{
b110001111 5-
b1100100 4-
0J#
0I#
1H#
0G#
1D#
0B#
1Z#
1Y#
1W#
0U#
0T#
1S#
1R#
1u-
1t-
1r-
0p-
0o-
1n-
1m-
0e-
0d-
1c-
0b-
1_-
0]-
1l.
0D0
0C0
1B0
0A0
1>0
0<0
1T0
1S0
1Q0
0O0
0N0
1M0
1L0
0O2
0R2
0k/
1L2
1B2
1D2
1m/
0K2
0q1
0s1
0p/
1p1
1Q1
0A2
0&2
1M2
1)2
022
032
1,2
0V1
0^1
1`1
1K1
0!2
1}1
112
1K2
1l/
0[1
0{1
0o/
0c1
1;1
1v1
1H1
0G2
0"2
122
1R2
1k/
0<1
101
0M2
0}1
1n/
0"0
0!0
1~/
1}/
1|/
1!/
0{.
0y.
0w.
1s.
1q.
0|0
0{0
1z0
1u0
0t0
1r0
0l0
0k0
0g0
1f0
1e0
0d0
0B/
0A/
0?/
1=/
1</
0:/
1K/
0`/
1]/
1[/
130
000
0+0
0*0
0)0
0(0
0'0
0&0
0%0
0z0
0y0
0u0
1t0
1s0
0r0
0*1
0)1
1(1
1#1
0"1
1~0
11/
0-/
0+/
0)/
1%/
1#/
0e.
0d.
1c.
1b.
1a.
0f"
0e"
1d"
1c"
1b"
1}.
0|.
1z.
0t.
0s.
1r.
0(1
0'1
0#1
1"1
1!1
0~0
0}.
1|.
1{.
0z.
0r.
0q.
1//
0./
1,/
0&/
0%/
1$/
0p3
0o3
1n3
1m3
1l3
0d
0c
1b
1a
1`
0x#
0w#
1v#
1u#
1t#
0//
1./
1-/
0,/
0$/
0#/
0m+
0l+
1k+
1j+
1i+
0R
0Q
1P
1O
1N
#801
1I,
1J,
1N,
1O,
1P,
1Q,
1A,
1@,
1?,
1>,
1:,
19,
1q(
1p(
1o(
1n(
1j(
1i(
#850
0!!
0|
#900
1!!
1|
b0 j$
b1 j$
b10 j$
1",
1#,
1&,
1',
1(,
1),
1*,
b0 b3
b1 b3
b10 b3
b1010 #!
b111 x
b1110 -$
1U$
0[%
0]%
0e$
1Z%
1?%
0E%
0O%
1P%
1:%
0J%
0d%
0d$
0S%
1+%
1`%
1;%
0K%
0j%
0c$
0,%
1~$
1f%
18%
1b$
0W"
0V"
0U"
1T"
1/
0V.
0U.
0T.
1S.
0u!
0t!
0s!
1r!
0T-
1S-
0d!
1a!
0_!
1\!
0F!
0T!
06"
13"
01"
1."
0F"
1C"
0A"
1>"
0>
1;
09
16
1['
0Z'
0))
1()
0=+
0<+
1;+
1:+
19+
0o+
0n+
0k+
0j+
0i+
0h+
0g+
05.
12.
00.
1-.
1,.
1+.
1*.
1).
0E.
1B.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
0&"
0D
0$.
0C-
0S-
1>!
1C!
0A!
1;!
b1100100 5-
b0 4-
0H#
0E#
0D#
0Z#
0Y#
0W#
1U#
1T#
0S#
0R#
0u-
0t-
0r-
1p-
1o-
0n-
0m-
0c-
0`-
0_-
0B0
0?0
0>0
0T0
0S0
0Q0
1O0
1N0
0M0
0L0
1r2
0j/
1O2
0k/
1x1
1{1
1o/
1l1
0q/
1f1
0r/
1q1
1s1
1p/
0p1
0Q1
0L1
0N1
0v1
0R1
0)2
0X2
132
1[1
1\1
1]1
1V1
1^1
0`1
0K1
031
0H1
0o/
1c1
0;1
1<1
001
0n/
0$0
0#0
1"0
0~/
0{/
0z/
0!/
0|.
0{.
1w.
1t.
1s.
1y0
0w0
1v0
1u0
0t0
0s0
0i0
0f0
0e0
0=/
0</
0R/
0Q/
0O/
0K/
0J/
0b/
0a/
1`/
0_/
0[/
0Z/
040
030
120
010
1.0
0,0
0y0
0v0
0u0
1'1
0%1
1$1
1#1
0"1
0!1
01/
0./
0-/
1)/
1&/
1%/
0