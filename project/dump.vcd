$date
	Sat Apr 04 19:49:32 2020
$end
$version
	ModelSim Version 10.6d
$end
$timescale
	1ns
$end

$scope module proc_hier_pbench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemDataIn [15] $end
$var wire 1 h MemDataIn [14] $end
$var wire 1 i MemDataIn [13] $end
$var wire 1 j MemDataIn [12] $end
$var wire 1 k MemDataIn [11] $end
$var wire 1 l MemDataIn [10] $end
$var wire 1 m MemDataIn [9] $end
$var wire 1 n MemDataIn [8] $end
$var wire 1 o MemDataIn [7] $end
$var wire 1 p MemDataIn [6] $end
$var wire 1 q MemDataIn [5] $end
$var wire 1 r MemDataIn [4] $end
$var wire 1 s MemDataIn [3] $end
$var wire 1 t MemDataIn [2] $end
$var wire 1 u MemDataIn [1] $end
$var wire 1 v MemDataIn [0] $end
$var wire 1 w MemDataOut [15] $end
$var wire 1 x MemDataOut [14] $end
$var wire 1 y MemDataOut [13] $end
$var wire 1 z MemDataOut [12] $end
$var wire 1 { MemDataOut [11] $end
$var wire 1 | MemDataOut [10] $end
$var wire 1 } MemDataOut [9] $end
$var wire 1 ~ MemDataOut [8] $end
$var wire 1 !! MemDataOut [7] $end
$var wire 1 "! MemDataOut [6] $end
$var wire 1 #! MemDataOut [5] $end
$var wire 1 $! MemDataOut [4] $end
$var wire 1 %! MemDataOut [3] $end
$var wire 1 &! MemDataOut [2] $end
$var wire 1 '! MemDataOut [1] $end
$var wire 1 (! MemDataOut [0] $end
$var wire 1 )! DCacheHit $end
$var wire 1 *! ICacheHit $end
$var wire 1 +! DCacheReq $end
$var wire 1 ,! ICacheReq $end
$var wire 1 -! Halt $end
$var integer 32 .! inst_count $end
$var integer 32 /! trace_file $end
$var integer 32 0! sim_log_file $end
$var integer 32 1! DCacheHit_count $end
$var integer 32 2! ICacheHit_count $end
$var integer 32 3! DCacheReq_count $end
$var integer 32 4! ICacheReq_count $end
$var wire 1 5! PC_IFID [15] $end
$var wire 1 6! PC_IFID [14] $end
$var wire 1 7! PC_IFID [13] $end
$var wire 1 8! PC_IFID [12] $end
$var wire 1 9! PC_IFID [11] $end
$var wire 1 :! PC_IFID [10] $end
$var wire 1 ;! PC_IFID [9] $end
$var wire 1 <! PC_IFID [8] $end
$var wire 1 =! PC_IFID [7] $end
$var wire 1 >! PC_IFID [6] $end
$var wire 1 ?! PC_IFID [5] $end
$var wire 1 @! PC_IFID [4] $end
$var wire 1 A! PC_IFID [3] $end
$var wire 1 B! PC_IFID [2] $end
$var wire 1 C! PC_IFID [1] $end
$var wire 1 D! PC_IFID [0] $end
$var wire 1 E! PC_IDEX [15] $end
$var wire 1 F! PC_IDEX [14] $end
$var wire 1 G! PC_IDEX [13] $end
$var wire 1 H! PC_IDEX [12] $end
$var wire 1 I! PC_IDEX [11] $end
$var wire 1 J! PC_IDEX [10] $end
$var wire 1 K! PC_IDEX [9] $end
$var wire 1 L! PC_IDEX [8] $end
$var wire 1 M! PC_IDEX [7] $end
$var wire 1 N! PC_IDEX [6] $end
$var wire 1 O! PC_IDEX [5] $end
$var wire 1 P! PC_IDEX [4] $end
$var wire 1 Q! PC_IDEX [3] $end
$var wire 1 R! PC_IDEX [2] $end
$var wire 1 S! PC_IDEX [1] $end
$var wire 1 T! PC_IDEX [0] $end
$var wire 1 U! PC_EXMEM [15] $end
$var wire 1 V! PC_EXMEM [14] $end
$var wire 1 W! PC_EXMEM [13] $end
$var wire 1 X! PC_EXMEM [12] $end
$var wire 1 Y! PC_EXMEM [11] $end
$var wire 1 Z! PC_EXMEM [10] $end
$var wire 1 [! PC_EXMEM [9] $end
$var wire 1 \! PC_EXMEM [8] $end
$var wire 1 ]! PC_EXMEM [7] $end
$var wire 1 ^! PC_EXMEM [6] $end
$var wire 1 _! PC_EXMEM [5] $end
$var wire 1 `! PC_EXMEM [4] $end
$var wire 1 a! PC_EXMEM [3] $end
$var wire 1 b! PC_EXMEM [2] $end
$var wire 1 c! PC_EXMEM [1] $end
$var wire 1 d! PC_EXMEM [0] $end
$var wire 1 e! PC_MEMWB [15] $end
$var wire 1 f! PC_MEMWB [14] $end
$var wire 1 g! PC_MEMWB [13] $end
$var wire 1 h! PC_MEMWB [12] $end
$var wire 1 i! PC_MEMWB [11] $end
$var wire 1 j! PC_MEMWB [10] $end
$var wire 1 k! PC_MEMWB [9] $end
$var wire 1 l! PC_MEMWB [8] $end
$var wire 1 m! PC_MEMWB [7] $end
$var wire 1 n! PC_MEMWB [6] $end
$var wire 1 o! PC_MEMWB [5] $end
$var wire 1 p! PC_MEMWB [4] $end
$var wire 1 q! PC_MEMWB [3] $end
$var wire 1 r! PC_MEMWB [2] $end
$var wire 1 s! PC_MEMWB [1] $end
$var wire 1 t! PC_MEMWB [0] $end

$scope module DUT $end
$var wire 1 u! clk $end
$var wire 1 v! err $end
$var wire 1 w! rst $end

$scope module c0 $end
$var reg 1 x! clk $end
$var reg 1 y! rst $end
$var wire 1 v! err $end
$var integer 32 z! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 v! err $end
$var wire 1 {! regWriteIn $end
$var wire 1 |! regWriteOut $end
$var wire 1 }! btr $end
$var wire 1 ~! aluSrc $end
$var wire 1 !" memWrite $end
$var wire 1 "" memRead $end
$var wire 1 #" memToReg $end
$var wire 1 $" halt $end
$var wire 1 %" noOp $end
$var wire 1 &" slbi $end
$var wire 1 '" immPres $end
$var wire 1 (" lbi $end
$var wire 1 )" stuCtl $end
$var wire 1 *" PCsrc $end
$var wire 1 +" decode_err $end
$var wire 1 ," sl $end
$var wire 1 -" sco $end
$var wire 1 ." seq $end
$var wire 1 /" ror $end
$var wire 1 0" Rs [2] $end
$var wire 1 1" Rs [1] $end
$var wire 1 2" Rs [0] $end
$var wire 1 3" Rt [2] $end
$var wire 1 4" Rt [1] $end
$var wire 1 5" Rt [0] $end
$var wire 1 6" RdIn [2] $end
$var wire 1 7" RdIn [1] $end
$var wire 1 8" RdIn [0] $end
$var wire 1 9" RdOut [2] $end
$var wire 1 :" RdOut [1] $end
$var wire 1 ;" RdOut [0] $end
$var wire 1 <" aluOp [2] $end
$var wire 1 =" aluOp [1] $end
$var wire 1 >" aluOp [0] $end
$var wire 1 ?" branchCtl [2] $end
$var wire 1 @" branchCtl [1] $end
$var wire 1 A" branchCtl [0] $end
$var wire 1 B" jumpCtl [2] $end
$var wire 1 C" jumpCtl [1] $end
$var wire 1 D" jumpCtl [0] $end
$var wire 1 E" immVal [15] $end
$var wire 1 F" immVal [14] $end
$var wire 1 G" immVal [13] $end
$var wire 1 H" immVal [12] $end
$var wire 1 I" immVal [11] $end
$var wire 1 J" immVal [10] $end
$var wire 1 K" immVal [9] $end
$var wire 1 L" immVal [8] $end
$var wire 1 M" immVal [7] $end
$var wire 1 N" immVal [6] $end
$var wire 1 O" immVal [5] $end
$var wire 1 P" immVal [4] $end
$var wire 1 Q" immVal [3] $end
$var wire 1 R" immVal [2] $end
$var wire 1 S" immVal [1] $end
$var wire 1 T" immVal [0] $end
$var wire 1 U" instr [15] $end
$var wire 1 V" instr [14] $end
$var wire 1 W" instr [13] $end
$var wire 1 X" instr [12] $end
$var wire 1 Y" instr [11] $end
$var wire 1 Z" instr [10] $end
$var wire 1 [" instr [9] $end
$var wire 1 \" instr [8] $end
$var wire 1 ]" instr [7] $end
$var wire 1 ^" instr [6] $end
$var wire 1 _" instr [5] $end
$var wire 1 `" instr [4] $end
$var wire 1 a" instr [3] $end
$var wire 1 b" instr [2] $end
$var wire 1 c" instr [1] $end
$var wire 1 d" instr [0] $end
$var wire 1 e" fetch_instr [15] $end
$var wire 1 f" fetch_instr [14] $end
$var wire 1 g" fetch_instr [13] $end
$var wire 1 h" fetch_instr [12] $end
$var wire 1 i" fetch_instr [11] $end
$var wire 1 j" fetch_instr [10] $end
$var wire 1 k" fetch_instr [9] $end
$var wire 1 l" fetch_instr [8] $end
$var wire 1 m" fetch_instr [7] $end
$var wire 1 n" fetch_instr [6] $end
$var wire 1 o" fetch_instr [5] $end
$var wire 1 p" fetch_instr [4] $end
$var wire 1 q" fetch_instr [3] $end
$var wire 1 r" fetch_instr [2] $end
$var wire 1 s" fetch_instr [1] $end
$var wire 1 t" fetch_instr [0] $end
$var wire 1 u" decode_instr [15] $end
$var wire 1 v" decode_instr [14] $end
$var wire 1 w" decode_instr [13] $end
$var wire 1 x" decode_instr [12] $end
$var wire 1 y" decode_instr [11] $end
$var wire 1 z" decode_instr [10] $end
$var wire 1 {" decode_instr [9] $end
$var wire 1 |" decode_instr [8] $end
$var wire 1 }" decode_instr [7] $end
$var wire 1 ~" decode_instr [6] $end
$var wire 1 !# decode_instr [5] $end
$var wire 1 "# decode_instr [4] $end
$var wire 1 ## decode_instr [3] $end
$var wire 1 $# decode_instr [2] $end
$var wire 1 %# decode_instr [1] $end
$var wire 1 &# decode_instr [0] $end
$var wire 1 '# next_pc [15] $end
$var wire 1 (# next_pc [14] $end
$var wire 1 )# next_pc [13] $end
$var wire 1 *# next_pc [12] $end
$var wire 1 +# next_pc [11] $end
$var wire 1 ,# next_pc [10] $end
$var wire 1 -# next_pc [9] $end
$var wire 1 .# next_pc [8] $end
$var wire 1 /# next_pc [7] $end
$var wire 1 0# next_pc [6] $end
$var wire 1 1# next_pc [5] $end
$var wire 1 2# next_pc [4] $end
$var wire 1 3# next_pc [3] $end
$var wire 1 4# next_pc [2] $end
$var wire 1 5# next_pc [1] $end
$var wire 1 6# next_pc [0] $end
$var wire 1 7# exImmVaL [15] $end
$var wire 1 8# exImmVaL [14] $end
$var wire 1 9# exImmVaL [13] $end
$var wire 1 :# exImmVaL [12] $end
$var wire 1 ;# exImmVaL [11] $end
$var wire 1 <# exImmVaL [10] $end
$var wire 1 =# exImmVaL [9] $end
$var wire 1 ># exImmVaL [8] $end
$var wire 1 ?# exImmVaL [7] $end
$var wire 1 @# exImmVaL [6] $end
$var wire 1 A# exImmVaL [5] $end
$var wire 1 B# exImmVaL [4] $end
$var wire 1 C# exImmVaL [3] $end
$var wire 1 D# exImmVaL [2] $end
$var wire 1 E# exImmVaL [1] $end
$var wire 1 F# exImmVaL [0] $end
$var wire 1 G# branch [15] $end
$var wire 1 H# branch [14] $end
$var wire 1 I# branch [13] $end
$var wire 1 J# branch [12] $end
$var wire 1 K# branch [11] $end
$var wire 1 L# branch [10] $end
$var wire 1 M# branch [9] $end
$var wire 1 N# branch [8] $end
$var wire 1 O# branch [7] $end
$var wire 1 P# branch [6] $end
$var wire 1 Q# branch [5] $end
$var wire 1 R# branch [4] $end
$var wire 1 S# branch [3] $end
$var wire 1 T# branch [2] $end
$var wire 1 U# branch [1] $end
$var wire 1 V# branch [0] $end
$var wire 1 W# jump [15] $end
$var wire 1 X# jump [14] $end
$var wire 1 Y# jump [13] $end
$var wire 1 Z# jump [12] $end
$var wire 1 [# jump [11] $end
$var wire 1 \# jump [10] $end
$var wire 1 ]# jump [9] $end
$var wire 1 ^# jump [8] $end
$var wire 1 _# jump [7] $end
$var wire 1 `# jump [6] $end
$var wire 1 a# jump [5] $end
$var wire 1 b# jump [4] $end
$var wire 1 c# jump [3] $end
$var wire 1 d# jump [2] $end
$var wire 1 e# jump [1] $end
$var wire 1 f# jump [0] $end
$var wire 1 g# Out [15] $end
$var wire 1 h# Out [14] $end
$var wire 1 i# Out [13] $end
$var wire 1 j# Out [12] $end
$var wire 1 k# Out [11] $end
$var wire 1 l# Out [10] $end
$var wire 1 m# Out [9] $end
$var wire 1 n# Out [8] $end
$var wire 1 o# Out [7] $end
$var wire 1 p# Out [6] $end
$var wire 1 q# Out [5] $end
$var wire 1 r# Out [4] $end
$var wire 1 s# Out [3] $end
$var wire 1 t# Out [2] $end
$var wire 1 u# Out [1] $end
$var wire 1 v# Out [0] $end
$var wire 1 w# wrData [15] $end
$var wire 1 x# wrData [14] $end
$var wire 1 y# wrData [13] $end
$var wire 1 z# wrData [12] $end
$var wire 1 {# wrData [11] $end
$var wire 1 |# wrData [10] $end
$var wire 1 }# wrData [9] $end
$var wire 1 ~# wrData [8] $end
$var wire 1 !$ wrData [7] $end
$var wire 1 "$ wrData [6] $end
$var wire 1 #$ wrData [5] $end
$var wire 1 $$ wrData [4] $end
$var wire 1 %$ wrData [3] $end
$var wire 1 &$ wrData [2] $end
$var wire 1 '$ wrData [1] $end
$var wire 1 ($ wrData [0] $end
$var wire 1 )$ regData1 [15] $end
$var wire 1 *$ regData1 [14] $end
$var wire 1 +$ regData1 [13] $end
$var wire 1 ,$ regData1 [12] $end
$var wire 1 -$ regData1 [11] $end
$var wire 1 .$ regData1 [10] $end
$var wire 1 /$ regData1 [9] $end
$var wire 1 0$ regData1 [8] $end
$var wire 1 1$ regData1 [7] $end
$var wire 1 2$ regData1 [6] $end
$var wire 1 3$ regData1 [5] $end
$var wire 1 4$ regData1 [4] $end
$var wire 1 5$ regData1 [3] $end
$var wire 1 6$ regData1 [2] $end
$var wire 1 7$ regData1 [1] $end
$var wire 1 8$ regData1 [0] $end
$var wire 1 9$ regData2 [15] $end
$var wire 1 :$ regData2 [14] $end
$var wire 1 ;$ regData2 [13] $end
$var wire 1 <$ regData2 [12] $end
$var wire 1 =$ regData2 [11] $end
$var wire 1 >$ regData2 [10] $end
$var wire 1 ?$ regData2 [9] $end
$var wire 1 @$ regData2 [8] $end
$var wire 1 A$ regData2 [7] $end
$var wire 1 B$ regData2 [6] $end
$var wire 1 C$ regData2 [5] $end
$var wire 1 D$ regData2 [4] $end
$var wire 1 E$ regData2 [3] $end
$var wire 1 F$ regData2 [2] $end
$var wire 1 G$ regData2 [1] $end
$var wire 1 H$ regData2 [0] $end
$var wire 1 I$ read1Data [15] $end
$var wire 1 J$ read1Data [14] $end
$var wire 1 K$ read1Data [13] $end
$var wire 1 L$ read1Data [12] $end
$var wire 1 M$ read1Data [11] $end
$var wire 1 N$ read1Data [10] $end
$var wire 1 O$ read1Data [9] $end
$var wire 1 P$ read1Data [8] $end
$var wire 1 Q$ read1Data [7] $end
$var wire 1 R$ read1Data [6] $end
$var wire 1 S$ read1Data [5] $end
$var wire 1 T$ read1Data [4] $end
$var wire 1 U$ read1Data [3] $end
$var wire 1 V$ read1Data [2] $end
$var wire 1 W$ read1Data [1] $end
$var wire 1 X$ read1Data [0] $end
$var wire 1 Y$ read2Data [15] $end
$var wire 1 Z$ read2Data [14] $end
$var wire 1 [$ read2Data [13] $end
$var wire 1 \$ read2Data [12] $end
$var wire 1 ]$ read2Data [11] $end
$var wire 1 ^$ read2Data [10] $end
$var wire 1 _$ read2Data [9] $end
$var wire 1 `$ read2Data [8] $end
$var wire 1 a$ read2Data [7] $end
$var wire 1 b$ read2Data [6] $end
$var wire 1 c$ read2Data [5] $end
$var wire 1 d$ read2Data [4] $end
$var wire 1 e$ read2Data [3] $end
$var wire 1 f$ read2Data [2] $end
$var wire 1 g$ read2Data [1] $end
$var wire 1 h$ read2Data [0] $end
$var wire 1 i$ aluOut [15] $end
$var wire 1 j$ aluOut [14] $end
$var wire 1 k$ aluOut [13] $end
$var wire 1 l$ aluOut [12] $end
$var wire 1 m$ aluOut [11] $end
$var wire 1 n$ aluOut [10] $end
$var wire 1 o$ aluOut [9] $end
$var wire 1 p$ aluOut [8] $end
$var wire 1 q$ aluOut [7] $end
$var wire 1 r$ aluOut [6] $end
$var wire 1 s$ aluOut [5] $end
$var wire 1 t$ aluOut [4] $end
$var wire 1 u$ aluOut [3] $end
$var wire 1 v$ aluOut [2] $end
$var wire 1 w$ aluOut [1] $end
$var wire 1 x$ aluOut [0] $end
$var wire 1 y$ writeData [15] $end
$var wire 1 z$ writeData [14] $end
$var wire 1 {$ writeData [13] $end
$var wire 1 |$ writeData [12] $end
$var wire 1 }$ writeData [11] $end
$var wire 1 ~$ writeData [10] $end
$var wire 1 !% writeData [9] $end
$var wire 1 "% writeData [8] $end
$var wire 1 #% writeData [7] $end
$var wire 1 $% writeData [6] $end
$var wire 1 %% writeData [5] $end
$var wire 1 &% writeData [4] $end
$var wire 1 '% writeData [3] $end
$var wire 1 (% writeData [2] $end
$var wire 1 )% writeData [1] $end
$var wire 1 *% writeData [0] $end
$var wire 1 +% memoryOut [15] $end
$var wire 1 ,% memoryOut [14] $end
$var wire 1 -% memoryOut [13] $end
$var wire 1 .% memoryOut [12] $end
$var wire 1 /% memoryOut [11] $end
$var wire 1 0% memoryOut [10] $end
$var wire 1 1% memoryOut [9] $end
$var wire 1 2% memoryOut [8] $end
$var wire 1 3% memoryOut [7] $end
$var wire 1 4% memoryOut [6] $end
$var wire 1 5% memoryOut [5] $end
$var wire 1 6% memoryOut [4] $end
$var wire 1 7% memoryOut [3] $end
$var wire 1 8% memoryOut [2] $end
$var wire 1 9% memoryOut [1] $end
$var wire 1 :% memoryOut [0] $end
$var wire 1 ;% PC_inc [15] $end
$var wire 1 <% PC_inc [14] $end
$var wire 1 =% PC_inc [13] $end
$var wire 1 >% PC_inc [12] $end
$var wire 1 ?% PC_inc [11] $end
$var wire 1 @% PC_inc [10] $end
$var wire 1 A% PC_inc [9] $end
$var wire 1 B% PC_inc [8] $end
$var wire 1 C% PC_inc [7] $end
$var wire 1 D% PC_inc [6] $end
$var wire 1 E% PC_inc [5] $end
$var wire 1 F% PC_inc [4] $end
$var wire 1 G% PC_inc [3] $end
$var wire 1 H% PC_inc [2] $end
$var wire 1 I% PC_inc [1] $end
$var wire 1 J% PC_inc [0] $end
$var wire 1 K% PC [15] $end
$var wire 1 L% PC [14] $end
$var wire 1 M% PC [13] $end
$var wire 1 N% PC [12] $end
$var wire 1 O% PC [11] $end
$var wire 1 P% PC [10] $end
$var wire 1 Q% PC [9] $end
$var wire 1 R% PC [8] $end
$var wire 1 S% PC [7] $end
$var wire 1 T% PC [6] $end
$var wire 1 U% PC [5] $end
$var wire 1 V% PC [4] $end
$var wire 1 W% PC [3] $end
$var wire 1 X% PC [2] $end
$var wire 1 Y% PC [1] $end
$var wire 1 Z% PC [0] $end
$var wire 1 [% PC_new [15] $end
$var wire 1 \% PC_new [14] $end
$var wire 1 ]% PC_new [13] $end
$var wire 1 ^% PC_new [12] $end
$var wire 1 _% PC_new [11] $end
$var wire 1 `% PC_new [10] $end
$var wire 1 a% PC_new [9] $end
$var wire 1 b% PC_new [8] $end
$var wire 1 c% PC_new [7] $end
$var wire 1 d% PC_new [6] $end
$var wire 1 e% PC_new [5] $end
$var wire 1 f% PC_new [4] $end
$var wire 1 g% PC_new [3] $end
$var wire 1 h% PC_new [2] $end
$var wire 1 i% PC_new [1] $end
$var wire 1 j% PC_new [0] $end
$var wire 1 k% IFID_PC [15] $end
$var wire 1 l% IFID_PC [14] $end
$var wire 1 m% IFID_PC [13] $end
$var wire 1 n% IFID_PC [12] $end
$var wire 1 o% IFID_PC [11] $end
$var wire 1 p% IFID_PC [10] $end
$var wire 1 q% IFID_PC [9] $end
$var wire 1 r% IFID_PC [8] $end
$var wire 1 s% IFID_PC [7] $end
$var wire 1 t% IFID_PC [6] $end
$var wire 1 u% IFID_PC [5] $end
$var wire 1 v% IFID_PC [4] $end
$var wire 1 w% IFID_PC [3] $end
$var wire 1 x% IFID_PC [2] $end
$var wire 1 y% IFID_PC [1] $end
$var wire 1 z% IFID_PC [0] $end
$var wire 1 {% IDEX_PC [15] $end
$var wire 1 |% IDEX_PC [14] $end
$var wire 1 }% IDEX_PC [13] $end
$var wire 1 ~% IDEX_PC [12] $end
$var wire 1 !& IDEX_PC [11] $end
$var wire 1 "& IDEX_PC [10] $end
$var wire 1 #& IDEX_PC [9] $end
$var wire 1 $& IDEX_PC [8] $end
$var wire 1 %& IDEX_PC [7] $end
$var wire 1 && IDEX_PC [6] $end
$var wire 1 '& IDEX_PC [5] $end
$var wire 1 (& IDEX_PC [4] $end
$var wire 1 )& IDEX_PC [3] $end
$var wire 1 *& IDEX_PC [2] $end
$var wire 1 +& IDEX_PC [1] $end
$var wire 1 ,& IDEX_PC [0] $end
$var wire 1 -& EXMEM_PC [15] $end
$var wire 1 .& EXMEM_PC [14] $end
$var wire 1 /& EXMEM_PC [13] $end
$var wire 1 0& EXMEM_PC [12] $end
$var wire 1 1& EXMEM_PC [11] $end
$var wire 1 2& EXMEM_PC [10] $end
$var wire 1 3& EXMEM_PC [9] $end
$var wire 1 4& EXMEM_PC [8] $end
$var wire 1 5& EXMEM_PC [7] $end
$var wire 1 6& EXMEM_PC [6] $end
$var wire 1 7& EXMEM_PC [5] $end
$var wire 1 8& EXMEM_PC [4] $end
$var wire 1 9& EXMEM_PC [3] $end
$var wire 1 :& EXMEM_PC [2] $end
$var wire 1 ;& EXMEM_PC [1] $end
$var wire 1 <& EXMEM_PC [0] $end
$var wire 1 =& MEMWB_PC [15] $end
$var wire 1 >& MEMWB_PC [14] $end
$var wire 1 ?& MEMWB_PC [13] $end
$var wire 1 @& MEMWB_PC [12] $end
$var wire 1 A& MEMWB_PC [11] $end
$var wire 1 B& MEMWB_PC [10] $end
$var wire 1 C& MEMWB_PC [9] $end
$var wire 1 D& MEMWB_PC [8] $end
$var wire 1 E& MEMWB_PC [7] $end
$var wire 1 F& MEMWB_PC [6] $end
$var wire 1 G& MEMWB_PC [5] $end
$var wire 1 H& MEMWB_PC [4] $end
$var wire 1 I& MEMWB_PC [3] $end
$var wire 1 J& MEMWB_PC [2] $end
$var wire 1 K& MEMWB_PC [1] $end
$var wire 1 L& MEMWB_PC [0] $end
$var wire 1 M& FD_flush $end
$var wire 1 N& IFID_PC_inc [15] $end
$var wire 1 O& IFID_PC_inc [14] $end
$var wire 1 P& IFID_PC_inc [13] $end
$var wire 1 Q& IFID_PC_inc [12] $end
$var wire 1 R& IFID_PC_inc [11] $end
$var wire 1 S& IFID_PC_inc [10] $end
$var wire 1 T& IFID_PC_inc [9] $end
$var wire 1 U& IFID_PC_inc [8] $end
$var wire 1 V& IFID_PC_inc [7] $end
$var wire 1 W& IFID_PC_inc [6] $end
$var wire 1 X& IFID_PC_inc [5] $end
$var wire 1 Y& IFID_PC_inc [4] $end
$var wire 1 Z& IFID_PC_inc [3] $end
$var wire 1 [& IFID_PC_inc [2] $end
$var wire 1 \& IFID_PC_inc [1] $end
$var wire 1 ]& IFID_PC_inc [0] $end
$var wire 1 ^& IFID_instr [15] $end
$var wire 1 _& IFID_instr [14] $end
$var wire 1 `& IFID_instr [13] $end
$var wire 1 a& IFID_instr [12] $end
$var wire 1 b& IFID_instr [11] $end
$var wire 1 c& IFID_instr [10] $end
$var wire 1 d& IFID_instr [9] $end
$var wire 1 e& IFID_instr [8] $end
$var wire 1 f& IFID_instr [7] $end
$var wire 1 g& IFID_instr [6] $end
$var wire 1 h& IFID_instr [5] $end
$var wire 1 i& IFID_instr [4] $end
$var wire 1 j& IFID_instr [3] $end
$var wire 1 k& IFID_instr [2] $end
$var wire 1 l& IFID_instr [1] $end
$var wire 1 m& IFID_instr [0] $end
$var wire 1 n& IDEX_Rs [2] $end
$var wire 1 o& IDEX_Rs [1] $end
$var wire 1 p& IDEX_Rs [0] $end
$var wire 1 q& IDEX_Rt [2] $end
$var wire 1 r& IDEX_Rt [1] $end
$var wire 1 s& IDEX_Rt [0] $end
$var wire 1 t& IDEX_Rd [2] $end
$var wire 1 u& IDEX_Rd [1] $end
$var wire 1 v& IDEX_Rd [0] $end
$var wire 1 w& IDEX_aluOp [2] $end
$var wire 1 x& IDEX_aluOp [1] $end
$var wire 1 y& IDEX_aluOp [0] $end
$var wire 1 z& IDEX_branchCtl [2] $end
$var wire 1 {& IDEX_branchCtl [1] $end
$var wire 1 |& IDEX_branchCtl [0] $end
$var wire 1 }& IDEX_jumpCtl [2] $end
$var wire 1 ~& IDEX_jumpCtl [1] $end
$var wire 1 !' IDEX_jumpCtl [0] $end
$var wire 1 "' IDEX_read1Data [15] $end
$var wire 1 #' IDEX_read1Data [14] $end
$var wire 1 $' IDEX_read1Data [13] $end
$var wire 1 %' IDEX_read1Data [12] $end
$var wire 1 &' IDEX_read1Data [11] $end
$var wire 1 '' IDEX_read1Data [10] $end
$var wire 1 (' IDEX_read1Data [9] $end
$var wire 1 )' IDEX_read1Data [8] $end
$var wire 1 *' IDEX_read1Data [7] $end
$var wire 1 +' IDEX_read1Data [6] $end
$var wire 1 ,' IDEX_read1Data [5] $end
$var wire 1 -' IDEX_read1Data [4] $end
$var wire 1 .' IDEX_read1Data [3] $end
$var wire 1 /' IDEX_read1Data [2] $end
$var wire 1 0' IDEX_read1Data [1] $end
$var wire 1 1' IDEX_read1Data [0] $end
$var wire 1 2' IDEX_read2Data [15] $end
$var wire 1 3' IDEX_read2Data [14] $end
$var wire 1 4' IDEX_read2Data [13] $end
$var wire 1 5' IDEX_read2Data [12] $end
$var wire 1 6' IDEX_read2Data [11] $end
$var wire 1 7' IDEX_read2Data [10] $end
$var wire 1 8' IDEX_read2Data [9] $end
$var wire 1 9' IDEX_read2Data [8] $end
$var wire 1 :' IDEX_read2Data [7] $end
$var wire 1 ;' IDEX_read2Data [6] $end
$var wire 1 <' IDEX_read2Data [5] $end
$var wire 1 =' IDEX_read2Data [4] $end
$var wire 1 >' IDEX_read2Data [3] $end
$var wire 1 ?' IDEX_read2Data [2] $end
$var wire 1 @' IDEX_read2Data [1] $end
$var wire 1 A' IDEX_read2Data [0] $end
$var wire 1 B' IDEX_exImmVal [15] $end
$var wire 1 C' IDEX_exImmVal [14] $end
$var wire 1 D' IDEX_exImmVal [13] $end
$var wire 1 E' IDEX_exImmVal [12] $end
$var wire 1 F' IDEX_exImmVal [11] $end
$var wire 1 G' IDEX_exImmVal [10] $end
$var wire 1 H' IDEX_exImmVal [9] $end
$var wire 1 I' IDEX_exImmVal [8] $end
$var wire 1 J' IDEX_exImmVal [7] $end
$var wire 1 K' IDEX_exImmVal [6] $end
$var wire 1 L' IDEX_exImmVal [5] $end
$var wire 1 M' IDEX_exImmVal [4] $end
$var wire 1 N' IDEX_exImmVal [3] $end
$var wire 1 O' IDEX_exImmVal [2] $end
$var wire 1 P' IDEX_exImmVal [1] $end
$var wire 1 Q' IDEX_exImmVal [0] $end
$var wire 1 R' IDEX_PC_inc [15] $end
$var wire 1 S' IDEX_PC_inc [14] $end
$var wire 1 T' IDEX_PC_inc [13] $end
$var wire 1 U' IDEX_PC_inc [12] $end
$var wire 1 V' IDEX_PC_inc [11] $end
$var wire 1 W' IDEX_PC_inc [10] $end
$var wire 1 X' IDEX_PC_inc [9] $end
$var wire 1 Y' IDEX_PC_inc [8] $end
$var wire 1 Z' IDEX_PC_inc [7] $end
$var wire 1 [' IDEX_PC_inc [6] $end
$var wire 1 \' IDEX_PC_inc [5] $end
$var wire 1 ]' IDEX_PC_inc [4] $end
$var wire 1 ^' IDEX_PC_inc [3] $end
$var wire 1 _' IDEX_PC_inc [2] $end
$var wire 1 `' IDEX_PC_inc [1] $end
$var wire 1 a' IDEX_PC_inc [0] $end
$var wire 1 b' IDEX_regWrite $end
$var wire 1 c' IDEX_aluSrc $end
$var wire 1 d' IDEX_btr $end
$var wire 1 e' IDEX_memWrite $end
$var wire 1 f' IDEX_memRead $end
$var wire 1 g' IDEX_MemToReg $end
$var wire 1 h' IDEX_slbi $end
$var wire 1 i' IDEX_lbi $end
$var wire 1 j' IDEX_seq $end
$var wire 1 k' IDEX_sl $end
$var wire 1 l' IDEX_sco $end
$var wire 1 m' IDEX_ror $end
$var wire 1 n' EXMEM_PC_inc [15] $end
$var wire 1 o' EXMEM_PC_inc [14] $end
$var wire 1 p' EXMEM_PC_inc [13] $end
$var wire 1 q' EXMEM_PC_inc [12] $end
$var wire 1 r' EXMEM_PC_inc [11] $end
$var wire 1 s' EXMEM_PC_inc [10] $end
$var wire 1 t' EXMEM_PC_inc [9] $end
$var wire 1 u' EXMEM_PC_inc [8] $end
$var wire 1 v' EXMEM_PC_inc [7] $end
$var wire 1 w' EXMEM_PC_inc [6] $end
$var wire 1 x' EXMEM_PC_inc [5] $end
$var wire 1 y' EXMEM_PC_inc [4] $end
$var wire 1 z' EXMEM_PC_inc [3] $end
$var wire 1 {' EXMEM_PC_inc [2] $end
$var wire 1 |' EXMEM_PC_inc [1] $end
$var wire 1 }' EXMEM_PC_inc [0] $end
$var wire 1 ~' EXMEM_memAddr [15] $end
$var wire 1 !( EXMEM_memAddr [14] $end
$var wire 1 "( EXMEM_memAddr [13] $end
$var wire 1 #( EXMEM_memAddr [12] $end
$var wire 1 $( EXMEM_memAddr [11] $end
$var wire 1 %( EXMEM_memAddr [10] $end
$var wire 1 &( EXMEM_memAddr [9] $end
$var wire 1 '( EXMEM_memAddr [8] $end
$var wire 1 (( EXMEM_memAddr [7] $end
$var wire 1 )( EXMEM_memAddr [6] $end
$var wire 1 *( EXMEM_memAddr [5] $end
$var wire 1 +( EXMEM_memAddr [4] $end
$var wire 1 ,( EXMEM_memAddr [3] $end
$var wire 1 -( EXMEM_memAddr [2] $end
$var wire 1 .( EXMEM_memAddr [1] $end
$var wire 1 /( EXMEM_memAddr [0] $end
$var wire 1 0( EXMEM_PC_new [15] $end
$var wire 1 1( EXMEM_PC_new [14] $end
$var wire 1 2( EXMEM_PC_new [13] $end
$var wire 1 3( EXMEM_PC_new [12] $end
$var wire 1 4( EXMEM_PC_new [11] $end
$var wire 1 5( EXMEM_PC_new [10] $end
$var wire 1 6( EXMEM_PC_new [9] $end
$var wire 1 7( EXMEM_PC_new [8] $end
$var wire 1 8( EXMEM_PC_new [7] $end
$var wire 1 9( EXMEM_PC_new [6] $end
$var wire 1 :( EXMEM_PC_new [5] $end
$var wire 1 ;( EXMEM_PC_new [4] $end
$var wire 1 <( EXMEM_PC_new [3] $end
$var wire 1 =( EXMEM_PC_new [2] $end
$var wire 1 >( EXMEM_PC_new [1] $end
$var wire 1 ?( EXMEM_PC_new [0] $end
$var wire 1 @( EXMEM_wrData [15] $end
$var wire 1 A( EXMEM_wrData [14] $end
$var wire 1 B( EXMEM_wrData [13] $end
$var wire 1 C( EXMEM_wrData [12] $end
$var wire 1 D( EXMEM_wrData [11] $end
$var wire 1 E( EXMEM_wrData [10] $end
$var wire 1 F( EXMEM_wrData [9] $end
$var wire 1 G( EXMEM_wrData [8] $end
$var wire 1 H( EXMEM_wrData [7] $end
$var wire 1 I( EXMEM_wrData [6] $end
$var wire 1 J( EXMEM_wrData [5] $end
$var wire 1 K( EXMEM_wrData [4] $end
$var wire 1 L( EXMEM_wrData [3] $end
$var wire 1 M( EXMEM_wrData [2] $end
$var wire 1 N( EXMEM_wrData [1] $end
$var wire 1 O( EXMEM_wrData [0] $end
$var wire 1 P( EXMEM_Rs [2] $end
$var wire 1 Q( EXMEM_Rs [1] $end
$var wire 1 R( EXMEM_Rs [0] $end
$var wire 1 S( EXMEM_Rt [2] $end
$var wire 1 T( EXMEM_Rt [1] $end
$var wire 1 U( EXMEM_Rt [0] $end
$var wire 1 V( EXMEM_Rd [2] $end
$var wire 1 W( EXMEM_Rd [1] $end
$var wire 1 X( EXMEM_Rd [0] $end
$var wire 1 Y( EXMEM_memRead $end
$var wire 1 Z( EXMEM_memWrite $end
$var wire 1 [( EXMEM_PCsrc $end
$var wire 1 \( EXMEM_regWrite $end
$var wire 1 ]( EXMEM_MemToReg $end
$var wire 1 ^( MEMWB_jumpCtl [2] $end
$var wire 1 _( MEMWB_jumpCtl [1] $end
$var wire 1 `( MEMWB_jumpCtl [0] $end
$var wire 1 a( MEMWB_Out [15] $end
$var wire 1 b( MEMWB_Out [14] $end
$var wire 1 c( MEMWB_Out [13] $end
$var wire 1 d( MEMWB_Out [12] $end
$var wire 1 e( MEMWB_Out [11] $end
$var wire 1 f( MEMWB_Out [10] $end
$var wire 1 g( MEMWB_Out [9] $end
$var wire 1 h( MEMWB_Out [8] $end
$var wire 1 i( MEMWB_Out [7] $end
$var wire 1 j( MEMWB_Out [6] $end
$var wire 1 k( MEMWB_Out [5] $end
$var wire 1 l( MEMWB_Out [4] $end
$var wire 1 m( MEMWB_Out [3] $end
$var wire 1 n( MEMWB_Out [2] $end
$var wire 1 o( MEMWB_Out [1] $end
$var wire 1 p( MEMWB_Out [0] $end
$var wire 1 q( MEMWB_memoryOut [15] $end
$var wire 1 r( MEMWB_memoryOut [14] $end
$var wire 1 s( MEMWB_memoryOut [13] $end
$var wire 1 t( MEMWB_memoryOut [12] $end
$var wire 1 u( MEMWB_memoryOut [11] $end
$var wire 1 v( MEMWB_memoryOut [10] $end
$var wire 1 w( MEMWB_memoryOut [9] $end
$var wire 1 x( MEMWB_memoryOut [8] $end
$var wire 1 y( MEMWB_memoryOut [7] $end
$var wire 1 z( MEMWB_memoryOut [6] $end
$var wire 1 {( MEMWB_memoryOut [5] $end
$var wire 1 |( MEMWB_memoryOut [4] $end
$var wire 1 }( MEMWB_memoryOut [3] $end
$var wire 1 ~( MEMWB_memoryOut [2] $end
$var wire 1 !) MEMWB_memoryOut [1] $end
$var wire 1 ") MEMWB_memoryOut [0] $end
$var wire 1 #) MEMWB_PC_inc [15] $end
$var wire 1 $) MEMWB_PC_inc [14] $end
$var wire 1 %) MEMWB_PC_inc [13] $end
$var wire 1 &) MEMWB_PC_inc [12] $end
$var wire 1 ') MEMWB_PC_inc [11] $end
$var wire 1 () MEMWB_PC_inc [10] $end
$var wire 1 )) MEMWB_PC_inc [9] $end
$var wire 1 *) MEMWB_PC_inc [8] $end
$var wire 1 +) MEMWB_PC_inc [7] $end
$var wire 1 ,) MEMWB_PC_inc [6] $end
$var wire 1 -) MEMWB_PC_inc [5] $end
$var wire 1 .) MEMWB_PC_inc [4] $end
$var wire 1 /) MEMWB_PC_inc [3] $end
$var wire 1 0) MEMWB_PC_inc [2] $end
$var wire 1 1) MEMWB_PC_inc [1] $end
$var wire 1 2) MEMWB_PC_inc [0] $end
$var wire 1 3) MEMWB_MemToReg $end
$var wire 1 4) MEMWB_regWrite $end
$var wire 1 5) flush $end
$var wire 1 6) stall $end
$var wire 1 7) MEMWB_Rd $end
$var wire 1 8) exImmVal $end
$var wire 1 9) MemToReg $end
$var wire 1 :) EXMEM_jumpCtl $end
$var wire 1 ;) EXMEM_writeData $end
$var wire 1 <) MEMWB_ALUout $end
$var wire 1 =) MEMWB_Rs $end
$var wire 1 >) MEMWB_Rt $end

$scope module Pipeline_Control $end
$var wire 1 5) flush $end
$var wire 1 6) stall $end
$upscope $end

$scope module fetchStage $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 *" PCsrc $end
$var wire 1 [% PC_new [15] $end
$var wire 1 \% PC_new [14] $end
$var wire 1 ]% PC_new [13] $end
$var wire 1 ^% PC_new [12] $end
$var wire 1 _% PC_new [11] $end
$var wire 1 `% PC_new [10] $end
$var wire 1 a% PC_new [9] $end
$var wire 1 b% PC_new [8] $end
$var wire 1 c% PC_new [7] $end
$var wire 1 d% PC_new [6] $end
$var wire 1 e% PC_new [5] $end
$var wire 1 f% PC_new [4] $end
$var wire 1 g% PC_new [3] $end
$var wire 1 h% PC_new [2] $end
$var wire 1 i% PC_new [1] $end
$var wire 1 j% PC_new [0] $end
$var wire 1 ;% PC_inc [15] $end
$var wire 1 <% PC_inc [14] $end
$var wire 1 =% PC_inc [13] $end
$var wire 1 >% PC_inc [12] $end
$var wire 1 ?% PC_inc [11] $end
$var wire 1 @% PC_inc [10] $end
$var wire 1 A% PC_inc [9] $end
$var wire 1 B% PC_inc [8] $end
$var wire 1 C% PC_inc [7] $end
$var wire 1 D% PC_inc [6] $end
$var wire 1 E% PC_inc [5] $end
$var wire 1 F% PC_inc [4] $end
$var wire 1 G% PC_inc [3] $end
$var wire 1 H% PC_inc [2] $end
$var wire 1 I% PC_inc [1] $end
$var wire 1 J% PC_inc [0] $end
$var wire 1 U" instr [15] $end
$var wire 1 V" instr [14] $end
$var wire 1 W" instr [13] $end
$var wire 1 X" instr [12] $end
$var wire 1 Y" instr [11] $end
$var wire 1 Z" instr [10] $end
$var wire 1 [" instr [9] $end
$var wire 1 \" instr [8] $end
$var wire 1 ]" instr [7] $end
$var wire 1 ^" instr [6] $end
$var wire 1 _" instr [5] $end
$var wire 1 `" instr [4] $end
$var wire 1 a" instr [3] $end
$var wire 1 b" instr [2] $end
$var wire 1 c" instr [1] $end
$var wire 1 d" instr [0] $end
$var wire 1 K% PC [15] $end
$var wire 1 L% PC [14] $end
$var wire 1 M% PC [13] $end
$var wire 1 N% PC [12] $end
$var wire 1 O% PC [11] $end
$var wire 1 P% PC [10] $end
$var wire 1 Q% PC [9] $end
$var wire 1 R% PC [8] $end
$var wire 1 S% PC [7] $end
$var wire 1 T% PC [6] $end
$var wire 1 U% PC [5] $end
$var wire 1 V% PC [4] $end
$var wire 1 W% PC [3] $end
$var wire 1 X% PC [2] $end
$var wire 1 Y% PC [1] $end
$var wire 1 Z% PC [0] $end
$var wire 1 ?) PC_next [15] $end
$var wire 1 @) PC_next [14] $end
$var wire 1 A) PC_next [13] $end
$var wire 1 B) PC_next [12] $end
$var wire 1 C) PC_next [11] $end
$var wire 1 D) PC_next [10] $end
$var wire 1 E) PC_next [9] $end
$var wire 1 F) PC_next [8] $end
$var wire 1 G) PC_next [7] $end
$var wire 1 H) PC_next [6] $end
$var wire 1 I) PC_next [5] $end
$var wire 1 J) PC_next [4] $end
$var wire 1 K) PC_next [3] $end
$var wire 1 L) PC_next [2] $end
$var wire 1 M) PC_next [1] $end
$var wire 1 N) PC_next [0] $end
$var wire 1 O) halt $end
$var wire 1 P) noOp $end

$scope module pcreg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 Q) en $end
$var wire 1 ?) D [15] $end
$var wire 1 @) D [14] $end
$var wire 1 A) D [13] $end
$var wire 1 B) D [12] $end
$var wire 1 C) D [11] $end
$var wire 1 D) D [10] $end
$var wire 1 E) D [9] $end
$var wire 1 F) D [8] $end
$var wire 1 G) D [7] $end
$var wire 1 H) D [6] $end
$var wire 1 I) D [5] $end
$var wire 1 J) D [4] $end
$var wire 1 K) D [3] $end
$var wire 1 L) D [2] $end
$var wire 1 M) D [1] $end
$var wire 1 N) D [0] $end
$var wire 1 K% Q [15] $end
$var wire 1 L% Q [14] $end
$var wire 1 M% Q [13] $end
$var wire 1 N% Q [12] $end
$var wire 1 O% Q [11] $end
$var wire 1 P% Q [10] $end
$var wire 1 Q% Q [9] $end
$var wire 1 R% Q [8] $end
$var wire 1 S% Q [7] $end
$var wire 1 T% Q [6] $end
$var wire 1 U% Q [5] $end
$var wire 1 V% Q [4] $end
$var wire 1 W% Q [3] $end
$var wire 1 X% Q [2] $end
$var wire 1 Y% Q [1] $end
$var wire 1 Z% Q [0] $end
$var wire 1 R) in [15] $end
$var wire 1 S) in [14] $end
$var wire 1 T) in [13] $end
$var wire 1 U) in [12] $end
$var wire 1 V) in [11] $end
$var wire 1 W) in [10] $end
$var wire 1 X) in [9] $end
$var wire 1 Y) in [8] $end
$var wire 1 Z) in [7] $end
$var wire 1 [) in [6] $end
$var wire 1 \) in [5] $end
$var wire 1 ]) in [4] $end
$var wire 1 ^) in [3] $end
$var wire 1 _) in [2] $end
$var wire 1 `) in [1] $end
$var wire 1 a) in [0] $end
$var wire 1 b) out [15] $end
$var wire 1 c) out [14] $end
$var wire 1 d) out [13] $end
$var wire 1 e) out [12] $end
$var wire 1 f) out [11] $end
$var wire 1 g) out [10] $end
$var wire 1 h) out [9] $end
$var wire 1 i) out [8] $end
$var wire 1 j) out [7] $end
$var wire 1 k) out [6] $end
$var wire 1 l) out [5] $end
$var wire 1 m) out [4] $end
$var wire 1 n) out [3] $end
$var wire 1 o) out [2] $end
$var wire 1 p) out [1] $end
$var wire 1 q) out [0] $end

$scope module dff_0 $end
$var wire 1 q) q $end
$var wire 1 a) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 r) state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 p) q $end
$var wire 1 `) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 s) state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 o) q $end
$var wire 1 _) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 t) state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 n) q $end
$var wire 1 ^) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 u) state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 m) q $end
$var wire 1 ]) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 v) state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 l) q $end
$var wire 1 \) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 w) state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 k) q $end
$var wire 1 [) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 x) state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 j) q $end
$var wire 1 Z) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 y) state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 i) q $end
$var wire 1 Y) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 z) state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 h) q $end
$var wire 1 X) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 {) state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 g) q $end
$var wire 1 W) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |) state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 f) q $end
$var wire 1 V) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }) state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 e) q $end
$var wire 1 U) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 d) q $end
$var wire 1 T) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !* state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 c) q $end
$var wire 1 S) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "* state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 b) q $end
$var wire 1 R) d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #* state $end
$upscope $end
$upscope $end

$scope module instr_mem $end
$var wire 1 U" data_out [15] $end
$var wire 1 V" data_out [14] $end
$var wire 1 W" data_out [13] $end
$var wire 1 X" data_out [12] $end
$var wire 1 Y" data_out [11] $end
$var wire 1 Z" data_out [10] $end
$var wire 1 [" data_out [9] $end
$var wire 1 \" data_out [8] $end
$var wire 1 ]" data_out [7] $end
$var wire 1 ^" data_out [6] $end
$var wire 1 _" data_out [5] $end
$var wire 1 `" data_out [4] $end
$var wire 1 a" data_out [3] $end
$var wire 1 b" data_out [2] $end
$var wire 1 c" data_out [1] $end
$var wire 1 d" data_out [0] $end
$var wire 1 K% data_in [15] $end
$var wire 1 L% data_in [14] $end
$var wire 1 M% data_in [13] $end
$var wire 1 N% data_in [12] $end
$var wire 1 O% data_in [11] $end
$var wire 1 P% data_in [10] $end
$var wire 1 Q% data_in [9] $end
$var wire 1 R% data_in [8] $end
$var wire 1 S% data_in [7] $end
$var wire 1 T% data_in [6] $end
$var wire 1 U% data_in [5] $end
$var wire 1 V% data_in [4] $end
$var wire 1 W% data_in [3] $end
$var wire 1 X% data_in [2] $end
$var wire 1 Y% data_in [1] $end
$var wire 1 Z% data_in [0] $end
$var wire 1 K% addr [15] $end
$var wire 1 L% addr [14] $end
$var wire 1 M% addr [13] $end
$var wire 1 N% addr [12] $end
$var wire 1 O% addr [11] $end
$var wire 1 P% addr [10] $end
$var wire 1 Q% addr [9] $end
$var wire 1 R% addr [8] $end
$var wire 1 S% addr [7] $end
$var wire 1 T% addr [6] $end
$var wire 1 U% addr [5] $end
$var wire 1 V% addr [4] $end
$var wire 1 W% addr [3] $end
$var wire 1 X% addr [2] $end
$var wire 1 Y% addr [1] $end
$var wire 1 Z% addr [0] $end
$var wire 1 $* enable $end
$var wire 1 %* wr $end
$var wire 1 u! createdump $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 &* loaded $end
$var reg 17 '* largest [16:0] $end
$var integer 32 (* mcd $end
$var integer 32 )* i $end
$upscope $end

$scope module incPC $end
$var parameter 32 ** N $end
$var wire 1 K% A [15] $end
$var wire 1 L% A [14] $end
$var wire 1 M% A [13] $end
$var wire 1 N% A [12] $end
$var wire 1 O% A [11] $end
$var wire 1 P% A [10] $end
$var wire 1 Q% A [9] $end
$var wire 1 R% A [8] $end
$var wire 1 S% A [7] $end
$var wire 1 T% A [6] $end
$var wire 1 U% A [5] $end
$var wire 1 V% A [4] $end
$var wire 1 W% A [3] $end
$var wire 1 X% A [2] $end
$var wire 1 Y% A [1] $end
$var wire 1 Z% A [0] $end
$var wire 1 +* B [15] $end
$var wire 1 ,* B [14] $end
$var wire 1 -* B [13] $end
$var wire 1 .* B [12] $end
$var wire 1 /* B [11] $end
$var wire 1 0* B [10] $end
$var wire 1 1* B [9] $end
$var wire 1 2* B [8] $end
$var wire 1 3* B [7] $end
$var wire 1 4* B [6] $end
$var wire 1 5* B [5] $end
$var wire 1 6* B [4] $end
$var wire 1 7* B [3] $end
$var wire 1 8* B [2] $end
$var wire 1 9* B [1] $end
$var wire 1 :* B [0] $end
$var wire 1 ;* C_in $end
$var wire 1 ;% S [15] $end
$var wire 1 <% S [14] $end
$var wire 1 =% S [13] $end
$var wire 1 >% S [12] $end
$var wire 1 ?% S [11] $end
$var wire 1 @% S [10] $end
$var wire 1 A% S [9] $end
$var wire 1 B% S [8] $end
$var wire 1 C% S [7] $end
$var wire 1 D% S [6] $end
$var wire 1 E% S [5] $end
$var wire 1 F% S [4] $end
$var wire 1 G% S [3] $end
$var wire 1 H% S [2] $end
$var wire 1 I% S [1] $end
$var wire 1 J% S [0] $end
$var wire 1 <* C_out $end
$var wire 1 =* C0 $end
$var wire 1 >* C1 $end
$var wire 1 ?* C2 $end
$var wire 1 @* P0 $end
$var wire 1 A* P0_bar $end
$var wire 1 B* P1 $end
$var wire 1 C* P1_bar $end
$var wire 1 D* P2 $end
$var wire 1 E* P2_bar $end
$var wire 1 F* P3 $end
$var wire 1 G* P3_bar $end
$var wire 1 H* G0 $end
$var wire 1 I* G0_bar $end
$var wire 1 J* G1 $end
$var wire 1 K* G1_bar $end
$var wire 1 L* G2 $end
$var wire 1 M* G2_bar $end
$var wire 1 N* G3 $end
$var wire 1 O* G3_bar $end
$var wire 1 P* nand2_c0_0_out $end
$var wire 1 Q* nand2_c1_0_out $end
$var wire 1 R* nand2_c2_0_out $end
$var wire 1 S* nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 T* N $end
$var wire 1 W% A [3] $end
$var wire 1 X% A [2] $end
$var wire 1 Y% A [1] $end
$var wire 1 Z% A [0] $end
$var wire 1 7* B [3] $end
$var wire 1 8* B [2] $end
$var wire 1 9* B [1] $end
$var wire 1 :* B [0] $end
$var wire 1 ;* C_in $end
$var wire 1 G% S [3] $end
$var wire 1 H% S [2] $end
$var wire 1 I% S [1] $end
$var wire 1 J% S [0] $end
$var wire 1 @* P $end
$var wire 1 H* G $end
$var wire 1 U* C_out $end
$var wire 1 V* c0 $end
$var wire 1 W* c1 $end
$var wire 1 X* c2 $end
$var wire 1 Y* p0 $end
$var wire 1 Z* g0 $end
$var wire 1 [* p1 $end
$var wire 1 \* g1 $end
$var wire 1 ]* p2 $end
$var wire 1 ^* g2 $end
$var wire 1 _* p3 $end
$var wire 1 `* g3 $end
$var wire 1 a* g0_bar $end
$var wire 1 b* g1_bar $end
$var wire 1 c* g2_bar $end
$var wire 1 d* g3_bar $end
$var wire 1 e* nand2_c0_0_out $end
$var wire 1 f* nand2_c1_0_out $end
$var wire 1 g* nand2_c2_0_out $end
$var wire 1 h* nand2_c3_0_out $end
$var wire 1 i* nand2_p3_p2 $end
$var wire 1 j* nand2_p1_p0 $end
$var wire 1 k* nand2_p3g2_out $end
$var wire 1 l* nand2_p3p2g1_out $end
$var wire 1 m* nand3_G_0_out $end
$var wire 1 n* nand2_p1g0_out $end
$var wire 1 o* nor2_G_0_out $end
$var wire 1 p* G_bar $end

$scope module not1_c0_0 $end
$var wire 1 Z* in1 $end
$var wire 1 a* out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 Y* in1 $end
$var wire 1 ;* in2 $end
$var wire 1 e* out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 a* in1 $end
$var wire 1 e* in2 $end
$var wire 1 V* out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 \* in1 $end
$var wire 1 b* out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 [* in1 $end
$var wire 1 V* in2 $end
$var wire 1 f* out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 b* in1 $end
$var wire 1 f* in2 $end
$var wire 1 W* out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ^* in1 $end
$var wire 1 c* out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 ]* in1 $end
$var wire 1 W* in2 $end
$var wire 1 g* out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 c* in1 $end
$var wire 1 g* in2 $end
$var wire 1 X* out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 `* in1 $end
$var wire 1 d* out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 _* in1 $end
$var wire 1 X* in2 $end
$var wire 1 h* out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 d* in1 $end
$var wire 1 h* in2 $end
$var wire 1 U* out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 _* in1 $end
$var wire 1 ]* in2 $end
$var wire 1 i* out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 [* in1 $end
$var wire 1 Y* in2 $end
$var wire 1 j* out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 i* in1 $end
$var wire 1 j* in2 $end
$var wire 1 @* out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 _* in1 $end
$var wire 1 ^* in2 $end
$var wire 1 k* out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 _* in1 $end
$var wire 1 ]* in2 $end
$var wire 1 \* in3 $end
$var wire 1 l* out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 d* in1 $end
$var wire 1 k* in2 $end
$var wire 1 l* in3 $end
$var wire 1 m* out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 [* in1 $end
$var wire 1 Z* in2 $end
$var wire 1 n* out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 i* in1 $end
$var wire 1 n* in2 $end
$var wire 1 o* out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 m* in1 $end
$var wire 1 o* in2 $end
$var wire 1 p* out $end
$upscope $end

$scope module not1_G $end
$var wire 1 p* in1 $end
$var wire 1 H* out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 Z% A $end
$var wire 1 :* B $end
$var wire 1 ;* C_in $end
$var wire 1 Y* p $end
$var wire 1 Z* g $end
$var wire 1 J% S $end
$var wire 1 q* C_out $end
$var wire 1 r* g_bar $end
$var wire 1 s* p_bar $end
$var wire 1 t* nand2_1_out $end
$var wire 1 u* nand2_2_out $end
$var wire 1 v* nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Z% in1 $end
$var wire 1 :* in2 $end
$var wire 1 r* out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 r* in1 $end
$var wire 1 Z* out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Z% in1 $end
$var wire 1 :* in2 $end
$var wire 1 s* out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 s* in1 $end
$var wire 1 Y* out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Z% in1 $end
$var wire 1 :* in2 $end
$var wire 1 t* out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Z% in1 $end
$var wire 1 ;* in2 $end
$var wire 1 u* out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 :* in1 $end
$var wire 1 ;* in2 $end
$var wire 1 v* out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 t* in1 $end
$var wire 1 u* in2 $end
$var wire 1 v* in3 $end
$var wire 1 q* out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Z% in1 $end
$var wire 1 :* in2 $end
$var wire 1 ;* in3 $end
$var wire 1 J% out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 Y% A $end
$var wire 1 9* B $end
$var wire 1 V* C_in $end
$var wire 1 [* p $end
$var wire 1 \* g $end
$var wire 1 I% S $end
$var wire 1 w* C_out $end
$var wire 1 x* g_bar $end
$var wire 1 y* p_bar $end
$var wire 1 z* nand2_1_out $end
$var wire 1 {* nand2_2_out $end
$var wire 1 |* nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Y% in1 $end
$var wire 1 9* in2 $end
$var wire 1 x* out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 x* in1 $end
$var wire 1 \* out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Y% in1 $end
$var wire 1 9* in2 $end
$var wire 1 y* out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 y* in1 $end
$var wire 1 [* out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Y% in1 $end
$var wire 1 9* in2 $end
$var wire 1 z* out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Y% in1 $end
$var wire 1 V* in2 $end
$var wire 1 {* out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 9* in1 $end
$var wire 1 V* in2 $end
$var wire 1 |* out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 z* in1 $end
$var wire 1 {* in2 $end
$var wire 1 |* in3 $end
$var wire 1 w* out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Y% in1 $end
$var wire 1 9* in2 $end
$var wire 1 V* in3 $end
$var wire 1 I% out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 X% A $end
$var wire 1 8* B $end
$var wire 1 W* C_in $end
$var wire 1 ]* p $end
$var wire 1 ^* g $end
$var wire 1 H% S $end
$var wire 1 }* C_out $end
$var wire 1 ~* g_bar $end
$var wire 1 !+ p_bar $end
$var wire 1 "+ nand2_1_out $end
$var wire 1 #+ nand2_2_out $end
$var wire 1 $+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 X% in1 $end
$var wire 1 8* in2 $end
$var wire 1 ~* out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ~* in1 $end
$var wire 1 ^* out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 X% in1 $end
$var wire 1 8* in2 $end
$var wire 1 !+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 !+ in1 $end
$var wire 1 ]* out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 X% in1 $end
$var wire 1 8* in2 $end
$var wire 1 "+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 X% in1 $end
$var wire 1 W* in2 $end
$var wire 1 #+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 8* in1 $end
$var wire 1 W* in2 $end
$var wire 1 $+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 "+ in1 $end
$var wire 1 #+ in2 $end
$var wire 1 $+ in3 $end
$var wire 1 }* out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 X% in1 $end
$var wire 1 8* in2 $end
$var wire 1 W* in3 $end
$var wire 1 H% out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 W% A $end
$var wire 1 7* B $end
$var wire 1 X* C_in $end
$var wire 1 _* p $end
$var wire 1 `* g $end
$var wire 1 G% S $end
$var wire 1 %+ C_out $end
$var wire 1 &+ g_bar $end
$var wire 1 '+ p_bar $end
$var wire 1 (+ nand2_1_out $end
$var wire 1 )+ nand2_2_out $end
$var wire 1 *+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 W% in1 $end
$var wire 1 7* in2 $end
$var wire 1 &+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 &+ in1 $end
$var wire 1 `* out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 W% in1 $end
$var wire 1 7* in2 $end
$var wire 1 '+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 '+ in1 $end
$var wire 1 _* out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 W% in1 $end
$var wire 1 7* in2 $end
$var wire 1 (+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 W% in1 $end
$var wire 1 X* in2 $end
$var wire 1 )+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 7* in1 $end
$var wire 1 X* in2 $end
$var wire 1 *+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 (+ in1 $end
$var wire 1 )+ in2 $end
$var wire 1 *+ in3 $end
$var wire 1 %+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 W% in1 $end
$var wire 1 7* in2 $end
$var wire 1 X* in3 $end
$var wire 1 G% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 ++ N $end
$var wire 1 S% A [3] $end
$var wire 1 T% A [2] $end
$var wire 1 U% A [1] $end
$var wire 1 V% A [0] $end
$var wire 1 3* B [3] $end
$var wire 1 4* B [2] $end
$var wire 1 5* B [1] $end
$var wire 1 6* B [0] $end
$var wire 1 =* C_in $end
$var wire 1 C% S [3] $end
$var wire 1 D% S [2] $end
$var wire 1 E% S [1] $end
$var wire 1 F% S [0] $end
$var wire 1 B* P $end
$var wire 1 J* G $end
$var wire 1 ,+ C_out $end
$var wire 1 -+ c0 $end
$var wire 1 .+ c1 $end
$var wire 1 /+ c2 $end
$var wire 1 0+ p0 $end
$var wire 1 1+ g0 $end
$var wire 1 2+ p1 $end
$var wire 1 3+ g1 $end
$var wire 1 4+ p2 $end
$var wire 1 5+ g2 $end
$var wire 1 6+ p3 $end
$var wire 1 7+ g3 $end
$var wire 1 8+ g0_bar $end
$var wire 1 9+ g1_bar $end
$var wire 1 :+ g2_bar $end
$var wire 1 ;+ g3_bar $end
$var wire 1 <+ nand2_c0_0_out $end
$var wire 1 =+ nand2_c1_0_out $end
$var wire 1 >+ nand2_c2_0_out $end
$var wire 1 ?+ nand2_c3_0_out $end
$var wire 1 @+ nand2_p3_p2 $end
$var wire 1 A+ nand2_p1_p0 $end
$var wire 1 B+ nand2_p3g2_out $end
$var wire 1 C+ nand2_p3p2g1_out $end
$var wire 1 D+ nand3_G_0_out $end
$var wire 1 E+ nand2_p1g0_out $end
$var wire 1 F+ nor2_G_0_out $end
$var wire 1 G+ G_bar $end

$scope module not1_c0_0 $end
$var wire 1 1+ in1 $end
$var wire 1 8+ out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 0+ in1 $end
$var wire 1 =* in2 $end
$var wire 1 <+ out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 8+ in1 $end
$var wire 1 <+ in2 $end
$var wire 1 -+ out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 3+ in1 $end
$var wire 1 9+ out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 2+ in1 $end
$var wire 1 -+ in2 $end
$var wire 1 =+ out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 9+ in1 $end
$var wire 1 =+ in2 $end
$var wire 1 .+ out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 5+ in1 $end
$var wire 1 :+ out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 4+ in1 $end
$var wire 1 .+ in2 $end
$var wire 1 >+ out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 :+ in1 $end
$var wire 1 >+ in2 $end
$var wire 1 /+ out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 7+ in1 $end
$var wire 1 ;+ out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 6+ in1 $end
$var wire 1 /+ in2 $end
$var wire 1 ?+ out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 ;+ in1 $end
$var wire 1 ?+ in2 $end
$var wire 1 ,+ out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 6+ in1 $end
$var wire 1 4+ in2 $end
$var wire 1 @+ out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 2+ in1 $end
$var wire 1 0+ in2 $end
$var wire 1 A+ out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 @+ in1 $end
$var wire 1 A+ in2 $end
$var wire 1 B* out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 6+ in1 $end
$var wire 1 5+ in2 $end
$var wire 1 B+ out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 6+ in1 $end
$var wire 1 4+ in2 $end
$var wire 1 3+ in3 $end
$var wire 1 C+ out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 ;+ in1 $end
$var wire 1 B+ in2 $end
$var wire 1 C+ in3 $end
$var wire 1 D+ out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 2+ in1 $end
$var wire 1 1+ in2 $end
$var wire 1 E+ out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 @+ in1 $end
$var wire 1 E+ in2 $end
$var wire 1 F+ out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 D+ in1 $end
$var wire 1 F+ in2 $end
$var wire 1 G+ out $end
$upscope $end

$scope module not1_G $end
$var wire 1 G+ in1 $end
$var wire 1 J* out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 V% A $end
$var wire 1 6* B $end
$var wire 1 =* C_in $end
$var wire 1 0+ p $end
$var wire 1 1+ g $end
$var wire 1 F% S $end
$var wire 1 H+ C_out $end
$var wire 1 I+ g_bar $end
$var wire 1 J+ p_bar $end
$var wire 1 K+ nand2_1_out $end
$var wire 1 L+ nand2_2_out $end
$var wire 1 M+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V% in1 $end
$var wire 1 6* in2 $end
$var wire 1 I+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 I+ in1 $end
$var wire 1 1+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V% in1 $end
$var wire 1 6* in2 $end
$var wire 1 J+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 J+ in1 $end
$var wire 1 0+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V% in1 $end
$var wire 1 6* in2 $end
$var wire 1 K+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V% in1 $end
$var wire 1 =* in2 $end
$var wire 1 L+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 6* in1 $end
$var wire 1 =* in2 $end
$var wire 1 M+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 K+ in1 $end
$var wire 1 L+ in2 $end
$var wire 1 M+ in3 $end
$var wire 1 H+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V% in1 $end
$var wire 1 6* in2 $end
$var wire 1 =* in3 $end
$var wire 1 F% out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 U% A $end
$var wire 1 5* B $end
$var wire 1 -+ C_in $end
$var wire 1 2+ p $end
$var wire 1 3+ g $end
$var wire 1 E% S $end
$var wire 1 N+ C_out $end
$var wire 1 O+ g_bar $end
$var wire 1 P+ p_bar $end
$var wire 1 Q+ nand2_1_out $end
$var wire 1 R+ nand2_2_out $end
$var wire 1 S+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U% in1 $end
$var wire 1 5* in2 $end
$var wire 1 O+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 O+ in1 $end
$var wire 1 3+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U% in1 $end
$var wire 1 5* in2 $end
$var wire 1 P+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 P+ in1 $end
$var wire 1 2+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U% in1 $end
$var wire 1 5* in2 $end
$var wire 1 Q+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U% in1 $end
$var wire 1 -+ in2 $end
$var wire 1 R+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 5* in1 $end
$var wire 1 -+ in2 $end
$var wire 1 S+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 Q+ in1 $end
$var wire 1 R+ in2 $end
$var wire 1 S+ in3 $end
$var wire 1 N+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U% in1 $end
$var wire 1 5* in2 $end
$var wire 1 -+ in3 $end
$var wire 1 E% out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 T% A $end
$var wire 1 4* B $end
$var wire 1 .+ C_in $end
$var wire 1 4+ p $end
$var wire 1 5+ g $end
$var wire 1 D% S $end
$var wire 1 T+ C_out $end
$var wire 1 U+ g_bar $end
$var wire 1 V+ p_bar $end
$var wire 1 W+ nand2_1_out $end
$var wire 1 X+ nand2_2_out $end
$var wire 1 Y+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T% in1 $end
$var wire 1 4* in2 $end
$var wire 1 U+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 U+ in1 $end
$var wire 1 5+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T% in1 $end
$var wire 1 4* in2 $end
$var wire 1 V+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 V+ in1 $end
$var wire 1 4+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T% in1 $end
$var wire 1 4* in2 $end
$var wire 1 W+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T% in1 $end
$var wire 1 .+ in2 $end
$var wire 1 X+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 4* in1 $end
$var wire 1 .+ in2 $end
$var wire 1 Y+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 W+ in1 $end
$var wire 1 X+ in2 $end
$var wire 1 Y+ in3 $end
$var wire 1 T+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T% in1 $end
$var wire 1 4* in2 $end
$var wire 1 .+ in3 $end
$var wire 1 D% out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 S% A $end
$var wire 1 3* B $end
$var wire 1 /+ C_in $end
$var wire 1 6+ p $end
$var wire 1 7+ g $end
$var wire 1 C% S $end
$var wire 1 Z+ C_out $end
$var wire 1 [+ g_bar $end
$var wire 1 \+ p_bar $end
$var wire 1 ]+ nand2_1_out $end
$var wire 1 ^+ nand2_2_out $end
$var wire 1 _+ nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S% in1 $end
$var wire 1 3* in2 $end
$var wire 1 [+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 [+ in1 $end
$var wire 1 7+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S% in1 $end
$var wire 1 3* in2 $end
$var wire 1 \+ out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 \+ in1 $end
$var wire 1 6+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S% in1 $end
$var wire 1 3* in2 $end
$var wire 1 ]+ out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S% in1 $end
$var wire 1 /+ in2 $end
$var wire 1 ^+ out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 3* in1 $end
$var wire 1 /+ in2 $end
$var wire 1 _+ out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ]+ in1 $end
$var wire 1 ^+ in2 $end
$var wire 1 _+ in3 $end
$var wire 1 Z+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S% in1 $end
$var wire 1 3* in2 $end
$var wire 1 /+ in3 $end
$var wire 1 C% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 `+ N $end
$var wire 1 O% A [3] $end
$var wire 1 P% A [2] $end
$var wire 1 Q% A [1] $end
$var wire 1 R% A [0] $end
$var wire 1 /* B [3] $end
$var wire 1 0* B [2] $end
$var wire 1 1* B [1] $end
$var wire 1 2* B [0] $end
$var wire 1 >* C_in $end
$var wire 1 ?% S [3] $end
$var wire 1 @% S [2] $end
$var wire 1 A% S [1] $end
$var wire 1 B% S [0] $end
$var wire 1 D* P $end
$var wire 1 L* G $end
$var wire 1 a+ C_out $end
$var wire 1 b+ c0 $end
$var wire 1 c+ c1 $end
$var wire 1 d+ c2 $end
$var wire 1 e+ p0 $end
$var wire 1 f+ g0 $end
$var wire 1 g+ p1 $end
$var wire 1 h+ g1 $end
$var wire 1 i+ p2 $end
$var wire 1 j+ g2 $end
$var wire 1 k+ p3 $end
$var wire 1 l+ g3 $end
$var wire 1 m+ g0_bar $end
$var wire 1 n+ g1_bar $end
$var wire 1 o+ g2_bar $end
$var wire 1 p+ g3_bar $end
$var wire 1 q+ nand2_c0_0_out $end
$var wire 1 r+ nand2_c1_0_out $end
$var wire 1 s+ nand2_c2_0_out $end
$var wire 1 t+ nand2_c3_0_out $end
$var wire 1 u+ nand2_p3_p2 $end
$var wire 1 v+ nand2_p1_p0 $end
$var wire 1 w+ nand2_p3g2_out $end
$var wire 1 x+ nand2_p3p2g1_out $end
$var wire 1 y+ nand3_G_0_out $end
$var wire 1 z+ nand2_p1g0_out $end
$var wire 1 {+ nor2_G_0_out $end
$var wire 1 |+ G_bar $end

$scope module not1_c0_0 $end
$var wire 1 f+ in1 $end
$var wire 1 m+ out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 e+ in1 $end
$var wire 1 >* in2 $end
$var wire 1 q+ out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 m+ in1 $end
$var wire 1 q+ in2 $end
$var wire 1 b+ out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 h+ in1 $end
$var wire 1 n+ out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 g+ in1 $end
$var wire 1 b+ in2 $end
$var wire 1 r+ out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 n+ in1 $end
$var wire 1 r+ in2 $end
$var wire 1 c+ out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 j+ in1 $end
$var wire 1 o+ out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 i+ in1 $end
$var wire 1 c+ in2 $end
$var wire 1 s+ out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 o+ in1 $end
$var wire 1 s+ in2 $end
$var wire 1 d+ out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 l+ in1 $end
$var wire 1 p+ out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 k+ in1 $end
$var wire 1 d+ in2 $end
$var wire 1 t+ out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 p+ in1 $end
$var wire 1 t+ in2 $end
$var wire 1 a+ out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 k+ in1 $end
$var wire 1 i+ in2 $end
$var wire 1 u+ out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 g+ in1 $end
$var wire 1 e+ in2 $end
$var wire 1 v+ out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 u+ in1 $end
$var wire 1 v+ in2 $end
$var wire 1 D* out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 k+ in1 $end
$var wire 1 j+ in2 $end
$var wire 1 w+ out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 k+ in1 $end
$var wire 1 i+ in2 $end
$var wire 1 h+ in3 $end
$var wire 1 x+ out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 p+ in1 $end
$var wire 1 w+ in2 $end
$var wire 1 x+ in3 $end
$var wire 1 y+ out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 g+ in1 $end
$var wire 1 f+ in2 $end
$var wire 1 z+ out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 u+ in1 $end
$var wire 1 z+ in2 $end
$var wire 1 {+ out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 y+ in1 $end
$var wire 1 {+ in2 $end
$var wire 1 |+ out $end
$upscope $end

$scope module not1_G $end
$var wire 1 |+ in1 $end
$var wire 1 L* out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 R% A $end
$var wire 1 2* B $end
$var wire 1 >* C_in $end
$var wire 1 e+ p $end
$var wire 1 f+ g $end
$var wire 1 B% S $end
$var wire 1 }+ C_out $end
$var wire 1 ~+ g_bar $end
$var wire 1 !, p_bar $end
$var wire 1 ", nand2_1_out $end
$var wire 1 #, nand2_2_out $end
$var wire 1 $, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R% in1 $end
$var wire 1 2* in2 $end
$var wire 1 ~+ out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ~+ in1 $end
$var wire 1 f+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R% in1 $end
$var wire 1 2* in2 $end
$var wire 1 !, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 !, in1 $end
$var wire 1 e+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R% in1 $end
$var wire 1 2* in2 $end
$var wire 1 ", out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R% in1 $end
$var wire 1 >* in2 $end
$var wire 1 #, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 2* in1 $end
$var wire 1 >* in2 $end
$var wire 1 $, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ", in1 $end
$var wire 1 #, in2 $end
$var wire 1 $, in3 $end
$var wire 1 }+ out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R% in1 $end
$var wire 1 2* in2 $end
$var wire 1 >* in3 $end
$var wire 1 B% out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 Q% A $end
$var wire 1 1* B $end
$var wire 1 b+ C_in $end
$var wire 1 g+ p $end
$var wire 1 h+ g $end
$var wire 1 A% S $end
$var wire 1 %, C_out $end
$var wire 1 &, g_bar $end
$var wire 1 ', p_bar $end
$var wire 1 (, nand2_1_out $end
$var wire 1 ), nand2_2_out $end
$var wire 1 *, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Q% in1 $end
$var wire 1 1* in2 $end
$var wire 1 &, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 &, in1 $end
$var wire 1 h+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Q% in1 $end
$var wire 1 1* in2 $end
$var wire 1 ', out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ', in1 $end
$var wire 1 g+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Q% in1 $end
$var wire 1 1* in2 $end
$var wire 1 (, out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Q% in1 $end
$var wire 1 b+ in2 $end
$var wire 1 ), out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 1* in1 $end
$var wire 1 b+ in2 $end
$var wire 1 *, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 (, in1 $end
$var wire 1 ), in2 $end
$var wire 1 *, in3 $end
$var wire 1 %, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Q% in1 $end
$var wire 1 1* in2 $end
$var wire 1 b+ in3 $end
$var wire 1 A% out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 P% A $end
$var wire 1 0* B $end
$var wire 1 c+ C_in $end
$var wire 1 i+ p $end
$var wire 1 j+ g $end
$var wire 1 @% S $end
$var wire 1 +, C_out $end
$var wire 1 ,, g_bar $end
$var wire 1 -, p_bar $end
$var wire 1 ., nand2_1_out $end
$var wire 1 /, nand2_2_out $end
$var wire 1 0, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 P% in1 $end
$var wire 1 0* in2 $end
$var wire 1 ,, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ,, in1 $end
$var wire 1 j+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 P% in1 $end
$var wire 1 0* in2 $end
$var wire 1 -, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 -, in1 $end
$var wire 1 i+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 P% in1 $end
$var wire 1 0* in2 $end
$var wire 1 ., out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 P% in1 $end
$var wire 1 c+ in2 $end
$var wire 1 /, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 0* in1 $end
$var wire 1 c+ in2 $end
$var wire 1 0, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ., in1 $end
$var wire 1 /, in2 $end
$var wire 1 0, in3 $end
$var wire 1 +, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 P% in1 $end
$var wire 1 0* in2 $end
$var wire 1 c+ in3 $end
$var wire 1 @% out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 O% A $end
$var wire 1 /* B $end
$var wire 1 d+ C_in $end
$var wire 1 k+ p $end
$var wire 1 l+ g $end
$var wire 1 ?% S $end
$var wire 1 1, C_out $end
$var wire 1 2, g_bar $end
$var wire 1 3, p_bar $end
$var wire 1 4, nand2_1_out $end
$var wire 1 5, nand2_2_out $end
$var wire 1 6, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 O% in1 $end
$var wire 1 /* in2 $end
$var wire 1 2, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 2, in1 $end
$var wire 1 l+ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 O% in1 $end
$var wire 1 /* in2 $end
$var wire 1 3, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 3, in1 $end
$var wire 1 k+ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 O% in1 $end
$var wire 1 /* in2 $end
$var wire 1 4, out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 O% in1 $end
$var wire 1 d+ in2 $end
$var wire 1 5, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 /* in1 $end
$var wire 1 d+ in2 $end
$var wire 1 6, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 4, in1 $end
$var wire 1 5, in2 $end
$var wire 1 6, in3 $end
$var wire 1 1, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 O% in1 $end
$var wire 1 /* in2 $end
$var wire 1 d+ in3 $end
$var wire 1 ?% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 7, N $end
$var wire 1 K% A [3] $end
$var wire 1 L% A [2] $end
$var wire 1 M% A [1] $end
$var wire 1 N% A [0] $end
$var wire 1 +* B [3] $end
$var wire 1 ,* B [2] $end
$var wire 1 -* B [1] $end
$var wire 1 .* B [0] $end
$var wire 1 ?* C_in $end
$var wire 1 ;% S [3] $end
$var wire 1 <% S [2] $end
$var wire 1 =% S [1] $end
$var wire 1 >% S [0] $end
$var wire 1 F* P $end
$var wire 1 N* G $end
$var wire 1 8, C_out $end
$var wire 1 9, c0 $end
$var wire 1 :, c1 $end
$var wire 1 ;, c2 $end
$var wire 1 <, p0 $end
$var wire 1 =, g0 $end
$var wire 1 >, p1 $end
$var wire 1 ?, g1 $end
$var wire 1 @, p2 $end
$var wire 1 A, g2 $end
$var wire 1 B, p3 $end
$var wire 1 C, g3 $end
$var wire 1 D, g0_bar $end
$var wire 1 E, g1_bar $end
$var wire 1 F, g2_bar $end
$var wire 1 G, g3_bar $end
$var wire 1 H, nand2_c0_0_out $end
$var wire 1 I, nand2_c1_0_out $end
$var wire 1 J, nand2_c2_0_out $end
$var wire 1 K, nand2_c3_0_out $end
$var wire 1 L, nand2_p3_p2 $end
$var wire 1 M, nand2_p1_p0 $end
$var wire 1 N, nand2_p3g2_out $end
$var wire 1 O, nand2_p3p2g1_out $end
$var wire 1 P, nand3_G_0_out $end
$var wire 1 Q, nand2_p1g0_out $end
$var wire 1 R, nor2_G_0_out $end
$var wire 1 S, G_bar $end

$scope module not1_c0_0 $end
$var wire 1 =, in1 $end
$var wire 1 D, out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 <, in1 $end
$var wire 1 ?* in2 $end
$var wire 1 H, out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 D, in1 $end
$var wire 1 H, in2 $end
$var wire 1 9, out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 ?, in1 $end
$var wire 1 E, out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 >, in1 $end
$var wire 1 9, in2 $end
$var wire 1 I, out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 E, in1 $end
$var wire 1 I, in2 $end
$var wire 1 :, out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 A, in1 $end
$var wire 1 F, out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 @, in1 $end
$var wire 1 :, in2 $end
$var wire 1 J, out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 F, in1 $end
$var wire 1 J, in2 $end
$var wire 1 ;, out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 C, in1 $end
$var wire 1 G, out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 B, in1 $end
$var wire 1 ;, in2 $end
$var wire 1 K, out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 G, in1 $end
$var wire 1 K, in2 $end
$var wire 1 8, out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 B, in1 $end
$var wire 1 @, in2 $end
$var wire 1 L, out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 >, in1 $end
$var wire 1 <, in2 $end
$var wire 1 M, out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 L, in1 $end
$var wire 1 M, in2 $end
$var wire 1 F* out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 B, in1 $end
$var wire 1 A, in2 $end
$var wire 1 N, out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 B, in1 $end
$var wire 1 @, in2 $end
$var wire 1 ?, in3 $end
$var wire 1 O, out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 G, in1 $end
$var wire 1 N, in2 $end
$var wire 1 O, in3 $end
$var wire 1 P, out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 >, in1 $end
$var wire 1 =, in2 $end
$var wire 1 Q, out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 L, in1 $end
$var wire 1 Q, in2 $end
$var wire 1 R, out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 P, in1 $end
$var wire 1 R, in2 $end
$var wire 1 S, out $end
$upscope $end

$scope module not1_G $end
$var wire 1 S, in1 $end
$var wire 1 N* out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 N% A $end
$var wire 1 .* B $end
$var wire 1 ?* C_in $end
$var wire 1 <, p $end
$var wire 1 =, g $end
$var wire 1 >% S $end
$var wire 1 T, C_out $end
$var wire 1 U, g_bar $end
$var wire 1 V, p_bar $end
$var wire 1 W, nand2_1_out $end
$var wire 1 X, nand2_2_out $end
$var wire 1 Y, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 N% in1 $end
$var wire 1 .* in2 $end
$var wire 1 U, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 U, in1 $end
$var wire 1 =, out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 N% in1 $end
$var wire 1 .* in2 $end
$var wire 1 V, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 V, in1 $end
$var wire 1 <, out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 N% in1 $end
$var wire 1 .* in2 $end
$var wire 1 W, out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 N% in1 $end
$var wire 1 ?* in2 $end
$var wire 1 X, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 .* in1 $end
$var wire 1 ?* in2 $end
$var wire 1 Y, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 W, in1 $end
$var wire 1 X, in2 $end
$var wire 1 Y, in3 $end
$var wire 1 T, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 N% in1 $end
$var wire 1 .* in2 $end
$var wire 1 ?* in3 $end
$var wire 1 >% out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 M% A $end
$var wire 1 -* B $end
$var wire 1 9, C_in $end
$var wire 1 >, p $end
$var wire 1 ?, g $end
$var wire 1 =% S $end
$var wire 1 Z, C_out $end
$var wire 1 [, g_bar $end
$var wire 1 \, p_bar $end
$var wire 1 ], nand2_1_out $end
$var wire 1 ^, nand2_2_out $end
$var wire 1 _, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 M% in1 $end
$var wire 1 -* in2 $end
$var wire 1 [, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 [, in1 $end
$var wire 1 ?, out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 M% in1 $end
$var wire 1 -* in2 $end
$var wire 1 \, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 \, in1 $end
$var wire 1 >, out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 M% in1 $end
$var wire 1 -* in2 $end
$var wire 1 ], out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 M% in1 $end
$var wire 1 9, in2 $end
$var wire 1 ^, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 -* in1 $end
$var wire 1 9, in2 $end
$var wire 1 _, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ], in1 $end
$var wire 1 ^, in2 $end
$var wire 1 _, in3 $end
$var wire 1 Z, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 M% in1 $end
$var wire 1 -* in2 $end
$var wire 1 9, in3 $end
$var wire 1 =% out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 L% A $end
$var wire 1 ,* B $end
$var wire 1 :, C_in $end
$var wire 1 @, p $end
$var wire 1 A, g $end
$var wire 1 <% S $end
$var wire 1 `, C_out $end
$var wire 1 a, g_bar $end
$var wire 1 b, p_bar $end
$var wire 1 c, nand2_1_out $end
$var wire 1 d, nand2_2_out $end
$var wire 1 e, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 L% in1 $end
$var wire 1 ,* in2 $end
$var wire 1 a, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 a, in1 $end
$var wire 1 A, out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 L% in1 $end
$var wire 1 ,* in2 $end
$var wire 1 b, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 b, in1 $end
$var wire 1 @, out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 L% in1 $end
$var wire 1 ,* in2 $end
$var wire 1 c, out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 L% in1 $end
$var wire 1 :, in2 $end
$var wire 1 d, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ,* in1 $end
$var wire 1 :, in2 $end
$var wire 1 e, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 c, in1 $end
$var wire 1 d, in2 $end
$var wire 1 e, in3 $end
$var wire 1 `, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 L% in1 $end
$var wire 1 ,* in2 $end
$var wire 1 :, in3 $end
$var wire 1 <% out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 K% A $end
$var wire 1 +* B $end
$var wire 1 ;, C_in $end
$var wire 1 B, p $end
$var wire 1 C, g $end
$var wire 1 ;% S $end
$var wire 1 f, C_out $end
$var wire 1 g, g_bar $end
$var wire 1 h, p_bar $end
$var wire 1 i, nand2_1_out $end
$var wire 1 j, nand2_2_out $end
$var wire 1 k, nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 K% in1 $end
$var wire 1 +* in2 $end
$var wire 1 g, out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 g, in1 $end
$var wire 1 C, out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 K% in1 $end
$var wire 1 +* in2 $end
$var wire 1 h, out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 h, in1 $end
$var wire 1 B, out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 K% in1 $end
$var wire 1 +* in2 $end
$var wire 1 i, out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 K% in1 $end
$var wire 1 ;, in2 $end
$var wire 1 j, out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 +* in1 $end
$var wire 1 ;, in2 $end
$var wire 1 k, out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 i, in1 $end
$var wire 1 j, in2 $end
$var wire 1 k, in3 $end
$var wire 1 f, out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 K% in1 $end
$var wire 1 +* in2 $end
$var wire 1 ;, in3 $end
$var wire 1 ;% out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 H* in1 $end
$var wire 1 I* out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 @* in1 $end
$var wire 1 ;* in2 $end
$var wire 1 P* out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 I* in1 $end
$var wire 1 P* in2 $end
$var wire 1 =* out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 J* in1 $end
$var wire 1 K* out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 B* in1 $end
$var wire 1 =* in2 $end
$var wire 1 Q* out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 K* in1 $end
$var wire 1 Q* in2 $end
$var wire 1 >* out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 L* in1 $end
$var wire 1 M* out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 D* in1 $end
$var wire 1 >* in2 $end
$var wire 1 R* out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 M* in1 $end
$var wire 1 R* in2 $end
$var wire 1 ?* out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 N* in1 $end
$var wire 1 O* out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 F* in1 $end
$var wire 1 ?* in2 $end
$var wire 1 S* out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 O* in1 $end
$var wire 1 S* in2 $end
$var wire 1 <* out $end
$upscope $end
$upscope $end
$upscope $end

$scope module IFID $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 5) flush $end
$var wire 1 6) stall $end
$var wire 1 ;% PC_inc [15] $end
$var wire 1 <% PC_inc [14] $end
$var wire 1 =% PC_inc [13] $end
$var wire 1 >% PC_inc [12] $end
$var wire 1 ?% PC_inc [11] $end
$var wire 1 @% PC_inc [10] $end
$var wire 1 A% PC_inc [9] $end
$var wire 1 B% PC_inc [8] $end
$var wire 1 C% PC_inc [7] $end
$var wire 1 D% PC_inc [6] $end
$var wire 1 E% PC_inc [5] $end
$var wire 1 F% PC_inc [4] $end
$var wire 1 G% PC_inc [3] $end
$var wire 1 H% PC_inc [2] $end
$var wire 1 I% PC_inc [1] $end
$var wire 1 J% PC_inc [0] $end
$var wire 1 K% PC [15] $end
$var wire 1 L% PC [14] $end
$var wire 1 M% PC [13] $end
$var wire 1 N% PC [12] $end
$var wire 1 O% PC [11] $end
$var wire 1 P% PC [10] $end
$var wire 1 Q% PC [9] $end
$var wire 1 R% PC [8] $end
$var wire 1 S% PC [7] $end
$var wire 1 T% PC [6] $end
$var wire 1 U% PC [5] $end
$var wire 1 V% PC [4] $end
$var wire 1 W% PC [3] $end
$var wire 1 X% PC [2] $end
$var wire 1 Y% PC [1] $end
$var wire 1 Z% PC [0] $end
$var wire 1 U" instr [15] $end
$var wire 1 V" instr [14] $end
$var wire 1 W" instr [13] $end
$var wire 1 X" instr [12] $end
$var wire 1 Y" instr [11] $end
$var wire 1 Z" instr [10] $end
$var wire 1 [" instr [9] $end
$var wire 1 \" instr [8] $end
$var wire 1 ]" instr [7] $end
$var wire 1 ^" instr [6] $end
$var wire 1 _" instr [5] $end
$var wire 1 `" instr [4] $end
$var wire 1 a" instr [3] $end
$var wire 1 b" instr [2] $end
$var wire 1 c" instr [1] $end
$var wire 1 d" instr [0] $end
$var wire 1 N& IFID_PC_inc [15] $end
$var wire 1 O& IFID_PC_inc [14] $end
$var wire 1 P& IFID_PC_inc [13] $end
$var wire 1 Q& IFID_PC_inc [12] $end
$var wire 1 R& IFID_PC_inc [11] $end
$var wire 1 S& IFID_PC_inc [10] $end
$var wire 1 T& IFID_PC_inc [9] $end
$var wire 1 U& IFID_PC_inc [8] $end
$var wire 1 V& IFID_PC_inc [7] $end
$var wire 1 W& IFID_PC_inc [6] $end
$var wire 1 X& IFID_PC_inc [5] $end
$var wire 1 Y& IFID_PC_inc [4] $end
$var wire 1 Z& IFID_PC_inc [3] $end
$var wire 1 [& IFID_PC_inc [2] $end
$var wire 1 \& IFID_PC_inc [1] $end
$var wire 1 ]& IFID_PC_inc [0] $end
$var wire 1 k% IFID_PC [15] $end
$var wire 1 l% IFID_PC [14] $end
$var wire 1 m% IFID_PC [13] $end
$var wire 1 n% IFID_PC [12] $end
$var wire 1 o% IFID_PC [11] $end
$var wire 1 p% IFID_PC [10] $end
$var wire 1 q% IFID_PC [9] $end
$var wire 1 r% IFID_PC [8] $end
$var wire 1 s% IFID_PC [7] $end
$var wire 1 t% IFID_PC [6] $end
$var wire 1 u% IFID_PC [5] $end
$var wire 1 v% IFID_PC [4] $end
$var wire 1 w% IFID_PC [3] $end
$var wire 1 x% IFID_PC [2] $end
$var wire 1 y% IFID_PC [1] $end
$var wire 1 z% IFID_PC [0] $end
$var wire 1 ^& IFID_instr [15] $end
$var wire 1 _& IFID_instr [14] $end
$var wire 1 `& IFID_instr [13] $end
$var wire 1 a& IFID_instr [12] $end
$var wire 1 b& IFID_instr [11] $end
$var wire 1 c& IFID_instr [10] $end
$var wire 1 d& IFID_instr [9] $end
$var wire 1 e& IFID_instr [8] $end
$var wire 1 f& IFID_instr [7] $end
$var wire 1 g& IFID_instr [6] $end
$var wire 1 h& IFID_instr [5] $end
$var wire 1 i& IFID_instr [4] $end
$var wire 1 j& IFID_instr [3] $end
$var wire 1 k& IFID_instr [2] $end
$var wire 1 l& IFID_instr [1] $end
$var wire 1 m& IFID_instr [0] $end

$scope module IFID_PC_inc_reg $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var wire 1 m, en $end
$var wire 1 ;% D [15] $end
$var wire 1 <% D [14] $end
$var wire 1 =% D [13] $end
$var wire 1 >% D [12] $end
$var wire 1 ?% D [11] $end
$var wire 1 @% D [10] $end
$var wire 1 A% D [9] $end
$var wire 1 B% D [8] $end
$var wire 1 C% D [7] $end
$var wire 1 D% D [6] $end
$var wire 1 E% D [5] $end
$var wire 1 F% D [4] $end
$var wire 1 G% D [3] $end
$var wire 1 H% D [2] $end
$var wire 1 I% D [1] $end
$var wire 1 J% D [0] $end
$var wire 1 N& Q [15] $end
$var wire 1 O& Q [14] $end
$var wire 1 P& Q [13] $end
$var wire 1 Q& Q [12] $end
$var wire 1 R& Q [11] $end
$var wire 1 S& Q [10] $end
$var wire 1 T& Q [9] $end
$var wire 1 U& Q [8] $end
$var wire 1 V& Q [7] $end
$var wire 1 W& Q [6] $end
$var wire 1 X& Q [5] $end
$var wire 1 Y& Q [4] $end
$var wire 1 Z& Q [3] $end
$var wire 1 [& Q [2] $end
$var wire 1 \& Q [1] $end
$var wire 1 ]& Q [0] $end
$var wire 1 n, in [15] $end
$var wire 1 o, in [14] $end
$var wire 1 p, in [13] $end
$var wire 1 q, in [12] $end
$var wire 1 r, in [11] $end
$var wire 1 s, in [10] $end
$var wire 1 t, in [9] $end
$var wire 1 u, in [8] $end
$var wire 1 v, in [7] $end
$var wire 1 w, in [6] $end
$var wire 1 x, in [5] $end
$var wire 1 y, in [4] $end
$var wire 1 z, in [3] $end
$var wire 1 {, in [2] $end
$var wire 1 |, in [1] $end
$var wire 1 }, in [0] $end
$var wire 1 ~, out [15] $end
$var wire 1 !- out [14] $end
$var wire 1 "- out [13] $end
$var wire 1 #- out [12] $end
$var wire 1 $- out [11] $end
$var wire 1 %- out [10] $end
$var wire 1 &- out [9] $end
$var wire 1 '- out [8] $end
$var wire 1 (- out [7] $end
$var wire 1 )- out [6] $end
$var wire 1 *- out [5] $end
$var wire 1 +- out [4] $end
$var wire 1 ,- out [3] $end
$var wire 1 -- out [2] $end
$var wire 1 .- out [1] $end
$var wire 1 /- out [0] $end

$scope module dff_0 $end
$var wire 1 /- q $end
$var wire 1 }, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 0- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 .- q $end
$var wire 1 |, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 1- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 -- q $end
$var wire 1 {, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 2- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 ,- q $end
$var wire 1 z, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 3- state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 +- q $end
$var wire 1 y, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 4- state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 *- q $end
$var wire 1 x, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 5- state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 )- q $end
$var wire 1 w, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 6- state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 (- q $end
$var wire 1 v, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 7- state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 '- q $end
$var wire 1 u, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 8- state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 &- q $end
$var wire 1 t, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 9- state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 %- q $end
$var wire 1 s, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 :- state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 $- q $end
$var wire 1 r, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 ;- state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 #- q $end
$var wire 1 q, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 <- state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 "- q $end
$var wire 1 p, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 =- state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 !- q $end
$var wire 1 o, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 >- state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 ~, q $end
$var wire 1 n, d $end
$var wire 1 u! clk $end
$var wire 1 l, rst $end
$var reg 1 ?- state $end
$upscope $end
$upscope $end

$scope module IFID_PC_reg $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var wire 1 A- en $end
$var wire 1 K% D [15] $end
$var wire 1 L% D [14] $end
$var wire 1 M% D [13] $end
$var wire 1 N% D [12] $end
$var wire 1 O% D [11] $end
$var wire 1 P% D [10] $end
$var wire 1 Q% D [9] $end
$var wire 1 R% D [8] $end
$var wire 1 S% D [7] $end
$var wire 1 T% D [6] $end
$var wire 1 U% D [5] $end
$var wire 1 V% D [4] $end
$var wire 1 W% D [3] $end
$var wire 1 X% D [2] $end
$var wire 1 Y% D [1] $end
$var wire 1 Z% D [0] $end
$var wire 1 k% Q [15] $end
$var wire 1 l% Q [14] $end
$var wire 1 m% Q [13] $end
$var wire 1 n% Q [12] $end
$var wire 1 o% Q [11] $end
$var wire 1 p% Q [10] $end
$var wire 1 q% Q [9] $end
$var wire 1 r% Q [8] $end
$var wire 1 s% Q [7] $end
$var wire 1 t% Q [6] $end
$var wire 1 u% Q [5] $end
$var wire 1 v% Q [4] $end
$var wire 1 w% Q [3] $end
$var wire 1 x% Q [2] $end
$var wire 1 y% Q [1] $end
$var wire 1 z% Q [0] $end
$var wire 1 B- in [15] $end
$var wire 1 C- in [14] $end
$var wire 1 D- in [13] $end
$var wire 1 E- in [12] $end
$var wire 1 F- in [11] $end
$var wire 1 G- in [10] $end
$var wire 1 H- in [9] $end
$var wire 1 I- in [8] $end
$var wire 1 J- in [7] $end
$var wire 1 K- in [6] $end
$var wire 1 L- in [5] $end
$var wire 1 M- in [4] $end
$var wire 1 N- in [3] $end
$var wire 1 O- in [2] $end
$var wire 1 P- in [1] $end
$var wire 1 Q- in [0] $end
$var wire 1 R- out [15] $end
$var wire 1 S- out [14] $end
$var wire 1 T- out [13] $end
$var wire 1 U- out [12] $end
$var wire 1 V- out [11] $end
$var wire 1 W- out [10] $end
$var wire 1 X- out [9] $end
$var wire 1 Y- out [8] $end
$var wire 1 Z- out [7] $end
$var wire 1 [- out [6] $end
$var wire 1 \- out [5] $end
$var wire 1 ]- out [4] $end
$var wire 1 ^- out [3] $end
$var wire 1 _- out [2] $end
$var wire 1 `- out [1] $end
$var wire 1 a- out [0] $end

$scope module dff_0 $end
$var wire 1 a- q $end
$var wire 1 Q- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 b- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 `- q $end
$var wire 1 P- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 c- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 _- q $end
$var wire 1 O- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 d- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 ^- q $end
$var wire 1 N- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 e- state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 ]- q $end
$var wire 1 M- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 f- state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 \- q $end
$var wire 1 L- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 g- state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 [- q $end
$var wire 1 K- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 h- state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 Z- q $end
$var wire 1 J- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 i- state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 Y- q $end
$var wire 1 I- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 j- state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 X- q $end
$var wire 1 H- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 k- state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 W- q $end
$var wire 1 G- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 l- state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 V- q $end
$var wire 1 F- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 m- state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 U- q $end
$var wire 1 E- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 n- state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 T- q $end
$var wire 1 D- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 o- state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 S- q $end
$var wire 1 C- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 p- state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 R- q $end
$var wire 1 B- d $end
$var wire 1 u! clk $end
$var wire 1 @- rst $end
$var reg 1 q- state $end
$upscope $end
$upscope $end

$scope module IFID_instr_reg $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var wire 1 s- en $end
$var wire 1 U" D [15] $end
$var wire 1 V" D [14] $end
$var wire 1 W" D [13] $end
$var wire 1 X" D [12] $end
$var wire 1 Y" D [11] $end
$var wire 1 Z" D [10] $end
$var wire 1 [" D [9] $end
$var wire 1 \" D [8] $end
$var wire 1 ]" D [7] $end
$var wire 1 ^" D [6] $end
$var wire 1 _" D [5] $end
$var wire 1 `" D [4] $end
$var wire 1 a" D [3] $end
$var wire 1 b" D [2] $end
$var wire 1 c" D [1] $end
$var wire 1 d" D [0] $end
$var wire 1 ^& Q [15] $end
$var wire 1 _& Q [14] $end
$var wire 1 `& Q [13] $end
$var wire 1 a& Q [12] $end
$var wire 1 b& Q [11] $end
$var wire 1 c& Q [10] $end
$var wire 1 d& Q [9] $end
$var wire 1 e& Q [8] $end
$var wire 1 f& Q [7] $end
$var wire 1 g& Q [6] $end
$var wire 1 h& Q [5] $end
$var wire 1 i& Q [4] $end
$var wire 1 j& Q [3] $end
$var wire 1 k& Q [2] $end
$var wire 1 l& Q [1] $end
$var wire 1 m& Q [0] $end
$var wire 1 t- in [15] $end
$var wire 1 u- in [14] $end
$var wire 1 v- in [13] $end
$var wire 1 w- in [12] $end
$var wire 1 x- in [11] $end
$var wire 1 y- in [10] $end
$var wire 1 z- in [9] $end
$var wire 1 {- in [8] $end
$var wire 1 |- in [7] $end
$var wire 1 }- in [6] $end
$var wire 1 ~- in [5] $end
$var wire 1 !. in [4] $end
$var wire 1 ". in [3] $end
$var wire 1 #. in [2] $end
$var wire 1 $. in [1] $end
$var wire 1 %. in [0] $end
$var wire 1 &. out [15] $end
$var wire 1 '. out [14] $end
$var wire 1 (. out [13] $end
$var wire 1 ). out [12] $end
$var wire 1 *. out [11] $end
$var wire 1 +. out [10] $end
$var wire 1 ,. out [9] $end
$var wire 1 -. out [8] $end
$var wire 1 .. out [7] $end
$var wire 1 /. out [6] $end
$var wire 1 0. out [5] $end
$var wire 1 1. out [4] $end
$var wire 1 2. out [3] $end
$var wire 1 3. out [2] $end
$var wire 1 4. out [1] $end
$var wire 1 5. out [0] $end

$scope module dff_0 $end
$var wire 1 5. q $end
$var wire 1 %. d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 6. state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 4. q $end
$var wire 1 $. d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 7. state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 3. q $end
$var wire 1 #. d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 8. state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 2. q $end
$var wire 1 ". d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 9. state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 1. q $end
$var wire 1 !. d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 :. state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 0. q $end
$var wire 1 ~- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 ;. state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 /. q $end
$var wire 1 }- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 <. state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 .. q $end
$var wire 1 |- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 =. state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 -. q $end
$var wire 1 {- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 >. state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ,. q $end
$var wire 1 z- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 ?. state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 +. q $end
$var wire 1 y- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 @. state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 *. q $end
$var wire 1 x- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 A. state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 ). q $end
$var wire 1 w- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 B. state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 (. q $end
$var wire 1 v- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 C. state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 '. q $end
$var wire 1 u- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 D. state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 &. q $end
$var wire 1 t- d $end
$var wire 1 u! clk $end
$var wire 1 r- rst $end
$var reg 1 E. state $end
$upscope $end
$upscope $end
$upscope $end

$scope module decodeStage $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 4) regWriteIn $end
$var wire 1 ^& instr [15] $end
$var wire 1 _& instr [14] $end
$var wire 1 `& instr [13] $end
$var wire 1 a& instr [12] $end
$var wire 1 b& instr [11] $end
$var wire 1 c& instr [10] $end
$var wire 1 d& instr [9] $end
$var wire 1 e& instr [8] $end
$var wire 1 f& instr [7] $end
$var wire 1 g& instr [6] $end
$var wire 1 h& instr [5] $end
$var wire 1 i& instr [4] $end
$var wire 1 j& instr [3] $end
$var wire 1 k& instr [2] $end
$var wire 1 l& instr [1] $end
$var wire 1 m& instr [0] $end
$var wire 1 y$ writeData [15] $end
$var wire 1 z$ writeData [14] $end
$var wire 1 {$ writeData [13] $end
$var wire 1 |$ writeData [12] $end
$var wire 1 }$ writeData [11] $end
$var wire 1 ~$ writeData [10] $end
$var wire 1 !% writeData [9] $end
$var wire 1 "% writeData [8] $end
$var wire 1 #% writeData [7] $end
$var wire 1 $% writeData [6] $end
$var wire 1 %% writeData [5] $end
$var wire 1 &% writeData [4] $end
$var wire 1 '% writeData [3] $end
$var wire 1 (% writeData [2] $end
$var wire 1 )% writeData [1] $end
$var wire 1 *% writeData [0] $end
$var wire 1 F. RdIn [2] $end
$var wire 1 G. RdIn [1] $end
$var wire 1 7) RdIn [0] $end
$var wire 1 v! err $end
$var wire 1 I$ read1Data [15] $end
$var wire 1 J$ read1Data [14] $end
$var wire 1 K$ read1Data [13] $end
$var wire 1 L$ read1Data [12] $end
$var wire 1 M$ read1Data [11] $end
$var wire 1 N$ read1Data [10] $end
$var wire 1 O$ read1Data [9] $end
$var wire 1 P$ read1Data [8] $end
$var wire 1 Q$ read1Data [7] $end
$var wire 1 R$ read1Data [6] $end
$var wire 1 S$ read1Data [5] $end
$var wire 1 T$ read1Data [4] $end
$var wire 1 U$ read1Data [3] $end
$var wire 1 V$ read1Data [2] $end
$var wire 1 W$ read1Data [1] $end
$var wire 1 X$ read1Data [0] $end
$var wire 1 Y$ read2Data [15] $end
$var wire 1 Z$ read2Data [14] $end
$var wire 1 [$ read2Data [13] $end
$var wire 1 \$ read2Data [12] $end
$var wire 1 ]$ read2Data [11] $end
$var wire 1 ^$ read2Data [10] $end
$var wire 1 _$ read2Data [9] $end
$var wire 1 `$ read2Data [8] $end
$var wire 1 a$ read2Data [7] $end
$var wire 1 b$ read2Data [6] $end
$var wire 1 c$ read2Data [5] $end
$var wire 1 d$ read2Data [4] $end
$var wire 1 e$ read2Data [3] $end
$var wire 1 f$ read2Data [2] $end
$var wire 1 g$ read2Data [1] $end
$var wire 1 h$ read2Data [0] $end
$var wire 1 7# exImmVaL [15] $end
$var wire 1 8# exImmVaL [14] $end
$var wire 1 9# exImmVaL [13] $end
$var wire 1 :# exImmVaL [12] $end
$var wire 1 ;# exImmVaL [11] $end
$var wire 1 <# exImmVaL [10] $end
$var wire 1 =# exImmVaL [9] $end
$var wire 1 ># exImmVaL [8] $end
$var wire 1 ?# exImmVaL [7] $end
$var wire 1 @# exImmVaL [6] $end
$var wire 1 A# exImmVaL [5] $end
$var wire 1 B# exImmVaL [4] $end
$var wire 1 C# exImmVaL [3] $end
$var wire 1 D# exImmVaL [2] $end
$var wire 1 E# exImmVaL [1] $end
$var wire 1 F# exImmVaL [0] $end
$var wire 1 <" aluOp [2] $end
$var wire 1 =" aluOp [1] $end
$var wire 1 >" aluOp [0] $end
$var wire 1 B" jumpCtl [2] $end
$var wire 1 C" jumpCtl [1] $end
$var wire 1 D" jumpCtl [0] $end
$var wire 1 ?" branchCtl [2] $end
$var wire 1 @" branchCtl [1] $end
$var wire 1 A" branchCtl [0] $end
$var wire 1 0" Rs [2] $end
$var wire 1 1" Rs [1] $end
$var wire 1 2" Rs [0] $end
$var wire 1 3" Rt [2] $end
$var wire 1 4" Rt [1] $end
$var wire 1 5" Rt [0] $end
$var wire 1 9" RdOut [2] $end
$var wire 1 :" RdOut [1] $end
$var wire 1 ;" RdOut [0] $end
$var wire 1 |! regWriteOut $end
$var wire 1 ~! aluSrc $end
$var wire 1 }! btr $end
$var wire 1 !" memWrite $end
$var wire 1 "" memRead $end
$var wire 1 #" memToReg $end
$var wire 1 H. halt $end
$var wire 1 I. noOp $end
$var wire 1 &" slbi $end
$var wire 1 (" lbi $end
$var wire 1 ." seq $end
$var wire 1 ," sl $end
$var wire 1 -" sco $end
$var wire 1 /" ror $end
$var wire 1 J. stu $end

$scope module decodeRegisters $end
$var parameter 32 K. N $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 0" read1RegSel [2] $end
$var wire 1 1" read1RegSel [1] $end
$var wire 1 2" read1RegSel [0] $end
$var wire 1 3" read2RegSel [2] $end
$var wire 1 4" read2RegSel [1] $end
$var wire 1 5" read2RegSel [0] $end
$var wire 1 F. writeRegSel [2] $end
$var wire 1 G. writeRegSel [1] $end
$var wire 1 7) writeRegSel [0] $end
$var wire 1 y$ writeData [15] $end
$var wire 1 z$ writeData [14] $end
$var wire 1 {$ writeData [13] $end
$var wire 1 |$ writeData [12] $end
$var wire 1 }$ writeData [11] $end
$var wire 1 ~$ writeData [10] $end
$var wire 1 !% writeData [9] $end
$var wire 1 "% writeData [8] $end
$var wire 1 #% writeData [7] $end
$var wire 1 $% writeData [6] $end
$var wire 1 %% writeData [5] $end
$var wire 1 &% writeData [4] $end
$var wire 1 '% writeData [3] $end
$var wire 1 (% writeData [2] $end
$var wire 1 )% writeData [1] $end
$var wire 1 *% writeData [0] $end
$var wire 1 4) writeEn $end
$var wire 1 I$ read1Data [15] $end
$var wire 1 J$ read1Data [14] $end
$var wire 1 K$ read1Data [13] $end
$var wire 1 L$ read1Data [12] $end
$var wire 1 M$ read1Data [11] $end
$var wire 1 N$ read1Data [10] $end
$var wire 1 O$ read1Data [9] $end
$var wire 1 P$ read1Data [8] $end
$var wire 1 Q$ read1Data [7] $end
$var wire 1 R$ read1Data [6] $end
$var wire 1 S$ read1Data [5] $end
$var wire 1 T$ read1Data [4] $end
$var wire 1 U$ read1Data [3] $end
$var wire 1 V$ read1Data [2] $end
$var wire 1 W$ read1Data [1] $end
$var wire 1 X$ read1Data [0] $end
$var wire 1 Y$ read2Data [15] $end
$var wire 1 Z$ read2Data [14] $end
$var wire 1 [$ read2Data [13] $end
$var wire 1 \$ read2Data [12] $end
$var wire 1 ]$ read2Data [11] $end
$var wire 1 ^$ read2Data [10] $end
$var wire 1 _$ read2Data [9] $end
$var wire 1 `$ read2Data [8] $end
$var wire 1 a$ read2Data [7] $end
$var wire 1 b$ read2Data [6] $end
$var wire 1 c$ read2Data [5] $end
$var wire 1 d$ read2Data [4] $end
$var wire 1 e$ read2Data [3] $end
$var wire 1 f$ read2Data [2] $end
$var wire 1 g$ read2Data [1] $end
$var wire 1 h$ read2Data [0] $end
$var wire 1 v! err $end
$var wire 1 L. writedec_out [7] $end
$var wire 1 M. writedec_out [6] $end
$var wire 1 N. writedec_out [5] $end
$var wire 1 O. writedec_out [4] $end
$var wire 1 P. writedec_out [3] $end
$var wire 1 Q. writedec_out [2] $end
$var wire 1 R. writedec_out [1] $end
$var wire 1 S. writedec_out [0] $end
$var wire 1 T. writeRegSel_dec [7] $end
$var wire 1 U. writeRegSel_dec [6] $end
$var wire 1 V. writeRegSel_dec [5] $end
$var wire 1 W. writeRegSel_dec [4] $end
$var wire 1 X. writeRegSel_dec [3] $end
$var wire 1 Y. writeRegSel_dec [2] $end
$var wire 1 Z. writeRegSel_dec [1] $end
$var wire 1 [. writeRegSel_dec [0] $end
$var wire 1 \. R0_out [15] $end
$var wire 1 ]. R0_out [14] $end
$var wire 1 ^. R0_out [13] $end
$var wire 1 _. R0_out [12] $end
$var wire 1 `. R0_out [11] $end
$var wire 1 a. R0_out [10] $end
$var wire 1 b. R0_out [9] $end
$var wire 1 c. R0_out [8] $end
$var wire 1 d. R0_out [7] $end
$var wire 1 e. R0_out [6] $end
$var wire 1 f. R0_out [5] $end
$var wire 1 g. R0_out [4] $end
$var wire 1 h. R0_out [3] $end
$var wire 1 i. R0_out [2] $end
$var wire 1 j. R0_out [1] $end
$var wire 1 k. R0_out [0] $end
$var wire 1 l. R1_out [15] $end
$var wire 1 m. R1_out [14] $end
$var wire 1 n. R1_out [13] $end
$var wire 1 o. R1_out [12] $end
$var wire 1 p. R1_out [11] $end
$var wire 1 q. R1_out [10] $end
$var wire 1 r. R1_out [9] $end
$var wire 1 s. R1_out [8] $end
$var wire 1 t. R1_out [7] $end
$var wire 1 u. R1_out [6] $end
$var wire 1 v. R1_out [5] $end
$var wire 1 w. R1_out [4] $end
$var wire 1 x. R1_out [3] $end
$var wire 1 y. R1_out [2] $end
$var wire 1 z. R1_out [1] $end
$var wire 1 {. R1_out [0] $end
$var wire 1 |. R2_out [15] $end
$var wire 1 }. R2_out [14] $end
$var wire 1 ~. R2_out [13] $end
$var wire 1 !/ R2_out [12] $end
$var wire 1 "/ R2_out [11] $end
$var wire 1 #/ R2_out [10] $end
$var wire 1 $/ R2_out [9] $end
$var wire 1 %/ R2_out [8] $end
$var wire 1 &/ R2_out [7] $end
$var wire 1 '/ R2_out [6] $end
$var wire 1 (/ R2_out [5] $end
$var wire 1 )/ R2_out [4] $end
$var wire 1 */ R2_out [3] $end
$var wire 1 +/ R2_out [2] $end
$var wire 1 ,/ R2_out [1] $end
$var wire 1 -/ R2_out [0] $end
$var wire 1 ./ R3_out [15] $end
$var wire 1 // R3_out [14] $end
$var wire 1 0/ R3_out [13] $end
$var wire 1 1/ R3_out [12] $end
$var wire 1 2/ R3_out [11] $end
$var wire 1 3/ R3_out [10] $end
$var wire 1 4/ R3_out [9] $end
$var wire 1 5/ R3_out [8] $end
$var wire 1 6/ R3_out [7] $end
$var wire 1 7/ R3_out [6] $end
$var wire 1 8/ R3_out [5] $end
$var wire 1 9/ R3_out [4] $end
$var wire 1 :/ R3_out [3] $end
$var wire 1 ;/ R3_out [2] $end
$var wire 1 </ R3_out [1] $end
$var wire 1 =/ R3_out [0] $end
$var wire 1 >/ R4_out [15] $end
$var wire 1 ?/ R4_out [14] $end
$var wire 1 @/ R4_out [13] $end
$var wire 1 A/ R4_out [12] $end
$var wire 1 B/ R4_out [11] $end
$var wire 1 C/ R4_out [10] $end
$var wire 1 D/ R4_out [9] $end
$var wire 1 E/ R4_out [8] $end
$var wire 1 F/ R4_out [7] $end
$var wire 1 G/ R4_out [6] $end
$var wire 1 H/ R4_out [5] $end
$var wire 1 I/ R4_out [4] $end
$var wire 1 J/ R4_out [3] $end
$var wire 1 K/ R4_out [2] $end
$var wire 1 L/ R4_out [1] $end
$var wire 1 M/ R4_out [0] $end
$var wire 1 N/ R5_out [15] $end
$var wire 1 O/ R5_out [14] $end
$var wire 1 P/ R5_out [13] $end
$var wire 1 Q/ R5_out [12] $end
$var wire 1 R/ R5_out [11] $end
$var wire 1 S/ R5_out [10] $end
$var wire 1 T/ R5_out [9] $end
$var wire 1 U/ R5_out [8] $end
$var wire 1 V/ R5_out [7] $end
$var wire 1 W/ R5_out [6] $end
$var wire 1 X/ R5_out [5] $end
$var wire 1 Y/ R5_out [4] $end
$var wire 1 Z/ R5_out [3] $end
$var wire 1 [/ R5_out [2] $end
$var wire 1 \/ R5_out [1] $end
$var wire 1 ]/ R5_out [0] $end
$var wire 1 ^/ R6_out [15] $end
$var wire 1 _/ R6_out [14] $end
$var wire 1 `/ R6_out [13] $end
$var wire 1 a/ R6_out [12] $end
$var wire 1 b/ R6_out [11] $end
$var wire 1 c/ R6_out [10] $end
$var wire 1 d/ R6_out [9] $end
$var wire 1 e/ R6_out [8] $end
$var wire 1 f/ R6_out [7] $end
$var wire 1 g/ R6_out [6] $end
$var wire 1 h/ R6_out [5] $end
$var wire 1 i/ R6_out [4] $end
$var wire 1 j/ R6_out [3] $end
$var wire 1 k/ R6_out [2] $end
$var wire 1 l/ R6_out [1] $end
$var wire 1 m/ R6_out [0] $end
$var wire 1 n/ R7_out [15] $end
$var wire 1 o/ R7_out [14] $end
$var wire 1 p/ R7_out [13] $end
$var wire 1 q/ R7_out [12] $end
$var wire 1 r/ R7_out [11] $end
$var wire 1 s/ R7_out [10] $end
$var wire 1 t/ R7_out [9] $end
$var wire 1 u/ R7_out [8] $end
$var wire 1 v/ R7_out [7] $end
$var wire 1 w/ R7_out [6] $end
$var wire 1 x/ R7_out [5] $end
$var wire 1 y/ R7_out [4] $end
$var wire 1 z/ R7_out [3] $end
$var wire 1 {/ R7_out [2] $end
$var wire 1 |/ R7_out [1] $end
$var wire 1 }/ R7_out [0] $end
$var wire 1 ~/ en0 $end
$var wire 1 !0 en1 $end
$var wire 1 "0 en2 $end
$var wire 1 #0 en3 $end
$var wire 1 $0 en4 $end
$var wire 1 %0 en5 $end
$var wire 1 &0 en6 $end
$var wire 1 '0 en7 $end

$scope module R0 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 ~/ en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 \. Q [15] $end
$var wire 1 ]. Q [14] $end
$var wire 1 ^. Q [13] $end
$var wire 1 _. Q [12] $end
$var wire 1 `. Q [11] $end
$var wire 1 a. Q [10] $end
$var wire 1 b. Q [9] $end
$var wire 1 c. Q [8] $end
$var wire 1 d. Q [7] $end
$var wire 1 e. Q [6] $end
$var wire 1 f. Q [5] $end
$var wire 1 g. Q [4] $end
$var wire 1 h. Q [3] $end
$var wire 1 i. Q [2] $end
$var wire 1 j. Q [1] $end
$var wire 1 k. Q [0] $end
$var wire 1 (0 in [15] $end
$var wire 1 )0 in [14] $end
$var wire 1 *0 in [13] $end
$var wire 1 +0 in [12] $end
$var wire 1 ,0 in [11] $end
$var wire 1 -0 in [10] $end
$var wire 1 .0 in [9] $end
$var wire 1 /0 in [8] $end
$var wire 1 00 in [7] $end
$var wire 1 10 in [6] $end
$var wire 1 20 in [5] $end
$var wire 1 30 in [4] $end
$var wire 1 40 in [3] $end
$var wire 1 50 in [2] $end
$var wire 1 60 in [1] $end
$var wire 1 70 in [0] $end
$var wire 1 80 out [15] $end
$var wire 1 90 out [14] $end
$var wire 1 :0 out [13] $end
$var wire 1 ;0 out [12] $end
$var wire 1 <0 out [11] $end
$var wire 1 =0 out [10] $end
$var wire 1 >0 out [9] $end
$var wire 1 ?0 out [8] $end
$var wire 1 @0 out [7] $end
$var wire 1 A0 out [6] $end
$var wire 1 B0 out [5] $end
$var wire 1 C0 out [4] $end
$var wire 1 D0 out [3] $end
$var wire 1 E0 out [2] $end
$var wire 1 F0 out [1] $end
$var wire 1 G0 out [0] $end

$scope module dff_0 $end
$var wire 1 G0 q $end
$var wire 1 70 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 H0 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 F0 q $end
$var wire 1 60 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 I0 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 E0 q $end
$var wire 1 50 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 J0 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 D0 q $end
$var wire 1 40 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 K0 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 C0 q $end
$var wire 1 30 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 L0 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 B0 q $end
$var wire 1 20 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 M0 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 A0 q $end
$var wire 1 10 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 N0 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 @0 q $end
$var wire 1 00 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 O0 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 ?0 q $end
$var wire 1 /0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 P0 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 >0 q $end
$var wire 1 .0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Q0 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 =0 q $end
$var wire 1 -0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 R0 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 <0 q $end
$var wire 1 ,0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 S0 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 ;0 q $end
$var wire 1 +0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 T0 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 :0 q $end
$var wire 1 *0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 U0 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 90 q $end
$var wire 1 )0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 V0 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 80 q $end
$var wire 1 (0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 W0 state $end
$upscope $end
$upscope $end

$scope module R1 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 !0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 l. Q [15] $end
$var wire 1 m. Q [14] $end
$var wire 1 n. Q [13] $end
$var wire 1 o. Q [12] $end
$var wire 1 p. Q [11] $end
$var wire 1 q. Q [10] $end
$var wire 1 r. Q [9] $end
$var wire 1 s. Q [8] $end
$var wire 1 t. Q [7] $end
$var wire 1 u. Q [6] $end
$var wire 1 v. Q [5] $end
$var wire 1 w. Q [4] $end
$var wire 1 x. Q [3] $end
$var wire 1 y. Q [2] $end
$var wire 1 z. Q [1] $end
$var wire 1 {. Q [0] $end
$var wire 1 X0 in [15] $end
$var wire 1 Y0 in [14] $end
$var wire 1 Z0 in [13] $end
$var wire 1 [0 in [12] $end
$var wire 1 \0 in [11] $end
$var wire 1 ]0 in [10] $end
$var wire 1 ^0 in [9] $end
$var wire 1 _0 in [8] $end
$var wire 1 `0 in [7] $end
$var wire 1 a0 in [6] $end
$var wire 1 b0 in [5] $end
$var wire 1 c0 in [4] $end
$var wire 1 d0 in [3] $end
$var wire 1 e0 in [2] $end
$var wire 1 f0 in [1] $end
$var wire 1 g0 in [0] $end
$var wire 1 h0 out [15] $end
$var wire 1 i0 out [14] $end
$var wire 1 j0 out [13] $end
$var wire 1 k0 out [12] $end
$var wire 1 l0 out [11] $end
$var wire 1 m0 out [10] $end
$var wire 1 n0 out [9] $end
$var wire 1 o0 out [8] $end
$var wire 1 p0 out [7] $end
$var wire 1 q0 out [6] $end
$var wire 1 r0 out [5] $end
$var wire 1 s0 out [4] $end
$var wire 1 t0 out [3] $end
$var wire 1 u0 out [2] $end
$var wire 1 v0 out [1] $end
$var wire 1 w0 out [0] $end

$scope module dff_0 $end
$var wire 1 w0 q $end
$var wire 1 g0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 x0 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 v0 q $end
$var wire 1 f0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 y0 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 u0 q $end
$var wire 1 e0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 z0 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 t0 q $end
$var wire 1 d0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 {0 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 s0 q $end
$var wire 1 c0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |0 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 r0 q $end
$var wire 1 b0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }0 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 q0 q $end
$var wire 1 a0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~0 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 p0 q $end
$var wire 1 `0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !1 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 o0 q $end
$var wire 1 _0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "1 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 n0 q $end
$var wire 1 ^0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #1 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 m0 q $end
$var wire 1 ]0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 $1 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 l0 q $end
$var wire 1 \0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 %1 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 k0 q $end
$var wire 1 [0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 &1 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 j0 q $end
$var wire 1 Z0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 '1 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 i0 q $end
$var wire 1 Y0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 (1 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 h0 q $end
$var wire 1 X0 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 )1 state $end
$upscope $end
$upscope $end

$scope module R2 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 "0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 |. Q [15] $end
$var wire 1 }. Q [14] $end
$var wire 1 ~. Q [13] $end
$var wire 1 !/ Q [12] $end
$var wire 1 "/ Q [11] $end
$var wire 1 #/ Q [10] $end
$var wire 1 $/ Q [9] $end
$var wire 1 %/ Q [8] $end
$var wire 1 &/ Q [7] $end
$var wire 1 '/ Q [6] $end
$var wire 1 (/ Q [5] $end
$var wire 1 )/ Q [4] $end
$var wire 1 */ Q [3] $end
$var wire 1 +/ Q [2] $end
$var wire 1 ,/ Q [1] $end
$var wire 1 -/ Q [0] $end
$var wire 1 *1 in [15] $end
$var wire 1 +1 in [14] $end
$var wire 1 ,1 in [13] $end
$var wire 1 -1 in [12] $end
$var wire 1 .1 in [11] $end
$var wire 1 /1 in [10] $end
$var wire 1 01 in [9] $end
$var wire 1 11 in [8] $end
$var wire 1 21 in [7] $end
$var wire 1 31 in [6] $end
$var wire 1 41 in [5] $end
$var wire 1 51 in [4] $end
$var wire 1 61 in [3] $end
$var wire 1 71 in [2] $end
$var wire 1 81 in [1] $end
$var wire 1 91 in [0] $end
$var wire 1 :1 out [15] $end
$var wire 1 ;1 out [14] $end
$var wire 1 <1 out [13] $end
$var wire 1 =1 out [12] $end
$var wire 1 >1 out [11] $end
$var wire 1 ?1 out [10] $end
$var wire 1 @1 out [9] $end
$var wire 1 A1 out [8] $end
$var wire 1 B1 out [7] $end
$var wire 1 C1 out [6] $end
$var wire 1 D1 out [5] $end
$var wire 1 E1 out [4] $end
$var wire 1 F1 out [3] $end
$var wire 1 G1 out [2] $end
$var wire 1 H1 out [1] $end
$var wire 1 I1 out [0] $end

$scope module dff_0 $end
$var wire 1 I1 q $end
$var wire 1 91 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 J1 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 H1 q $end
$var wire 1 81 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 K1 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 G1 q $end
$var wire 1 71 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 L1 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 F1 q $end
$var wire 1 61 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 M1 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 E1 q $end
$var wire 1 51 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 N1 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 D1 q $end
$var wire 1 41 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 O1 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 C1 q $end
$var wire 1 31 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 P1 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 B1 q $end
$var wire 1 21 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Q1 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 A1 q $end
$var wire 1 11 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 R1 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 @1 q $end
$var wire 1 01 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 S1 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 ?1 q $end
$var wire 1 /1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 T1 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 >1 q $end
$var wire 1 .1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 U1 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 =1 q $end
$var wire 1 -1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 V1 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 <1 q $end
$var wire 1 ,1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 W1 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 ;1 q $end
$var wire 1 +1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 X1 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 :1 q $end
$var wire 1 *1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Y1 state $end
$upscope $end
$upscope $end

$scope module R3 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 #0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 ./ Q [15] $end
$var wire 1 // Q [14] $end
$var wire 1 0/ Q [13] $end
$var wire 1 1/ Q [12] $end
$var wire 1 2/ Q [11] $end
$var wire 1 3/ Q [10] $end
$var wire 1 4/ Q [9] $end
$var wire 1 5/ Q [8] $end
$var wire 1 6/ Q [7] $end
$var wire 1 7/ Q [6] $end
$var wire 1 8/ Q [5] $end
$var wire 1 9/ Q [4] $end
$var wire 1 :/ Q [3] $end
$var wire 1 ;/ Q [2] $end
$var wire 1 </ Q [1] $end
$var wire 1 =/ Q [0] $end
$var wire 1 Z1 in [15] $end
$var wire 1 [1 in [14] $end
$var wire 1 \1 in [13] $end
$var wire 1 ]1 in [12] $end
$var wire 1 ^1 in [11] $end
$var wire 1 _1 in [10] $end
$var wire 1 `1 in [9] $end
$var wire 1 a1 in [8] $end
$var wire 1 b1 in [7] $end
$var wire 1 c1 in [6] $end
$var wire 1 d1 in [5] $end
$var wire 1 e1 in [4] $end
$var wire 1 f1 in [3] $end
$var wire 1 g1 in [2] $end
$var wire 1 h1 in [1] $end
$var wire 1 i1 in [0] $end
$var wire 1 j1 out [15] $end
$var wire 1 k1 out [14] $end
$var wire 1 l1 out [13] $end
$var wire 1 m1 out [12] $end
$var wire 1 n1 out [11] $end
$var wire 1 o1 out [10] $end
$var wire 1 p1 out [9] $end
$var wire 1 q1 out [8] $end
$var wire 1 r1 out [7] $end
$var wire 1 s1 out [6] $end
$var wire 1 t1 out [5] $end
$var wire 1 u1 out [4] $end
$var wire 1 v1 out [3] $end
$var wire 1 w1 out [2] $end
$var wire 1 x1 out [1] $end
$var wire 1 y1 out [0] $end

$scope module dff_0 $end
$var wire 1 y1 q $end
$var wire 1 i1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 z1 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 x1 q $end
$var wire 1 h1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 {1 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 w1 q $end
$var wire 1 g1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |1 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 v1 q $end
$var wire 1 f1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }1 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 u1 q $end
$var wire 1 e1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~1 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 t1 q $end
$var wire 1 d1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !2 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 s1 q $end
$var wire 1 c1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "2 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 r1 q $end
$var wire 1 b1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #2 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 q1 q $end
$var wire 1 a1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 $2 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 p1 q $end
$var wire 1 `1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 %2 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 o1 q $end
$var wire 1 _1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 &2 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 n1 q $end
$var wire 1 ^1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 '2 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 m1 q $end
$var wire 1 ]1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 (2 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 l1 q $end
$var wire 1 \1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 )2 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 k1 q $end
$var wire 1 [1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *2 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 j1 q $end
$var wire 1 Z1 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +2 state $end
$upscope $end
$upscope $end

$scope module R4 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 $0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 >/ Q [15] $end
$var wire 1 ?/ Q [14] $end
$var wire 1 @/ Q [13] $end
$var wire 1 A/ Q [12] $end
$var wire 1 B/ Q [11] $end
$var wire 1 C/ Q [10] $end
$var wire 1 D/ Q [9] $end
$var wire 1 E/ Q [8] $end
$var wire 1 F/ Q [7] $end
$var wire 1 G/ Q [6] $end
$var wire 1 H/ Q [5] $end
$var wire 1 I/ Q [4] $end
$var wire 1 J/ Q [3] $end
$var wire 1 K/ Q [2] $end
$var wire 1 L/ Q [1] $end
$var wire 1 M/ Q [0] $end
$var wire 1 ,2 in [15] $end
$var wire 1 -2 in [14] $end
$var wire 1 .2 in [13] $end
$var wire 1 /2 in [12] $end
$var wire 1 02 in [11] $end
$var wire 1 12 in [10] $end
$var wire 1 22 in [9] $end
$var wire 1 32 in [8] $end
$var wire 1 42 in [7] $end
$var wire 1 52 in [6] $end
$var wire 1 62 in [5] $end
$var wire 1 72 in [4] $end
$var wire 1 82 in [3] $end
$var wire 1 92 in [2] $end
$var wire 1 :2 in [1] $end
$var wire 1 ;2 in [0] $end
$var wire 1 <2 out [15] $end
$var wire 1 =2 out [14] $end
$var wire 1 >2 out [13] $end
$var wire 1 ?2 out [12] $end
$var wire 1 @2 out [11] $end
$var wire 1 A2 out [10] $end
$var wire 1 B2 out [9] $end
$var wire 1 C2 out [8] $end
$var wire 1 D2 out [7] $end
$var wire 1 E2 out [6] $end
$var wire 1 F2 out [5] $end
$var wire 1 G2 out [4] $end
$var wire 1 H2 out [3] $end
$var wire 1 I2 out [2] $end
$var wire 1 J2 out [1] $end
$var wire 1 K2 out [0] $end

$scope module dff_0 $end
$var wire 1 K2 q $end
$var wire 1 ;2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 L2 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 J2 q $end
$var wire 1 :2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 M2 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 I2 q $end
$var wire 1 92 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 N2 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 H2 q $end
$var wire 1 82 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 O2 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 G2 q $end
$var wire 1 72 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 P2 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 F2 q $end
$var wire 1 62 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Q2 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 E2 q $end
$var wire 1 52 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 R2 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 D2 q $end
$var wire 1 42 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 S2 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 C2 q $end
$var wire 1 32 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 T2 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 B2 q $end
$var wire 1 22 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 U2 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 A2 q $end
$var wire 1 12 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 V2 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 @2 q $end
$var wire 1 02 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 W2 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 ?2 q $end
$var wire 1 /2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 X2 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 >2 q $end
$var wire 1 .2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Y2 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 =2 q $end
$var wire 1 -2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Z2 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 <2 q $end
$var wire 1 ,2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [2 state $end
$upscope $end
$upscope $end

$scope module R5 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 %0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 N/ Q [15] $end
$var wire 1 O/ Q [14] $end
$var wire 1 P/ Q [13] $end
$var wire 1 Q/ Q [12] $end
$var wire 1 R/ Q [11] $end
$var wire 1 S/ Q [10] $end
$var wire 1 T/ Q [9] $end
$var wire 1 U/ Q [8] $end
$var wire 1 V/ Q [7] $end
$var wire 1 W/ Q [6] $end
$var wire 1 X/ Q [5] $end
$var wire 1 Y/ Q [4] $end
$var wire 1 Z/ Q [3] $end
$var wire 1 [/ Q [2] $end
$var wire 1 \/ Q [1] $end
$var wire 1 ]/ Q [0] $end
$var wire 1 \2 in [15] $end
$var wire 1 ]2 in [14] $end
$var wire 1 ^2 in [13] $end
$var wire 1 _2 in [12] $end
$var wire 1 `2 in [11] $end
$var wire 1 a2 in [10] $end
$var wire 1 b2 in [9] $end
$var wire 1 c2 in [8] $end
$var wire 1 d2 in [7] $end
$var wire 1 e2 in [6] $end
$var wire 1 f2 in [5] $end
$var wire 1 g2 in [4] $end
$var wire 1 h2 in [3] $end
$var wire 1 i2 in [2] $end
$var wire 1 j2 in [1] $end
$var wire 1 k2 in [0] $end
$var wire 1 l2 out [15] $end
$var wire 1 m2 out [14] $end
$var wire 1 n2 out [13] $end
$var wire 1 o2 out [12] $end
$var wire 1 p2 out [11] $end
$var wire 1 q2 out [10] $end
$var wire 1 r2 out [9] $end
$var wire 1 s2 out [8] $end
$var wire 1 t2 out [7] $end
$var wire 1 u2 out [6] $end
$var wire 1 v2 out [5] $end
$var wire 1 w2 out [4] $end
$var wire 1 x2 out [3] $end
$var wire 1 y2 out [2] $end
$var wire 1 z2 out [1] $end
$var wire 1 {2 out [0] $end

$scope module dff_0 $end
$var wire 1 {2 q $end
$var wire 1 k2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |2 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 z2 q $end
$var wire 1 j2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }2 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 y2 q $end
$var wire 1 i2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~2 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 x2 q $end
$var wire 1 h2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !3 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 w2 q $end
$var wire 1 g2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "3 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 v2 q $end
$var wire 1 f2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #3 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 u2 q $end
$var wire 1 e2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 $3 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 t2 q $end
$var wire 1 d2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 %3 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 s2 q $end
$var wire 1 c2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 &3 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 r2 q $end
$var wire 1 b2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 '3 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 q2 q $end
$var wire 1 a2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 (3 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 p2 q $end
$var wire 1 `2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 )3 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 o2 q $end
$var wire 1 _2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *3 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 n2 q $end
$var wire 1 ^2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +3 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 m2 q $end
$var wire 1 ]2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ,3 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 l2 q $end
$var wire 1 \2 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 -3 state $end
$upscope $end
$upscope $end

$scope module R6 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 &0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 ^/ Q [15] $end
$var wire 1 _/ Q [14] $end
$var wire 1 `/ Q [13] $end
$var wire 1 a/ Q [12] $end
$var wire 1 b/ Q [11] $end
$var wire 1 c/ Q [10] $end
$var wire 1 d/ Q [9] $end
$var wire 1 e/ Q [8] $end
$var wire 1 f/ Q [7] $end
$var wire 1 g/ Q [6] $end
$var wire 1 h/ Q [5] $end
$var wire 1 i/ Q [4] $end
$var wire 1 j/ Q [3] $end
$var wire 1 k/ Q [2] $end
$var wire 1 l/ Q [1] $end
$var wire 1 m/ Q [0] $end
$var wire 1 .3 in [15] $end
$var wire 1 /3 in [14] $end
$var wire 1 03 in [13] $end
$var wire 1 13 in [12] $end
$var wire 1 23 in [11] $end
$var wire 1 33 in [10] $end
$var wire 1 43 in [9] $end
$var wire 1 53 in [8] $end
$var wire 1 63 in [7] $end
$var wire 1 73 in [6] $end
$var wire 1 83 in [5] $end
$var wire 1 93 in [4] $end
$var wire 1 :3 in [3] $end
$var wire 1 ;3 in [2] $end
$var wire 1 <3 in [1] $end
$var wire 1 =3 in [0] $end
$var wire 1 >3 out [15] $end
$var wire 1 ?3 out [14] $end
$var wire 1 @3 out [13] $end
$var wire 1 A3 out [12] $end
$var wire 1 B3 out [11] $end
$var wire 1 C3 out [10] $end
$var wire 1 D3 out [9] $end
$var wire 1 E3 out [8] $end
$var wire 1 F3 out [7] $end
$var wire 1 G3 out [6] $end
$var wire 1 H3 out [5] $end
$var wire 1 I3 out [4] $end
$var wire 1 J3 out [3] $end
$var wire 1 K3 out [2] $end
$var wire 1 L3 out [1] $end
$var wire 1 M3 out [0] $end

$scope module dff_0 $end
$var wire 1 M3 q $end
$var wire 1 =3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 N3 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 L3 q $end
$var wire 1 <3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 O3 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 K3 q $end
$var wire 1 ;3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 P3 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 J3 q $end
$var wire 1 :3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Q3 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 I3 q $end
$var wire 1 93 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 R3 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 H3 q $end
$var wire 1 83 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 S3 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 G3 q $end
$var wire 1 73 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 T3 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 F3 q $end
$var wire 1 63 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 U3 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 E3 q $end
$var wire 1 53 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 V3 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 D3 q $end
$var wire 1 43 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 W3 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 C3 q $end
$var wire 1 33 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 X3 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 B3 q $end
$var wire 1 23 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Y3 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 A3 q $end
$var wire 1 13 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Z3 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 @3 q $end
$var wire 1 03 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [3 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 ?3 q $end
$var wire 1 /3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \3 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 >3 q $end
$var wire 1 .3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ]3 state $end
$upscope $end
$upscope $end

$scope module R7 $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 '0 en $end
$var wire 1 y$ D [15] $end
$var wire 1 z$ D [14] $end
$var wire 1 {$ D [13] $end
$var wire 1 |$ D [12] $end
$var wire 1 }$ D [11] $end
$var wire 1 ~$ D [10] $end
$var wire 1 !% D [9] $end
$var wire 1 "% D [8] $end
$var wire 1 #% D [7] $end
$var wire 1 $% D [6] $end
$var wire 1 %% D [5] $end
$var wire 1 &% D [4] $end
$var wire 1 '% D [3] $end
$var wire 1 (% D [2] $end
$var wire 1 )% D [1] $end
$var wire 1 *% D [0] $end
$var wire 1 n/ Q [15] $end
$var wire 1 o/ Q [14] $end
$var wire 1 p/ Q [13] $end
$var wire 1 q/ Q [12] $end
$var wire 1 r/ Q [11] $end
$var wire 1 s/ Q [10] $end
$var wire 1 t/ Q [9] $end
$var wire 1 u/ Q [8] $end
$var wire 1 v/ Q [7] $end
$var wire 1 w/ Q [6] $end
$var wire 1 x/ Q [5] $end
$var wire 1 y/ Q [4] $end
$var wire 1 z/ Q [3] $end
$var wire 1 {/ Q [2] $end
$var wire 1 |/ Q [1] $end
$var wire 1 }/ Q [0] $end
$var wire 1 ^3 in [15] $end
$var wire 1 _3 in [14] $end
$var wire 1 `3 in [13] $end
$var wire 1 a3 in [12] $end
$var wire 1 b3 in [11] $end
$var wire 1 c3 in [10] $end
$var wire 1 d3 in [9] $end
$var wire 1 e3 in [8] $end
$var wire 1 f3 in [7] $end
$var wire 1 g3 in [6] $end
$var wire 1 h3 in [5] $end
$var wire 1 i3 in [4] $end
$var wire 1 j3 in [3] $end
$var wire 1 k3 in [2] $end
$var wire 1 l3 in [1] $end
$var wire 1 m3 in [0] $end
$var wire 1 n3 out [15] $end
$var wire 1 o3 out [14] $end
$var wire 1 p3 out [13] $end
$var wire 1 q3 out [12] $end
$var wire 1 r3 out [11] $end
$var wire 1 s3 out [10] $end
$var wire 1 t3 out [9] $end
$var wire 1 u3 out [8] $end
$var wire 1 v3 out [7] $end
$var wire 1 w3 out [6] $end
$var wire 1 x3 out [5] $end
$var wire 1 y3 out [4] $end
$var wire 1 z3 out [3] $end
$var wire 1 {3 out [2] $end
$var wire 1 |3 out [1] $end
$var wire 1 }3 out [0] $end

$scope module dff_0 $end
$var wire 1 }3 q $end
$var wire 1 m3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~3 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 |3 q $end
$var wire 1 l3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !4 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 {3 q $end
$var wire 1 k3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "4 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 z3 q $end
$var wire 1 j3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #4 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 y3 q $end
$var wire 1 i3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 $4 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 x3 q $end
$var wire 1 h3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 %4 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 w3 q $end
$var wire 1 g3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 &4 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 v3 q $end
$var wire 1 f3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 '4 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 u3 q $end
$var wire 1 e3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 (4 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 t3 q $end
$var wire 1 d3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 )4 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 s3 q $end
$var wire 1 c3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *4 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 r3 q $end
$var wire 1 b3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +4 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 q3 q $end
$var wire 1 a3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ,4 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 p3 q $end
$var wire 1 `3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 -4 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 o3 q $end
$var wire 1 _3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 .4 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 n3 q $end
$var wire 1 ^3 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 /4 state $end
$upscope $end
$upscope $end

$scope module decoder_write $end
$var wire 1 F. in [2] $end
$var wire 1 G. in [1] $end
$var wire 1 7) in [0] $end
$var wire 1 T. out [7] $end
$var wire 1 U. out [6] $end
$var wire 1 V. out [5] $end
$var wire 1 W. out [4] $end
$var wire 1 X. out [3] $end
$var wire 1 Y. out [2] $end
$var wire 1 Z. out [1] $end
$var wire 1 [. out [0] $end
$upscope $end

$scope module read1mux $end
$var wire 1 0" sel [2] $end
$var wire 1 1" sel [1] $end
$var wire 1 2" sel [0] $end
$var wire 1 \. in0 [15] $end
$var wire 1 ]. in0 [14] $end
$var wire 1 ^. in0 [13] $end
$var wire 1 _. in0 [12] $end
$var wire 1 `. in0 [11] $end
$var wire 1 a. in0 [10] $end
$var wire 1 b. in0 [9] $end
$var wire 1 c. in0 [8] $end
$var wire 1 d. in0 [7] $end
$var wire 1 e. in0 [6] $end
$var wire 1 f. in0 [5] $end
$var wire 1 g. in0 [4] $end
$var wire 1 h. in0 [3] $end
$var wire 1 i. in0 [2] $end
$var wire 1 j. in0 [1] $end
$var wire 1 k. in0 [0] $end
$var wire 1 l. in1 [15] $end
$var wire 1 m. in1 [14] $end
$var wire 1 n. in1 [13] $end
$var wire 1 o. in1 [12] $end
$var wire 1 p. in1 [11] $end
$var wire 1 q. in1 [10] $end
$var wire 1 r. in1 [9] $end
$var wire 1 s. in1 [8] $end
$var wire 1 t. in1 [7] $end
$var wire 1 u. in1 [6] $end
$var wire 1 v. in1 [5] $end
$var wire 1 w. in1 [4] $end
$var wire 1 x. in1 [3] $end
$var wire 1 y. in1 [2] $end
$var wire 1 z. in1 [1] $end
$var wire 1 {. in1 [0] $end
$var wire 1 |. in2 [15] $end
$var wire 1 }. in2 [14] $end
$var wire 1 ~. in2 [13] $end
$var wire 1 !/ in2 [12] $end
$var wire 1 "/ in2 [11] $end
$var wire 1 #/ in2 [10] $end
$var wire 1 $/ in2 [9] $end
$var wire 1 %/ in2 [8] $end
$var wire 1 &/ in2 [7] $end
$var wire 1 '/ in2 [6] $end
$var wire 1 (/ in2 [5] $end
$var wire 1 )/ in2 [4] $end
$var wire 1 */ in2 [3] $end
$var wire 1 +/ in2 [2] $end
$var wire 1 ,/ in2 [1] $end
$var wire 1 -/ in2 [0] $end
$var wire 1 ./ in3 [15] $end
$var wire 1 // in3 [14] $end
$var wire 1 0/ in3 [13] $end
$var wire 1 1/ in3 [12] $end
$var wire 1 2/ in3 [11] $end
$var wire 1 3/ in3 [10] $end
$var wire 1 4/ in3 [9] $end
$var wire 1 5/ in3 [8] $end
$var wire 1 6/ in3 [7] $end
$var wire 1 7/ in3 [6] $end
$var wire 1 8/ in3 [5] $end
$var wire 1 9/ in3 [4] $end
$var wire 1 :/ in3 [3] $end
$var wire 1 ;/ in3 [2] $end
$var wire 1 </ in3 [1] $end
$var wire 1 =/ in3 [0] $end
$var wire 1 >/ in4 [15] $end
$var wire 1 ?/ in4 [14] $end
$var wire 1 @/ in4 [13] $end
$var wire 1 A/ in4 [12] $end
$var wire 1 B/ in4 [11] $end
$var wire 1 C/ in4 [10] $end
$var wire 1 D/ in4 [9] $end
$var wire 1 E/ in4 [8] $end
$var wire 1 F/ in4 [7] $end
$var wire 1 G/ in4 [6] $end
$var wire 1 H/ in4 [5] $end
$var wire 1 I/ in4 [4] $end
$var wire 1 J/ in4 [3] $end
$var wire 1 K/ in4 [2] $end
$var wire 1 L/ in4 [1] $end
$var wire 1 M/ in4 [0] $end
$var wire 1 N/ in5 [15] $end
$var wire 1 O/ in5 [14] $end
$var wire 1 P/ in5 [13] $end
$var wire 1 Q/ in5 [12] $end
$var wire 1 R/ in5 [11] $end
$var wire 1 S/ in5 [10] $end
$var wire 1 T/ in5 [9] $end
$var wire 1 U/ in5 [8] $end
$var wire 1 V/ in5 [7] $end
$var wire 1 W/ in5 [6] $end
$var wire 1 X/ in5 [5] $end
$var wire 1 Y/ in5 [4] $end
$var wire 1 Z/ in5 [3] $end
$var wire 1 [/ in5 [2] $end
$var wire 1 \/ in5 [1] $end
$var wire 1 ]/ in5 [0] $end
$var wire 1 ^/ in6 [15] $end
$var wire 1 _/ in6 [14] $end
$var wire 1 `/ in6 [13] $end
$var wire 1 a/ in6 [12] $end
$var wire 1 b/ in6 [11] $end
$var wire 1 c/ in6 [10] $end
$var wire 1 d/ in6 [9] $end
$var wire 1 e/ in6 [8] $end
$var wire 1 f/ in6 [7] $end
$var wire 1 g/ in6 [6] $end
$var wire 1 h/ in6 [5] $end
$var wire 1 i/ in6 [4] $end
$var wire 1 j/ in6 [3] $end
$var wire 1 k/ in6 [2] $end
$var wire 1 l/ in6 [1] $end
$var wire 1 m/ in6 [0] $end
$var wire 1 n/ in7 [15] $end
$var wire 1 o/ in7 [14] $end
$var wire 1 p/ in7 [13] $end
$var wire 1 q/ in7 [12] $end
$var wire 1 r/ in7 [11] $end
$var wire 1 s/ in7 [10] $end
$var wire 1 t/ in7 [9] $end
$var wire 1 u/ in7 [8] $end
$var wire 1 v/ in7 [7] $end
$var wire 1 w/ in7 [6] $end
$var wire 1 x/ in7 [5] $end
$var wire 1 y/ in7 [4] $end
$var wire 1 z/ in7 [3] $end
$var wire 1 {/ in7 [2] $end
$var wire 1 |/ in7 [1] $end
$var wire 1 }/ in7 [0] $end
$var reg 16 04 out [15:0] $end
$upscope $end

$scope module read2mux $end
$var wire 1 3" sel [2] $end
$var wire 1 4" sel [1] $end
$var wire 1 5" sel [0] $end
$var wire 1 \. in0 [15] $end
$var wire 1 ]. in0 [14] $end
$var wire 1 ^. in0 [13] $end
$var wire 1 _. in0 [12] $end
$var wire 1 `. in0 [11] $end
$var wire 1 a. in0 [10] $end
$var wire 1 b. in0 [9] $end
$var wire 1 c. in0 [8] $end
$var wire 1 d. in0 [7] $end
$var wire 1 e. in0 [6] $end
$var wire 1 f. in0 [5] $end
$var wire 1 g. in0 [4] $end
$var wire 1 h. in0 [3] $end
$var wire 1 i. in0 [2] $end
$var wire 1 j. in0 [1] $end
$var wire 1 k. in0 [0] $end
$var wire 1 l. in1 [15] $end
$var wire 1 m. in1 [14] $end
$var wire 1 n. in1 [13] $end
$var wire 1 o. in1 [12] $end
$var wire 1 p. in1 [11] $end
$var wire 1 q. in1 [10] $end
$var wire 1 r. in1 [9] $end
$var wire 1 s. in1 [8] $end
$var wire 1 t. in1 [7] $end
$var wire 1 u. in1 [6] $end
$var wire 1 v. in1 [5] $end
$var wire 1 w. in1 [4] $end
$var wire 1 x. in1 [3] $end
$var wire 1 y. in1 [2] $end
$var wire 1 z. in1 [1] $end
$var wire 1 {. in1 [0] $end
$var wire 1 |. in2 [15] $end
$var wire 1 }. in2 [14] $end
$var wire 1 ~. in2 [13] $end
$var wire 1 !/ in2 [12] $end
$var wire 1 "/ in2 [11] $end
$var wire 1 #/ in2 [10] $end
$var wire 1 $/ in2 [9] $end
$var wire 1 %/ in2 [8] $end
$var wire 1 &/ in2 [7] $end
$var wire 1 '/ in2 [6] $end
$var wire 1 (/ in2 [5] $end
$var wire 1 )/ in2 [4] $end
$var wire 1 */ in2 [3] $end
$var wire 1 +/ in2 [2] $end
$var wire 1 ,/ in2 [1] $end
$var wire 1 -/ in2 [0] $end
$var wire 1 ./ in3 [15] $end
$var wire 1 // in3 [14] $end
$var wire 1 0/ in3 [13] $end
$var wire 1 1/ in3 [12] $end
$var wire 1 2/ in3 [11] $end
$var wire 1 3/ in3 [10] $end
$var wire 1 4/ in3 [9] $end
$var wire 1 5/ in3 [8] $end
$var wire 1 6/ in3 [7] $end
$var wire 1 7/ in3 [6] $end
$var wire 1 8/ in3 [5] $end
$var wire 1 9/ in3 [4] $end
$var wire 1 :/ in3 [3] $end
$var wire 1 ;/ in3 [2] $end
$var wire 1 </ in3 [1] $end
$var wire 1 =/ in3 [0] $end
$var wire 1 >/ in4 [15] $end
$var wire 1 ?/ in4 [14] $end
$var wire 1 @/ in4 [13] $end
$var wire 1 A/ in4 [12] $end
$var wire 1 B/ in4 [11] $end
$var wire 1 C/ in4 [10] $end
$var wire 1 D/ in4 [9] $end
$var wire 1 E/ in4 [8] $end
$var wire 1 F/ in4 [7] $end
$var wire 1 G/ in4 [6] $end
$var wire 1 H/ in4 [5] $end
$var wire 1 I/ in4 [4] $end
$var wire 1 J/ in4 [3] $end
$var wire 1 K/ in4 [2] $end
$var wire 1 L/ in4 [1] $end
$var wire 1 M/ in4 [0] $end
$var wire 1 N/ in5 [15] $end
$var wire 1 O/ in5 [14] $end
$var wire 1 P/ in5 [13] $end
$var wire 1 Q/ in5 [12] $end
$var wire 1 R/ in5 [11] $end
$var wire 1 S/ in5 [10] $end
$var wire 1 T/ in5 [9] $end
$var wire 1 U/ in5 [8] $end
$var wire 1 V/ in5 [7] $end
$var wire 1 W/ in5 [6] $end
$var wire 1 X/ in5 [5] $end
$var wire 1 Y/ in5 [4] $end
$var wire 1 Z/ in5 [3] $end
$var wire 1 [/ in5 [2] $end
$var wire 1 \/ in5 [1] $end
$var wire 1 ]/ in5 [0] $end
$var wire 1 ^/ in6 [15] $end
$var wire 1 _/ in6 [14] $end
$var wire 1 `/ in6 [13] $end
$var wire 1 a/ in6 [12] $end
$var wire 1 b/ in6 [11] $end
$var wire 1 c/ in6 [10] $end
$var wire 1 d/ in6 [9] $end
$var wire 1 e/ in6 [8] $end
$var wire 1 f/ in6 [7] $end
$var wire 1 g/ in6 [6] $end
$var wire 1 h/ in6 [5] $end
$var wire 1 i/ in6 [4] $end
$var wire 1 j/ in6 [3] $end
$var wire 1 k/ in6 [2] $end
$var wire 1 l/ in6 [1] $end
$var wire 1 m/ in6 [0] $end
$var wire 1 n/ in7 [15] $end
$var wire 1 o/ in7 [14] $end
$var wire 1 p/ in7 [13] $end
$var wire 1 q/ in7 [12] $end
$var wire 1 r/ in7 [11] $end
$var wire 1 s/ in7 [10] $end
$var wire 1 t/ in7 [9] $end
$var wire 1 u/ in7 [8] $end
$var wire 1 v/ in7 [7] $end
$var wire 1 w/ in7 [6] $end
$var wire 1 x/ in7 [5] $end
$var wire 1 y/ in7 [4] $end
$var wire 1 z/ in7 [3] $end
$var wire 1 {/ in7 [2] $end
$var wire 1 |/ in7 [1] $end
$var wire 1 }/ in7 [0] $end
$var reg 16 14 out [15:0] $end
$upscope $end
$upscope $end

$scope module extension $end
$var wire 1 ^& instr [15] $end
$var wire 1 _& instr [14] $end
$var wire 1 `& instr [13] $end
$var wire 1 a& instr [12] $end
$var wire 1 b& instr [11] $end
$var wire 1 c& instr [10] $end
$var wire 1 d& instr [9] $end
$var wire 1 e& instr [8] $end
$var wire 1 f& instr [7] $end
$var wire 1 g& instr [6] $end
$var wire 1 h& instr [5] $end
$var wire 1 i& instr [4] $end
$var wire 1 j& instr [3] $end
$var wire 1 k& instr [2] $end
$var wire 1 l& instr [1] $end
$var wire 1 m& instr [0] $end
$var wire 1 7# extVal [15] $end
$var wire 1 8# extVal [14] $end
$var wire 1 9# extVal [13] $end
$var wire 1 :# extVal [12] $end
$var wire 1 ;# extVal [11] $end
$var wire 1 <# extVal [10] $end
$var wire 1 =# extVal [9] $end
$var wire 1 ># extVal [8] $end
$var wire 1 ?# extVal [7] $end
$var wire 1 @# extVal [6] $end
$var wire 1 A# extVal [5] $end
$var wire 1 B# extVal [4] $end
$var wire 1 C# extVal [3] $end
$var wire 1 D# extVal [2] $end
$var wire 1 E# extVal [1] $end
$var wire 1 F# extVal [0] $end
$var wire 1 24 jumpimm [15] $end
$var wire 1 34 jumpimm [14] $end
$var wire 1 44 jumpimm [13] $end
$var wire 1 54 jumpimm [12] $end
$var wire 1 64 jumpimm [11] $end
$var wire 1 74 jumpimm [10] $end
$var wire 1 84 jumpimm [9] $end
$var wire 1 94 jumpimm [8] $end
$var wire 1 :4 jumpimm [7] $end
$var wire 1 ;4 jumpimm [6] $end
$var wire 1 <4 jumpimm [5] $end
$var wire 1 =4 jumpimm [4] $end
$var wire 1 >4 jumpimm [3] $end
$var wire 1 ?4 jumpimm [2] $end
$var wire 1 @4 jumpimm [1] $end
$var wire 1 A4 jumpimm [0] $end
$var wire 1 B4 sign5to16 [15] $end
$var wire 1 C4 sign5to16 [14] $end
$var wire 1 D4 sign5to16 [13] $end
$var wire 1 E4 sign5to16 [12] $end
$var wire 1 F4 sign5to16 [11] $end
$var wire 1 G4 sign5to16 [10] $end
$var wire 1 H4 sign5to16 [9] $end
$var wire 1 I4 sign5to16 [8] $end
$var wire 1 J4 sign5to16 [7] $end
$var wire 1 K4 sign5to16 [6] $end
$var wire 1 L4 sign5to16 [5] $end
$var wire 1 M4 sign5to16 [4] $end
$var wire 1 N4 sign5to16 [3] $end
$var wire 1 O4 sign5to16 [2] $end
$var wire 1 P4 sign5to16 [1] $end
$var wire 1 Q4 sign5to16 [0] $end
$var wire 1 R4 zero5to16 [15] $end
$var wire 1 S4 zero5to16 [14] $end
$var wire 1 T4 zero5to16 [13] $end
$var wire 1 U4 zero5to16 [12] $end
$var wire 1 V4 zero5to16 [11] $end
$var wire 1 W4 zero5to16 [10] $end
$var wire 1 X4 zero5to16 [9] $end
$var wire 1 Y4 zero5to16 [8] $end
$var wire 1 Z4 zero5to16 [7] $end
$var wire 1 [4 zero5to16 [6] $end
$var wire 1 \4 zero5to16 [5] $end
$var wire 1 ]4 zero5to16 [4] $end
$var wire 1 ^4 zero5to16 [3] $end
$var wire 1 _4 zero5to16 [2] $end
$var wire 1 `4 zero5to16 [1] $end
$var wire 1 a4 zero5to16 [0] $end
$var wire 1 b4 sign8to16 [15] $end
$var wire 1 c4 sign8to16 [14] $end
$var wire 1 d4 sign8to16 [13] $end
$var wire 1 e4 sign8to16 [12] $end
$var wire 1 f4 sign8to16 [11] $end
$var wire 1 g4 sign8to16 [10] $end
$var wire 1 h4 sign8to16 [9] $end
$var wire 1 i4 sign8to16 [8] $end
$var wire 1 j4 sign8to16 [7] $end
$var wire 1 k4 sign8to16 [6] $end
$var wire 1 l4 sign8to16 [5] $end
$var wire 1 m4 sign8to16 [4] $end
$var wire 1 n4 sign8to16 [3] $end
$var wire 1 o4 sign8to16 [2] $end
$var wire 1 p4 sign8to16 [1] $end
$var wire 1 q4 sign8to16 [0] $end
$var wire 1 r4 zero8to16 [15] $end
$var wire 1 s4 zero8to16 [14] $end
$var wire 1 t4 zero8to16 [13] $end
$var wire 1 u4 zero8to16 [12] $end
$var wire 1 v4 zero8to16 [11] $end
$var wire 1 w4 zero8to16 [10] $end
$var wire 1 x4 zero8to16 [9] $end
$var wire 1 y4 zero8to16 [8] $end
$var wire 1 z4 zero8to16 [7] $end
$var wire 1 {4 zero8to16 [6] $end
$var wire 1 |4 zero8to16 [5] $end
$var wire 1 }4 zero8to16 [4] $end
$var wire 1 ~4 zero8to16 [3] $end
$var wire 1 !5 zero8to16 [2] $end
$var wire 1 "5 zero8to16 [1] $end
$var wire 1 #5 zero8to16 [0] $end
$var wire 1 $5 sign11to16 [15] $end
$var wire 1 %5 sign11to16 [14] $end
$var wire 1 &5 sign11to16 [13] $end
$var wire 1 '5 sign11to16 [12] $end
$var wire 1 (5 sign11to16 [11] $end
$var wire 1 )5 sign11to16 [10] $end
$var wire 1 *5 sign11to16 [9] $end
$var wire 1 +5 sign11to16 [8] $end
$var wire 1 ,5 sign11to16 [7] $end
$var wire 1 -5 sign11to16 [6] $end
$var wire 1 .5 sign11to16 [5] $end
$var wire 1 /5 sign11to16 [4] $end
$var wire 1 05 sign11to16 [3] $end
$var wire 1 15 sign11to16 [2] $end
$var wire 1 25 sign11to16 [1] $end
$var wire 1 35 sign11to16 [0] $end
$upscope $end

$scope module controlUnit $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 ^& instr [15] $end
$var wire 1 _& instr [14] $end
$var wire 1 `& instr [13] $end
$var wire 1 a& instr [12] $end
$var wire 1 b& instr [11] $end
$var wire 1 c& instr [10] $end
$var wire 1 d& instr [9] $end
$var wire 1 e& instr [8] $end
$var wire 1 f& instr [7] $end
$var wire 1 g& instr [6] $end
$var wire 1 h& instr [5] $end
$var wire 1 i& instr [4] $end
$var wire 1 j& instr [3] $end
$var wire 1 k& instr [2] $end
$var wire 1 l& instr [1] $end
$var wire 1 m& instr [0] $end
$var reg 3 45 branchCtl [2:0] $end
$var reg 3 55 jumpCtl [2:0] $end
$var reg 1 65 regWrite $end
$var reg 1 75 aluSrc $end
$var reg 1 85 btr $end
$var reg 1 95 memWrite $end
$var reg 1 :5 memRead $end
$var reg 1 ;5 memToReg $end
$var reg 1 <5 halt $end
$var reg 1 =5 noOp $end
$var reg 1 >5 immCtl $end
$var reg 1 ?5 extCtl $end
$var reg 1 @5 stu $end
$var reg 1 A5 lbi $end
$var reg 1 B5 slbi $end
$var reg 1 C5 immPres $end
$var reg 1 D5 ror $end
$var reg 1 E5 seq $end
$var reg 1 F5 sl $end
$var reg 1 G5 sco $end
$var reg 3 H5 aluOp [2:0] $end
$upscope $end
$upscope $end

$scope module IDEX $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 0" Rs [2] $end
$var wire 1 1" Rs [1] $end
$var wire 1 2" Rs [0] $end
$var wire 1 3" Rt [2] $end
$var wire 1 4" Rt [1] $end
$var wire 1 5" Rt [0] $end
$var wire 1 9" Rd [2] $end
$var wire 1 :" Rd [1] $end
$var wire 1 ;" Rd [0] $end
$var wire 1 <" aluOp [2] $end
$var wire 1 =" aluOp [1] $end
$var wire 1 >" aluOp [0] $end
$var wire 1 ?" branchCtl [2] $end
$var wire 1 @" branchCtl [1] $end
$var wire 1 A" branchCtl [0] $end
$var wire 1 B" jumpCtl [2] $end
$var wire 1 C" jumpCtl [1] $end
$var wire 1 D" jumpCtl [0] $end
$var wire 1 n& IDEX_Rs [2] $end
$var wire 1 o& IDEX_Rs [1] $end
$var wire 1 p& IDEX_Rs [0] $end
$var wire 1 q& IDEX_Rt [2] $end
$var wire 1 r& IDEX_Rt [1] $end
$var wire 1 s& IDEX_Rt [0] $end
$var wire 1 t& IDEX_Rd [2] $end
$var wire 1 u& IDEX_Rd [1] $end
$var wire 1 v& IDEX_Rd [0] $end
$var wire 1 w& IDEX_aluOp [2] $end
$var wire 1 x& IDEX_aluOp [1] $end
$var wire 1 y& IDEX_aluOp [0] $end
$var wire 1 z& IDEX_branchCtl [2] $end
$var wire 1 {& IDEX_branchCtl [1] $end
$var wire 1 |& IDEX_branchCtl [0] $end
$var wire 1 }& IDEX_jumpCtl [2] $end
$var wire 1 ~& IDEX_jumpCtl [1] $end
$var wire 1 !' IDEX_jumpCtl [0] $end
$var wire 1 I$ read1Data [15] $end
$var wire 1 J$ read1Data [14] $end
$var wire 1 K$ read1Data [13] $end
$var wire 1 L$ read1Data [12] $end
$var wire 1 M$ read1Data [11] $end
$var wire 1 N$ read1Data [10] $end
$var wire 1 O$ read1Data [9] $end
$var wire 1 P$ read1Data [8] $end
$var wire 1 Q$ read1Data [7] $end
$var wire 1 R$ read1Data [6] $end
$var wire 1 S$ read1Data [5] $end
$var wire 1 T$ read1Data [4] $end
$var wire 1 U$ read1Data [3] $end
$var wire 1 V$ read1Data [2] $end
$var wire 1 W$ read1Data [1] $end
$var wire 1 X$ read1Data [0] $end
$var wire 1 Y$ read2Data [15] $end
$var wire 1 Z$ read2Data [14] $end
$var wire 1 [$ read2Data [13] $end
$var wire 1 \$ read2Data [12] $end
$var wire 1 ]$ read2Data [11] $end
$var wire 1 ^$ read2Data [10] $end
$var wire 1 _$ read2Data [9] $end
$var wire 1 `$ read2Data [8] $end
$var wire 1 a$ read2Data [7] $end
$var wire 1 b$ read2Data [6] $end
$var wire 1 c$ read2Data [5] $end
$var wire 1 d$ read2Data [4] $end
$var wire 1 e$ read2Data [3] $end
$var wire 1 f$ read2Data [2] $end
$var wire 1 g$ read2Data [1] $end
$var wire 1 h$ read2Data [0] $end
$var wire 1 I5 exImmVal [15] $end
$var wire 1 J5 exImmVal [14] $end
$var wire 1 K5 exImmVal [13] $end
$var wire 1 L5 exImmVal [12] $end
$var wire 1 M5 exImmVal [11] $end
$var wire 1 N5 exImmVal [10] $end
$var wire 1 O5 exImmVal [9] $end
$var wire 1 P5 exImmVal [8] $end
$var wire 1 Q5 exImmVal [7] $end
$var wire 1 R5 exImmVal [6] $end
$var wire 1 S5 exImmVal [5] $end
$var wire 1 T5 exImmVal [4] $end
$var wire 1 U5 exImmVal [3] $end
$var wire 1 V5 exImmVal [2] $end
$var wire 1 W5 exImmVal [1] $end
$var wire 1 8) exImmVal [0] $end
$var wire 1 N& PC_inc [15] $end
$var wire 1 O& PC_inc [14] $end
$var wire 1 P& PC_inc [13] $end
$var wire 1 Q& PC_inc [12] $end
$var wire 1 R& PC_inc [11] $end
$var wire 1 S& PC_inc [10] $end
$var wire 1 T& PC_inc [9] $end
$var wire 1 U& PC_inc [8] $end
$var wire 1 V& PC_inc [7] $end
$var wire 1 W& PC_inc [6] $end
$var wire 1 X& PC_inc [5] $end
$var wire 1 Y& PC_inc [4] $end
$var wire 1 Z& PC_inc [3] $end
$var wire 1 [& PC_inc [2] $end
$var wire 1 \& PC_inc [1] $end
$var wire 1 ]& PC_inc [0] $end
$var wire 1 k% PC [15] $end
$var wire 1 l% PC [14] $end
$var wire 1 m% PC [13] $end
$var wire 1 n% PC [12] $end
$var wire 1 o% PC [11] $end
$var wire 1 p% PC [10] $end
$var wire 1 q% PC [9] $end
$var wire 1 r% PC [8] $end
$var wire 1 s% PC [7] $end
$var wire 1 t% PC [6] $end
$var wire 1 u% PC [5] $end
$var wire 1 v% PC [4] $end
$var wire 1 w% PC [3] $end
$var wire 1 x% PC [2] $end
$var wire 1 y% PC [1] $end
$var wire 1 z% PC [0] $end
$var wire 1 "' IDEX_read1Data [15] $end
$var wire 1 #' IDEX_read1Data [14] $end
$var wire 1 $' IDEX_read1Data [13] $end
$var wire 1 %' IDEX_read1Data [12] $end
$var wire 1 &' IDEX_read1Data [11] $end
$var wire 1 '' IDEX_read1Data [10] $end
$var wire 1 (' IDEX_read1Data [9] $end
$var wire 1 )' IDEX_read1Data [8] $end
$var wire 1 *' IDEX_read1Data [7] $end
$var wire 1 +' IDEX_read1Data [6] $end
$var wire 1 ,' IDEX_read1Data [5] $end
$var wire 1 -' IDEX_read1Data [4] $end
$var wire 1 .' IDEX_read1Data [3] $end
$var wire 1 /' IDEX_read1Data [2] $end
$var wire 1 0' IDEX_read1Data [1] $end
$var wire 1 1' IDEX_read1Data [0] $end
$var wire 1 2' IDEX_read2Data [15] $end
$var wire 1 3' IDEX_read2Data [14] $end
$var wire 1 4' IDEX_read2Data [13] $end
$var wire 1 5' IDEX_read2Data [12] $end
$var wire 1 6' IDEX_read2Data [11] $end
$var wire 1 7' IDEX_read2Data [10] $end
$var wire 1 8' IDEX_read2Data [9] $end
$var wire 1 9' IDEX_read2Data [8] $end
$var wire 1 :' IDEX_read2Data [7] $end
$var wire 1 ;' IDEX_read2Data [6] $end
$var wire 1 <' IDEX_read2Data [5] $end
$var wire 1 =' IDEX_read2Data [4] $end
$var wire 1 >' IDEX_read2Data [3] $end
$var wire 1 ?' IDEX_read2Data [2] $end
$var wire 1 @' IDEX_read2Data [1] $end
$var wire 1 A' IDEX_read2Data [0] $end
$var wire 1 B' IDEX_exImmVal [15] $end
$var wire 1 C' IDEX_exImmVal [14] $end
$var wire 1 D' IDEX_exImmVal [13] $end
$var wire 1 E' IDEX_exImmVal [12] $end
$var wire 1 F' IDEX_exImmVal [11] $end
$var wire 1 G' IDEX_exImmVal [10] $end
$var wire 1 H' IDEX_exImmVal [9] $end
$var wire 1 I' IDEX_exImmVal [8] $end
$var wire 1 J' IDEX_exImmVal [7] $end
$var wire 1 K' IDEX_exImmVal [6] $end
$var wire 1 L' IDEX_exImmVal [5] $end
$var wire 1 M' IDEX_exImmVal [4] $end
$var wire 1 N' IDEX_exImmVal [3] $end
$var wire 1 O' IDEX_exImmVal [2] $end
$var wire 1 P' IDEX_exImmVal [1] $end
$var wire 1 Q' IDEX_exImmVal [0] $end
$var wire 1 R' IDEX_PC_inc [15] $end
$var wire 1 S' IDEX_PC_inc [14] $end
$var wire 1 T' IDEX_PC_inc [13] $end
$var wire 1 U' IDEX_PC_inc [12] $end
$var wire 1 V' IDEX_PC_inc [11] $end
$var wire 1 W' IDEX_PC_inc [10] $end
$var wire 1 X' IDEX_PC_inc [9] $end
$var wire 1 Y' IDEX_PC_inc [8] $end
$var wire 1 Z' IDEX_PC_inc [7] $end
$var wire 1 [' IDEX_PC_inc [6] $end
$var wire 1 \' IDEX_PC_inc [5] $end
$var wire 1 ]' IDEX_PC_inc [4] $end
$var wire 1 ^' IDEX_PC_inc [3] $end
$var wire 1 _' IDEX_PC_inc [2] $end
$var wire 1 `' IDEX_PC_inc [1] $end
$var wire 1 a' IDEX_PC_inc [0] $end
$var wire 1 {% IDEX_PC [15] $end
$var wire 1 |% IDEX_PC [14] $end
$var wire 1 }% IDEX_PC [13] $end
$var wire 1 ~% IDEX_PC [12] $end
$var wire 1 !& IDEX_PC [11] $end
$var wire 1 "& IDEX_PC [10] $end
$var wire 1 #& IDEX_PC [9] $end
$var wire 1 $& IDEX_PC [8] $end
$var wire 1 %& IDEX_PC [7] $end
$var wire 1 && IDEX_PC [6] $end
$var wire 1 '& IDEX_PC [5] $end
$var wire 1 (& IDEX_PC [4] $end
$var wire 1 )& IDEX_PC [3] $end
$var wire 1 *& IDEX_PC [2] $end
$var wire 1 +& IDEX_PC [1] $end
$var wire 1 ,& IDEX_PC [0] $end
$var wire 1 |! regWrite $end
$var wire 1 ~! aluSrc $end
$var wire 1 }! btr $end
$var wire 1 !" memWrite $end
$var wire 1 "" memRead $end
$var wire 1 9) MemToReg $end
$var wire 1 &" slbi $end
$var wire 1 (" lbi $end
$var wire 1 ." seq $end
$var wire 1 ," sl $end
$var wire 1 -" sco $end
$var wire 1 /" ror $end
$var wire 1 b' IDEX_regWrite $end
$var wire 1 c' IDEX_aluSrc $end
$var wire 1 d' IDEX_btr $end
$var wire 1 e' IDEX_memWrite $end
$var wire 1 f' IDEX_memRead $end
$var wire 1 g' IDEX_MemToReg $end
$var wire 1 h' IDEX_slbi $end
$var wire 1 i' IDEX_lbi $end
$var wire 1 j' IDEX_seq $end
$var wire 1 k' IDEX_sl $end
$var wire 1 l' IDEX_sco $end
$var wire 1 m' IDEX_ror $end
$var wire 1 5) flush $end
$var wire 1 6) stall $end

$scope module IDEX_Rs_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 X5 en $end
$var wire 1 0" D [2] $end
$var wire 1 1" D [1] $end
$var wire 1 2" D [0] $end
$var wire 1 n& Q [2] $end
$var wire 1 o& Q [1] $end
$var wire 1 p& Q [0] $end
$var wire 1 Y5 in [2] $end
$var wire 1 Z5 in [1] $end
$var wire 1 [5 in [0] $end
$var wire 1 \5 out [2] $end
$var wire 1 ]5 out [1] $end
$var wire 1 ^5 out [0] $end

$scope module dff_0 $end
$var wire 1 ^5 q $end
$var wire 1 [5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _5 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ]5 q $end
$var wire 1 Z5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `5 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 \5 q $end
$var wire 1 Y5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 a5 state $end
$upscope $end
$upscope $end

$scope module IDEX_Rt_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 b5 en $end
$var wire 1 3" D [2] $end
$var wire 1 4" D [1] $end
$var wire 1 5" D [0] $end
$var wire 1 q& Q [2] $end
$var wire 1 r& Q [1] $end
$var wire 1 s& Q [0] $end
$var wire 1 c5 in [2] $end
$var wire 1 d5 in [1] $end
$var wire 1 e5 in [0] $end
$var wire 1 f5 out [2] $end
$var wire 1 g5 out [1] $end
$var wire 1 h5 out [0] $end

$scope module dff_0 $end
$var wire 1 h5 q $end
$var wire 1 e5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 i5 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 g5 q $end
$var wire 1 d5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 j5 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 f5 q $end
$var wire 1 c5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 k5 state $end
$upscope $end
$upscope $end

$scope module IDEX_Rd_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 l5 en $end
$var wire 1 9" D [2] $end
$var wire 1 :" D [1] $end
$var wire 1 ;" D [0] $end
$var wire 1 t& Q [2] $end
$var wire 1 u& Q [1] $end
$var wire 1 v& Q [0] $end
$var wire 1 m5 in [2] $end
$var wire 1 n5 in [1] $end
$var wire 1 o5 in [0] $end
$var wire 1 p5 out [2] $end
$var wire 1 q5 out [1] $end
$var wire 1 r5 out [0] $end

$scope module dff_0 $end
$var wire 1 r5 q $end
$var wire 1 o5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 s5 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 q5 q $end
$var wire 1 n5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 t5 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 p5 q $end
$var wire 1 m5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 u5 state $end
$upscope $end
$upscope $end

$scope module IDEX_ALUop_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 v5 en $end
$var wire 1 <" D [2] $end
$var wire 1 =" D [1] $end
$var wire 1 >" D [0] $end
$var wire 1 w& Q [2] $end
$var wire 1 x& Q [1] $end
$var wire 1 y& Q [0] $end
$var wire 1 w5 in [2] $end
$var wire 1 x5 in [1] $end
$var wire 1 y5 in [0] $end
$var wire 1 z5 out [2] $end
$var wire 1 {5 out [1] $end
$var wire 1 |5 out [0] $end

$scope module dff_0 $end
$var wire 1 |5 q $end
$var wire 1 y5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }5 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 {5 q $end
$var wire 1 x5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~5 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 z5 q $end
$var wire 1 w5 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !6 state $end
$upscope $end
$upscope $end

$scope module IDEX_branchCtl_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 "6 en $end
$var wire 1 ?" D [2] $end
$var wire 1 @" D [1] $end
$var wire 1 A" D [0] $end
$var wire 1 z& Q [2] $end
$var wire 1 {& Q [1] $end
$var wire 1 |& Q [0] $end
$var wire 1 #6 in [2] $end
$var wire 1 $6 in [1] $end
$var wire 1 %6 in [0] $end
$var wire 1 &6 out [2] $end
$var wire 1 '6 out [1] $end
$var wire 1 (6 out [0] $end

$scope module dff_0 $end
$var wire 1 (6 q $end
$var wire 1 %6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 )6 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 '6 q $end
$var wire 1 $6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *6 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 &6 q $end
$var wire 1 #6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +6 state $end
$upscope $end
$upscope $end

$scope module IDEX_jumpCtl_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 ,6 en $end
$var wire 1 B" D [2] $end
$var wire 1 C" D [1] $end
$var wire 1 D" D [0] $end
$var wire 1 }& Q [2] $end
$var wire 1 ~& Q [1] $end
$var wire 1 !' Q [0] $end
$var wire 1 -6 in [2] $end
$var wire 1 .6 in [1] $end
$var wire 1 /6 in [0] $end
$var wire 1 06 out [2] $end
$var wire 1 16 out [1] $end
$var wire 1 26 out [0] $end

$scope module dff_0 $end
$var wire 1 26 q $end
$var wire 1 /6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 36 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 16 q $end
$var wire 1 .6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 46 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 06 q $end
$var wire 1 -6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 56 state $end
$upscope $end
$upscope $end

$scope module IDEX_read1Data_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 66 en $end
$var wire 1 I$ D [15] $end
$var wire 1 J$ D [14] $end
$var wire 1 K$ D [13] $end
$var wire 1 L$ D [12] $end
$var wire 1 M$ D [11] $end
$var wire 1 N$ D [10] $end
$var wire 1 O$ D [9] $end
$var wire 1 P$ D [8] $end
$var wire 1 Q$ D [7] $end
$var wire 1 R$ D [6] $end
$var wire 1 S$ D [5] $end
$var wire 1 T$ D [4] $end
$var wire 1 U$ D [3] $end
$var wire 1 V$ D [2] $end
$var wire 1 W$ D [1] $end
$var wire 1 X$ D [0] $end
$var wire 1 "' Q [15] $end
$var wire 1 #' Q [14] $end
$var wire 1 $' Q [13] $end
$var wire 1 %' Q [12] $end
$var wire 1 &' Q [11] $end
$var wire 1 '' Q [10] $end
$var wire 1 (' Q [9] $end
$var wire 1 )' Q [8] $end
$var wire 1 *' Q [7] $end
$var wire 1 +' Q [6] $end
$var wire 1 ,' Q [5] $end
$var wire 1 -' Q [4] $end
$var wire 1 .' Q [3] $end
$var wire 1 /' Q [2] $end
$var wire 1 0' Q [1] $end
$var wire 1 1' Q [0] $end
$var wire 1 76 in [15] $end
$var wire 1 86 in [14] $end
$var wire 1 96 in [13] $end
$var wire 1 :6 in [12] $end
$var wire 1 ;6 in [11] $end
$var wire 1 <6 in [10] $end
$var wire 1 =6 in [9] $end
$var wire 1 >6 in [8] $end
$var wire 1 ?6 in [7] $end
$var wire 1 @6 in [6] $end
$var wire 1 A6 in [5] $end
$var wire 1 B6 in [4] $end
$var wire 1 C6 in [3] $end
$var wire 1 D6 in [2] $end
$var wire 1 E6 in [1] $end
$var wire 1 F6 in [0] $end
$var wire 1 G6 out [15] $end
$var wire 1 H6 out [14] $end
$var wire 1 I6 out [13] $end
$var wire 1 J6 out [12] $end
$var wire 1 K6 out [11] $end
$var wire 1 L6 out [10] $end
$var wire 1 M6 out [9] $end
$var wire 1 N6 out [8] $end
$var wire 1 O6 out [7] $end
$var wire 1 P6 out [6] $end
$var wire 1 Q6 out [5] $end
$var wire 1 R6 out [4] $end
$var wire 1 S6 out [3] $end
$var wire 1 T6 out [2] $end
$var wire 1 U6 out [1] $end
$var wire 1 V6 out [0] $end

$scope module dff_0 $end
$var wire 1 V6 q $end
$var wire 1 F6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 W6 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 U6 q $end
$var wire 1 E6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 X6 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 T6 q $end
$var wire 1 D6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Y6 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 S6 q $end
$var wire 1 C6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 Z6 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 R6 q $end
$var wire 1 B6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [6 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 Q6 q $end
$var wire 1 A6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \6 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 P6 q $end
$var wire 1 @6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ]6 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 O6 q $end
$var wire 1 ?6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ^6 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 N6 q $end
$var wire 1 >6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _6 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 M6 q $end
$var wire 1 =6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `6 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 L6 q $end
$var wire 1 <6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 a6 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 K6 q $end
$var wire 1 ;6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 b6 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 J6 q $end
$var wire 1 :6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 c6 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 I6 q $end
$var wire 1 96 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 d6 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 H6 q $end
$var wire 1 86 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 e6 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 G6 q $end
$var wire 1 76 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 f6 state $end
$upscope $end
$upscope $end

$scope module IDEX_read2Data_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 g6 en $end
$var wire 1 Y$ D [15] $end
$var wire 1 Z$ D [14] $end
$var wire 1 [$ D [13] $end
$var wire 1 \$ D [12] $end
$var wire 1 ]$ D [11] $end
$var wire 1 ^$ D [10] $end
$var wire 1 _$ D [9] $end
$var wire 1 `$ D [8] $end
$var wire 1 a$ D [7] $end
$var wire 1 b$ D [6] $end
$var wire 1 c$ D [5] $end
$var wire 1 d$ D [4] $end
$var wire 1 e$ D [3] $end
$var wire 1 f$ D [2] $end
$var wire 1 g$ D [1] $end
$var wire 1 h$ D [0] $end
$var wire 1 2' Q [15] $end
$var wire 1 3' Q [14] $end
$var wire 1 4' Q [13] $end
$var wire 1 5' Q [12] $end
$var wire 1 6' Q [11] $end
$var wire 1 7' Q [10] $end
$var wire 1 8' Q [9] $end
$var wire 1 9' Q [8] $end
$var wire 1 :' Q [7] $end
$var wire 1 ;' Q [6] $end
$var wire 1 <' Q [5] $end
$var wire 1 =' Q [4] $end
$var wire 1 >' Q [3] $end
$var wire 1 ?' Q [2] $end
$var wire 1 @' Q [1] $end
$var wire 1 A' Q [0] $end
$var wire 1 h6 in [15] $end
$var wire 1 i6 in [14] $end
$var wire 1 j6 in [13] $end
$var wire 1 k6 in [12] $end
$var wire 1 l6 in [11] $end
$var wire 1 m6 in [10] $end
$var wire 1 n6 in [9] $end
$var wire 1 o6 in [8] $end
$var wire 1 p6 in [7] $end
$var wire 1 q6 in [6] $end
$var wire 1 r6 in [5] $end
$var wire 1 s6 in [4] $end
$var wire 1 t6 in [3] $end
$var wire 1 u6 in [2] $end
$var wire 1 v6 in [1] $end
$var wire 1 w6 in [0] $end
$var wire 1 x6 out [15] $end
$var wire 1 y6 out [14] $end
$var wire 1 z6 out [13] $end
$var wire 1 {6 out [12] $end
$var wire 1 |6 out [11] $end
$var wire 1 }6 out [10] $end
$var wire 1 ~6 out [9] $end
$var wire 1 !7 out [8] $end
$var wire 1 "7 out [7] $end
$var wire 1 #7 out [6] $end
$var wire 1 $7 out [5] $end
$var wire 1 %7 out [4] $end
$var wire 1 &7 out [3] $end
$var wire 1 '7 out [2] $end
$var wire 1 (7 out [1] $end
$var wire 1 )7 out [0] $end

$scope module dff_0 $end
$var wire 1 )7 q $end
$var wire 1 w6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *7 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 (7 q $end
$var wire 1 v6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +7 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 '7 q $end
$var wire 1 u6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ,7 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 &7 q $end
$var wire 1 t6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 -7 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 %7 q $end
$var wire 1 s6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 .7 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 $7 q $end
$var wire 1 r6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 /7 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 #7 q $end
$var wire 1 q6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 07 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 "7 q $end
$var wire 1 p6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 17 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 !7 q $end
$var wire 1 o6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 27 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ~6 q $end
$var wire 1 n6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 37 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 }6 q $end
$var wire 1 m6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 47 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 |6 q $end
$var wire 1 l6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 57 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 {6 q $end
$var wire 1 k6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 67 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 z6 q $end
$var wire 1 j6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 77 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 y6 q $end
$var wire 1 i6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 87 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 x6 q $end
$var wire 1 h6 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 97 state $end
$upscope $end
$upscope $end

$scope module IDEX_exImmVal_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 :7 en $end
$var wire 1 I5 D [15] $end
$var wire 1 J5 D [14] $end
$var wire 1 K5 D [13] $end
$var wire 1 L5 D [12] $end
$var wire 1 M5 D [11] $end
$var wire 1 N5 D [10] $end
$var wire 1 O5 D [9] $end
$var wire 1 P5 D [8] $end
$var wire 1 Q5 D [7] $end
$var wire 1 R5 D [6] $end
$var wire 1 S5 D [5] $end
$var wire 1 T5 D [4] $end
$var wire 1 U5 D [3] $end
$var wire 1 V5 D [2] $end
$var wire 1 W5 D [1] $end
$var wire 1 8) D [0] $end
$var wire 1 B' Q [15] $end
$var wire 1 C' Q [14] $end
$var wire 1 D' Q [13] $end
$var wire 1 E' Q [12] $end
$var wire 1 F' Q [11] $end
$var wire 1 G' Q [10] $end
$var wire 1 H' Q [9] $end
$var wire 1 I' Q [8] $end
$var wire 1 J' Q [7] $end
$var wire 1 K' Q [6] $end
$var wire 1 L' Q [5] $end
$var wire 1 M' Q [4] $end
$var wire 1 N' Q [3] $end
$var wire 1 O' Q [2] $end
$var wire 1 P' Q [1] $end
$var wire 1 Q' Q [0] $end
$var wire 1 ;7 in [15] $end
$var wire 1 <7 in [14] $end
$var wire 1 =7 in [13] $end
$var wire 1 >7 in [12] $end
$var wire 1 ?7 in [11] $end
$var wire 1 @7 in [10] $end
$var wire 1 A7 in [9] $end
$var wire 1 B7 in [8] $end
$var wire 1 C7 in [7] $end
$var wire 1 D7 in [6] $end
$var wire 1 E7 in [5] $end
$var wire 1 F7 in [4] $end
$var wire 1 G7 in [3] $end
$var wire 1 H7 in [2] $end
$var wire 1 I7 in [1] $end
$var wire 1 J7 in [0] $end
$var wire 1 K7 out [15] $end
$var wire 1 L7 out [14] $end
$var wire 1 M7 out [13] $end
$var wire 1 N7 out [12] $end
$var wire 1 O7 out [11] $end
$var wire 1 P7 out [10] $end
$var wire 1 Q7 out [9] $end
$var wire 1 R7 out [8] $end
$var wire 1 S7 out [7] $end
$var wire 1 T7 out [6] $end
$var wire 1 U7 out [5] $end
$var wire 1 V7 out [4] $end
$var wire 1 W7 out [3] $end
$var wire 1 X7 out [2] $end
$var wire 1 Y7 out [1] $end
$var wire 1 Z7 out [0] $end

$scope module dff_0 $end
$var wire 1 Z7 q $end
$var wire 1 J7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [7 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 Y7 q $end
$var wire 1 I7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \7 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 X7 q $end
$var wire 1 H7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ]7 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 W7 q $end
$var wire 1 G7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ^7 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 V7 q $end
$var wire 1 F7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _7 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 U7 q $end
$var wire 1 E7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `7 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 T7 q $end
$var wire 1 D7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 a7 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 S7 q $end
$var wire 1 C7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 b7 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 R7 q $end
$var wire 1 B7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 c7 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 Q7 q $end
$var wire 1 A7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 d7 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 P7 q $end
$var wire 1 @7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 e7 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 O7 q $end
$var wire 1 ?7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 f7 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 N7 q $end
$var wire 1 >7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 g7 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 M7 q $end
$var wire 1 =7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 h7 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 L7 q $end
$var wire 1 <7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 i7 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 K7 q $end
$var wire 1 ;7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 j7 state $end
$upscope $end
$upscope $end

$scope module IDEX_PC_inc_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 k7 en $end
$var wire 1 N& D [15] $end
$var wire 1 O& D [14] $end
$var wire 1 P& D [13] $end
$var wire 1 Q& D [12] $end
$var wire 1 R& D [11] $end
$var wire 1 S& D [10] $end
$var wire 1 T& D [9] $end
$var wire 1 U& D [8] $end
$var wire 1 V& D [7] $end
$var wire 1 W& D [6] $end
$var wire 1 X& D [5] $end
$var wire 1 Y& D [4] $end
$var wire 1 Z& D [3] $end
$var wire 1 [& D [2] $end
$var wire 1 \& D [1] $end
$var wire 1 ]& D [0] $end
$var wire 1 R' Q [15] $end
$var wire 1 S' Q [14] $end
$var wire 1 T' Q [13] $end
$var wire 1 U' Q [12] $end
$var wire 1 V' Q [11] $end
$var wire 1 W' Q [10] $end
$var wire 1 X' Q [9] $end
$var wire 1 Y' Q [8] $end
$var wire 1 Z' Q [7] $end
$var wire 1 [' Q [6] $end
$var wire 1 \' Q [5] $end
$var wire 1 ]' Q [4] $end
$var wire 1 ^' Q [3] $end
$var wire 1 _' Q [2] $end
$var wire 1 `' Q [1] $end
$var wire 1 a' Q [0] $end
$var wire 1 l7 in [15] $end
$var wire 1 m7 in [14] $end
$var wire 1 n7 in [13] $end
$var wire 1 o7 in [12] $end
$var wire 1 p7 in [11] $end
$var wire 1 q7 in [10] $end
$var wire 1 r7 in [9] $end
$var wire 1 s7 in [8] $end
$var wire 1 t7 in [7] $end
$var wire 1 u7 in [6] $end
$var wire 1 v7 in [5] $end
$var wire 1 w7 in [4] $end
$var wire 1 x7 in [3] $end
$var wire 1 y7 in [2] $end
$var wire 1 z7 in [1] $end
$var wire 1 {7 in [0] $end
$var wire 1 |7 out [15] $end
$var wire 1 }7 out [14] $end
$var wire 1 ~7 out [13] $end
$var wire 1 !8 out [12] $end
$var wire 1 "8 out [11] $end
$var wire 1 #8 out [10] $end
$var wire 1 $8 out [9] $end
$var wire 1 %8 out [8] $end
$var wire 1 &8 out [7] $end
$var wire 1 '8 out [6] $end
$var wire 1 (8 out [5] $end
$var wire 1 )8 out [4] $end
$var wire 1 *8 out [3] $end
$var wire 1 +8 out [2] $end
$var wire 1 ,8 out [1] $end
$var wire 1 -8 out [0] $end

$scope module dff_0 $end
$var wire 1 -8 q $end
$var wire 1 {7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 .8 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ,8 q $end
$var wire 1 z7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 /8 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 +8 q $end
$var wire 1 y7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 08 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 *8 q $end
$var wire 1 x7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 18 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 )8 q $end
$var wire 1 w7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 28 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 (8 q $end
$var wire 1 v7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 38 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 '8 q $end
$var wire 1 u7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 48 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 &8 q $end
$var wire 1 t7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 58 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 %8 q $end
$var wire 1 s7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 68 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 $8 q $end
$var wire 1 r7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 78 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 #8 q $end
$var wire 1 q7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 88 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 "8 q $end
$var wire 1 p7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 98 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 !8 q $end
$var wire 1 o7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 :8 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 ~7 q $end
$var wire 1 n7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ;8 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 }7 q $end
$var wire 1 m7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 <8 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 |7 q $end
$var wire 1 l7 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 =8 state $end
$upscope $end
$upscope $end

$scope module IDEX_PC_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 >8 en $end
$var wire 1 k% D [15] $end
$var wire 1 l% D [14] $end
$var wire 1 m% D [13] $end
$var wire 1 n% D [12] $end
$var wire 1 o% D [11] $end
$var wire 1 p% D [10] $end
$var wire 1 q% D [9] $end
$var wire 1 r% D [8] $end
$var wire 1 s% D [7] $end
$var wire 1 t% D [6] $end
$var wire 1 u% D [5] $end
$var wire 1 v% D [4] $end
$var wire 1 w% D [3] $end
$var wire 1 x% D [2] $end
$var wire 1 y% D [1] $end
$var wire 1 z% D [0] $end
$var wire 1 {% Q [15] $end
$var wire 1 |% Q [14] $end
$var wire 1 }% Q [13] $end
$var wire 1 ~% Q [12] $end
$var wire 1 !& Q [11] $end
$var wire 1 "& Q [10] $end
$var wire 1 #& Q [9] $end
$var wire 1 $& Q [8] $end
$var wire 1 %& Q [7] $end
$var wire 1 && Q [6] $end
$var wire 1 '& Q [5] $end
$var wire 1 (& Q [4] $end
$var wire 1 )& Q [3] $end
$var wire 1 *& Q [2] $end
$var wire 1 +& Q [1] $end
$var wire 1 ,& Q [0] $end
$var wire 1 ?8 in [15] $end
$var wire 1 @8 in [14] $end
$var wire 1 A8 in [13] $end
$var wire 1 B8 in [12] $end
$var wire 1 C8 in [11] $end
$var wire 1 D8 in [10] $end
$var wire 1 E8 in [9] $end
$var wire 1 F8 in [8] $end
$var wire 1 G8 in [7] $end
$var wire 1 H8 in [6] $end
$var wire 1 I8 in [5] $end
$var wire 1 J8 in [4] $end
$var wire 1 K8 in [3] $end
$var wire 1 L8 in [2] $end
$var wire 1 M8 in [1] $end
$var wire 1 N8 in [0] $end
$var wire 1 O8 out [15] $end
$var wire 1 P8 out [14] $end
$var wire 1 Q8 out [13] $end
$var wire 1 R8 out [12] $end
$var wire 1 S8 out [11] $end
$var wire 1 T8 out [10] $end
$var wire 1 U8 out [9] $end
$var wire 1 V8 out [8] $end
$var wire 1 W8 out [7] $end
$var wire 1 X8 out [6] $end
$var wire 1 Y8 out [5] $end
$var wire 1 Z8 out [4] $end
$var wire 1 [8 out [3] $end
$var wire 1 \8 out [2] $end
$var wire 1 ]8 out [1] $end
$var wire 1 ^8 out [0] $end

$scope module dff_0 $end
$var wire 1 ^8 q $end
$var wire 1 N8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _8 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ]8 q $end
$var wire 1 M8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `8 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 \8 q $end
$var wire 1 L8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 a8 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 [8 q $end
$var wire 1 K8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 b8 state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 Z8 q $end
$var wire 1 J8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 c8 state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 Y8 q $end
$var wire 1 I8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 d8 state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 X8 q $end
$var wire 1 H8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 e8 state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 W8 q $end
$var wire 1 G8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 f8 state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 V8 q $end
$var wire 1 F8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 g8 state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 U8 q $end
$var wire 1 E8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 h8 state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 T8 q $end
$var wire 1 D8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 i8 state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 S8 q $end
$var wire 1 C8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 j8 state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 R8 q $end
$var wire 1 B8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 k8 state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 Q8 q $end
$var wire 1 A8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 l8 state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 P8 q $end
$var wire 1 @8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 m8 state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 O8 q $end
$var wire 1 ?8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 n8 state $end
$upscope $end
$upscope $end

$scope module IDEX_regWrite_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 o8 en $end
$var wire 1 |! D $end
$var wire 1 b' Q $end
$var wire 1 p8 in $end
$var wire 1 q8 out $end

$scope module dff_0 $end
$var wire 1 q8 q $end
$var wire 1 p8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 r8 state $end
$upscope $end
$upscope $end

$scope module IDEX_aluSrc_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 s8 en $end
$var wire 1 ~! D $end
$var wire 1 c' Q $end
$var wire 1 t8 in $end
$var wire 1 u8 out $end

$scope module dff_0 $end
$var wire 1 u8 q $end
$var wire 1 t8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 v8 state $end
$upscope $end
$upscope $end

$scope module IDEX_btr_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 w8 en $end
$var wire 1 }! D $end
$var wire 1 d' Q $end
$var wire 1 x8 in $end
$var wire 1 y8 out $end

$scope module dff_0 $end
$var wire 1 y8 q $end
$var wire 1 x8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 z8 state $end
$upscope $end
$upscope $end

$scope module IDEX_memWrite_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 {8 en $end
$var wire 1 !" D $end
$var wire 1 e' Q $end
$var wire 1 |8 in $end
$var wire 1 }8 out $end

$scope module dff_0 $end
$var wire 1 }8 q $end
$var wire 1 |8 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~8 state $end
$upscope $end
$upscope $end

$scope module IDEX_memRead_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 !9 en $end
$var wire 1 "" D $end
$var wire 1 f' Q $end
$var wire 1 "9 in $end
$var wire 1 #9 out $end

$scope module dff_0 $end
$var wire 1 #9 q $end
$var wire 1 "9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 $9 state $end
$upscope $end
$upscope $end

$scope module IDEX_MemToReg_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 %9 en $end
$var wire 1 9) D $end
$var wire 1 g' Q $end
$var wire 1 &9 in $end
$var wire 1 '9 out $end

$scope module dff_0 $end
$var wire 1 '9 q $end
$var wire 1 &9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 (9 state $end
$upscope $end
$upscope $end

$scope module IDEX_slbi_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 )9 en $end
$var wire 1 &" D $end
$var wire 1 h' Q $end
$var wire 1 *9 in $end
$var wire 1 +9 out $end

$scope module dff_0 $end
$var wire 1 +9 q $end
$var wire 1 *9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ,9 state $end
$upscope $end
$upscope $end

$scope module IDEX_lbi_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 -9 en $end
$var wire 1 (" D $end
$var wire 1 i' Q $end
$var wire 1 .9 in $end
$var wire 1 /9 out $end

$scope module dff_0 $end
$var wire 1 /9 q $end
$var wire 1 .9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 09 state $end
$upscope $end
$upscope $end

$scope module IDEX_seq_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 19 en $end
$var wire 1 ." D $end
$var wire 1 j' Q $end
$var wire 1 29 in $end
$var wire 1 39 out $end

$scope module dff_0 $end
$var wire 1 39 q $end
$var wire 1 29 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 49 state $end
$upscope $end
$upscope $end

$scope module IDEX_sl_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 59 en $end
$var wire 1 ," D $end
$var wire 1 k' Q $end
$var wire 1 69 in $end
$var wire 1 79 out $end

$scope module dff_0 $end
$var wire 1 79 q $end
$var wire 1 69 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 89 state $end
$upscope $end
$upscope $end

$scope module IDEX_sco_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 99 en $end
$var wire 1 -" D $end
$var wire 1 l' Q $end
$var wire 1 :9 in $end
$var wire 1 ;9 out $end

$scope module dff_0 $end
$var wire 1 ;9 q $end
$var wire 1 :9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 <9 state $end
$upscope $end
$upscope $end

$scope module IDEX_ror_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 =9 en $end
$var wire 1 /" D $end
$var wire 1 m' Q $end
$var wire 1 >9 in $end
$var wire 1 ?9 out $end

$scope module dff_0 $end
$var wire 1 ?9 q $end
$var wire 1 >9 d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 @9 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module executeStage $end
$var wire 1 k' sl $end
$var wire 1 l' sco $end
$var wire 1 j' seq $end
$var wire 1 m' ror $end
$var wire 1 i' lbi $end
$var wire 1 h' slbi $end
$var wire 1 A9 invA $end
$var wire 1 B9 invB $end
$var wire 1 ~! aluSrc $end
$var wire 1 d' btr $end
$var wire 1 "' regData1 [15] $end
$var wire 1 #' regData1 [14] $end
$var wire 1 $' regData1 [13] $end
$var wire 1 %' regData1 [12] $end
$var wire 1 &' regData1 [11] $end
$var wire 1 '' regData1 [10] $end
$var wire 1 (' regData1 [9] $end
$var wire 1 )' regData1 [8] $end
$var wire 1 *' regData1 [7] $end
$var wire 1 +' regData1 [6] $end
$var wire 1 ,' regData1 [5] $end
$var wire 1 -' regData1 [4] $end
$var wire 1 .' regData1 [3] $end
$var wire 1 /' regData1 [2] $end
$var wire 1 0' regData1 [1] $end
$var wire 1 1' regData1 [0] $end
$var wire 1 2' regData2 [15] $end
$var wire 1 3' regData2 [14] $end
$var wire 1 4' regData2 [13] $end
$var wire 1 5' regData2 [12] $end
$var wire 1 6' regData2 [11] $end
$var wire 1 7' regData2 [10] $end
$var wire 1 8' regData2 [9] $end
$var wire 1 9' regData2 [8] $end
$var wire 1 :' regData2 [7] $end
$var wire 1 ;' regData2 [6] $end
$var wire 1 <' regData2 [5] $end
$var wire 1 =' regData2 [4] $end
$var wire 1 >' regData2 [3] $end
$var wire 1 ?' regData2 [2] $end
$var wire 1 @' regData2 [1] $end
$var wire 1 A' regData2 [0] $end
$var wire 1 B' immVal [15] $end
$var wire 1 C' immVal [14] $end
$var wire 1 D' immVal [13] $end
$var wire 1 E' immVal [12] $end
$var wire 1 F' immVal [11] $end
$var wire 1 G' immVal [10] $end
$var wire 1 H' immVal [9] $end
$var wire 1 I' immVal [8] $end
$var wire 1 J' immVal [7] $end
$var wire 1 K' immVal [6] $end
$var wire 1 L' immVal [5] $end
$var wire 1 M' immVal [4] $end
$var wire 1 N' immVal [3] $end
$var wire 1 O' immVal [2] $end
$var wire 1 P' immVal [1] $end
$var wire 1 Q' immVal [0] $end
$var wire 1 R' inc_pc [15] $end
$var wire 1 S' inc_pc [14] $end
$var wire 1 T' inc_pc [13] $end
$var wire 1 U' inc_pc [12] $end
$var wire 1 V' inc_pc [11] $end
$var wire 1 W' inc_pc [10] $end
$var wire 1 X' inc_pc [9] $end
$var wire 1 Y' inc_pc [8] $end
$var wire 1 Z' inc_pc [7] $end
$var wire 1 [' inc_pc [6] $end
$var wire 1 \' inc_pc [5] $end
$var wire 1 ]' inc_pc [4] $end
$var wire 1 ^' inc_pc [3] $end
$var wire 1 _' inc_pc [2] $end
$var wire 1 `' inc_pc [1] $end
$var wire 1 a' inc_pc [0] $end
$var wire 1 w& aluOp [2] $end
$var wire 1 x& aluOp [1] $end
$var wire 1 y& aluOp [0] $end
$var wire 1 }& jumpCtl [2] $end
$var wire 1 ~& jumpCtl [1] $end
$var wire 1 !' jumpCtl [0] $end
$var wire 1 z& branchCtl [2] $end
$var wire 1 {& branchCtl [1] $end
$var wire 1 |& branchCtl [0] $end
$var wire 1 C9 pc_add [15] $end
$var wire 1 D9 pc_add [14] $end
$var wire 1 E9 pc_add [13] $end
$var wire 1 F9 pc_add [12] $end
$var wire 1 G9 pc_add [11] $end
$var wire 1 H9 pc_add [10] $end
$var wire 1 I9 pc_add [9] $end
$var wire 1 J9 pc_add [8] $end
$var wire 1 K9 pc_add [7] $end
$var wire 1 L9 pc_add [6] $end
$var wire 1 M9 pc_add [5] $end
$var wire 1 N9 pc_add [4] $end
$var wire 1 O9 pc_add [3] $end
$var wire 1 P9 pc_add [2] $end
$var wire 1 Q9 pc_add [1] $end
$var wire 1 R9 pc_add [0] $end
$var wire 1 S9 InA [15] $end
$var wire 1 T9 InA [14] $end
$var wire 1 U9 InA [13] $end
$var wire 1 V9 InA [12] $end
$var wire 1 W9 InA [11] $end
$var wire 1 X9 InA [10] $end
$var wire 1 Y9 InA [9] $end
$var wire 1 Z9 InA [8] $end
$var wire 1 [9 InA [7] $end
$var wire 1 \9 InA [6] $end
$var wire 1 ]9 InA [5] $end
$var wire 1 ^9 InA [4] $end
$var wire 1 _9 InA [3] $end
$var wire 1 `9 InA [2] $end
$var wire 1 a9 InA [1] $end
$var wire 1 b9 InA [0] $end
$var wire 1 c9 inA [15] $end
$var wire 1 d9 inA [14] $end
$var wire 1 e9 inA [13] $end
$var wire 1 f9 inA [12] $end
$var wire 1 g9 inA [11] $end
$var wire 1 h9 inA [10] $end
$var wire 1 i9 inA [9] $end
$var wire 1 j9 inA [8] $end
$var wire 1 k9 inA [7] $end
$var wire 1 l9 inA [6] $end
$var wire 1 m9 inA [5] $end
$var wire 1 n9 inA [4] $end
$var wire 1 o9 inA [3] $end
$var wire 1 p9 inA [2] $end
$var wire 1 q9 inA [1] $end
$var wire 1 r9 inA [0] $end
$var wire 1 s9 InB [15] $end
$var wire 1 t9 InB [14] $end
$var wire 1 u9 InB [13] $end
$var wire 1 v9 InB [12] $end
$var wire 1 w9 InB [11] $end
$var wire 1 x9 InB [10] $end
$var wire 1 y9 InB [9] $end
$var wire 1 z9 InB [8] $end
$var wire 1 {9 InB [7] $end
$var wire 1 |9 InB [6] $end
$var wire 1 }9 InB [5] $end
$var wire 1 ~9 InB [4] $end
$var wire 1 !: InB [3] $end
$var wire 1 ": InB [2] $end
$var wire 1 #: InB [1] $end
$var wire 1 $: InB [0] $end
$var wire 1 %: inB [15] $end
$var wire 1 &: inB [14] $end
$var wire 1 ': inB [13] $end
$var wire 1 (: inB [12] $end
$var wire 1 ): inB [11] $end
$var wire 1 *: inB [10] $end
$var wire 1 +: inB [9] $end
$var wire 1 ,: inB [8] $end
$var wire 1 -: inB [7] $end
$var wire 1 .: inB [6] $end
$var wire 1 /: inB [5] $end
$var wire 1 0: inB [4] $end
$var wire 1 1: inB [3] $end
$var wire 1 2: inB [2] $end
$var wire 1 3: inB [1] $end
$var wire 1 4: inB [0] $end
$var wire 1 5: rotaterightbits [15] $end
$var wire 1 6: rotaterightbits [14] $end
$var wire 1 7: rotaterightbits [13] $end
$var wire 1 8: rotaterightbits [12] $end
$var wire 1 9: rotaterightbits [11] $end
$var wire 1 :: rotaterightbits [10] $end
$var wire 1 ;: rotaterightbits [9] $end
$var wire 1 <: rotaterightbits [8] $end
$var wire 1 =: rotaterightbits [7] $end
$var wire 1 >: rotaterightbits [6] $end
$var wire 1 ?: rotaterightbits [5] $end
$var wire 1 @: rotaterightbits [4] $end
$var wire 1 A: rotaterightbits [3] $end
$var wire 1 B: rotaterightbits [2] $end
$var wire 1 C: rotaterightbits [1] $end
$var wire 1 D: rotaterightbits [0] $end
$var wire 1 E: immValShifted [15] $end
$var wire 1 F: immValShifted [14] $end
$var wire 1 G: immValShifted [13] $end
$var wire 1 H: immValShifted [12] $end
$var wire 1 I: immValShifted [11] $end
$var wire 1 J: immValShifted [10] $end
$var wire 1 K: immValShifted [9] $end
$var wire 1 L: immValShifted [8] $end
$var wire 1 M: immValShifted [7] $end
$var wire 1 N: immValShifted [6] $end
$var wire 1 O: immValShifted [5] $end
$var wire 1 P: immValShifted [4] $end
$var wire 1 Q: immValShifted [3] $end
$var wire 1 R: immValShifted [2] $end
$var wire 1 S: immValShifted [1] $end
$var wire 1 T: immValShifted [0] $end
$var wire 1 U: jumpValSigned [15] $end
$var wire 1 V: jumpValSigned [14] $end
$var wire 1 W: jumpValSigned [13] $end
$var wire 1 X: jumpValSigned [12] $end
$var wire 1 Y: jumpValSigned [11] $end
$var wire 1 Z: jumpValSigned [10] $end
$var wire 1 [: jumpValSigned [9] $end
$var wire 1 \: jumpValSigned [8] $end
$var wire 1 ]: jumpValSigned [7] $end
$var wire 1 ^: jumpValSigned [6] $end
$var wire 1 _: jumpValSigned [5] $end
$var wire 1 `: jumpValSigned [4] $end
$var wire 1 a: jumpValSigned [3] $end
$var wire 1 b: jumpValSigned [2] $end
$var wire 1 c: jumpValSigned [1] $end
$var wire 1 d: jumpValSigned [0] $end
$var wire 1 e: branchValSigned [15] $end
$var wire 1 f: branchValSigned [14] $end
$var wire 1 g: branchValSigned [13] $end
$var wire 1 h: branchValSigned [12] $end
$var wire 1 i: branchValSigned [11] $end
$var wire 1 j: branchValSigned [10] $end
$var wire 1 k: branchValSigned [9] $end
$var wire 1 l: branchValSigned [8] $end
$var wire 1 m: branchValSigned [7] $end
$var wire 1 n: branchValSigned [6] $end
$var wire 1 o: branchValSigned [5] $end
$var wire 1 p: branchValSigned [4] $end
$var wire 1 q: branchValSigned [3] $end
$var wire 1 r: branchValSigned [2] $end
$var wire 1 s: branchValSigned [1] $end
$var wire 1 t: branchValSigned [0] $end
$var wire 1 u: aluOut [15] $end
$var wire 1 v: aluOut [14] $end
$var wire 1 w: aluOut [13] $end
$var wire 1 x: aluOut [12] $end
$var wire 1 y: aluOut [11] $end
$var wire 1 z: aluOut [10] $end
$var wire 1 {: aluOut [9] $end
$var wire 1 |: aluOut [8] $end
$var wire 1 }: aluOut [7] $end
$var wire 1 ~: aluOut [6] $end
$var wire 1 !; aluOut [5] $end
$var wire 1 "; aluOut [4] $end
$var wire 1 #; aluOut [3] $end
$var wire 1 $; aluOut [2] $end
$var wire 1 %; aluOut [1] $end
$var wire 1 &; aluOut [0] $end
$var wire 1 '; setOut [15] $end
$var wire 1 (; setOut [14] $end
$var wire 1 ); setOut [13] $end
$var wire 1 *; setOut [12] $end
$var wire 1 +; setOut [11] $end
$var wire 1 ,; setOut [10] $end
$var wire 1 -; setOut [9] $end
$var wire 1 .; setOut [8] $end
$var wire 1 /; setOut [7] $end
$var wire 1 0; setOut [6] $end
$var wire 1 1; setOut [5] $end
$var wire 1 2; setOut [4] $end
$var wire 1 3; setOut [3] $end
$var wire 1 4; setOut [2] $end
$var wire 1 5; setOut [1] $end
$var wire 1 6; setOut [0] $end
$var wire 1 7; opCode [2] $end
$var wire 1 8; opCode [1] $end
$var wire 1 9; opCode [0] $end
$var wire 1 :; sign $end
$var wire 1 ;; setOutput $end
$var wire 1 <; cout $end
$var wire 1 =; Cin $end
$var wire 1 >; sltresult $end
$var wire 1 ?; sleresult $end
$var wire 1 @; branch $end
$var wire 1 g# Out [15] $end
$var wire 1 h# Out [14] $end
$var wire 1 i# Out [13] $end
$var wire 1 j# Out [12] $end
$var wire 1 k# Out [11] $end
$var wire 1 l# Out [10] $end
$var wire 1 m# Out [9] $end
$var wire 1 n# Out [8] $end
$var wire 1 o# Out [7] $end
$var wire 1 p# Out [6] $end
$var wire 1 q# Out [5] $end
$var wire 1 r# Out [4] $end
$var wire 1 s# Out [3] $end
$var wire 1 t# Out [2] $end
$var wire 1 u# Out [1] $end
$var wire 1 v# Out [0] $end
$var wire 1 [% new_pc [15] $end
$var wire 1 \% new_pc [14] $end
$var wire 1 ]% new_pc [13] $end
$var wire 1 ^% new_pc [12] $end
$var wire 1 _% new_pc [11] $end
$var wire 1 `% new_pc [10] $end
$var wire 1 a% new_pc [9] $end
$var wire 1 b% new_pc [8] $end
$var wire 1 c% new_pc [7] $end
$var wire 1 d% new_pc [6] $end
$var wire 1 e% new_pc [5] $end
$var wire 1 f% new_pc [4] $end
$var wire 1 g% new_pc [3] $end
$var wire 1 h% new_pc [2] $end
$var wire 1 i% new_pc [1] $end
$var wire 1 j% new_pc [0] $end
$var wire 1 A; Zero $end
$var wire 1 B; Ofl $end
$var wire 1 *" PCsrc $end
$var wire 1 C; beqz $end
$var wire 1 D; bnez $end
$var wire 1 E; bltz $end
$var wire 1 F; bgez $end

$scope module rightrotatebits $end
$var parameter 32 G; N $end
$var wire 1 H; A [15] $end
$var wire 1 I; A [14] $end
$var wire 1 J; A [13] $end
$var wire 1 K; A [12] $end
$var wire 1 L; A [11] $end
$var wire 1 M; A [10] $end
$var wire 1 N; A [9] $end
$var wire 1 O; A [8] $end
$var wire 1 P; A [7] $end
$var wire 1 Q; A [6] $end
$var wire 1 R; A [5] $end
$var wire 1 S; A [4] $end
$var wire 1 T; A [3] $end
$var wire 1 U; A [2] $end
$var wire 1 V; A [1] $end
$var wire 1 W; A [0] $end
$var wire 1 X; B [15] $end
$var wire 1 Y; B [14] $end
$var wire 1 Z; B [13] $end
$var wire 1 [; B [12] $end
$var wire 1 \; B [11] $end
$var wire 1 ]; B [10] $end
$var wire 1 ^; B [9] $end
$var wire 1 _; B [8] $end
$var wire 1 `; B [7] $end
$var wire 1 a; B [6] $end
$var wire 1 b; B [5] $end
$var wire 1 c; B [4] $end
$var wire 1 d; B [3] $end
$var wire 1 e; B [2] $end
$var wire 1 f; B [1] $end
$var wire 1 g; B [0] $end
$var wire 1 h; C_in $end
$var wire 1 5: S [15] $end
$var wire 1 6: S [14] $end
$var wire 1 7: S [13] $end
$var wire 1 8: S [12] $end
$var wire 1 9: S [11] $end
$var wire 1 :: S [10] $end
$var wire 1 ;: S [9] $end
$var wire 1 <: S [8] $end
$var wire 1 =: S [7] $end
$var wire 1 >: S [6] $end
$var wire 1 ?: S [5] $end
$var wire 1 @: S [4] $end
$var wire 1 A: S [3] $end
$var wire 1 B: S [2] $end
$var wire 1 C: S [1] $end
$var wire 1 D: S [0] $end
$var wire 1 i; C_out $end
$var wire 1 j; C0 $end
$var wire 1 k; C1 $end
$var wire 1 l; C2 $end
$var wire 1 m; P0 $end
$var wire 1 n; P0_bar $end
$var wire 1 o; P1 $end
$var wire 1 p; P1_bar $end
$var wire 1 q; P2 $end
$var wire 1 r; P2_bar $end
$var wire 1 s; P3 $end
$var wire 1 t; P3_bar $end
$var wire 1 u; G0 $end
$var wire 1 v; G0_bar $end
$var wire 1 w; G1 $end
$var wire 1 x; G1_bar $end
$var wire 1 y; G2 $end
$var wire 1 z; G2_bar $end
$var wire 1 {; G3 $end
$var wire 1 |; G3_bar $end
$var wire 1 }; nand2_c0_0_out $end
$var wire 1 ~; nand2_c1_0_out $end
$var wire 1 !< nand2_c2_0_out $end
$var wire 1 "< nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 #< N $end
$var wire 1 T; A [3] $end
$var wire 1 U; A [2] $end
$var wire 1 V; A [1] $end
$var wire 1 W; A [0] $end
$var wire 1 d; B [3] $end
$var wire 1 e; B [2] $end
$var wire 1 f; B [1] $end
$var wire 1 g; B [0] $end
$var wire 1 h; C_in $end
$var wire 1 A: S [3] $end
$var wire 1 B: S [2] $end
$var wire 1 C: S [1] $end
$var wire 1 D: S [0] $end
$var wire 1 m; P $end
$var wire 1 u; G $end
$var wire 1 $< C_out $end
$var wire 1 %< c0 $end
$var wire 1 &< c1 $end
$var wire 1 '< c2 $end
$var wire 1 (< p0 $end
$var wire 1 )< g0 $end
$var wire 1 *< p1 $end
$var wire 1 +< g1 $end
$var wire 1 ,< p2 $end
$var wire 1 -< g2 $end
$var wire 1 .< p3 $end
$var wire 1 /< g3 $end
$var wire 1 0< g0_bar $end
$var wire 1 1< g1_bar $end
$var wire 1 2< g2_bar $end
$var wire 1 3< g3_bar $end
$var wire 1 4< nand2_c0_0_out $end
$var wire 1 5< nand2_c1_0_out $end
$var wire 1 6< nand2_c2_0_out $end
$var wire 1 7< nand2_c3_0_out $end
$var wire 1 8< nand2_p3_p2 $end
$var wire 1 9< nand2_p1_p0 $end
$var wire 1 :< nand2_p3g2_out $end
$var wire 1 ;< nand2_p3p2g1_out $end
$var wire 1 << nand3_G_0_out $end
$var wire 1 =< nand2_p1g0_out $end
$var wire 1 >< nor2_G_0_out $end
$var wire 1 ?< G_bar $end

$scope module not1_c0_0 $end
$var wire 1 )< in1 $end
$var wire 1 0< out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 (< in1 $end
$var wire 1 h; in2 $end
$var wire 1 4< out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 0< in1 $end
$var wire 1 4< in2 $end
$var wire 1 %< out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 +< in1 $end
$var wire 1 1< out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 *< in1 $end
$var wire 1 %< in2 $end
$var wire 1 5< out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 1< in1 $end
$var wire 1 5< in2 $end
$var wire 1 &< out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 -< in1 $end
$var wire 1 2< out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 ,< in1 $end
$var wire 1 &< in2 $end
$var wire 1 6< out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 2< in1 $end
$var wire 1 6< in2 $end
$var wire 1 '< out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 /< in1 $end
$var wire 1 3< out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 .< in1 $end
$var wire 1 '< in2 $end
$var wire 1 7< out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 3< in1 $end
$var wire 1 7< in2 $end
$var wire 1 $< out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 .< in1 $end
$var wire 1 ,< in2 $end
$var wire 1 8< out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 *< in1 $end
$var wire 1 (< in2 $end
$var wire 1 9< out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 8< in1 $end
$var wire 1 9< in2 $end
$var wire 1 m; out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 .< in1 $end
$var wire 1 -< in2 $end
$var wire 1 :< out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 .< in1 $end
$var wire 1 ,< in2 $end
$var wire 1 +< in3 $end
$var wire 1 ;< out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 3< in1 $end
$var wire 1 :< in2 $end
$var wire 1 ;< in3 $end
$var wire 1 << out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 *< in1 $end
$var wire 1 )< in2 $end
$var wire 1 =< out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 8< in1 $end
$var wire 1 =< in2 $end
$var wire 1 >< out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 << in1 $end
$var wire 1 >< in2 $end
$var wire 1 ?< out $end
$upscope $end

$scope module not1_G $end
$var wire 1 ?< in1 $end
$var wire 1 u; out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 W; A $end
$var wire 1 g; B $end
$var wire 1 h; C_in $end
$var wire 1 (< p $end
$var wire 1 )< g $end
$var wire 1 D: S $end
$var wire 1 @< C_out $end
$var wire 1 A< g_bar $end
$var wire 1 B< p_bar $end
$var wire 1 C< nand2_1_out $end
$var wire 1 D< nand2_2_out $end
$var wire 1 E< nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 W; in1 $end
$var wire 1 g; in2 $end
$var wire 1 A< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 A< in1 $end
$var wire 1 )< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 W; in1 $end
$var wire 1 g; in2 $end
$var wire 1 B< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 B< in1 $end
$var wire 1 (< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 W; in1 $end
$var wire 1 g; in2 $end
$var wire 1 C< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 W; in1 $end
$var wire 1 h; in2 $end
$var wire 1 D< out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 g; in1 $end
$var wire 1 h; in2 $end
$var wire 1 E< out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 C< in1 $end
$var wire 1 D< in2 $end
$var wire 1 E< in3 $end
$var wire 1 @< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 W; in1 $end
$var wire 1 g; in2 $end
$var wire 1 h; in3 $end
$var wire 1 D: out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 V; A $end
$var wire 1 f; B $end
$var wire 1 %< C_in $end
$var wire 1 *< p $end
$var wire 1 +< g $end
$var wire 1 C: S $end
$var wire 1 F< C_out $end
$var wire 1 G< g_bar $end
$var wire 1 H< p_bar $end
$var wire 1 I< nand2_1_out $end
$var wire 1 J< nand2_2_out $end
$var wire 1 K< nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V; in1 $end
$var wire 1 f; in2 $end
$var wire 1 G< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 G< in1 $end
$var wire 1 +< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V; in1 $end
$var wire 1 f; in2 $end
$var wire 1 H< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 H< in1 $end
$var wire 1 *< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V; in1 $end
$var wire 1 f; in2 $end
$var wire 1 I< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V; in1 $end
$var wire 1 %< in2 $end
$var wire 1 J< out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 f; in1 $end
$var wire 1 %< in2 $end
$var wire 1 K< out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 I< in1 $end
$var wire 1 J< in2 $end
$var wire 1 K< in3 $end
$var wire 1 F< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V; in1 $end
$var wire 1 f; in2 $end
$var wire 1 %< in3 $end
$var wire 1 C: out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 U; A $end
$var wire 1 e; B $end
$var wire 1 &< C_in $end
$var wire 1 ,< p $end
$var wire 1 -< g $end
$var wire 1 B: S $end
$var wire 1 L< C_out $end
$var wire 1 M< g_bar $end
$var wire 1 N< p_bar $end
$var wire 1 O< nand2_1_out $end
$var wire 1 P< nand2_2_out $end
$var wire 1 Q< nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U; in1 $end
$var wire 1 e; in2 $end
$var wire 1 M< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 M< in1 $end
$var wire 1 -< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U; in1 $end
$var wire 1 e; in2 $end
$var wire 1 N< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 N< in1 $end
$var wire 1 ,< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U; in1 $end
$var wire 1 e; in2 $end
$var wire 1 O< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U; in1 $end
$var wire 1 &< in2 $end
$var wire 1 P< out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 e; in1 $end
$var wire 1 &< in2 $end
$var wire 1 Q< out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 O< in1 $end
$var wire 1 P< in2 $end
$var wire 1 Q< in3 $end
$var wire 1 L< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U; in1 $end
$var wire 1 e; in2 $end
$var wire 1 &< in3 $end
$var wire 1 B: out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 T; A $end
$var wire 1 d; B $end
$var wire 1 '< C_in $end
$var wire 1 .< p $end
$var wire 1 /< g $end
$var wire 1 A: S $end
$var wire 1 R< C_out $end
$var wire 1 S< g_bar $end
$var wire 1 T< p_bar $end
$var wire 1 U< nand2_1_out $end
$var wire 1 V< nand2_2_out $end
$var wire 1 W< nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T; in1 $end
$var wire 1 d; in2 $end
$var wire 1 S< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 S< in1 $end
$var wire 1 /< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T; in1 $end
$var wire 1 d; in2 $end
$var wire 1 T< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 T< in1 $end
$var wire 1 .< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T; in1 $end
$var wire 1 d; in2 $end
$var wire 1 U< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T; in1 $end
$var wire 1 '< in2 $end
$var wire 1 V< out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 d; in1 $end
$var wire 1 '< in2 $end
$var wire 1 W< out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 U< in1 $end
$var wire 1 V< in2 $end
$var wire 1 W< in3 $end
$var wire 1 R< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T; in1 $end
$var wire 1 d; in2 $end
$var wire 1 '< in3 $end
$var wire 1 A: out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 X< N $end
$var wire 1 P; A [3] $end
$var wire 1 Q; A [2] $end
$var wire 1 R; A [1] $end
$var wire 1 S; A [0] $end
$var wire 1 `; B [3] $end
$var wire 1 a; B [2] $end
$var wire 1 b; B [1] $end
$var wire 1 c; B [0] $end
$var wire 1 j; C_in $end
$var wire 1 =: S [3] $end
$var wire 1 >: S [2] $end
$var wire 1 ?: S [1] $end
$var wire 1 @: S [0] $end
$var wire 1 o; P $end
$var wire 1 w; G $end
$var wire 1 Y< C_out $end
$var wire 1 Z< c0 $end
$var wire 1 [< c1 $end
$var wire 1 \< c2 $end
$var wire 1 ]< p0 $end
$var wire 1 ^< g0 $end
$var wire 1 _< p1 $end
$var wire 1 `< g1 $end
$var wire 1 a< p2 $end
$var wire 1 b< g2 $end
$var wire 1 c< p3 $end
$var wire 1 d< g3 $end
$var wire 1 e< g0_bar $end
$var wire 1 f< g1_bar $end
$var wire 1 g< g2_bar $end
$var wire 1 h< g3_bar $end
$var wire 1 i< nand2_c0_0_out $end
$var wire 1 j< nand2_c1_0_out $end
$var wire 1 k< nand2_c2_0_out $end
$var wire 1 l< nand2_c3_0_out $end
$var wire 1 m< nand2_p3_p2 $end
$var wire 1 n< nand2_p1_p0 $end
$var wire 1 o< nand2_p3g2_out $end
$var wire 1 p< nand2_p3p2g1_out $end
$var wire 1 q< nand3_G_0_out $end
$var wire 1 r< nand2_p1g0_out $end
$var wire 1 s< nor2_G_0_out $end
$var wire 1 t< G_bar $end

$scope module not1_c0_0 $end
$var wire 1 ^< in1 $end
$var wire 1 e< out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 ]< in1 $end
$var wire 1 j; in2 $end
$var wire 1 i< out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 e< in1 $end
$var wire 1 i< in2 $end
$var wire 1 Z< out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 `< in1 $end
$var wire 1 f< out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 _< in1 $end
$var wire 1 Z< in2 $end
$var wire 1 j< out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 f< in1 $end
$var wire 1 j< in2 $end
$var wire 1 [< out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 b< in1 $end
$var wire 1 g< out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 a< in1 $end
$var wire 1 [< in2 $end
$var wire 1 k< out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 g< in1 $end
$var wire 1 k< in2 $end
$var wire 1 \< out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 d< in1 $end
$var wire 1 h< out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 c< in1 $end
$var wire 1 \< in2 $end
$var wire 1 l< out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 h< in1 $end
$var wire 1 l< in2 $end
$var wire 1 Y< out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 c< in1 $end
$var wire 1 a< in2 $end
$var wire 1 m< out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 _< in1 $end
$var wire 1 ]< in2 $end
$var wire 1 n< out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 m< in1 $end
$var wire 1 n< in2 $end
$var wire 1 o; out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 c< in1 $end
$var wire 1 b< in2 $end
$var wire 1 o< out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 c< in1 $end
$var wire 1 a< in2 $end
$var wire 1 `< in3 $end
$var wire 1 p< out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 h< in1 $end
$var wire 1 o< in2 $end
$var wire 1 p< in3 $end
$var wire 1 q< out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 _< in1 $end
$var wire 1 ^< in2 $end
$var wire 1 r< out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 m< in1 $end
$var wire 1 r< in2 $end
$var wire 1 s< out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 q< in1 $end
$var wire 1 s< in2 $end
$var wire 1 t< out $end
$upscope $end

$scope module not1_G $end
$var wire 1 t< in1 $end
$var wire 1 w; out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 S; A $end
$var wire 1 c; B $end
$var wire 1 j; C_in $end
$var wire 1 ]< p $end
$var wire 1 ^< g $end
$var wire 1 @: S $end
$var wire 1 u< C_out $end
$var wire 1 v< g_bar $end
$var wire 1 w< p_bar $end
$var wire 1 x< nand2_1_out $end
$var wire 1 y< nand2_2_out $end
$var wire 1 z< nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S; in1 $end
$var wire 1 c; in2 $end
$var wire 1 v< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 v< in1 $end
$var wire 1 ^< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S; in1 $end
$var wire 1 c; in2 $end
$var wire 1 w< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 w< in1 $end
$var wire 1 ]< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S; in1 $end
$var wire 1 c; in2 $end
$var wire 1 x< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S; in1 $end
$var wire 1 j; in2 $end
$var wire 1 y< out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 c; in1 $end
$var wire 1 j; in2 $end
$var wire 1 z< out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 x< in1 $end
$var wire 1 y< in2 $end
$var wire 1 z< in3 $end
$var wire 1 u< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S; in1 $end
$var wire 1 c; in2 $end
$var wire 1 j; in3 $end
$var wire 1 @: out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 R; A $end
$var wire 1 b; B $end
$var wire 1 Z< C_in $end
$var wire 1 _< p $end
$var wire 1 `< g $end
$var wire 1 ?: S $end
$var wire 1 {< C_out $end
$var wire 1 |< g_bar $end
$var wire 1 }< p_bar $end
$var wire 1 ~< nand2_1_out $end
$var wire 1 != nand2_2_out $end
$var wire 1 "= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R; in1 $end
$var wire 1 b; in2 $end
$var wire 1 |< out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 |< in1 $end
$var wire 1 `< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R; in1 $end
$var wire 1 b; in2 $end
$var wire 1 }< out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 }< in1 $end
$var wire 1 _< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R; in1 $end
$var wire 1 b; in2 $end
$var wire 1 ~< out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R; in1 $end
$var wire 1 Z< in2 $end
$var wire 1 != out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 b; in1 $end
$var wire 1 Z< in2 $end
$var wire 1 "= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ~< in1 $end
$var wire 1 != in2 $end
$var wire 1 "= in3 $end
$var wire 1 {< out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R; in1 $end
$var wire 1 b; in2 $end
$var wire 1 Z< in3 $end
$var wire 1 ?: out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 Q; A $end
$var wire 1 a; B $end
$var wire 1 [< C_in $end
$var wire 1 a< p $end
$var wire 1 b< g $end
$var wire 1 >: S $end
$var wire 1 #= C_out $end
$var wire 1 $= g_bar $end
$var wire 1 %= p_bar $end
$var wire 1 &= nand2_1_out $end
$var wire 1 '= nand2_2_out $end
$var wire 1 (= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Q; in1 $end
$var wire 1 a; in2 $end
$var wire 1 $= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 $= in1 $end
$var wire 1 b< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Q; in1 $end
$var wire 1 a; in2 $end
$var wire 1 %= out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 %= in1 $end
$var wire 1 a< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Q; in1 $end
$var wire 1 a; in2 $end
$var wire 1 &= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Q; in1 $end
$var wire 1 [< in2 $end
$var wire 1 '= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 a; in1 $end
$var wire 1 [< in2 $end
$var wire 1 (= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 &= in1 $end
$var wire 1 '= in2 $end
$var wire 1 (= in3 $end
$var wire 1 #= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Q; in1 $end
$var wire 1 a; in2 $end
$var wire 1 [< in3 $end
$var wire 1 >: out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 P; A $end
$var wire 1 `; B $end
$var wire 1 \< C_in $end
$var wire 1 c< p $end
$var wire 1 d< g $end
$var wire 1 =: S $end
$var wire 1 )= C_out $end
$var wire 1 *= g_bar $end
$var wire 1 += p_bar $end
$var wire 1 ,= nand2_1_out $end
$var wire 1 -= nand2_2_out $end
$var wire 1 .= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 P; in1 $end
$var wire 1 `; in2 $end
$var wire 1 *= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 *= in1 $end
$var wire 1 d< out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 P; in1 $end
$var wire 1 `; in2 $end
$var wire 1 += out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 += in1 $end
$var wire 1 c< out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 P; in1 $end
$var wire 1 `; in2 $end
$var wire 1 ,= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 P; in1 $end
$var wire 1 \< in2 $end
$var wire 1 -= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 `; in1 $end
$var wire 1 \< in2 $end
$var wire 1 .= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ,= in1 $end
$var wire 1 -= in2 $end
$var wire 1 .= in3 $end
$var wire 1 )= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 P; in1 $end
$var wire 1 `; in2 $end
$var wire 1 \< in3 $end
$var wire 1 =: out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 /= N $end
$var wire 1 L; A [3] $end
$var wire 1 M; A [2] $end
$var wire 1 N; A [1] $end
$var wire 1 O; A [0] $end
$var wire 1 \; B [3] $end
$var wire 1 ]; B [2] $end
$var wire 1 ^; B [1] $end
$var wire 1 _; B [0] $end
$var wire 1 k; C_in $end
$var wire 1 9: S [3] $end
$var wire 1 :: S [2] $end
$var wire 1 ;: S [1] $end
$var wire 1 <: S [0] $end
$var wire 1 q; P $end
$var wire 1 y; G $end
$var wire 1 0= C_out $end
$var wire 1 1= c0 $end
$var wire 1 2= c1 $end
$var wire 1 3= c2 $end
$var wire 1 4= p0 $end
$var wire 1 5= g0 $end
$var wire 1 6= p1 $end
$var wire 1 7= g1 $end
$var wire 1 8= p2 $end
$var wire 1 9= g2 $end
$var wire 1 := p3 $end
$var wire 1 ;= g3 $end
$var wire 1 <= g0_bar $end
$var wire 1 == g1_bar $end
$var wire 1 >= g2_bar $end
$var wire 1 ?= g3_bar $end
$var wire 1 @= nand2_c0_0_out $end
$var wire 1 A= nand2_c1_0_out $end
$var wire 1 B= nand2_c2_0_out $end
$var wire 1 C= nand2_c3_0_out $end
$var wire 1 D= nand2_p3_p2 $end
$var wire 1 E= nand2_p1_p0 $end
$var wire 1 F= nand2_p3g2_out $end
$var wire 1 G= nand2_p3p2g1_out $end
$var wire 1 H= nand3_G_0_out $end
$var wire 1 I= nand2_p1g0_out $end
$var wire 1 J= nor2_G_0_out $end
$var wire 1 K= G_bar $end

$scope module not1_c0_0 $end
$var wire 1 5= in1 $end
$var wire 1 <= out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 4= in1 $end
$var wire 1 k; in2 $end
$var wire 1 @= out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 <= in1 $end
$var wire 1 @= in2 $end
$var wire 1 1= out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 7= in1 $end
$var wire 1 == out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 6= in1 $end
$var wire 1 1= in2 $end
$var wire 1 A= out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 == in1 $end
$var wire 1 A= in2 $end
$var wire 1 2= out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 9= in1 $end
$var wire 1 >= out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 8= in1 $end
$var wire 1 2= in2 $end
$var wire 1 B= out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 >= in1 $end
$var wire 1 B= in2 $end
$var wire 1 3= out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 ;= in1 $end
$var wire 1 ?= out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 := in1 $end
$var wire 1 3= in2 $end
$var wire 1 C= out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 ?= in1 $end
$var wire 1 C= in2 $end
$var wire 1 0= out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 := in1 $end
$var wire 1 8= in2 $end
$var wire 1 D= out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 6= in1 $end
$var wire 1 4= in2 $end
$var wire 1 E= out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 D= in1 $end
$var wire 1 E= in2 $end
$var wire 1 q; out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 := in1 $end
$var wire 1 9= in2 $end
$var wire 1 F= out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 := in1 $end
$var wire 1 8= in2 $end
$var wire 1 7= in3 $end
$var wire 1 G= out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 ?= in1 $end
$var wire 1 F= in2 $end
$var wire 1 G= in3 $end
$var wire 1 H= out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 6= in1 $end
$var wire 1 5= in2 $end
$var wire 1 I= out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 D= in1 $end
$var wire 1 I= in2 $end
$var wire 1 J= out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 H= in1 $end
$var wire 1 J= in2 $end
$var wire 1 K= out $end
$upscope $end

$scope module not1_G $end
$var wire 1 K= in1 $end
$var wire 1 y; out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 O; A $end
$var wire 1 _; B $end
$var wire 1 k; C_in $end
$var wire 1 4= p $end
$var wire 1 5= g $end
$var wire 1 <: S $end
$var wire 1 L= C_out $end
$var wire 1 M= g_bar $end
$var wire 1 N= p_bar $end
$var wire 1 O= nand2_1_out $end
$var wire 1 P= nand2_2_out $end
$var wire 1 Q= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 O; in1 $end
$var wire 1 _; in2 $end
$var wire 1 M= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 M= in1 $end
$var wire 1 5= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 O; in1 $end
$var wire 1 _; in2 $end
$var wire 1 N= out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 N= in1 $end
$var wire 1 4= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 O; in1 $end
$var wire 1 _; in2 $end
$var wire 1 O= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 O; in1 $end
$var wire 1 k; in2 $end
$var wire 1 P= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 _; in1 $end
$var wire 1 k; in2 $end
$var wire 1 Q= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 O= in1 $end
$var wire 1 P= in2 $end
$var wire 1 Q= in3 $end
$var wire 1 L= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 O; in1 $end
$var wire 1 _; in2 $end
$var wire 1 k; in3 $end
$var wire 1 <: out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 N; A $end
$var wire 1 ^; B $end
$var wire 1 1= C_in $end
$var wire 1 6= p $end
$var wire 1 7= g $end
$var wire 1 ;: S $end
$var wire 1 R= C_out $end
$var wire 1 S= g_bar $end
$var wire 1 T= p_bar $end
$var wire 1 U= nand2_1_out $end
$var wire 1 V= nand2_2_out $end
$var wire 1 W= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 N; in1 $end
$var wire 1 ^; in2 $end
$var wire 1 S= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 S= in1 $end
$var wire 1 7= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 N; in1 $end
$var wire 1 ^; in2 $end
$var wire 1 T= out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 T= in1 $end
$var wire 1 6= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 N; in1 $end
$var wire 1 ^; in2 $end
$var wire 1 U= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 N; in1 $end
$var wire 1 1= in2 $end
$var wire 1 V= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ^; in1 $end
$var wire 1 1= in2 $end
$var wire 1 W= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 U= in1 $end
$var wire 1 V= in2 $end
$var wire 1 W= in3 $end
$var wire 1 R= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 N; in1 $end
$var wire 1 ^; in2 $end
$var wire 1 1= in3 $end
$var wire 1 ;: out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 M; A $end
$var wire 1 ]; B $end
$var wire 1 2= C_in $end
$var wire 1 8= p $end
$var wire 1 9= g $end
$var wire 1 :: S $end
$var wire 1 X= C_out $end
$var wire 1 Y= g_bar $end
$var wire 1 Z= p_bar $end
$var wire 1 [= nand2_1_out $end
$var wire 1 \= nand2_2_out $end
$var wire 1 ]= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 M; in1 $end
$var wire 1 ]; in2 $end
$var wire 1 Y= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 Y= in1 $end
$var wire 1 9= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 M; in1 $end
$var wire 1 ]; in2 $end
$var wire 1 Z= out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 Z= in1 $end
$var wire 1 8= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 M; in1 $end
$var wire 1 ]; in2 $end
$var wire 1 [= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 M; in1 $end
$var wire 1 2= in2 $end
$var wire 1 \= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ]; in1 $end
$var wire 1 2= in2 $end
$var wire 1 ]= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 [= in1 $end
$var wire 1 \= in2 $end
$var wire 1 ]= in3 $end
$var wire 1 X= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 M; in1 $end
$var wire 1 ]; in2 $end
$var wire 1 2= in3 $end
$var wire 1 :: out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 L; A $end
$var wire 1 \; B $end
$var wire 1 3= C_in $end
$var wire 1 := p $end
$var wire 1 ;= g $end
$var wire 1 9: S $end
$var wire 1 ^= C_out $end
$var wire 1 _= g_bar $end
$var wire 1 `= p_bar $end
$var wire 1 a= nand2_1_out $end
$var wire 1 b= nand2_2_out $end
$var wire 1 c= nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 L; in1 $end
$var wire 1 \; in2 $end
$var wire 1 _= out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 _= in1 $end
$var wire 1 ;= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 L; in1 $end
$var wire 1 \; in2 $end
$var wire 1 `= out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 `= in1 $end
$var wire 1 := out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 L; in1 $end
$var wire 1 \; in2 $end
$var wire 1 a= out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 L; in1 $end
$var wire 1 3= in2 $end
$var wire 1 b= out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 \; in1 $end
$var wire 1 3= in2 $end
$var wire 1 c= out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 a= in1 $end
$var wire 1 b= in2 $end
$var wire 1 c= in3 $end
$var wire 1 ^= out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 L; in1 $end
$var wire 1 \; in2 $end
$var wire 1 3= in3 $end
$var wire 1 9: out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 d= N $end
$var wire 1 H; A [3] $end
$var wire 1 I; A [2] $end
$var wire 1 J; A [1] $end
$var wire 1 K; A [0] $end
$var wire 1 X; B [3] $end
$var wire 1 Y; B [2] $end
$var wire 1 Z; B [1] $end
$var wire 1 [; B [0] $end
$var wire 1 l; C_in $end
$var wire 1 5: S [3] $end
$var wire 1 6: S [2] $end
$var wire 1 7: S [1] $end
$var wire 1 8: S [0] $end
$var wire 1 s; P $end
$var wire 1 {; G $end
$var wire 1 e= C_out $end
$var wire 1 f= c0 $end
$var wire 1 g= c1 $end
$var wire 1 h= c2 $end
$var wire 1 i= p0 $end
$var wire 1 j= g0 $end
$var wire 1 k= p1 $end
$var wire 1 l= g1 $end
$var wire 1 m= p2 $end
$var wire 1 n= g2 $end
$var wire 1 o= p3 $end
$var wire 1 p= g3 $end
$var wire 1 q= g0_bar $end
$var wire 1 r= g1_bar $end
$var wire 1 s= g2_bar $end
$var wire 1 t= g3_bar $end
$var wire 1 u= nand2_c0_0_out $end
$var wire 1 v= nand2_c1_0_out $end
$var wire 1 w= nand2_c2_0_out $end
$var wire 1 x= nand2_c3_0_out $end
$var wire 1 y= nand2_p3_p2 $end
$var wire 1 z= nand2_p1_p0 $end
$var wire 1 {= nand2_p3g2_out $end
$var wire 1 |= nand2_p3p2g1_out $end
$var wire 1 }= nand3_G_0_out $end
$var wire 1 ~= nand2_p1g0_out $end
$var wire 1 !> nor2_G_0_out $end
$var wire 1 "> G_bar $end

$scope module not1_c0_0 $end
$var wire 1 j= in1 $end
$var wire 1 q= out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 i= in1 $end
$var wire 1 l; in2 $end
$var wire 1 u= out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 q= in1 $end
$var wire 1 u= in2 $end
$var wire 1 f= out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 l= in1 $end
$var wire 1 r= out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 k= in1 $end
$var wire 1 f= in2 $end
$var wire 1 v= out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 r= in1 $end
$var wire 1 v= in2 $end
$var wire 1 g= out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 n= in1 $end
$var wire 1 s= out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 m= in1 $end
$var wire 1 g= in2 $end
$var wire 1 w= out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 s= in1 $end
$var wire 1 w= in2 $end
$var wire 1 h= out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 p= in1 $end
$var wire 1 t= out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 o= in1 $end
$var wire 1 h= in2 $end
$var wire 1 x= out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 t= in1 $end
$var wire 1 x= in2 $end
$var wire 1 e= out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 o= in1 $end
$var wire 1 m= in2 $end
$var wire 1 y= out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 k= in1 $end
$var wire 1 i= in2 $end
$var wire 1 z= out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 y= in1 $end
$var wire 1 z= in2 $end
$var wire 1 s; out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 o= in1 $end
$var wire 1 n= in2 $end
$var wire 1 {= out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 o= in1 $end
$var wire 1 m= in2 $end
$var wire 1 l= in3 $end
$var wire 1 |= out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 t= in1 $end
$var wire 1 {= in2 $end
$var wire 1 |= in3 $end
$var wire 1 }= out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 k= in1 $end
$var wire 1 j= in2 $end
$var wire 1 ~= out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 y= in1 $end
$var wire 1 ~= in2 $end
$var wire 1 !> out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 }= in1 $end
$var wire 1 !> in2 $end
$var wire 1 "> out $end
$upscope $end

$scope module not1_G $end
$var wire 1 "> in1 $end
$var wire 1 {; out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 K; A $end
$var wire 1 [; B $end
$var wire 1 l; C_in $end
$var wire 1 i= p $end
$var wire 1 j= g $end
$var wire 1 8: S $end
$var wire 1 #> C_out $end
$var wire 1 $> g_bar $end
$var wire 1 %> p_bar $end
$var wire 1 &> nand2_1_out $end
$var wire 1 '> nand2_2_out $end
$var wire 1 (> nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 K; in1 $end
$var wire 1 [; in2 $end
$var wire 1 $> out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 $> in1 $end
$var wire 1 j= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 K; in1 $end
$var wire 1 [; in2 $end
$var wire 1 %> out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 %> in1 $end
$var wire 1 i= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 K; in1 $end
$var wire 1 [; in2 $end
$var wire 1 &> out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 K; in1 $end
$var wire 1 l; in2 $end
$var wire 1 '> out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 [; in1 $end
$var wire 1 l; in2 $end
$var wire 1 (> out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 &> in1 $end
$var wire 1 '> in2 $end
$var wire 1 (> in3 $end
$var wire 1 #> out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 K; in1 $end
$var wire 1 [; in2 $end
$var wire 1 l; in3 $end
$var wire 1 8: out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 J; A $end
$var wire 1 Z; B $end
$var wire 1 f= C_in $end
$var wire 1 k= p $end
$var wire 1 l= g $end
$var wire 1 7: S $end
$var wire 1 )> C_out $end
$var wire 1 *> g_bar $end
$var wire 1 +> p_bar $end
$var wire 1 ,> nand2_1_out $end
$var wire 1 -> nand2_2_out $end
$var wire 1 .> nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 J; in1 $end
$var wire 1 Z; in2 $end
$var wire 1 *> out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 *> in1 $end
$var wire 1 l= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 J; in1 $end
$var wire 1 Z; in2 $end
$var wire 1 +> out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 +> in1 $end
$var wire 1 k= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 J; in1 $end
$var wire 1 Z; in2 $end
$var wire 1 ,> out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 J; in1 $end
$var wire 1 f= in2 $end
$var wire 1 -> out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Z; in1 $end
$var wire 1 f= in2 $end
$var wire 1 .> out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ,> in1 $end
$var wire 1 -> in2 $end
$var wire 1 .> in3 $end
$var wire 1 )> out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 J; in1 $end
$var wire 1 Z; in2 $end
$var wire 1 f= in3 $end
$var wire 1 7: out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 I; A $end
$var wire 1 Y; B $end
$var wire 1 g= C_in $end
$var wire 1 m= p $end
$var wire 1 n= g $end
$var wire 1 6: S $end
$var wire 1 /> C_out $end
$var wire 1 0> g_bar $end
$var wire 1 1> p_bar $end
$var wire 1 2> nand2_1_out $end
$var wire 1 3> nand2_2_out $end
$var wire 1 4> nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 I; in1 $end
$var wire 1 Y; in2 $end
$var wire 1 0> out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 0> in1 $end
$var wire 1 n= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 I; in1 $end
$var wire 1 Y; in2 $end
$var wire 1 1> out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 1> in1 $end
$var wire 1 m= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 I; in1 $end
$var wire 1 Y; in2 $end
$var wire 1 2> out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 I; in1 $end
$var wire 1 g= in2 $end
$var wire 1 3> out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Y; in1 $end
$var wire 1 g= in2 $end
$var wire 1 4> out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 2> in1 $end
$var wire 1 3> in2 $end
$var wire 1 4> in3 $end
$var wire 1 /> out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 I; in1 $end
$var wire 1 Y; in2 $end
$var wire 1 g= in3 $end
$var wire 1 6: out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 H; A $end
$var wire 1 X; B $end
$var wire 1 h= C_in $end
$var wire 1 o= p $end
$var wire 1 p= g $end
$var wire 1 5: S $end
$var wire 1 5> C_out $end
$var wire 1 6> g_bar $end
$var wire 1 7> p_bar $end
$var wire 1 8> nand2_1_out $end
$var wire 1 9> nand2_2_out $end
$var wire 1 :> nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 H; in1 $end
$var wire 1 X; in2 $end
$var wire 1 6> out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 6> in1 $end
$var wire 1 p= out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 H; in1 $end
$var wire 1 X; in2 $end
$var wire 1 7> out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 7> in1 $end
$var wire 1 o= out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 H; in1 $end
$var wire 1 X; in2 $end
$var wire 1 8> out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 H; in1 $end
$var wire 1 h= in2 $end
$var wire 1 9> out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 X; in1 $end
$var wire 1 h= in2 $end
$var wire 1 :> out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 8> in1 $end
$var wire 1 9> in2 $end
$var wire 1 :> in3 $end
$var wire 1 5> out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 H; in1 $end
$var wire 1 X; in2 $end
$var wire 1 h= in3 $end
$var wire 1 5: out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 u; in1 $end
$var wire 1 v; out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 m; in1 $end
$var wire 1 h; in2 $end
$var wire 1 }; out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 v; in1 $end
$var wire 1 }; in2 $end
$var wire 1 j; out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 w; in1 $end
$var wire 1 x; out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 o; in1 $end
$var wire 1 j; in2 $end
$var wire 1 ~; out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 x; in1 $end
$var wire 1 ~; in2 $end
$var wire 1 k; out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 y; in1 $end
$var wire 1 z; out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 q; in1 $end
$var wire 1 k; in2 $end
$var wire 1 !< out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 z; in1 $end
$var wire 1 !< in2 $end
$var wire 1 l; out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 {; in1 $end
$var wire 1 |; out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 s; in1 $end
$var wire 1 l; in2 $end
$var wire 1 "< out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 |; in1 $end
$var wire 1 "< in2 $end
$var wire 1 i; out $end
$upscope $end
$upscope $end

$scope module executeALU $end
$var parameter 32 ;> N $end
$var parameter 32 <> O $end
$var wire 1 h' slbi $end
$var wire 1 S9 InA [15] $end
$var wire 1 T9 InA [14] $end
$var wire 1 U9 InA [13] $end
$var wire 1 V9 InA [12] $end
$var wire 1 W9 InA [11] $end
$var wire 1 X9 InA [10] $end
$var wire 1 Y9 InA [9] $end
$var wire 1 Z9 InA [8] $end
$var wire 1 [9 InA [7] $end
$var wire 1 \9 InA [6] $end
$var wire 1 ]9 InA [5] $end
$var wire 1 ^9 InA [4] $end
$var wire 1 _9 InA [3] $end
$var wire 1 `9 InA [2] $end
$var wire 1 a9 InA [1] $end
$var wire 1 b9 InA [0] $end
$var wire 1 s9 InB [15] $end
$var wire 1 t9 InB [14] $end
$var wire 1 u9 InB [13] $end
$var wire 1 v9 InB [12] $end
$var wire 1 w9 InB [11] $end
$var wire 1 x9 InB [10] $end
$var wire 1 y9 InB [9] $end
$var wire 1 z9 InB [8] $end
$var wire 1 {9 InB [7] $end
$var wire 1 |9 InB [6] $end
$var wire 1 }9 InB [5] $end
$var wire 1 ~9 InB [4] $end
$var wire 1 !: InB [3] $end
$var wire 1 ": InB [2] $end
$var wire 1 #: InB [1] $end
$var wire 1 $: InB [0] $end
$var wire 1 => Cin $end
$var wire 1 w& Op [2] $end
$var wire 1 x& Op [1] $end
$var wire 1 y& Op [0] $end
$var wire 1 >> invA $end
$var wire 1 ?> invB $end
$var wire 1 :; sign $end
$var wire 1 u: Out [15] $end
$var wire 1 v: Out [14] $end
$var wire 1 w: Out [13] $end
$var wire 1 x: Out [12] $end
$var wire 1 y: Out [11] $end
$var wire 1 z: Out [10] $end
$var wire 1 {: Out [9] $end
$var wire 1 |: Out [8] $end
$var wire 1 }: Out [7] $end
$var wire 1 ~: Out [6] $end
$var wire 1 !; Out [5] $end
$var wire 1 "; Out [4] $end
$var wire 1 #; Out [3] $end
$var wire 1 $; Out [2] $end
$var wire 1 %; Out [1] $end
$var wire 1 &; Out [0] $end
$var wire 1 B; Ofl $end
$var wire 1 A; Zero $end
$var wire 1 <; cout $end
$var wire 1 @> shifter_out [15] $end
$var wire 1 A> shifter_out [14] $end
$var wire 1 B> shifter_out [13] $end
$var wire 1 C> shifter_out [12] $end
$var wire 1 D> shifter_out [11] $end
$var wire 1 E> shifter_out [10] $end
$var wire 1 F> shifter_out [9] $end
$var wire 1 G> shifter_out [8] $end
$var wire 1 H> shifter_out [7] $end
$var wire 1 I> shifter_out [6] $end
$var wire 1 J> shifter_out [5] $end
$var wire 1 K> shifter_out [4] $end
$var wire 1 L> shifter_out [3] $end
$var wire 1 M> shifter_out [2] $end
$var wire 1 N> shifter_out [1] $end
$var wire 1 O> shifter_out [0] $end
$var wire 1 P> AND_RESULT [15] $end
$var wire 1 Q> AND_RESULT [14] $end
$var wire 1 R> AND_RESULT [13] $end
$var wire 1 S> AND_RESULT [12] $end
$var wire 1 T> AND_RESULT [11] $end
$var wire 1 U> AND_RESULT [10] $end
$var wire 1 V> AND_RESULT [9] $end
$var wire 1 W> AND_RESULT [8] $end
$var wire 1 X> AND_RESULT [7] $end
$var wire 1 Y> AND_RESULT [6] $end
$var wire 1 Z> AND_RESULT [5] $end
$var wire 1 [> AND_RESULT [4] $end
$var wire 1 \> AND_RESULT [3] $end
$var wire 1 ]> AND_RESULT [2] $end
$var wire 1 ^> AND_RESULT [1] $end
$var wire 1 _> AND_RESULT [0] $end
$var wire 1 `> OR_RESULT [15] $end
$var wire 1 a> OR_RESULT [14] $end
$var wire 1 b> OR_RESULT [13] $end
$var wire 1 c> OR_RESULT [12] $end
$var wire 1 d> OR_RESULT [11] $end
$var wire 1 e> OR_RESULT [10] $end
$var wire 1 f> OR_RESULT [9] $end
$var wire 1 g> OR_RESULT [8] $end
$var wire 1 h> OR_RESULT [7] $end
$var wire 1 i> OR_RESULT [6] $end
$var wire 1 j> OR_RESULT [5] $end
$var wire 1 k> OR_RESULT [4] $end
$var wire 1 l> OR_RESULT [3] $end
$var wire 1 m> OR_RESULT [2] $end
$var wire 1 n> OR_RESULT [1] $end
$var wire 1 o> OR_RESULT [0] $end
$var wire 1 p> XOR_RESULT [15] $end
$var wire 1 q> XOR_RESULT [14] $end
$var wire 1 r> XOR_RESULT [13] $end
$var wire 1 s> XOR_RESULT [12] $end
$var wire 1 t> XOR_RESULT [11] $end
$var wire 1 u> XOR_RESULT [10] $end
$var wire 1 v> XOR_RESULT [9] $end
$var wire 1 w> XOR_RESULT [8] $end
$var wire 1 x> XOR_RESULT [7] $end
$var wire 1 y> XOR_RESULT [6] $end
$var wire 1 z> XOR_RESULT [5] $end
$var wire 1 {> XOR_RESULT [4] $end
$var wire 1 |> XOR_RESULT [3] $end
$var wire 1 }> XOR_RESULT [2] $end
$var wire 1 ~> XOR_RESULT [1] $end
$var wire 1 !? XOR_RESULT [0] $end
$var wire 1 "? ADD_RESULT [15] $end
$var wire 1 #? ADD_RESULT [14] $end
$var wire 1 $? ADD_RESULT [13] $end
$var wire 1 %? ADD_RESULT [12] $end
$var wire 1 &? ADD_RESULT [11] $end
$var wire 1 '? ADD_RESULT [10] $end
$var wire 1 (? ADD_RESULT [9] $end
$var wire 1 )? ADD_RESULT [8] $end
$var wire 1 *? ADD_RESULT [7] $end
$var wire 1 +? ADD_RESULT [6] $end
$var wire 1 ,? ADD_RESULT [5] $end
$var wire 1 -? ADD_RESULT [4] $end
$var wire 1 .? ADD_RESULT [3] $end
$var wire 1 /? ADD_RESULT [2] $end
$var wire 1 0? ADD_RESULT [1] $end
$var wire 1 1? ADD_RESULT [0] $end
$var wire 1 2? LOGIC_RESULT [15] $end
$var wire 1 3? LOGIC_RESULT [14] $end
$var wire 1 4? LOGIC_RESULT [13] $end
$var wire 1 5? LOGIC_RESULT [12] $end
$var wire 1 6? LOGIC_RESULT [11] $end
$var wire 1 7? LOGIC_RESULT [10] $end
$var wire 1 8? LOGIC_RESULT [9] $end
$var wire 1 9? LOGIC_RESULT [8] $end
$var wire 1 :? LOGIC_RESULT [7] $end
$var wire 1 ;? LOGIC_RESULT [6] $end
$var wire 1 <? LOGIC_RESULT [5] $end
$var wire 1 =? LOGIC_RESULT [4] $end
$var wire 1 >? LOGIC_RESULT [3] $end
$var wire 1 ?? LOGIC_RESULT [2] $end
$var wire 1 @? LOGIC_RESULT [1] $end
$var wire 1 A? LOGIC_RESULT [0] $end
$var wire 1 B? ANDN_RESULT [15] $end
$var wire 1 C? ANDN_RESULT [14] $end
$var wire 1 D? ANDN_RESULT [13] $end
$var wire 1 E? ANDN_RESULT [12] $end
$var wire 1 F? ANDN_RESULT [11] $end
$var wire 1 G? ANDN_RESULT [10] $end
$var wire 1 H? ANDN_RESULT [9] $end
$var wire 1 I? ANDN_RESULT [8] $end
$var wire 1 J? ANDN_RESULT [7] $end
$var wire 1 K? ANDN_RESULT [6] $end
$var wire 1 L? ANDN_RESULT [5] $end
$var wire 1 M? ANDN_RESULT [4] $end
$var wire 1 N? ANDN_RESULT [3] $end
$var wire 1 O? ANDN_RESULT [2] $end
$var wire 1 P? ANDN_RESULT [1] $end
$var wire 1 Q? ANDN_RESULT [0] $end
$var wire 1 R? SUB_RESULT [15] $end
$var wire 1 S? SUB_RESULT [14] $end
$var wire 1 T? SUB_RESULT [13] $end
$var wire 1 U? SUB_RESULT [12] $end
$var wire 1 V? SUB_RESULT [11] $end
$var wire 1 W? SUB_RESULT [10] $end
$var wire 1 X? SUB_RESULT [9] $end
$var wire 1 Y? SUB_RESULT [8] $end
$var wire 1 Z? SUB_RESULT [7] $end
$var wire 1 [? SUB_RESULT [6] $end
$var wire 1 \? SUB_RESULT [5] $end
$var wire 1 ]? SUB_RESULT [4] $end
$var wire 1 ^? SUB_RESULT [3] $end
$var wire 1 _? SUB_RESULT [2] $end
$var wire 1 `? SUB_RESULT [1] $end
$var wire 1 a? SUB_RESULT [0] $end
$var wire 1 b? A [15] $end
$var wire 1 c? A [14] $end
$var wire 1 d? A [13] $end
$var wire 1 e? A [12] $end
$var wire 1 f? A [11] $end
$var wire 1 g? A [10] $end
$var wire 1 h? A [9] $end
$var wire 1 i? A [8] $end
$var wire 1 j? A [7] $end
$var wire 1 k? A [6] $end
$var wire 1 l? A [5] $end
$var wire 1 m? A [4] $end
$var wire 1 n? A [3] $end
$var wire 1 o? A [2] $end
$var wire 1 p? A [1] $end
$var wire 1 q? A [0] $end
$var wire 1 r? B [15] $end
$var wire 1 s? B [14] $end
$var wire 1 t? B [13] $end
$var wire 1 u? B [12] $end
$var wire 1 v? B [11] $end
$var wire 1 w? B [10] $end
$var wire 1 x? B [9] $end
$var wire 1 y? B [8] $end
$var wire 1 z? B [7] $end
$var wire 1 {? B [6] $end
$var wire 1 |? B [5] $end
$var wire 1 }? B [4] $end
$var wire 1 ~? B [3] $end
$var wire 1 !@ B [2] $end
$var wire 1 "@ B [1] $end
$var wire 1 #@ B [0] $end
$var wire 1 $@ Overflow $end

$scope module shift $end
$var parameter 32 %@ N $end
$var parameter 32 &@ C $end
$var parameter 32 '@ O $end
$var wire 1 b? In [15] $end
$var wire 1 c? In [14] $end
$var wire 1 d? In [13] $end
$var wire 1 e? In [12] $end
$var wire 1 f? In [11] $end
$var wire 1 g? In [10] $end
$var wire 1 h? In [9] $end
$var wire 1 i? In [8] $end
$var wire 1 j? In [7] $end
$var wire 1 k? In [6] $end
$var wire 1 l? In [5] $end
$var wire 1 m? In [4] $end
$var wire 1 n? In [3] $end
$var wire 1 o? In [2] $end
$var wire 1 p? In [1] $end
$var wire 1 q? In [0] $end
$var wire 1 ~? Cnt [3] $end
$var wire 1 !@ Cnt [2] $end
$var wire 1 "@ Cnt [1] $end
$var wire 1 #@ Cnt [0] $end
$var wire 1 x& Op [1] $end
$var wire 1 y& Op [0] $end
$var wire 1 @> Out [15] $end
$var wire 1 A> Out [14] $end
$var wire 1 B> Out [13] $end
$var wire 1 C> Out [12] $end
$var wire 1 D> Out [11] $end
$var wire 1 E> Out [10] $end
$var wire 1 F> Out [9] $end
$var wire 1 G> Out [8] $end
$var wire 1 H> Out [7] $end
$var wire 1 I> Out [6] $end
$var wire 1 J> Out [5] $end
$var wire 1 K> Out [4] $end
$var wire 1 L> Out [3] $end
$var wire 1 M> Out [2] $end
$var wire 1 N> Out [1] $end
$var wire 1 O> Out [0] $end
$var wire 1 (@ out_stage1 [15] $end
$var wire 1 )@ out_stage1 [14] $end
$var wire 1 *@ out_stage1 [13] $end
$var wire 1 +@ out_stage1 [12] $end
$var wire 1 ,@ out_stage1 [11] $end
$var wire 1 -@ out_stage1 [10] $end
$var wire 1 .@ out_stage1 [9] $end
$var wire 1 /@ out_stage1 [8] $end
$var wire 1 0@ out_stage1 [7] $end
$var wire 1 1@ out_stage1 [6] $end
$var wire 1 2@ out_stage1 [5] $end
$var wire 1 3@ out_stage1 [4] $end
$var wire 1 4@ out_stage1 [3] $end
$var wire 1 5@ out_stage1 [2] $end
$var wire 1 6@ out_stage1 [1] $end
$var wire 1 7@ out_stage1 [0] $end
$var wire 1 8@ out_stage2 [15] $end
$var wire 1 9@ out_stage2 [14] $end
$var wire 1 :@ out_stage2 [13] $end
$var wire 1 ;@ out_stage2 [12] $end
$var wire 1 <@ out_stage2 [11] $end
$var wire 1 =@ out_stage2 [10] $end
$var wire 1 >@ out_stage2 [9] $end
$var wire 1 ?@ out_stage2 [8] $end
$var wire 1 @@ out_stage2 [7] $end
$var wire 1 A@ out_stage2 [6] $end
$var wire 1 B@ out_stage2 [5] $end
$var wire 1 C@ out_stage2 [4] $end
$var wire 1 D@ out_stage2 [3] $end
$var wire 1 E@ out_stage2 [2] $end
$var wire 1 F@ out_stage2 [1] $end
$var wire 1 G@ out_stage2 [0] $end
$var wire 1 H@ out_stage3 [15] $end
$var wire 1 I@ out_stage3 [14] $end
$var wire 1 J@ out_stage3 [13] $end
$var wire 1 K@ out_stage3 [12] $end
$var wire 1 L@ out_stage3 [11] $end
$var wire 1 M@ out_stage3 [10] $end
$var wire 1 N@ out_stage3 [9] $end
$var wire 1 O@ out_stage3 [8] $end
$var wire 1 P@ out_stage3 [7] $end
$var wire 1 Q@ out_stage3 [6] $end
$var wire 1 R@ out_stage3 [5] $end
$var wire 1 S@ out_stage3 [4] $end
$var wire 1 T@ out_stage3 [3] $end
$var wire 1 U@ out_stage3 [2] $end
$var wire 1 V@ out_stage3 [1] $end
$var wire 1 W@ out_stage3 [0] $end
$upscope $end

$scope module adder $end
$var parameter 32 X@ N $end
$var wire 1 b? A [15] $end
$var wire 1 c? A [14] $end
$var wire 1 d? A [13] $end
$var wire 1 e? A [12] $end
$var wire 1 f? A [11] $end
$var wire 1 g? A [10] $end
$var wire 1 h? A [9] $end
$var wire 1 i? A [8] $end
$var wire 1 j? A [7] $end
$var wire 1 k? A [6] $end
$var wire 1 l? A [5] $end
$var wire 1 m? A [4] $end
$var wire 1 n? A [3] $end
$var wire 1 o? A [2] $end
$var wire 1 p? A [1] $end
$var wire 1 q? A [0] $end
$var wire 1 r? B [15] $end
$var wire 1 s? B [14] $end
$var wire 1 t? B [13] $end
$var wire 1 u? B [12] $end
$var wire 1 v? B [11] $end
$var wire 1 w? B [10] $end
$var wire 1 x? B [9] $end
$var wire 1 y? B [8] $end
$var wire 1 z? B [7] $end
$var wire 1 {? B [6] $end
$var wire 1 |? B [5] $end
$var wire 1 }? B [4] $end
$var wire 1 ~? B [3] $end
$var wire 1 !@ B [2] $end
$var wire 1 "@ B [1] $end
$var wire 1 #@ B [0] $end
$var wire 1 => C_in $end
$var wire 1 "? S [15] $end
$var wire 1 #? S [14] $end
$var wire 1 $? S [13] $end
$var wire 1 %? S [12] $end
$var wire 1 &? S [11] $end
$var wire 1 '? S [10] $end
$var wire 1 (? S [9] $end
$var wire 1 )? S [8] $end
$var wire 1 *? S [7] $end
$var wire 1 +? S [6] $end
$var wire 1 ,? S [5] $end
$var wire 1 -? S [4] $end
$var wire 1 .? S [3] $end
$var wire 1 /? S [2] $end
$var wire 1 0? S [1] $end
$var wire 1 1? S [0] $end
$var wire 1 $@ C_out $end
$var wire 1 Y@ C0 $end
$var wire 1 Z@ C1 $end
$var wire 1 [@ C2 $end
$var wire 1 \@ P0 $end
$var wire 1 ]@ P0_bar $end
$var wire 1 ^@ P1 $end
$var wire 1 _@ P1_bar $end
$var wire 1 `@ P2 $end
$var wire 1 a@ P2_bar $end
$var wire 1 b@ P3 $end
$var wire 1 c@ P3_bar $end
$var wire 1 d@ G0 $end
$var wire 1 e@ G0_bar $end
$var wire 1 f@ G1 $end
$var wire 1 g@ G1_bar $end
$var wire 1 h@ G2 $end
$var wire 1 i@ G2_bar $end
$var wire 1 j@ G3 $end
$var wire 1 k@ G3_bar $end
$var wire 1 l@ nand2_c0_0_out $end
$var wire 1 m@ nand2_c1_0_out $end
$var wire 1 n@ nand2_c2_0_out $end
$var wire 1 o@ nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 p@ N $end
$var wire 1 n? A [3] $end
$var wire 1 o? A [2] $end
$var wire 1 p? A [1] $end
$var wire 1 q? A [0] $end
$var wire 1 ~? B [3] $end
$var wire 1 !@ B [2] $end
$var wire 1 "@ B [1] $end
$var wire 1 #@ B [0] $end
$var wire 1 => C_in $end
$var wire 1 .? S [3] $end
$var wire 1 /? S [2] $end
$var wire 1 0? S [1] $end
$var wire 1 1? S [0] $end
$var wire 1 \@ P $end
$var wire 1 d@ G $end
$var wire 1 q@ C_out $end
$var wire 1 r@ c0 $end
$var wire 1 s@ c1 $end
$var wire 1 t@ c2 $end
$var wire 1 u@ p0 $end
$var wire 1 v@ g0 $end
$var wire 1 w@ p1 $end
$var wire 1 x@ g1 $end
$var wire 1 y@ p2 $end
$var wire 1 z@ g2 $end
$var wire 1 {@ p3 $end
$var wire 1 |@ g3 $end
$var wire 1 }@ g0_bar $end
$var wire 1 ~@ g1_bar $end
$var wire 1 !A g2_bar $end
$var wire 1 "A g3_bar $end
$var wire 1 #A nand2_c0_0_out $end
$var wire 1 $A nand2_c1_0_out $end
$var wire 1 %A nand2_c2_0_out $end
$var wire 1 &A nand2_c3_0_out $end
$var wire 1 'A nand2_p3_p2 $end
$var wire 1 (A nand2_p1_p0 $end
$var wire 1 )A nand2_p3g2_out $end
$var wire 1 *A nand2_p3p2g1_out $end
$var wire 1 +A nand3_G_0_out $end
$var wire 1 ,A nand2_p1g0_out $end
$var wire 1 -A nor2_G_0_out $end
$var wire 1 .A G_bar $end

$scope module not1_c0_0 $end
$var wire 1 v@ in1 $end
$var wire 1 }@ out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 u@ in1 $end
$var wire 1 => in2 $end
$var wire 1 #A out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 }@ in1 $end
$var wire 1 #A in2 $end
$var wire 1 r@ out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 x@ in1 $end
$var wire 1 ~@ out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 w@ in1 $end
$var wire 1 r@ in2 $end
$var wire 1 $A out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 ~@ in1 $end
$var wire 1 $A in2 $end
$var wire 1 s@ out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 z@ in1 $end
$var wire 1 !A out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 y@ in1 $end
$var wire 1 s@ in2 $end
$var wire 1 %A out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 !A in1 $end
$var wire 1 %A in2 $end
$var wire 1 t@ out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 |@ in1 $end
$var wire 1 "A out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 {@ in1 $end
$var wire 1 t@ in2 $end
$var wire 1 &A out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 "A in1 $end
$var wire 1 &A in2 $end
$var wire 1 q@ out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 {@ in1 $end
$var wire 1 y@ in2 $end
$var wire 1 'A out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 w@ in1 $end
$var wire 1 u@ in2 $end
$var wire 1 (A out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 'A in1 $end
$var wire 1 (A in2 $end
$var wire 1 \@ out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 {@ in1 $end
$var wire 1 z@ in2 $end
$var wire 1 )A out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 {@ in1 $end
$var wire 1 y@ in2 $end
$var wire 1 x@ in3 $end
$var wire 1 *A out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 "A in1 $end
$var wire 1 )A in2 $end
$var wire 1 *A in3 $end
$var wire 1 +A out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 w@ in1 $end
$var wire 1 v@ in2 $end
$var wire 1 ,A out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 'A in1 $end
$var wire 1 ,A in2 $end
$var wire 1 -A out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 +A in1 $end
$var wire 1 -A in2 $end
$var wire 1 .A out $end
$upscope $end

$scope module not1_G $end
$var wire 1 .A in1 $end
$var wire 1 d@ out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 q? A $end
$var wire 1 #@ B $end
$var wire 1 => C_in $end
$var wire 1 u@ p $end
$var wire 1 v@ g $end
$var wire 1 1? S $end
$var wire 1 /A C_out $end
$var wire 1 0A g_bar $end
$var wire 1 1A p_bar $end
$var wire 1 2A nand2_1_out $end
$var wire 1 3A nand2_2_out $end
$var wire 1 4A nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 q? in1 $end
$var wire 1 #@ in2 $end
$var wire 1 0A out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 0A in1 $end
$var wire 1 v@ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 q? in1 $end
$var wire 1 #@ in2 $end
$var wire 1 1A out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 1A in1 $end
$var wire 1 u@ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 q? in1 $end
$var wire 1 #@ in2 $end
$var wire 1 2A out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 q? in1 $end
$var wire 1 => in2 $end
$var wire 1 3A out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 #@ in1 $end
$var wire 1 => in2 $end
$var wire 1 4A out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 2A in1 $end
$var wire 1 3A in2 $end
$var wire 1 4A in3 $end
$var wire 1 /A out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 q? in1 $end
$var wire 1 #@ in2 $end
$var wire 1 => in3 $end
$var wire 1 1? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 p? A $end
$var wire 1 "@ B $end
$var wire 1 r@ C_in $end
$var wire 1 w@ p $end
$var wire 1 x@ g $end
$var wire 1 0? S $end
$var wire 1 5A C_out $end
$var wire 1 6A g_bar $end
$var wire 1 7A p_bar $end
$var wire 1 8A nand2_1_out $end
$var wire 1 9A nand2_2_out $end
$var wire 1 :A nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 p? in1 $end
$var wire 1 "@ in2 $end
$var wire 1 6A out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 6A in1 $end
$var wire 1 x@ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 p? in1 $end
$var wire 1 "@ in2 $end
$var wire 1 7A out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 7A in1 $end
$var wire 1 w@ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 p? in1 $end
$var wire 1 "@ in2 $end
$var wire 1 8A out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 p? in1 $end
$var wire 1 r@ in2 $end
$var wire 1 9A out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 "@ in1 $end
$var wire 1 r@ in2 $end
$var wire 1 :A out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 8A in1 $end
$var wire 1 9A in2 $end
$var wire 1 :A in3 $end
$var wire 1 5A out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 p? in1 $end
$var wire 1 "@ in2 $end
$var wire 1 r@ in3 $end
$var wire 1 0? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 o? A $end
$var wire 1 !@ B $end
$var wire 1 s@ C_in $end
$var wire 1 y@ p $end
$var wire 1 z@ g $end
$var wire 1 /? S $end
$var wire 1 ;A C_out $end
$var wire 1 <A g_bar $end
$var wire 1 =A p_bar $end
$var wire 1 >A nand2_1_out $end
$var wire 1 ?A nand2_2_out $end
$var wire 1 @A nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 o? in1 $end
$var wire 1 !@ in2 $end
$var wire 1 <A out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 <A in1 $end
$var wire 1 z@ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 o? in1 $end
$var wire 1 !@ in2 $end
$var wire 1 =A out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 =A in1 $end
$var wire 1 y@ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 o? in1 $end
$var wire 1 !@ in2 $end
$var wire 1 >A out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 o? in1 $end
$var wire 1 s@ in2 $end
$var wire 1 ?A out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 !@ in1 $end
$var wire 1 s@ in2 $end
$var wire 1 @A out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 >A in1 $end
$var wire 1 ?A in2 $end
$var wire 1 @A in3 $end
$var wire 1 ;A out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 o? in1 $end
$var wire 1 !@ in2 $end
$var wire 1 s@ in3 $end
$var wire 1 /? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 n? A $end
$var wire 1 ~? B $end
$var wire 1 t@ C_in $end
$var wire 1 {@ p $end
$var wire 1 |@ g $end
$var wire 1 .? S $end
$var wire 1 AA C_out $end
$var wire 1 BA g_bar $end
$var wire 1 CA p_bar $end
$var wire 1 DA nand2_1_out $end
$var wire 1 EA nand2_2_out $end
$var wire 1 FA nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 n? in1 $end
$var wire 1 ~? in2 $end
$var wire 1 BA out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 BA in1 $end
$var wire 1 |@ out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 n? in1 $end
$var wire 1 ~? in2 $end
$var wire 1 CA out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 CA in1 $end
$var wire 1 {@ out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 n? in1 $end
$var wire 1 ~? in2 $end
$var wire 1 DA out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 n? in1 $end
$var wire 1 t@ in2 $end
$var wire 1 EA out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ~? in1 $end
$var wire 1 t@ in2 $end
$var wire 1 FA out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 DA in1 $end
$var wire 1 EA in2 $end
$var wire 1 FA in3 $end
$var wire 1 AA out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 n? in1 $end
$var wire 1 ~? in2 $end
$var wire 1 t@ in3 $end
$var wire 1 .? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 GA N $end
$var wire 1 j? A [3] $end
$var wire 1 k? A [2] $end
$var wire 1 l? A [1] $end
$var wire 1 m? A [0] $end
$var wire 1 z? B [3] $end
$var wire 1 {? B [2] $end
$var wire 1 |? B [1] $end
$var wire 1 }? B [0] $end
$var wire 1 Y@ C_in $end
$var wire 1 *? S [3] $end
$var wire 1 +? S [2] $end
$var wire 1 ,? S [1] $end
$var wire 1 -? S [0] $end
$var wire 1 ^@ P $end
$var wire 1 f@ G $end
$var wire 1 HA C_out $end
$var wire 1 IA c0 $end
$var wire 1 JA c1 $end
$var wire 1 KA c2 $end
$var wire 1 LA p0 $end
$var wire 1 MA g0 $end
$var wire 1 NA p1 $end
$var wire 1 OA g1 $end
$var wire 1 PA p2 $end
$var wire 1 QA g2 $end
$var wire 1 RA p3 $end
$var wire 1 SA g3 $end
$var wire 1 TA g0_bar $end
$var wire 1 UA g1_bar $end
$var wire 1 VA g2_bar $end
$var wire 1 WA g3_bar $end
$var wire 1 XA nand2_c0_0_out $end
$var wire 1 YA nand2_c1_0_out $end
$var wire 1 ZA nand2_c2_0_out $end
$var wire 1 [A nand2_c3_0_out $end
$var wire 1 \A nand2_p3_p2 $end
$var wire 1 ]A nand2_p1_p0 $end
$var wire 1 ^A nand2_p3g2_out $end
$var wire 1 _A nand2_p3p2g1_out $end
$var wire 1 `A nand3_G_0_out $end
$var wire 1 aA nand2_p1g0_out $end
$var wire 1 bA nor2_G_0_out $end
$var wire 1 cA G_bar $end

$scope module not1_c0_0 $end
$var wire 1 MA in1 $end
$var wire 1 TA out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 LA in1 $end
$var wire 1 Y@ in2 $end
$var wire 1 XA out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 TA in1 $end
$var wire 1 XA in2 $end
$var wire 1 IA out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 OA in1 $end
$var wire 1 UA out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 NA in1 $end
$var wire 1 IA in2 $end
$var wire 1 YA out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 UA in1 $end
$var wire 1 YA in2 $end
$var wire 1 JA out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 QA in1 $end
$var wire 1 VA out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 PA in1 $end
$var wire 1 JA in2 $end
$var wire 1 ZA out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 VA in1 $end
$var wire 1 ZA in2 $end
$var wire 1 KA out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 SA in1 $end
$var wire 1 WA out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 RA in1 $end
$var wire 1 KA in2 $end
$var wire 1 [A out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 WA in1 $end
$var wire 1 [A in2 $end
$var wire 1 HA out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 RA in1 $end
$var wire 1 PA in2 $end
$var wire 1 \A out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 NA in1 $end
$var wire 1 LA in2 $end
$var wire 1 ]A out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 \A in1 $end
$var wire 1 ]A in2 $end
$var wire 1 ^@ out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 RA in1 $end
$var wire 1 QA in2 $end
$var wire 1 ^A out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 RA in1 $end
$var wire 1 PA in2 $end
$var wire 1 OA in3 $end
$var wire 1 _A out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 WA in1 $end
$var wire 1 ^A in2 $end
$var wire 1 _A in3 $end
$var wire 1 `A out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 NA in1 $end
$var wire 1 MA in2 $end
$var wire 1 aA out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 \A in1 $end
$var wire 1 aA in2 $end
$var wire 1 bA out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 `A in1 $end
$var wire 1 bA in2 $end
$var wire 1 cA out $end
$upscope $end

$scope module not1_G $end
$var wire 1 cA in1 $end
$var wire 1 f@ out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 m? A $end
$var wire 1 }? B $end
$var wire 1 Y@ C_in $end
$var wire 1 LA p $end
$var wire 1 MA g $end
$var wire 1 -? S $end
$var wire 1 dA C_out $end
$var wire 1 eA g_bar $end
$var wire 1 fA p_bar $end
$var wire 1 gA nand2_1_out $end
$var wire 1 hA nand2_2_out $end
$var wire 1 iA nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 m? in1 $end
$var wire 1 }? in2 $end
$var wire 1 eA out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 eA in1 $end
$var wire 1 MA out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 m? in1 $end
$var wire 1 }? in2 $end
$var wire 1 fA out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 fA in1 $end
$var wire 1 LA out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 m? in1 $end
$var wire 1 }? in2 $end
$var wire 1 gA out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 m? in1 $end
$var wire 1 Y@ in2 $end
$var wire 1 hA out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 }? in1 $end
$var wire 1 Y@ in2 $end
$var wire 1 iA out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 gA in1 $end
$var wire 1 hA in2 $end
$var wire 1 iA in3 $end
$var wire 1 dA out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 m? in1 $end
$var wire 1 }? in2 $end
$var wire 1 Y@ in3 $end
$var wire 1 -? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 l? A $end
$var wire 1 |? B $end
$var wire 1 IA C_in $end
$var wire 1 NA p $end
$var wire 1 OA g $end
$var wire 1 ,? S $end
$var wire 1 jA C_out $end
$var wire 1 kA g_bar $end
$var wire 1 lA p_bar $end
$var wire 1 mA nand2_1_out $end
$var wire 1 nA nand2_2_out $end
$var wire 1 oA nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 l? in1 $end
$var wire 1 |? in2 $end
$var wire 1 kA out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 kA in1 $end
$var wire 1 OA out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 l? in1 $end
$var wire 1 |? in2 $end
$var wire 1 lA out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 lA in1 $end
$var wire 1 NA out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 l? in1 $end
$var wire 1 |? in2 $end
$var wire 1 mA out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 l? in1 $end
$var wire 1 IA in2 $end
$var wire 1 nA out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 |? in1 $end
$var wire 1 IA in2 $end
$var wire 1 oA out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 mA in1 $end
$var wire 1 nA in2 $end
$var wire 1 oA in3 $end
$var wire 1 jA out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 l? in1 $end
$var wire 1 |? in2 $end
$var wire 1 IA in3 $end
$var wire 1 ,? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 k? A $end
$var wire 1 {? B $end
$var wire 1 JA C_in $end
$var wire 1 PA p $end
$var wire 1 QA g $end
$var wire 1 +? S $end
$var wire 1 pA C_out $end
$var wire 1 qA g_bar $end
$var wire 1 rA p_bar $end
$var wire 1 sA nand2_1_out $end
$var wire 1 tA nand2_2_out $end
$var wire 1 uA nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 k? in1 $end
$var wire 1 {? in2 $end
$var wire 1 qA out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 qA in1 $end
$var wire 1 QA out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 k? in1 $end
$var wire 1 {? in2 $end
$var wire 1 rA out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 rA in1 $end
$var wire 1 PA out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 k? in1 $end
$var wire 1 {? in2 $end
$var wire 1 sA out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 k? in1 $end
$var wire 1 JA in2 $end
$var wire 1 tA out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 {? in1 $end
$var wire 1 JA in2 $end
$var wire 1 uA out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 sA in1 $end
$var wire 1 tA in2 $end
$var wire 1 uA in3 $end
$var wire 1 pA out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 k? in1 $end
$var wire 1 {? in2 $end
$var wire 1 JA in3 $end
$var wire 1 +? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 j? A $end
$var wire 1 z? B $end
$var wire 1 KA C_in $end
$var wire 1 RA p $end
$var wire 1 SA g $end
$var wire 1 *? S $end
$var wire 1 vA C_out $end
$var wire 1 wA g_bar $end
$var wire 1 xA p_bar $end
$var wire 1 yA nand2_1_out $end
$var wire 1 zA nand2_2_out $end
$var wire 1 {A nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 j? in1 $end
$var wire 1 z? in2 $end
$var wire 1 wA out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 wA in1 $end
$var wire 1 SA out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 j? in1 $end
$var wire 1 z? in2 $end
$var wire 1 xA out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 xA in1 $end
$var wire 1 RA out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 j? in1 $end
$var wire 1 z? in2 $end
$var wire 1 yA out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 j? in1 $end
$var wire 1 KA in2 $end
$var wire 1 zA out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 z? in1 $end
$var wire 1 KA in2 $end
$var wire 1 {A out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 yA in1 $end
$var wire 1 zA in2 $end
$var wire 1 {A in3 $end
$var wire 1 vA out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 j? in1 $end
$var wire 1 z? in2 $end
$var wire 1 KA in3 $end
$var wire 1 *? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 |A N $end
$var wire 1 f? A [3] $end
$var wire 1 g? A [2] $end
$var wire 1 h? A [1] $end
$var wire 1 i? A [0] $end
$var wire 1 v? B [3] $end
$var wire 1 w? B [2] $end
$var wire 1 x? B [1] $end
$var wire 1 y? B [0] $end
$var wire 1 Z@ C_in $end
$var wire 1 &? S [3] $end
$var wire 1 '? S [2] $end
$var wire 1 (? S [1] $end
$var wire 1 )? S [0] $end
$var wire 1 `@ P $end
$var wire 1 h@ G $end
$var wire 1 }A C_out $end
$var wire 1 ~A c0 $end
$var wire 1 !B c1 $end
$var wire 1 "B c2 $end
$var wire 1 #B p0 $end
$var wire 1 $B g0 $end
$var wire 1 %B p1 $end
$var wire 1 &B g1 $end
$var wire 1 'B p2 $end
$var wire 1 (B g2 $end
$var wire 1 )B p3 $end
$var wire 1 *B g3 $end
$var wire 1 +B g0_bar $end
$var wire 1 ,B g1_bar $end
$var wire 1 -B g2_bar $end
$var wire 1 .B g3_bar $end
$var wire 1 /B nand2_c0_0_out $end
$var wire 1 0B nand2_c1_0_out $end
$var wire 1 1B nand2_c2_0_out $end
$var wire 1 2B nand2_c3_0_out $end
$var wire 1 3B nand2_p3_p2 $end
$var wire 1 4B nand2_p1_p0 $end
$var wire 1 5B nand2_p3g2_out $end
$var wire 1 6B nand2_p3p2g1_out $end
$var wire 1 7B nand3_G_0_out $end
$var wire 1 8B nand2_p1g0_out $end
$var wire 1 9B nor2_G_0_out $end
$var wire 1 :B G_bar $end

$scope module not1_c0_0 $end
$var wire 1 $B in1 $end
$var wire 1 +B out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 #B in1 $end
$var wire 1 Z@ in2 $end
$var wire 1 /B out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 +B in1 $end
$var wire 1 /B in2 $end
$var wire 1 ~A out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 &B in1 $end
$var wire 1 ,B out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 %B in1 $end
$var wire 1 ~A in2 $end
$var wire 1 0B out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 ,B in1 $end
$var wire 1 0B in2 $end
$var wire 1 !B out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 (B in1 $end
$var wire 1 -B out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 'B in1 $end
$var wire 1 !B in2 $end
$var wire 1 1B out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 -B in1 $end
$var wire 1 1B in2 $end
$var wire 1 "B out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 *B in1 $end
$var wire 1 .B out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 )B in1 $end
$var wire 1 "B in2 $end
$var wire 1 2B out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 .B in1 $end
$var wire 1 2B in2 $end
$var wire 1 }A out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 )B in1 $end
$var wire 1 'B in2 $end
$var wire 1 3B out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 %B in1 $end
$var wire 1 #B in2 $end
$var wire 1 4B out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 3B in1 $end
$var wire 1 4B in2 $end
$var wire 1 `@ out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 )B in1 $end
$var wire 1 (B in2 $end
$var wire 1 5B out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 )B in1 $end
$var wire 1 'B in2 $end
$var wire 1 &B in3 $end
$var wire 1 6B out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 .B in1 $end
$var wire 1 5B in2 $end
$var wire 1 6B in3 $end
$var wire 1 7B out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 %B in1 $end
$var wire 1 $B in2 $end
$var wire 1 8B out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 3B in1 $end
$var wire 1 8B in2 $end
$var wire 1 9B out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 7B in1 $end
$var wire 1 9B in2 $end
$var wire 1 :B out $end
$upscope $end

$scope module not1_G $end
$var wire 1 :B in1 $end
$var wire 1 h@ out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 i? A $end
$var wire 1 y? B $end
$var wire 1 Z@ C_in $end
$var wire 1 #B p $end
$var wire 1 $B g $end
$var wire 1 )? S $end
$var wire 1 ;B C_out $end
$var wire 1 <B g_bar $end
$var wire 1 =B p_bar $end
$var wire 1 >B nand2_1_out $end
$var wire 1 ?B nand2_2_out $end
$var wire 1 @B nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 i? in1 $end
$var wire 1 y? in2 $end
$var wire 1 <B out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 <B in1 $end
$var wire 1 $B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 i? in1 $end
$var wire 1 y? in2 $end
$var wire 1 =B out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 =B in1 $end
$var wire 1 #B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 i? in1 $end
$var wire 1 y? in2 $end
$var wire 1 >B out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 i? in1 $end
$var wire 1 Z@ in2 $end
$var wire 1 ?B out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 y? in1 $end
$var wire 1 Z@ in2 $end
$var wire 1 @B out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 >B in1 $end
$var wire 1 ?B in2 $end
$var wire 1 @B in3 $end
$var wire 1 ;B out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 i? in1 $end
$var wire 1 y? in2 $end
$var wire 1 Z@ in3 $end
$var wire 1 )? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 h? A $end
$var wire 1 x? B $end
$var wire 1 ~A C_in $end
$var wire 1 %B p $end
$var wire 1 &B g $end
$var wire 1 (? S $end
$var wire 1 AB C_out $end
$var wire 1 BB g_bar $end
$var wire 1 CB p_bar $end
$var wire 1 DB nand2_1_out $end
$var wire 1 EB nand2_2_out $end
$var wire 1 FB nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 h? in1 $end
$var wire 1 x? in2 $end
$var wire 1 BB out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 BB in1 $end
$var wire 1 &B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 h? in1 $end
$var wire 1 x? in2 $end
$var wire 1 CB out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 CB in1 $end
$var wire 1 %B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 h? in1 $end
$var wire 1 x? in2 $end
$var wire 1 DB out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 h? in1 $end
$var wire 1 ~A in2 $end
$var wire 1 EB out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 x? in1 $end
$var wire 1 ~A in2 $end
$var wire 1 FB out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 DB in1 $end
$var wire 1 EB in2 $end
$var wire 1 FB in3 $end
$var wire 1 AB out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 h? in1 $end
$var wire 1 x? in2 $end
$var wire 1 ~A in3 $end
$var wire 1 (? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 g? A $end
$var wire 1 w? B $end
$var wire 1 !B C_in $end
$var wire 1 'B p $end
$var wire 1 (B g $end
$var wire 1 '? S $end
$var wire 1 GB C_out $end
$var wire 1 HB g_bar $end
$var wire 1 IB p_bar $end
$var wire 1 JB nand2_1_out $end
$var wire 1 KB nand2_2_out $end
$var wire 1 LB nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 g? in1 $end
$var wire 1 w? in2 $end
$var wire 1 HB out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 HB in1 $end
$var wire 1 (B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 g? in1 $end
$var wire 1 w? in2 $end
$var wire 1 IB out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 IB in1 $end
$var wire 1 'B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 g? in1 $end
$var wire 1 w? in2 $end
$var wire 1 JB out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 g? in1 $end
$var wire 1 !B in2 $end
$var wire 1 KB out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 w? in1 $end
$var wire 1 !B in2 $end
$var wire 1 LB out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 JB in1 $end
$var wire 1 KB in2 $end
$var wire 1 LB in3 $end
$var wire 1 GB out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 g? in1 $end
$var wire 1 w? in2 $end
$var wire 1 !B in3 $end
$var wire 1 '? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 f? A $end
$var wire 1 v? B $end
$var wire 1 "B C_in $end
$var wire 1 )B p $end
$var wire 1 *B g $end
$var wire 1 &? S $end
$var wire 1 MB C_out $end
$var wire 1 NB g_bar $end
$var wire 1 OB p_bar $end
$var wire 1 PB nand2_1_out $end
$var wire 1 QB nand2_2_out $end
$var wire 1 RB nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 f? in1 $end
$var wire 1 v? in2 $end
$var wire 1 NB out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 NB in1 $end
$var wire 1 *B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 f? in1 $end
$var wire 1 v? in2 $end
$var wire 1 OB out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 OB in1 $end
$var wire 1 )B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 f? in1 $end
$var wire 1 v? in2 $end
$var wire 1 PB out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 f? in1 $end
$var wire 1 "B in2 $end
$var wire 1 QB out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 v? in1 $end
$var wire 1 "B in2 $end
$var wire 1 RB out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 PB in1 $end
$var wire 1 QB in2 $end
$var wire 1 RB in3 $end
$var wire 1 MB out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 f? in1 $end
$var wire 1 v? in2 $end
$var wire 1 "B in3 $end
$var wire 1 &? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 SB N $end
$var wire 1 b? A [3] $end
$var wire 1 c? A [2] $end
$var wire 1 d? A [1] $end
$var wire 1 e? A [0] $end
$var wire 1 r? B [3] $end
$var wire 1 s? B [2] $end
$var wire 1 t? B [1] $end
$var wire 1 u? B [0] $end
$var wire 1 [@ C_in $end
$var wire 1 "? S [3] $end
$var wire 1 #? S [2] $end
$var wire 1 $? S [1] $end
$var wire 1 %? S [0] $end
$var wire 1 b@ P $end
$var wire 1 j@ G $end
$var wire 1 TB C_out $end
$var wire 1 UB c0 $end
$var wire 1 VB c1 $end
$var wire 1 WB c2 $end
$var wire 1 XB p0 $end
$var wire 1 YB g0 $end
$var wire 1 ZB p1 $end
$var wire 1 [B g1 $end
$var wire 1 \B p2 $end
$var wire 1 ]B g2 $end
$var wire 1 ^B p3 $end
$var wire 1 _B g3 $end
$var wire 1 `B g0_bar $end
$var wire 1 aB g1_bar $end
$var wire 1 bB g2_bar $end
$var wire 1 cB g3_bar $end
$var wire 1 dB nand2_c0_0_out $end
$var wire 1 eB nand2_c1_0_out $end
$var wire 1 fB nand2_c2_0_out $end
$var wire 1 gB nand2_c3_0_out $end
$var wire 1 hB nand2_p3_p2 $end
$var wire 1 iB nand2_p1_p0 $end
$var wire 1 jB nand2_p3g2_out $end
$var wire 1 kB nand2_p3p2g1_out $end
$var wire 1 lB nand3_G_0_out $end
$var wire 1 mB nand2_p1g0_out $end
$var wire 1 nB nor2_G_0_out $end
$var wire 1 oB G_bar $end

$scope module not1_c0_0 $end
$var wire 1 YB in1 $end
$var wire 1 `B out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 XB in1 $end
$var wire 1 [@ in2 $end
$var wire 1 dB out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 `B in1 $end
$var wire 1 dB in2 $end
$var wire 1 UB out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 [B in1 $end
$var wire 1 aB out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 ZB in1 $end
$var wire 1 UB in2 $end
$var wire 1 eB out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 aB in1 $end
$var wire 1 eB in2 $end
$var wire 1 VB out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ]B in1 $end
$var wire 1 bB out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 \B in1 $end
$var wire 1 VB in2 $end
$var wire 1 fB out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 bB in1 $end
$var wire 1 fB in2 $end
$var wire 1 WB out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 _B in1 $end
$var wire 1 cB out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 ^B in1 $end
$var wire 1 WB in2 $end
$var wire 1 gB out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 cB in1 $end
$var wire 1 gB in2 $end
$var wire 1 TB out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 ^B in1 $end
$var wire 1 \B in2 $end
$var wire 1 hB out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 ZB in1 $end
$var wire 1 XB in2 $end
$var wire 1 iB out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 hB in1 $end
$var wire 1 iB in2 $end
$var wire 1 b@ out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 ^B in1 $end
$var wire 1 ]B in2 $end
$var wire 1 jB out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 ^B in1 $end
$var wire 1 \B in2 $end
$var wire 1 [B in3 $end
$var wire 1 kB out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 cB in1 $end
$var wire 1 jB in2 $end
$var wire 1 kB in3 $end
$var wire 1 lB out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 ZB in1 $end
$var wire 1 YB in2 $end
$var wire 1 mB out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 hB in1 $end
$var wire 1 mB in2 $end
$var wire 1 nB out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 lB in1 $end
$var wire 1 nB in2 $end
$var wire 1 oB out $end
$upscope $end

$scope module not1_G $end
$var wire 1 oB in1 $end
$var wire 1 j@ out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 e? A $end
$var wire 1 u? B $end
$var wire 1 [@ C_in $end
$var wire 1 XB p $end
$var wire 1 YB g $end
$var wire 1 %? S $end
$var wire 1 pB C_out $end
$var wire 1 qB g_bar $end
$var wire 1 rB p_bar $end
$var wire 1 sB nand2_1_out $end
$var wire 1 tB nand2_2_out $end
$var wire 1 uB nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 e? in1 $end
$var wire 1 u? in2 $end
$var wire 1 qB out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 qB in1 $end
$var wire 1 YB out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 e? in1 $end
$var wire 1 u? in2 $end
$var wire 1 rB out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 rB in1 $end
$var wire 1 XB out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 e? in1 $end
$var wire 1 u? in2 $end
$var wire 1 sB out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 e? in1 $end
$var wire 1 [@ in2 $end
$var wire 1 tB out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 u? in1 $end
$var wire 1 [@ in2 $end
$var wire 1 uB out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 sB in1 $end
$var wire 1 tB in2 $end
$var wire 1 uB in3 $end
$var wire 1 pB out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 e? in1 $end
$var wire 1 u? in2 $end
$var wire 1 [@ in3 $end
$var wire 1 %? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 d? A $end
$var wire 1 t? B $end
$var wire 1 UB C_in $end
$var wire 1 ZB p $end
$var wire 1 [B g $end
$var wire 1 $? S $end
$var wire 1 vB C_out $end
$var wire 1 wB g_bar $end
$var wire 1 xB p_bar $end
$var wire 1 yB nand2_1_out $end
$var wire 1 zB nand2_2_out $end
$var wire 1 {B nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 d? in1 $end
$var wire 1 t? in2 $end
$var wire 1 wB out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 wB in1 $end
$var wire 1 [B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 d? in1 $end
$var wire 1 t? in2 $end
$var wire 1 xB out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 xB in1 $end
$var wire 1 ZB out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 d? in1 $end
$var wire 1 t? in2 $end
$var wire 1 yB out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 d? in1 $end
$var wire 1 UB in2 $end
$var wire 1 zB out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 t? in1 $end
$var wire 1 UB in2 $end
$var wire 1 {B out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 yB in1 $end
$var wire 1 zB in2 $end
$var wire 1 {B in3 $end
$var wire 1 vB out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 d? in1 $end
$var wire 1 t? in2 $end
$var wire 1 UB in3 $end
$var wire 1 $? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 c? A $end
$var wire 1 s? B $end
$var wire 1 VB C_in $end
$var wire 1 \B p $end
$var wire 1 ]B g $end
$var wire 1 #? S $end
$var wire 1 |B C_out $end
$var wire 1 }B g_bar $end
$var wire 1 ~B p_bar $end
$var wire 1 !C nand2_1_out $end
$var wire 1 "C nand2_2_out $end
$var wire 1 #C nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 c? in1 $end
$var wire 1 s? in2 $end
$var wire 1 }B out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 }B in1 $end
$var wire 1 ]B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 c? in1 $end
$var wire 1 s? in2 $end
$var wire 1 ~B out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 ~B in1 $end
$var wire 1 \B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 c? in1 $end
$var wire 1 s? in2 $end
$var wire 1 !C out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 c? in1 $end
$var wire 1 VB in2 $end
$var wire 1 "C out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 s? in1 $end
$var wire 1 VB in2 $end
$var wire 1 #C out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 !C in1 $end
$var wire 1 "C in2 $end
$var wire 1 #C in3 $end
$var wire 1 |B out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 c? in1 $end
$var wire 1 s? in2 $end
$var wire 1 VB in3 $end
$var wire 1 #? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 b? A $end
$var wire 1 r? B $end
$var wire 1 WB C_in $end
$var wire 1 ^B p $end
$var wire 1 _B g $end
$var wire 1 "? S $end
$var wire 1 $C C_out $end
$var wire 1 %C g_bar $end
$var wire 1 &C p_bar $end
$var wire 1 'C nand2_1_out $end
$var wire 1 (C nand2_2_out $end
$var wire 1 )C nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 b? in1 $end
$var wire 1 r? in2 $end
$var wire 1 %C out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 %C in1 $end
$var wire 1 _B out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 b? in1 $end
$var wire 1 r? in2 $end
$var wire 1 &C out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 &C in1 $end
$var wire 1 ^B out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 b? in1 $end
$var wire 1 r? in2 $end
$var wire 1 'C out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 b? in1 $end
$var wire 1 WB in2 $end
$var wire 1 (C out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 r? in1 $end
$var wire 1 WB in2 $end
$var wire 1 )C out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 'C in1 $end
$var wire 1 (C in2 $end
$var wire 1 )C in3 $end
$var wire 1 $C out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 b? in1 $end
$var wire 1 r? in2 $end
$var wire 1 WB in3 $end
$var wire 1 "? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 d@ in1 $end
$var wire 1 e@ out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 \@ in1 $end
$var wire 1 => in2 $end
$var wire 1 l@ out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 e@ in1 $end
$var wire 1 l@ in2 $end
$var wire 1 Y@ out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 f@ in1 $end
$var wire 1 g@ out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 ^@ in1 $end
$var wire 1 Y@ in2 $end
$var wire 1 m@ out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 g@ in1 $end
$var wire 1 m@ in2 $end
$var wire 1 Z@ out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 h@ in1 $end
$var wire 1 i@ out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 `@ in1 $end
$var wire 1 Z@ in2 $end
$var wire 1 n@ out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 i@ in1 $end
$var wire 1 n@ in2 $end
$var wire 1 [@ out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 j@ in1 $end
$var wire 1 k@ out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 b@ in1 $end
$var wire 1 [@ in2 $end
$var wire 1 o@ out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 k@ in1 $end
$var wire 1 o@ in2 $end
$var wire 1 $@ out $end
$upscope $end
$upscope $end

$scope module subtracter $end
$var parameter 32 *C N $end
$var wire 1 +C A [15] $end
$var wire 1 ,C A [14] $end
$var wire 1 -C A [13] $end
$var wire 1 .C A [12] $end
$var wire 1 /C A [11] $end
$var wire 1 0C A [10] $end
$var wire 1 1C A [9] $end
$var wire 1 2C A [8] $end
$var wire 1 3C A [7] $end
$var wire 1 4C A [6] $end
$var wire 1 5C A [5] $end
$var wire 1 6C A [4] $end
$var wire 1 7C A [3] $end
$var wire 1 8C A [2] $end
$var wire 1 9C A [1] $end
$var wire 1 :C A [0] $end
$var wire 1 r? B [15] $end
$var wire 1 s? B [14] $end
$var wire 1 t? B [13] $end
$var wire 1 u? B [12] $end
$var wire 1 v? B [11] $end
$var wire 1 w? B [10] $end
$var wire 1 x? B [9] $end
$var wire 1 y? B [8] $end
$var wire 1 z? B [7] $end
$var wire 1 {? B [6] $end
$var wire 1 |? B [5] $end
$var wire 1 }? B [4] $end
$var wire 1 ~? B [3] $end
$var wire 1 !@ B [2] $end
$var wire 1 "@ B [1] $end
$var wire 1 #@ B [0] $end
$var wire 1 ;C C_in $end
$var wire 1 R? S [15] $end
$var wire 1 S? S [14] $end
$var wire 1 T? S [13] $end
$var wire 1 U? S [12] $end
$var wire 1 V? S [11] $end
$var wire 1 W? S [10] $end
$var wire 1 X? S [9] $end
$var wire 1 Y? S [8] $end
$var wire 1 Z? S [7] $end
$var wire 1 [? S [6] $end
$var wire 1 \? S [5] $end
$var wire 1 ]? S [4] $end
$var wire 1 ^? S [3] $end
$var wire 1 _? S [2] $end
$var wire 1 `? S [1] $end
$var wire 1 a? S [0] $end
$var wire 1 <C C_out $end
$var wire 1 =C C0 $end
$var wire 1 >C C1 $end
$var wire 1 ?C C2 $end
$var wire 1 @C P0 $end
$var wire 1 AC P0_bar $end
$var wire 1 BC P1 $end
$var wire 1 CC P1_bar $end
$var wire 1 DC P2 $end
$var wire 1 EC P2_bar $end
$var wire 1 FC P3 $end
$var wire 1 GC P3_bar $end
$var wire 1 HC G0 $end
$var wire 1 IC G0_bar $end
$var wire 1 JC G1 $end
$var wire 1 KC G1_bar $end
$var wire 1 LC G2 $end
$var wire 1 MC G2_bar $end
$var wire 1 NC G3 $end
$var wire 1 OC G3_bar $end
$var wire 1 PC nand2_c0_0_out $end
$var wire 1 QC nand2_c1_0_out $end
$var wire 1 RC nand2_c2_0_out $end
$var wire 1 SC nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 TC N $end
$var wire 1 7C A [3] $end
$var wire 1 8C A [2] $end
$var wire 1 9C A [1] $end
$var wire 1 :C A [0] $end
$var wire 1 ~? B [3] $end
$var wire 1 !@ B [2] $end
$var wire 1 "@ B [1] $end
$var wire 1 #@ B [0] $end
$var wire 1 ;C C_in $end
$var wire 1 ^? S [3] $end
$var wire 1 _? S [2] $end
$var wire 1 `? S [1] $end
$var wire 1 a? S [0] $end
$var wire 1 @C P $end
$var wire 1 HC G $end
$var wire 1 UC C_out $end
$var wire 1 VC c0 $end
$var wire 1 WC c1 $end
$var wire 1 XC c2 $end
$var wire 1 YC p0 $end
$var wire 1 ZC g0 $end
$var wire 1 [C p1 $end
$var wire 1 \C g1 $end
$var wire 1 ]C p2 $end
$var wire 1 ^C g2 $end
$var wire 1 _C p3 $end
$var wire 1 `C g3 $end
$var wire 1 aC g0_bar $end
$var wire 1 bC g1_bar $end
$var wire 1 cC g2_bar $end
$var wire 1 dC g3_bar $end
$var wire 1 eC nand2_c0_0_out $end
$var wire 1 fC nand2_c1_0_out $end
$var wire 1 gC nand2_c2_0_out $end
$var wire 1 hC nand2_c3_0_out $end
$var wire 1 iC nand2_p3_p2 $end
$var wire 1 jC nand2_p1_p0 $end
$var wire 1 kC nand2_p3g2_out $end
$var wire 1 lC nand2_p3p2g1_out $end
$var wire 1 mC nand3_G_0_out $end
$var wire 1 nC nand2_p1g0_out $end
$var wire 1 oC nor2_G_0_out $end
$var wire 1 pC G_bar $end

$scope module not1_c0_0 $end
$var wire 1 ZC in1 $end
$var wire 1 aC out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 YC in1 $end
$var wire 1 ;C in2 $end
$var wire 1 eC out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 aC in1 $end
$var wire 1 eC in2 $end
$var wire 1 VC out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 \C in1 $end
$var wire 1 bC out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 [C in1 $end
$var wire 1 VC in2 $end
$var wire 1 fC out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 bC in1 $end
$var wire 1 fC in2 $end
$var wire 1 WC out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ^C in1 $end
$var wire 1 cC out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 ]C in1 $end
$var wire 1 WC in2 $end
$var wire 1 gC out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 cC in1 $end
$var wire 1 gC in2 $end
$var wire 1 XC out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 `C in1 $end
$var wire 1 dC out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 _C in1 $end
$var wire 1 XC in2 $end
$var wire 1 hC out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 dC in1 $end
$var wire 1 hC in2 $end
$var wire 1 UC out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 _C in1 $end
$var wire 1 ]C in2 $end
$var wire 1 iC out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 [C in1 $end
$var wire 1 YC in2 $end
$var wire 1 jC out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 iC in1 $end
$var wire 1 jC in2 $end
$var wire 1 @C out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 _C in1 $end
$var wire 1 ^C in2 $end
$var wire 1 kC out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 _C in1 $end
$var wire 1 ]C in2 $end
$var wire 1 \C in3 $end
$var wire 1 lC out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 dC in1 $end
$var wire 1 kC in2 $end
$var wire 1 lC in3 $end
$var wire 1 mC out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 [C in1 $end
$var wire 1 ZC in2 $end
$var wire 1 nC out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 iC in1 $end
$var wire 1 nC in2 $end
$var wire 1 oC out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 mC in1 $end
$var wire 1 oC in2 $end
$var wire 1 pC out $end
$upscope $end

$scope module not1_G $end
$var wire 1 pC in1 $end
$var wire 1 HC out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 :C A $end
$var wire 1 #@ B $end
$var wire 1 ;C C_in $end
$var wire 1 YC p $end
$var wire 1 ZC g $end
$var wire 1 a? S $end
$var wire 1 qC C_out $end
$var wire 1 rC g_bar $end
$var wire 1 sC p_bar $end
$var wire 1 tC nand2_1_out $end
$var wire 1 uC nand2_2_out $end
$var wire 1 vC nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 :C in1 $end
$var wire 1 #@ in2 $end
$var wire 1 rC out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 rC in1 $end
$var wire 1 ZC out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 :C in1 $end
$var wire 1 #@ in2 $end
$var wire 1 sC out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 sC in1 $end
$var wire 1 YC out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 :C in1 $end
$var wire 1 #@ in2 $end
$var wire 1 tC out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 :C in1 $end
$var wire 1 ;C in2 $end
$var wire 1 uC out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 #@ in1 $end
$var wire 1 ;C in2 $end
$var wire 1 vC out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 tC in1 $end
$var wire 1 uC in2 $end
$var wire 1 vC in3 $end
$var wire 1 qC out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 :C in1 $end
$var wire 1 #@ in2 $end
$var wire 1 ;C in3 $end
$var wire 1 a? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 9C A $end
$var wire 1 "@ B $end
$var wire 1 VC C_in $end
$var wire 1 [C p $end
$var wire 1 \C g $end
$var wire 1 `? S $end
$var wire 1 wC C_out $end
$var wire 1 xC g_bar $end
$var wire 1 yC p_bar $end
$var wire 1 zC nand2_1_out $end
$var wire 1 {C nand2_2_out $end
$var wire 1 |C nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 9C in1 $end
$var wire 1 "@ in2 $end
$var wire 1 xC out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 xC in1 $end
$var wire 1 \C out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 9C in1 $end
$var wire 1 "@ in2 $end
$var wire 1 yC out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 yC in1 $end
$var wire 1 [C out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 9C in1 $end
$var wire 1 "@ in2 $end
$var wire 1 zC out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 9C in1 $end
$var wire 1 VC in2 $end
$var wire 1 {C out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 "@ in1 $end
$var wire 1 VC in2 $end
$var wire 1 |C out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 zC in1 $end
$var wire 1 {C in2 $end
$var wire 1 |C in3 $end
$var wire 1 wC out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 9C in1 $end
$var wire 1 "@ in2 $end
$var wire 1 VC in3 $end
$var wire 1 `? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 8C A $end
$var wire 1 !@ B $end
$var wire 1 WC C_in $end
$var wire 1 ]C p $end
$var wire 1 ^C g $end
$var wire 1 _? S $end
$var wire 1 }C C_out $end
$var wire 1 ~C g_bar $end
$var wire 1 !D p_bar $end
$var wire 1 "D nand2_1_out $end
$var wire 1 #D nand2_2_out $end
$var wire 1 $D nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 8C in1 $end
$var wire 1 !@ in2 $end
$var wire 1 ~C out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ~C in1 $end
$var wire 1 ^C out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 8C in1 $end
$var wire 1 !@ in2 $end
$var wire 1 !D out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 !D in1 $end
$var wire 1 ]C out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 8C in1 $end
$var wire 1 !@ in2 $end
$var wire 1 "D out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 8C in1 $end
$var wire 1 WC in2 $end
$var wire 1 #D out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 !@ in1 $end
$var wire 1 WC in2 $end
$var wire 1 $D out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 "D in1 $end
$var wire 1 #D in2 $end
$var wire 1 $D in3 $end
$var wire 1 }C out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 8C in1 $end
$var wire 1 !@ in2 $end
$var wire 1 WC in3 $end
$var wire 1 _? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 7C A $end
$var wire 1 ~? B $end
$var wire 1 XC C_in $end
$var wire 1 _C p $end
$var wire 1 `C g $end
$var wire 1 ^? S $end
$var wire 1 %D C_out $end
$var wire 1 &D g_bar $end
$var wire 1 'D p_bar $end
$var wire 1 (D nand2_1_out $end
$var wire 1 )D nand2_2_out $end
$var wire 1 *D nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 7C in1 $end
$var wire 1 ~? in2 $end
$var wire 1 &D out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 &D in1 $end
$var wire 1 `C out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 7C in1 $end
$var wire 1 ~? in2 $end
$var wire 1 'D out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 'D in1 $end
$var wire 1 _C out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 7C in1 $end
$var wire 1 ~? in2 $end
$var wire 1 (D out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 7C in1 $end
$var wire 1 XC in2 $end
$var wire 1 )D out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 ~? in1 $end
$var wire 1 XC in2 $end
$var wire 1 *D out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 (D in1 $end
$var wire 1 )D in2 $end
$var wire 1 *D in3 $end
$var wire 1 %D out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 7C in1 $end
$var wire 1 ~? in2 $end
$var wire 1 XC in3 $end
$var wire 1 ^? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 +D N $end
$var wire 1 3C A [3] $end
$var wire 1 4C A [2] $end
$var wire 1 5C A [1] $end
$var wire 1 6C A [0] $end
$var wire 1 z? B [3] $end
$var wire 1 {? B [2] $end
$var wire 1 |? B [1] $end
$var wire 1 }? B [0] $end
$var wire 1 =C C_in $end
$var wire 1 Z? S [3] $end
$var wire 1 [? S [2] $end
$var wire 1 \? S [1] $end
$var wire 1 ]? S [0] $end
$var wire 1 BC P $end
$var wire 1 JC G $end
$var wire 1 ,D C_out $end
$var wire 1 -D c0 $end
$var wire 1 .D c1 $end
$var wire 1 /D c2 $end
$var wire 1 0D p0 $end
$var wire 1 1D g0 $end
$var wire 1 2D p1 $end
$var wire 1 3D g1 $end
$var wire 1 4D p2 $end
$var wire 1 5D g2 $end
$var wire 1 6D p3 $end
$var wire 1 7D g3 $end
$var wire 1 8D g0_bar $end
$var wire 1 9D g1_bar $end
$var wire 1 :D g2_bar $end
$var wire 1 ;D g3_bar $end
$var wire 1 <D nand2_c0_0_out $end
$var wire 1 =D nand2_c1_0_out $end
$var wire 1 >D nand2_c2_0_out $end
$var wire 1 ?D nand2_c3_0_out $end
$var wire 1 @D nand2_p3_p2 $end
$var wire 1 AD nand2_p1_p0 $end
$var wire 1 BD nand2_p3g2_out $end
$var wire 1 CD nand2_p3p2g1_out $end
$var wire 1 DD nand3_G_0_out $end
$var wire 1 ED nand2_p1g0_out $end
$var wire 1 FD nor2_G_0_out $end
$var wire 1 GD G_bar $end

$scope module not1_c0_0 $end
$var wire 1 1D in1 $end
$var wire 1 8D out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 0D in1 $end
$var wire 1 =C in2 $end
$var wire 1 <D out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 8D in1 $end
$var wire 1 <D in2 $end
$var wire 1 -D out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 3D in1 $end
$var wire 1 9D out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 2D in1 $end
$var wire 1 -D in2 $end
$var wire 1 =D out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 9D in1 $end
$var wire 1 =D in2 $end
$var wire 1 .D out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 5D in1 $end
$var wire 1 :D out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 4D in1 $end
$var wire 1 .D in2 $end
$var wire 1 >D out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 :D in1 $end
$var wire 1 >D in2 $end
$var wire 1 /D out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 7D in1 $end
$var wire 1 ;D out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 6D in1 $end
$var wire 1 /D in2 $end
$var wire 1 ?D out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 ;D in1 $end
$var wire 1 ?D in2 $end
$var wire 1 ,D out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 6D in1 $end
$var wire 1 4D in2 $end
$var wire 1 @D out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 2D in1 $end
$var wire 1 0D in2 $end
$var wire 1 AD out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 @D in1 $end
$var wire 1 AD in2 $end
$var wire 1 BC out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 6D in1 $end
$var wire 1 5D in2 $end
$var wire 1 BD out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 6D in1 $end
$var wire 1 4D in2 $end
$var wire 1 3D in3 $end
$var wire 1 CD out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 ;D in1 $end
$var wire 1 BD in2 $end
$var wire 1 CD in3 $end
$var wire 1 DD out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 2D in1 $end
$var wire 1 1D in2 $end
$var wire 1 ED out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 @D in1 $end
$var wire 1 ED in2 $end
$var wire 1 FD out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 DD in1 $end
$var wire 1 FD in2 $end
$var wire 1 GD out $end
$upscope $end

$scope module not1_G $end
$var wire 1 GD in1 $end
$var wire 1 JC out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 6C A $end
$var wire 1 }? B $end
$var wire 1 =C C_in $end
$var wire 1 0D p $end
$var wire 1 1D g $end
$var wire 1 ]? S $end
$var wire 1 HD C_out $end
$var wire 1 ID g_bar $end
$var wire 1 JD p_bar $end
$var wire 1 KD nand2_1_out $end
$var wire 1 LD nand2_2_out $end
$var wire 1 MD nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 6C in1 $end
$var wire 1 }? in2 $end
$var wire 1 ID out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ID in1 $end
$var wire 1 1D out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 6C in1 $end
$var wire 1 }? in2 $end
$var wire 1 JD out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 JD in1 $end
$var wire 1 0D out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 6C in1 $end
$var wire 1 }? in2 $end
$var wire 1 KD out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 6C in1 $end
$var wire 1 =C in2 $end
$var wire 1 LD out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 }? in1 $end
$var wire 1 =C in2 $end
$var wire 1 MD out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 KD in1 $end
$var wire 1 LD in2 $end
$var wire 1 MD in3 $end
$var wire 1 HD out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 6C in1 $end
$var wire 1 }? in2 $end
$var wire 1 =C in3 $end
$var wire 1 ]? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 5C A $end
$var wire 1 |? B $end
$var wire 1 -D C_in $end
$var wire 1 2D p $end
$var wire 1 3D g $end
$var wire 1 \? S $end
$var wire 1 ND C_out $end
$var wire 1 OD g_bar $end
$var wire 1 PD p_bar $end
$var wire 1 QD nand2_1_out $end
$var wire 1 RD nand2_2_out $end
$var wire 1 SD nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 5C in1 $end
$var wire 1 |? in2 $end
$var wire 1 OD out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 OD in1 $end
$var wire 1 3D out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 5C in1 $end
$var wire 1 |? in2 $end
$var wire 1 PD out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 PD in1 $end
$var wire 1 2D out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 5C in1 $end
$var wire 1 |? in2 $end
$var wire 1 QD out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 5C in1 $end
$var wire 1 -D in2 $end
$var wire 1 RD out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 |? in1 $end
$var wire 1 -D in2 $end
$var wire 1 SD out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 QD in1 $end
$var wire 1 RD in2 $end
$var wire 1 SD in3 $end
$var wire 1 ND out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 5C in1 $end
$var wire 1 |? in2 $end
$var wire 1 -D in3 $end
$var wire 1 \? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 4C A $end
$var wire 1 {? B $end
$var wire 1 .D C_in $end
$var wire 1 4D p $end
$var wire 1 5D g $end
$var wire 1 [? S $end
$var wire 1 TD C_out $end
$var wire 1 UD g_bar $end
$var wire 1 VD p_bar $end
$var wire 1 WD nand2_1_out $end
$var wire 1 XD nand2_2_out $end
$var wire 1 YD nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 4C in1 $end
$var wire 1 {? in2 $end
$var wire 1 UD out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 UD in1 $end
$var wire 1 5D out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 4C in1 $end
$var wire 1 {? in2 $end
$var wire 1 VD out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 VD in1 $end
$var wire 1 4D out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 4C in1 $end
$var wire 1 {? in2 $end
$var wire 1 WD out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 4C in1 $end
$var wire 1 .D in2 $end
$var wire 1 XD out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 {? in1 $end
$var wire 1 .D in2 $end
$var wire 1 YD out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 WD in1 $end
$var wire 1 XD in2 $end
$var wire 1 YD in3 $end
$var wire 1 TD out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 4C in1 $end
$var wire 1 {? in2 $end
$var wire 1 .D in3 $end
$var wire 1 [? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 3C A $end
$var wire 1 z? B $end
$var wire 1 /D C_in $end
$var wire 1 6D p $end
$var wire 1 7D g $end
$var wire 1 Z? S $end
$var wire 1 ZD C_out $end
$var wire 1 [D g_bar $end
$var wire 1 \D p_bar $end
$var wire 1 ]D nand2_1_out $end
$var wire 1 ^D nand2_2_out $end
$var wire 1 _D nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 3C in1 $end
$var wire 1 z? in2 $end
$var wire 1 [D out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 [D in1 $end
$var wire 1 7D out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 3C in1 $end
$var wire 1 z? in2 $end
$var wire 1 \D out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 \D in1 $end
$var wire 1 6D out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 3C in1 $end
$var wire 1 z? in2 $end
$var wire 1 ]D out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 3C in1 $end
$var wire 1 /D in2 $end
$var wire 1 ^D out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 z? in1 $end
$var wire 1 /D in2 $end
$var wire 1 _D out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ]D in1 $end
$var wire 1 ^D in2 $end
$var wire 1 _D in3 $end
$var wire 1 ZD out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 3C in1 $end
$var wire 1 z? in2 $end
$var wire 1 /D in3 $end
$var wire 1 Z? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 `D N $end
$var wire 1 /C A [3] $end
$var wire 1 0C A [2] $end
$var wire 1 1C A [1] $end
$var wire 1 2C A [0] $end
$var wire 1 v? B [3] $end
$var wire 1 w? B [2] $end
$var wire 1 x? B [1] $end
$var wire 1 y? B [0] $end
$var wire 1 >C C_in $end
$var wire 1 V? S [3] $end
$var wire 1 W? S [2] $end
$var wire 1 X? S [1] $end
$var wire 1 Y? S [0] $end
$var wire 1 DC P $end
$var wire 1 LC G $end
$var wire 1 aD C_out $end
$var wire 1 bD c0 $end
$var wire 1 cD c1 $end
$var wire 1 dD c2 $end
$var wire 1 eD p0 $end
$var wire 1 fD g0 $end
$var wire 1 gD p1 $end
$var wire 1 hD g1 $end
$var wire 1 iD p2 $end
$var wire 1 jD g2 $end
$var wire 1 kD p3 $end
$var wire 1 lD g3 $end
$var wire 1 mD g0_bar $end
$var wire 1 nD g1_bar $end
$var wire 1 oD g2_bar $end
$var wire 1 pD g3_bar $end
$var wire 1 qD nand2_c0_0_out $end
$var wire 1 rD nand2_c1_0_out $end
$var wire 1 sD nand2_c2_0_out $end
$var wire 1 tD nand2_c3_0_out $end
$var wire 1 uD nand2_p3_p2 $end
$var wire 1 vD nand2_p1_p0 $end
$var wire 1 wD nand2_p3g2_out $end
$var wire 1 xD nand2_p3p2g1_out $end
$var wire 1 yD nand3_G_0_out $end
$var wire 1 zD nand2_p1g0_out $end
$var wire 1 {D nor2_G_0_out $end
$var wire 1 |D G_bar $end

$scope module not1_c0_0 $end
$var wire 1 fD in1 $end
$var wire 1 mD out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 eD in1 $end
$var wire 1 >C in2 $end
$var wire 1 qD out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 mD in1 $end
$var wire 1 qD in2 $end
$var wire 1 bD out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 hD in1 $end
$var wire 1 nD out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 gD in1 $end
$var wire 1 bD in2 $end
$var wire 1 rD out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 nD in1 $end
$var wire 1 rD in2 $end
$var wire 1 cD out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 jD in1 $end
$var wire 1 oD out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 iD in1 $end
$var wire 1 cD in2 $end
$var wire 1 sD out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 oD in1 $end
$var wire 1 sD in2 $end
$var wire 1 dD out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 lD in1 $end
$var wire 1 pD out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 kD in1 $end
$var wire 1 dD in2 $end
$var wire 1 tD out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 pD in1 $end
$var wire 1 tD in2 $end
$var wire 1 aD out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 kD in1 $end
$var wire 1 iD in2 $end
$var wire 1 uD out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 gD in1 $end
$var wire 1 eD in2 $end
$var wire 1 vD out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 uD in1 $end
$var wire 1 vD in2 $end
$var wire 1 DC out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 kD in1 $end
$var wire 1 jD in2 $end
$var wire 1 wD out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 kD in1 $end
$var wire 1 iD in2 $end
$var wire 1 hD in3 $end
$var wire 1 xD out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 pD in1 $end
$var wire 1 wD in2 $end
$var wire 1 xD in3 $end
$var wire 1 yD out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 gD in1 $end
$var wire 1 fD in2 $end
$var wire 1 zD out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 uD in1 $end
$var wire 1 zD in2 $end
$var wire 1 {D out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 yD in1 $end
$var wire 1 {D in2 $end
$var wire 1 |D out $end
$upscope $end

$scope module not1_G $end
$var wire 1 |D in1 $end
$var wire 1 LC out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 2C A $end
$var wire 1 y? B $end
$var wire 1 >C C_in $end
$var wire 1 eD p $end
$var wire 1 fD g $end
$var wire 1 Y? S $end
$var wire 1 }D C_out $end
$var wire 1 ~D g_bar $end
$var wire 1 !E p_bar $end
$var wire 1 "E nand2_1_out $end
$var wire 1 #E nand2_2_out $end
$var wire 1 $E nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 2C in1 $end
$var wire 1 y? in2 $end
$var wire 1 ~D out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ~D in1 $end
$var wire 1 fD out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 2C in1 $end
$var wire 1 y? in2 $end
$var wire 1 !E out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 !E in1 $end
$var wire 1 eD out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 2C in1 $end
$var wire 1 y? in2 $end
$var wire 1 "E out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 2C in1 $end
$var wire 1 >C in2 $end
$var wire 1 #E out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 y? in1 $end
$var wire 1 >C in2 $end
$var wire 1 $E out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 "E in1 $end
$var wire 1 #E in2 $end
$var wire 1 $E in3 $end
$var wire 1 }D out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 2C in1 $end
$var wire 1 y? in2 $end
$var wire 1 >C in3 $end
$var wire 1 Y? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 1C A $end
$var wire 1 x? B $end
$var wire 1 bD C_in $end
$var wire 1 gD p $end
$var wire 1 hD g $end
$var wire 1 X? S $end
$var wire 1 %E C_out $end
$var wire 1 &E g_bar $end
$var wire 1 'E p_bar $end
$var wire 1 (E nand2_1_out $end
$var wire 1 )E nand2_2_out $end
$var wire 1 *E nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 1C in1 $end
$var wire 1 x? in2 $end
$var wire 1 &E out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 &E in1 $end
$var wire 1 hD out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 1C in1 $end
$var wire 1 x? in2 $end
$var wire 1 'E out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 'E in1 $end
$var wire 1 gD out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 1C in1 $end
$var wire 1 x? in2 $end
$var wire 1 (E out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 1C in1 $end
$var wire 1 bD in2 $end
$var wire 1 )E out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 x? in1 $end
$var wire 1 bD in2 $end
$var wire 1 *E out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 (E in1 $end
$var wire 1 )E in2 $end
$var wire 1 *E in3 $end
$var wire 1 %E out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 1C in1 $end
$var wire 1 x? in2 $end
$var wire 1 bD in3 $end
$var wire 1 X? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 0C A $end
$var wire 1 w? B $end
$var wire 1 cD C_in $end
$var wire 1 iD p $end
$var wire 1 jD g $end
$var wire 1 W? S $end
$var wire 1 +E C_out $end
$var wire 1 ,E g_bar $end
$var wire 1 -E p_bar $end
$var wire 1 .E nand2_1_out $end
$var wire 1 /E nand2_2_out $end
$var wire 1 0E nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 0C in1 $end
$var wire 1 w? in2 $end
$var wire 1 ,E out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ,E in1 $end
$var wire 1 jD out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 0C in1 $end
$var wire 1 w? in2 $end
$var wire 1 -E out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 -E in1 $end
$var wire 1 iD out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 0C in1 $end
$var wire 1 w? in2 $end
$var wire 1 .E out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 0C in1 $end
$var wire 1 cD in2 $end
$var wire 1 /E out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 w? in1 $end
$var wire 1 cD in2 $end
$var wire 1 0E out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 .E in1 $end
$var wire 1 /E in2 $end
$var wire 1 0E in3 $end
$var wire 1 +E out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 0C in1 $end
$var wire 1 w? in2 $end
$var wire 1 cD in3 $end
$var wire 1 W? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 /C A $end
$var wire 1 v? B $end
$var wire 1 dD C_in $end
$var wire 1 kD p $end
$var wire 1 lD g $end
$var wire 1 V? S $end
$var wire 1 1E C_out $end
$var wire 1 2E g_bar $end
$var wire 1 3E p_bar $end
$var wire 1 4E nand2_1_out $end
$var wire 1 5E nand2_2_out $end
$var wire 1 6E nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 /C in1 $end
$var wire 1 v? in2 $end
$var wire 1 2E out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 2E in1 $end
$var wire 1 lD out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 /C in1 $end
$var wire 1 v? in2 $end
$var wire 1 3E out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 3E in1 $end
$var wire 1 kD out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 /C in1 $end
$var wire 1 v? in2 $end
$var wire 1 4E out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 /C in1 $end
$var wire 1 dD in2 $end
$var wire 1 5E out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 v? in1 $end
$var wire 1 dD in2 $end
$var wire 1 6E out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 4E in1 $end
$var wire 1 5E in2 $end
$var wire 1 6E in3 $end
$var wire 1 1E out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 /C in1 $end
$var wire 1 v? in2 $end
$var wire 1 dD in3 $end
$var wire 1 V? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 7E N $end
$var wire 1 +C A [3] $end
$var wire 1 ,C A [2] $end
$var wire 1 -C A [1] $end
$var wire 1 .C A [0] $end
$var wire 1 r? B [3] $end
$var wire 1 s? B [2] $end
$var wire 1 t? B [1] $end
$var wire 1 u? B [0] $end
$var wire 1 ?C C_in $end
$var wire 1 R? S [3] $end
$var wire 1 S? S [2] $end
$var wire 1 T? S [1] $end
$var wire 1 U? S [0] $end
$var wire 1 FC P $end
$var wire 1 NC G $end
$var wire 1 8E C_out $end
$var wire 1 9E c0 $end
$var wire 1 :E c1 $end
$var wire 1 ;E c2 $end
$var wire 1 <E p0 $end
$var wire 1 =E g0 $end
$var wire 1 >E p1 $end
$var wire 1 ?E g1 $end
$var wire 1 @E p2 $end
$var wire 1 AE g2 $end
$var wire 1 BE p3 $end
$var wire 1 CE g3 $end
$var wire 1 DE g0_bar $end
$var wire 1 EE g1_bar $end
$var wire 1 FE g2_bar $end
$var wire 1 GE g3_bar $end
$var wire 1 HE nand2_c0_0_out $end
$var wire 1 IE nand2_c1_0_out $end
$var wire 1 JE nand2_c2_0_out $end
$var wire 1 KE nand2_c3_0_out $end
$var wire 1 LE nand2_p3_p2 $end
$var wire 1 ME nand2_p1_p0 $end
$var wire 1 NE nand2_p3g2_out $end
$var wire 1 OE nand2_p3p2g1_out $end
$var wire 1 PE nand3_G_0_out $end
$var wire 1 QE nand2_p1g0_out $end
$var wire 1 RE nor2_G_0_out $end
$var wire 1 SE G_bar $end

$scope module not1_c0_0 $end
$var wire 1 =E in1 $end
$var wire 1 DE out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 <E in1 $end
$var wire 1 ?C in2 $end
$var wire 1 HE out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 DE in1 $end
$var wire 1 HE in2 $end
$var wire 1 9E out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 ?E in1 $end
$var wire 1 EE out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 >E in1 $end
$var wire 1 9E in2 $end
$var wire 1 IE out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 EE in1 $end
$var wire 1 IE in2 $end
$var wire 1 :E out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 AE in1 $end
$var wire 1 FE out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 @E in1 $end
$var wire 1 :E in2 $end
$var wire 1 JE out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 FE in1 $end
$var wire 1 JE in2 $end
$var wire 1 ;E out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 CE in1 $end
$var wire 1 GE out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 BE in1 $end
$var wire 1 ;E in2 $end
$var wire 1 KE out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 GE in1 $end
$var wire 1 KE in2 $end
$var wire 1 8E out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 BE in1 $end
$var wire 1 @E in2 $end
$var wire 1 LE out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 >E in1 $end
$var wire 1 <E in2 $end
$var wire 1 ME out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 LE in1 $end
$var wire 1 ME in2 $end
$var wire 1 FC out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 BE in1 $end
$var wire 1 AE in2 $end
$var wire 1 NE out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 BE in1 $end
$var wire 1 @E in2 $end
$var wire 1 ?E in3 $end
$var wire 1 OE out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 GE in1 $end
$var wire 1 NE in2 $end
$var wire 1 OE in3 $end
$var wire 1 PE out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 >E in1 $end
$var wire 1 =E in2 $end
$var wire 1 QE out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 LE in1 $end
$var wire 1 QE in2 $end
$var wire 1 RE out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 PE in1 $end
$var wire 1 RE in2 $end
$var wire 1 SE out $end
$upscope $end

$scope module not1_G $end
$var wire 1 SE in1 $end
$var wire 1 NC out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 .C A $end
$var wire 1 u? B $end
$var wire 1 ?C C_in $end
$var wire 1 <E p $end
$var wire 1 =E g $end
$var wire 1 U? S $end
$var wire 1 TE C_out $end
$var wire 1 UE g_bar $end
$var wire 1 VE p_bar $end
$var wire 1 WE nand2_1_out $end
$var wire 1 XE nand2_2_out $end
$var wire 1 YE nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 .C in1 $end
$var wire 1 u? in2 $end
$var wire 1 UE out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 UE in1 $end
$var wire 1 =E out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 .C in1 $end
$var wire 1 u? in2 $end
$var wire 1 VE out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 VE in1 $end
$var wire 1 <E out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 .C in1 $end
$var wire 1 u? in2 $end
$var wire 1 WE out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 .C in1 $end
$var wire 1 ?C in2 $end
$var wire 1 XE out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 u? in1 $end
$var wire 1 ?C in2 $end
$var wire 1 YE out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 WE in1 $end
$var wire 1 XE in2 $end
$var wire 1 YE in3 $end
$var wire 1 TE out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 .C in1 $end
$var wire 1 u? in2 $end
$var wire 1 ?C in3 $end
$var wire 1 U? out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 -C A $end
$var wire 1 t? B $end
$var wire 1 9E C_in $end
$var wire 1 >E p $end
$var wire 1 ?E g $end
$var wire 1 T? S $end
$var wire 1 ZE C_out $end
$var wire 1 [E g_bar $end
$var wire 1 \E p_bar $end
$var wire 1 ]E nand2_1_out $end
$var wire 1 ^E nand2_2_out $end
$var wire 1 _E nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 -C in1 $end
$var wire 1 t? in2 $end
$var wire 1 [E out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 [E in1 $end
$var wire 1 ?E out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 -C in1 $end
$var wire 1 t? in2 $end
$var wire 1 \E out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 \E in1 $end
$var wire 1 >E out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 -C in1 $end
$var wire 1 t? in2 $end
$var wire 1 ]E out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 -C in1 $end
$var wire 1 9E in2 $end
$var wire 1 ^E out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 t? in1 $end
$var wire 1 9E in2 $end
$var wire 1 _E out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ]E in1 $end
$var wire 1 ^E in2 $end
$var wire 1 _E in3 $end
$var wire 1 ZE out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 -C in1 $end
$var wire 1 t? in2 $end
$var wire 1 9E in3 $end
$var wire 1 T? out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 ,C A $end
$var wire 1 s? B $end
$var wire 1 :E C_in $end
$var wire 1 @E p $end
$var wire 1 AE g $end
$var wire 1 S? S $end
$var wire 1 `E C_out $end
$var wire 1 aE g_bar $end
$var wire 1 bE p_bar $end
$var wire 1 cE nand2_1_out $end
$var wire 1 dE nand2_2_out $end
$var wire 1 eE nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 ,C in1 $end
$var wire 1 s? in2 $end
$var wire 1 aE out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 aE in1 $end
$var wire 1 AE out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 ,C in1 $end
$var wire 1 s? in2 $end
$var wire 1 bE out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 bE in1 $end
$var wire 1 @E out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 ,C in1 $end
$var wire 1 s? in2 $end
$var wire 1 cE out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 ,C in1 $end
$var wire 1 :E in2 $end
$var wire 1 dE out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 s? in1 $end
$var wire 1 :E in2 $end
$var wire 1 eE out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 cE in1 $end
$var wire 1 dE in2 $end
$var wire 1 eE in3 $end
$var wire 1 `E out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 ,C in1 $end
$var wire 1 s? in2 $end
$var wire 1 :E in3 $end
$var wire 1 S? out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 +C A $end
$var wire 1 r? B $end
$var wire 1 ;E C_in $end
$var wire 1 BE p $end
$var wire 1 CE g $end
$var wire 1 R? S $end
$var wire 1 fE C_out $end
$var wire 1 gE g_bar $end
$var wire 1 hE p_bar $end
$var wire 1 iE nand2_1_out $end
$var wire 1 jE nand2_2_out $end
$var wire 1 kE nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 +C in1 $end
$var wire 1 r? in2 $end
$var wire 1 gE out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 gE in1 $end
$var wire 1 CE out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 +C in1 $end
$var wire 1 r? in2 $end
$var wire 1 hE out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 hE in1 $end
$var wire 1 BE out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 +C in1 $end
$var wire 1 r? in2 $end
$var wire 1 iE out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 +C in1 $end
$var wire 1 ;E in2 $end
$var wire 1 jE out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 r? in1 $end
$var wire 1 ;E in2 $end
$var wire 1 kE out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 iE in1 $end
$var wire 1 jE in2 $end
$var wire 1 kE in3 $end
$var wire 1 fE out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 +C in1 $end
$var wire 1 r? in2 $end
$var wire 1 ;E in3 $end
$var wire 1 R? out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 HC in1 $end
$var wire 1 IC out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 @C in1 $end
$var wire 1 ;C in2 $end
$var wire 1 PC out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 IC in1 $end
$var wire 1 PC in2 $end
$var wire 1 =C out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 JC in1 $end
$var wire 1 KC out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 BC in1 $end
$var wire 1 =C in2 $end
$var wire 1 QC out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 KC in1 $end
$var wire 1 QC in2 $end
$var wire 1 >C out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 LC in1 $end
$var wire 1 MC out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 DC in1 $end
$var wire 1 >C in2 $end
$var wire 1 RC out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 MC in1 $end
$var wire 1 RC in2 $end
$var wire 1 ?C out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 NC in1 $end
$var wire 1 OC out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 FC in1 $end
$var wire 1 ?C in2 $end
$var wire 1 SC out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 OC in1 $end
$var wire 1 SC in2 $end
$var wire 1 <C out $end
$upscope $end
$upscope $end
$upscope $end

$scope module jb_pc_add $end
$var parameter 32 lE N $end
$var wire 1 R' A [15] $end
$var wire 1 S' A [14] $end
$var wire 1 T' A [13] $end
$var wire 1 U' A [12] $end
$var wire 1 V' A [11] $end
$var wire 1 W' A [10] $end
$var wire 1 X' A [9] $end
$var wire 1 Y' A [8] $end
$var wire 1 Z' A [7] $end
$var wire 1 [' A [6] $end
$var wire 1 \' A [5] $end
$var wire 1 ]' A [4] $end
$var wire 1 ^' A [3] $end
$var wire 1 _' A [2] $end
$var wire 1 `' A [1] $end
$var wire 1 a' A [0] $end
$var wire 1 B' B [15] $end
$var wire 1 C' B [14] $end
$var wire 1 D' B [13] $end
$var wire 1 E' B [12] $end
$var wire 1 F' B [11] $end
$var wire 1 G' B [10] $end
$var wire 1 H' B [9] $end
$var wire 1 I' B [8] $end
$var wire 1 J' B [7] $end
$var wire 1 K' B [6] $end
$var wire 1 L' B [5] $end
$var wire 1 M' B [4] $end
$var wire 1 N' B [3] $end
$var wire 1 O' B [2] $end
$var wire 1 P' B [1] $end
$var wire 1 Q' B [0] $end
$var wire 1 mE C_in $end
$var wire 1 C9 S [15] $end
$var wire 1 D9 S [14] $end
$var wire 1 E9 S [13] $end
$var wire 1 F9 S [12] $end
$var wire 1 G9 S [11] $end
$var wire 1 H9 S [10] $end
$var wire 1 I9 S [9] $end
$var wire 1 J9 S [8] $end
$var wire 1 K9 S [7] $end
$var wire 1 L9 S [6] $end
$var wire 1 M9 S [5] $end
$var wire 1 N9 S [4] $end
$var wire 1 O9 S [3] $end
$var wire 1 P9 S [2] $end
$var wire 1 Q9 S [1] $end
$var wire 1 R9 S [0] $end
$var wire 1 nE C_out $end
$var wire 1 oE C0 $end
$var wire 1 pE C1 $end
$var wire 1 qE C2 $end
$var wire 1 rE P0 $end
$var wire 1 sE P0_bar $end
$var wire 1 tE P1 $end
$var wire 1 uE P1_bar $end
$var wire 1 vE P2 $end
$var wire 1 wE P2_bar $end
$var wire 1 xE P3 $end
$var wire 1 yE P3_bar $end
$var wire 1 zE G0 $end
$var wire 1 {E G0_bar $end
$var wire 1 |E G1 $end
$var wire 1 }E G1_bar $end
$var wire 1 ~E G2 $end
$var wire 1 !F G2_bar $end
$var wire 1 "F G3 $end
$var wire 1 #F G3_bar $end
$var wire 1 $F nand2_c0_0_out $end
$var wire 1 %F nand2_c1_0_out $end
$var wire 1 &F nand2_c2_0_out $end
$var wire 1 'F nand2_c3_0_out $end

$scope module cla4_0 $end
$var parameter 32 (F N $end
$var wire 1 ^' A [3] $end
$var wire 1 _' A [2] $end
$var wire 1 `' A [1] $end
$var wire 1 a' A [0] $end
$var wire 1 N' B [3] $end
$var wire 1 O' B [2] $end
$var wire 1 P' B [1] $end
$var wire 1 Q' B [0] $end
$var wire 1 mE C_in $end
$var wire 1 O9 S [3] $end
$var wire 1 P9 S [2] $end
$var wire 1 Q9 S [1] $end
$var wire 1 R9 S [0] $end
$var wire 1 rE P $end
$var wire 1 zE G $end
$var wire 1 )F C_out $end
$var wire 1 *F c0 $end
$var wire 1 +F c1 $end
$var wire 1 ,F c2 $end
$var wire 1 -F p0 $end
$var wire 1 .F g0 $end
$var wire 1 /F p1 $end
$var wire 1 0F g1 $end
$var wire 1 1F p2 $end
$var wire 1 2F g2 $end
$var wire 1 3F p3 $end
$var wire 1 4F g3 $end
$var wire 1 5F g0_bar $end
$var wire 1 6F g1_bar $end
$var wire 1 7F g2_bar $end
$var wire 1 8F g3_bar $end
$var wire 1 9F nand2_c0_0_out $end
$var wire 1 :F nand2_c1_0_out $end
$var wire 1 ;F nand2_c2_0_out $end
$var wire 1 <F nand2_c3_0_out $end
$var wire 1 =F nand2_p3_p2 $end
$var wire 1 >F nand2_p1_p0 $end
$var wire 1 ?F nand2_p3g2_out $end
$var wire 1 @F nand2_p3p2g1_out $end
$var wire 1 AF nand3_G_0_out $end
$var wire 1 BF nand2_p1g0_out $end
$var wire 1 CF nor2_G_0_out $end
$var wire 1 DF G_bar $end

$scope module not1_c0_0 $end
$var wire 1 .F in1 $end
$var wire 1 5F out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 -F in1 $end
$var wire 1 mE in2 $end
$var wire 1 9F out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 5F in1 $end
$var wire 1 9F in2 $end
$var wire 1 *F out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 0F in1 $end
$var wire 1 6F out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 /F in1 $end
$var wire 1 *F in2 $end
$var wire 1 :F out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 6F in1 $end
$var wire 1 :F in2 $end
$var wire 1 +F out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 2F in1 $end
$var wire 1 7F out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 1F in1 $end
$var wire 1 +F in2 $end
$var wire 1 ;F out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 7F in1 $end
$var wire 1 ;F in2 $end
$var wire 1 ,F out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 4F in1 $end
$var wire 1 8F out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 3F in1 $end
$var wire 1 ,F in2 $end
$var wire 1 <F out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 8F in1 $end
$var wire 1 <F in2 $end
$var wire 1 )F out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 3F in1 $end
$var wire 1 1F in2 $end
$var wire 1 =F out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 /F in1 $end
$var wire 1 -F in2 $end
$var wire 1 >F out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 =F in1 $end
$var wire 1 >F in2 $end
$var wire 1 rE out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 3F in1 $end
$var wire 1 2F in2 $end
$var wire 1 ?F out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 3F in1 $end
$var wire 1 1F in2 $end
$var wire 1 0F in3 $end
$var wire 1 @F out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 8F in1 $end
$var wire 1 ?F in2 $end
$var wire 1 @F in3 $end
$var wire 1 AF out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 /F in1 $end
$var wire 1 .F in2 $end
$var wire 1 BF out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 =F in1 $end
$var wire 1 BF in2 $end
$var wire 1 CF out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 AF in1 $end
$var wire 1 CF in2 $end
$var wire 1 DF out $end
$upscope $end

$scope module not1_G $end
$var wire 1 DF in1 $end
$var wire 1 zE out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 a' A $end
$var wire 1 Q' B $end
$var wire 1 mE C_in $end
$var wire 1 -F p $end
$var wire 1 .F g $end
$var wire 1 R9 S $end
$var wire 1 EF C_out $end
$var wire 1 FF g_bar $end
$var wire 1 GF p_bar $end
$var wire 1 HF nand2_1_out $end
$var wire 1 IF nand2_2_out $end
$var wire 1 JF nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 a' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 FF out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 FF in1 $end
$var wire 1 .F out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 a' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 GF out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 GF in1 $end
$var wire 1 -F out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 a' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 HF out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 a' in1 $end
$var wire 1 mE in2 $end
$var wire 1 IF out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 Q' in1 $end
$var wire 1 mE in2 $end
$var wire 1 JF out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 HF in1 $end
$var wire 1 IF in2 $end
$var wire 1 JF in3 $end
$var wire 1 EF out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 a' in1 $end
$var wire 1 Q' in2 $end
$var wire 1 mE in3 $end
$var wire 1 R9 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 `' A $end
$var wire 1 P' B $end
$var wire 1 *F C_in $end
$var wire 1 /F p $end
$var wire 1 0F g $end
$var wire 1 Q9 S $end
$var wire 1 KF C_out $end
$var wire 1 LF g_bar $end
$var wire 1 MF p_bar $end
$var wire 1 NF nand2_1_out $end
$var wire 1 OF nand2_2_out $end
$var wire 1 PF nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 `' in1 $end
$var wire 1 P' in2 $end
$var wire 1 LF out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 LF in1 $end
$var wire 1 0F out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 `' in1 $end
$var wire 1 P' in2 $end
$var wire 1 MF out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 MF in1 $end
$var wire 1 /F out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 `' in1 $end
$var wire 1 P' in2 $end
$var wire 1 NF out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 `' in1 $end
$var wire 1 *F in2 $end
$var wire 1 OF out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 P' in1 $end
$var wire 1 *F in2 $end
$var wire 1 PF out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 NF in1 $end
$var wire 1 OF in2 $end
$var wire 1 PF in3 $end
$var wire 1 KF out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 `' in1 $end
$var wire 1 P' in2 $end
$var wire 1 *F in3 $end
$var wire 1 Q9 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 _' A $end
$var wire 1 O' B $end
$var wire 1 +F C_in $end
$var wire 1 1F p $end
$var wire 1 2F g $end
$var wire 1 P9 S $end
$var wire 1 QF C_out $end
$var wire 1 RF g_bar $end
$var wire 1 SF p_bar $end
$var wire 1 TF nand2_1_out $end
$var wire 1 UF nand2_2_out $end
$var wire 1 VF nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 _' in1 $end
$var wire 1 O' in2 $end
$var wire 1 RF out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 RF in1 $end
$var wire 1 2F out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 _' in1 $end
$var wire 1 O' in2 $end
$var wire 1 SF out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 SF in1 $end
$var wire 1 1F out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 _' in1 $end
$var wire 1 O' in2 $end
$var wire 1 TF out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 _' in1 $end
$var wire 1 +F in2 $end
$var wire 1 UF out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 O' in1 $end
$var wire 1 +F in2 $end
$var wire 1 VF out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 TF in1 $end
$var wire 1 UF in2 $end
$var wire 1 VF in3 $end
$var wire 1 QF out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 _' in1 $end
$var wire 1 O' in2 $end
$var wire 1 +F in3 $end
$var wire 1 P9 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 ^' A $end
$var wire 1 N' B $end
$var wire 1 ,F C_in $end
$var wire 1 3F p $end
$var wire 1 4F g $end
$var wire 1 O9 S $end
$var wire 1 WF C_out $end
$var wire 1 XF g_bar $end
$var wire 1 YF p_bar $end
$var wire 1 ZF nand2_1_out $end
$var wire 1 [F nand2_2_out $end
$var wire 1 \F nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 ^' in1 $end
$var wire 1 N' in2 $end
$var wire 1 XF out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 XF in1 $end
$var wire 1 4F out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 ^' in1 $end
$var wire 1 N' in2 $end
$var wire 1 YF out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 YF in1 $end
$var wire 1 3F out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 ^' in1 $end
$var wire 1 N' in2 $end
$var wire 1 ZF out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 ^' in1 $end
$var wire 1 ,F in2 $end
$var wire 1 [F out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 N' in1 $end
$var wire 1 ,F in2 $end
$var wire 1 \F out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ZF in1 $end
$var wire 1 [F in2 $end
$var wire 1 \F in3 $end
$var wire 1 WF out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 ^' in1 $end
$var wire 1 N' in2 $end
$var wire 1 ,F in3 $end
$var wire 1 O9 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_1 $end
$var parameter 32 ]F N $end
$var wire 1 Z' A [3] $end
$var wire 1 [' A [2] $end
$var wire 1 \' A [1] $end
$var wire 1 ]' A [0] $end
$var wire 1 J' B [3] $end
$var wire 1 K' B [2] $end
$var wire 1 L' B [1] $end
$var wire 1 M' B [0] $end
$var wire 1 oE C_in $end
$var wire 1 K9 S [3] $end
$var wire 1 L9 S [2] $end
$var wire 1 M9 S [1] $end
$var wire 1 N9 S [0] $end
$var wire 1 tE P $end
$var wire 1 |E G $end
$var wire 1 ^F C_out $end
$var wire 1 _F c0 $end
$var wire 1 `F c1 $end
$var wire 1 aF c2 $end
$var wire 1 bF p0 $end
$var wire 1 cF g0 $end
$var wire 1 dF p1 $end
$var wire 1 eF g1 $end
$var wire 1 fF p2 $end
$var wire 1 gF g2 $end
$var wire 1 hF p3 $end
$var wire 1 iF g3 $end
$var wire 1 jF g0_bar $end
$var wire 1 kF g1_bar $end
$var wire 1 lF g2_bar $end
$var wire 1 mF g3_bar $end
$var wire 1 nF nand2_c0_0_out $end
$var wire 1 oF nand2_c1_0_out $end
$var wire 1 pF nand2_c2_0_out $end
$var wire 1 qF nand2_c3_0_out $end
$var wire 1 rF nand2_p3_p2 $end
$var wire 1 sF nand2_p1_p0 $end
$var wire 1 tF nand2_p3g2_out $end
$var wire 1 uF nand2_p3p2g1_out $end
$var wire 1 vF nand3_G_0_out $end
$var wire 1 wF nand2_p1g0_out $end
$var wire 1 xF nor2_G_0_out $end
$var wire 1 yF G_bar $end

$scope module not1_c0_0 $end
$var wire 1 cF in1 $end
$var wire 1 jF out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 bF in1 $end
$var wire 1 oE in2 $end
$var wire 1 nF out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 jF in1 $end
$var wire 1 nF in2 $end
$var wire 1 _F out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 eF in1 $end
$var wire 1 kF out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 dF in1 $end
$var wire 1 _F in2 $end
$var wire 1 oF out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 kF in1 $end
$var wire 1 oF in2 $end
$var wire 1 `F out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 gF in1 $end
$var wire 1 lF out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 fF in1 $end
$var wire 1 `F in2 $end
$var wire 1 pF out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 lF in1 $end
$var wire 1 pF in2 $end
$var wire 1 aF out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 iF in1 $end
$var wire 1 mF out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 hF in1 $end
$var wire 1 aF in2 $end
$var wire 1 qF out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 mF in1 $end
$var wire 1 qF in2 $end
$var wire 1 ^F out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 hF in1 $end
$var wire 1 fF in2 $end
$var wire 1 rF out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 dF in1 $end
$var wire 1 bF in2 $end
$var wire 1 sF out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 rF in1 $end
$var wire 1 sF in2 $end
$var wire 1 tE out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 hF in1 $end
$var wire 1 gF in2 $end
$var wire 1 tF out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 hF in1 $end
$var wire 1 fF in2 $end
$var wire 1 eF in3 $end
$var wire 1 uF out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 mF in1 $end
$var wire 1 tF in2 $end
$var wire 1 uF in3 $end
$var wire 1 vF out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 dF in1 $end
$var wire 1 cF in2 $end
$var wire 1 wF out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 rF in1 $end
$var wire 1 wF in2 $end
$var wire 1 xF out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 vF in1 $end
$var wire 1 xF in2 $end
$var wire 1 yF out $end
$upscope $end

$scope module not1_G $end
$var wire 1 yF in1 $end
$var wire 1 |E out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 ]' A $end
$var wire 1 M' B $end
$var wire 1 oE C_in $end
$var wire 1 bF p $end
$var wire 1 cF g $end
$var wire 1 N9 S $end
$var wire 1 zF C_out $end
$var wire 1 {F g_bar $end
$var wire 1 |F p_bar $end
$var wire 1 }F nand2_1_out $end
$var wire 1 ~F nand2_2_out $end
$var wire 1 !G nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 ]' in1 $end
$var wire 1 M' in2 $end
$var wire 1 {F out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 {F in1 $end
$var wire 1 cF out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 ]' in1 $end
$var wire 1 M' in2 $end
$var wire 1 |F out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 |F in1 $end
$var wire 1 bF out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 ]' in1 $end
$var wire 1 M' in2 $end
$var wire 1 }F out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 ]' in1 $end
$var wire 1 oE in2 $end
$var wire 1 ~F out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 M' in1 $end
$var wire 1 oE in2 $end
$var wire 1 !G out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 }F in1 $end
$var wire 1 ~F in2 $end
$var wire 1 !G in3 $end
$var wire 1 zF out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 ]' in1 $end
$var wire 1 M' in2 $end
$var wire 1 oE in3 $end
$var wire 1 N9 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 \' A $end
$var wire 1 L' B $end
$var wire 1 _F C_in $end
$var wire 1 dF p $end
$var wire 1 eF g $end
$var wire 1 M9 S $end
$var wire 1 "G C_out $end
$var wire 1 #G g_bar $end
$var wire 1 $G p_bar $end
$var wire 1 %G nand2_1_out $end
$var wire 1 &G nand2_2_out $end
$var wire 1 'G nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 \' in1 $end
$var wire 1 L' in2 $end
$var wire 1 #G out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 #G in1 $end
$var wire 1 eF out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 \' in1 $end
$var wire 1 L' in2 $end
$var wire 1 $G out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 $G in1 $end
$var wire 1 dF out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 \' in1 $end
$var wire 1 L' in2 $end
$var wire 1 %G out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 \' in1 $end
$var wire 1 _F in2 $end
$var wire 1 &G out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 L' in1 $end
$var wire 1 _F in2 $end
$var wire 1 'G out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 %G in1 $end
$var wire 1 &G in2 $end
$var wire 1 'G in3 $end
$var wire 1 "G out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 \' in1 $end
$var wire 1 L' in2 $end
$var wire 1 _F in3 $end
$var wire 1 M9 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 [' A $end
$var wire 1 K' B $end
$var wire 1 `F C_in $end
$var wire 1 fF p $end
$var wire 1 gF g $end
$var wire 1 L9 S $end
$var wire 1 (G C_out $end
$var wire 1 )G g_bar $end
$var wire 1 *G p_bar $end
$var wire 1 +G nand2_1_out $end
$var wire 1 ,G nand2_2_out $end
$var wire 1 -G nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 [' in1 $end
$var wire 1 K' in2 $end
$var wire 1 )G out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 )G in1 $end
$var wire 1 gF out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 [' in1 $end
$var wire 1 K' in2 $end
$var wire 1 *G out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 *G in1 $end
$var wire 1 fF out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 [' in1 $end
$var wire 1 K' in2 $end
$var wire 1 +G out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 [' in1 $end
$var wire 1 `F in2 $end
$var wire 1 ,G out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 K' in1 $end
$var wire 1 `F in2 $end
$var wire 1 -G out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 +G in1 $end
$var wire 1 ,G in2 $end
$var wire 1 -G in3 $end
$var wire 1 (G out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 [' in1 $end
$var wire 1 K' in2 $end
$var wire 1 `F in3 $end
$var wire 1 L9 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 Z' A $end
$var wire 1 J' B $end
$var wire 1 aF C_in $end
$var wire 1 hF p $end
$var wire 1 iF g $end
$var wire 1 K9 S $end
$var wire 1 .G C_out $end
$var wire 1 /G g_bar $end
$var wire 1 0G p_bar $end
$var wire 1 1G nand2_1_out $end
$var wire 1 2G nand2_2_out $end
$var wire 1 3G nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Z' in1 $end
$var wire 1 J' in2 $end
$var wire 1 /G out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 /G in1 $end
$var wire 1 iF out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Z' in1 $end
$var wire 1 J' in2 $end
$var wire 1 0G out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 0G in1 $end
$var wire 1 hF out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Z' in1 $end
$var wire 1 J' in2 $end
$var wire 1 1G out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Z' in1 $end
$var wire 1 aF in2 $end
$var wire 1 2G out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 J' in1 $end
$var wire 1 aF in2 $end
$var wire 1 3G out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 1G in1 $end
$var wire 1 2G in2 $end
$var wire 1 3G in3 $end
$var wire 1 .G out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Z' in1 $end
$var wire 1 J' in2 $end
$var wire 1 aF in3 $end
$var wire 1 K9 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_2 $end
$var parameter 32 4G N $end
$var wire 1 V' A [3] $end
$var wire 1 W' A [2] $end
$var wire 1 X' A [1] $end
$var wire 1 Y' A [0] $end
$var wire 1 F' B [3] $end
$var wire 1 G' B [2] $end
$var wire 1 H' B [1] $end
$var wire 1 I' B [0] $end
$var wire 1 pE C_in $end
$var wire 1 G9 S [3] $end
$var wire 1 H9 S [2] $end
$var wire 1 I9 S [1] $end
$var wire 1 J9 S [0] $end
$var wire 1 vE P $end
$var wire 1 ~E G $end
$var wire 1 5G C_out $end
$var wire 1 6G c0 $end
$var wire 1 7G c1 $end
$var wire 1 8G c2 $end
$var wire 1 9G p0 $end
$var wire 1 :G g0 $end
$var wire 1 ;G p1 $end
$var wire 1 <G g1 $end
$var wire 1 =G p2 $end
$var wire 1 >G g2 $end
$var wire 1 ?G p3 $end
$var wire 1 @G g3 $end
$var wire 1 AG g0_bar $end
$var wire 1 BG g1_bar $end
$var wire 1 CG g2_bar $end
$var wire 1 DG g3_bar $end
$var wire 1 EG nand2_c0_0_out $end
$var wire 1 FG nand2_c1_0_out $end
$var wire 1 GG nand2_c2_0_out $end
$var wire 1 HG nand2_c3_0_out $end
$var wire 1 IG nand2_p3_p2 $end
$var wire 1 JG nand2_p1_p0 $end
$var wire 1 KG nand2_p3g2_out $end
$var wire 1 LG nand2_p3p2g1_out $end
$var wire 1 MG nand3_G_0_out $end
$var wire 1 NG nand2_p1g0_out $end
$var wire 1 OG nor2_G_0_out $end
$var wire 1 PG G_bar $end

$scope module not1_c0_0 $end
$var wire 1 :G in1 $end
$var wire 1 AG out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 9G in1 $end
$var wire 1 pE in2 $end
$var wire 1 EG out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 AG in1 $end
$var wire 1 EG in2 $end
$var wire 1 6G out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 <G in1 $end
$var wire 1 BG out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 ;G in1 $end
$var wire 1 6G in2 $end
$var wire 1 FG out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 BG in1 $end
$var wire 1 FG in2 $end
$var wire 1 7G out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 >G in1 $end
$var wire 1 CG out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 =G in1 $end
$var wire 1 7G in2 $end
$var wire 1 GG out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 CG in1 $end
$var wire 1 GG in2 $end
$var wire 1 8G out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 @G in1 $end
$var wire 1 DG out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 ?G in1 $end
$var wire 1 8G in2 $end
$var wire 1 HG out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 DG in1 $end
$var wire 1 HG in2 $end
$var wire 1 5G out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 ?G in1 $end
$var wire 1 =G in2 $end
$var wire 1 IG out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 ;G in1 $end
$var wire 1 9G in2 $end
$var wire 1 JG out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 IG in1 $end
$var wire 1 JG in2 $end
$var wire 1 vE out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 ?G in1 $end
$var wire 1 >G in2 $end
$var wire 1 KG out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 ?G in1 $end
$var wire 1 =G in2 $end
$var wire 1 <G in3 $end
$var wire 1 LG out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 DG in1 $end
$var wire 1 KG in2 $end
$var wire 1 LG in3 $end
$var wire 1 MG out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 ;G in1 $end
$var wire 1 :G in2 $end
$var wire 1 NG out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 IG in1 $end
$var wire 1 NG in2 $end
$var wire 1 OG out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 MG in1 $end
$var wire 1 OG in2 $end
$var wire 1 PG out $end
$upscope $end

$scope module not1_G $end
$var wire 1 PG in1 $end
$var wire 1 ~E out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 Y' A $end
$var wire 1 I' B $end
$var wire 1 pE C_in $end
$var wire 1 9G p $end
$var wire 1 :G g $end
$var wire 1 J9 S $end
$var wire 1 QG C_out $end
$var wire 1 RG g_bar $end
$var wire 1 SG p_bar $end
$var wire 1 TG nand2_1_out $end
$var wire 1 UG nand2_2_out $end
$var wire 1 VG nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 Y' in1 $end
$var wire 1 I' in2 $end
$var wire 1 RG out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 RG in1 $end
$var wire 1 :G out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 Y' in1 $end
$var wire 1 I' in2 $end
$var wire 1 SG out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 SG in1 $end
$var wire 1 9G out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 Y' in1 $end
$var wire 1 I' in2 $end
$var wire 1 TG out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 Y' in1 $end
$var wire 1 pE in2 $end
$var wire 1 UG out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 I' in1 $end
$var wire 1 pE in2 $end
$var wire 1 VG out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 TG in1 $end
$var wire 1 UG in2 $end
$var wire 1 VG in3 $end
$var wire 1 QG out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 Y' in1 $end
$var wire 1 I' in2 $end
$var wire 1 pE in3 $end
$var wire 1 J9 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 X' A $end
$var wire 1 H' B $end
$var wire 1 6G C_in $end
$var wire 1 ;G p $end
$var wire 1 <G g $end
$var wire 1 I9 S $end
$var wire 1 WG C_out $end
$var wire 1 XG g_bar $end
$var wire 1 YG p_bar $end
$var wire 1 ZG nand2_1_out $end
$var wire 1 [G nand2_2_out $end
$var wire 1 \G nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 X' in1 $end
$var wire 1 H' in2 $end
$var wire 1 XG out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 XG in1 $end
$var wire 1 <G out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 X' in1 $end
$var wire 1 H' in2 $end
$var wire 1 YG out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 YG in1 $end
$var wire 1 ;G out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 X' in1 $end
$var wire 1 H' in2 $end
$var wire 1 ZG out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 X' in1 $end
$var wire 1 6G in2 $end
$var wire 1 [G out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 H' in1 $end
$var wire 1 6G in2 $end
$var wire 1 \G out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 ZG in1 $end
$var wire 1 [G in2 $end
$var wire 1 \G in3 $end
$var wire 1 WG out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 X' in1 $end
$var wire 1 H' in2 $end
$var wire 1 6G in3 $end
$var wire 1 I9 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 W' A $end
$var wire 1 G' B $end
$var wire 1 7G C_in $end
$var wire 1 =G p $end
$var wire 1 >G g $end
$var wire 1 H9 S $end
$var wire 1 ]G C_out $end
$var wire 1 ^G g_bar $end
$var wire 1 _G p_bar $end
$var wire 1 `G nand2_1_out $end
$var wire 1 aG nand2_2_out $end
$var wire 1 bG nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 W' in1 $end
$var wire 1 G' in2 $end
$var wire 1 ^G out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ^G in1 $end
$var wire 1 >G out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 W' in1 $end
$var wire 1 G' in2 $end
$var wire 1 _G out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 _G in1 $end
$var wire 1 =G out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 W' in1 $end
$var wire 1 G' in2 $end
$var wire 1 `G out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 W' in1 $end
$var wire 1 7G in2 $end
$var wire 1 aG out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 G' in1 $end
$var wire 1 7G in2 $end
$var wire 1 bG out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 `G in1 $end
$var wire 1 aG in2 $end
$var wire 1 bG in3 $end
$var wire 1 ]G out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 W' in1 $end
$var wire 1 G' in2 $end
$var wire 1 7G in3 $end
$var wire 1 H9 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 V' A $end
$var wire 1 F' B $end
$var wire 1 8G C_in $end
$var wire 1 ?G p $end
$var wire 1 @G g $end
$var wire 1 G9 S $end
$var wire 1 cG C_out $end
$var wire 1 dG g_bar $end
$var wire 1 eG p_bar $end
$var wire 1 fG nand2_1_out $end
$var wire 1 gG nand2_2_out $end
$var wire 1 hG nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 V' in1 $end
$var wire 1 F' in2 $end
$var wire 1 dG out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 dG in1 $end
$var wire 1 @G out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 V' in1 $end
$var wire 1 F' in2 $end
$var wire 1 eG out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 eG in1 $end
$var wire 1 ?G out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 V' in1 $end
$var wire 1 F' in2 $end
$var wire 1 fG out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 V' in1 $end
$var wire 1 8G in2 $end
$var wire 1 gG out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 F' in1 $end
$var wire 1 8G in2 $end
$var wire 1 hG out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 fG in1 $end
$var wire 1 gG in2 $end
$var wire 1 hG in3 $end
$var wire 1 cG out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 V' in1 $end
$var wire 1 F' in2 $end
$var wire 1 8G in3 $end
$var wire 1 G9 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module cla4_3 $end
$var parameter 32 iG N $end
$var wire 1 R' A [3] $end
$var wire 1 S' A [2] $end
$var wire 1 T' A [1] $end
$var wire 1 U' A [0] $end
$var wire 1 B' B [3] $end
$var wire 1 C' B [2] $end
$var wire 1 D' B [1] $end
$var wire 1 E' B [0] $end
$var wire 1 qE C_in $end
$var wire 1 C9 S [3] $end
$var wire 1 D9 S [2] $end
$var wire 1 E9 S [1] $end
$var wire 1 F9 S [0] $end
$var wire 1 xE P $end
$var wire 1 "F G $end
$var wire 1 jG C_out $end
$var wire 1 kG c0 $end
$var wire 1 lG c1 $end
$var wire 1 mG c2 $end
$var wire 1 nG p0 $end
$var wire 1 oG g0 $end
$var wire 1 pG p1 $end
$var wire 1 qG g1 $end
$var wire 1 rG p2 $end
$var wire 1 sG g2 $end
$var wire 1 tG p3 $end
$var wire 1 uG g3 $end
$var wire 1 vG g0_bar $end
$var wire 1 wG g1_bar $end
$var wire 1 xG g2_bar $end
$var wire 1 yG g3_bar $end
$var wire 1 zG nand2_c0_0_out $end
$var wire 1 {G nand2_c1_0_out $end
$var wire 1 |G nand2_c2_0_out $end
$var wire 1 }G nand2_c3_0_out $end
$var wire 1 ~G nand2_p3_p2 $end
$var wire 1 !H nand2_p1_p0 $end
$var wire 1 "H nand2_p3g2_out $end
$var wire 1 #H nand2_p3p2g1_out $end
$var wire 1 $H nand3_G_0_out $end
$var wire 1 %H nand2_p1g0_out $end
$var wire 1 &H nor2_G_0_out $end
$var wire 1 'H G_bar $end

$scope module not1_c0_0 $end
$var wire 1 oG in1 $end
$var wire 1 vG out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 nG in1 $end
$var wire 1 qE in2 $end
$var wire 1 zG out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 vG in1 $end
$var wire 1 zG in2 $end
$var wire 1 kG out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 qG in1 $end
$var wire 1 wG out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 pG in1 $end
$var wire 1 kG in2 $end
$var wire 1 {G out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 wG in1 $end
$var wire 1 {G in2 $end
$var wire 1 lG out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 sG in1 $end
$var wire 1 xG out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 rG in1 $end
$var wire 1 lG in2 $end
$var wire 1 |G out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 xG in1 $end
$var wire 1 |G in2 $end
$var wire 1 mG out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 uG in1 $end
$var wire 1 yG out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 tG in1 $end
$var wire 1 mG in2 $end
$var wire 1 }G out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 yG in1 $end
$var wire 1 }G in2 $end
$var wire 1 jG out $end
$upscope $end

$scope module nand2_p32 $end
$var wire 1 tG in1 $end
$var wire 1 rG in2 $end
$var wire 1 ~G out $end
$upscope $end

$scope module nand2_p10 $end
$var wire 1 pG in1 $end
$var wire 1 nG in2 $end
$var wire 1 !H out $end
$upscope $end

$scope module nor2_P $end
$var wire 1 ~G in1 $end
$var wire 1 !H in2 $end
$var wire 1 xE out $end
$upscope $end

$scope module nand2_p3g2 $end
$var wire 1 tG in1 $end
$var wire 1 sG in2 $end
$var wire 1 "H out $end
$upscope $end

$scope module nand2_p3p2g1 $end
$var wire 1 tG in1 $end
$var wire 1 rG in2 $end
$var wire 1 qG in3 $end
$var wire 1 #H out $end
$upscope $end

$scope module nand3_G_0 $end
$var wire 1 yG in1 $end
$var wire 1 "H in2 $end
$var wire 1 #H in3 $end
$var wire 1 $H out $end
$upscope $end

$scope module nand2_p1g0 $end
$var wire 1 pG in1 $end
$var wire 1 oG in2 $end
$var wire 1 %H out $end
$upscope $end

$scope module nor2_G_0 $end
$var wire 1 ~G in1 $end
$var wire 1 %H in2 $end
$var wire 1 &H out $end
$upscope $end

$scope module nor2_G $end
$var wire 1 $H in1 $end
$var wire 1 &H in2 $end
$var wire 1 'H out $end
$upscope $end

$scope module not1_G $end
$var wire 1 'H in1 $end
$var wire 1 "F out $end
$upscope $end

$scope module fulladder_0 $end
$var wire 1 U' A $end
$var wire 1 E' B $end
$var wire 1 qE C_in $end
$var wire 1 nG p $end
$var wire 1 oG g $end
$var wire 1 F9 S $end
$var wire 1 (H C_out $end
$var wire 1 )H g_bar $end
$var wire 1 *H p_bar $end
$var wire 1 +H nand2_1_out $end
$var wire 1 ,H nand2_2_out $end
$var wire 1 -H nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 U' in1 $end
$var wire 1 E' in2 $end
$var wire 1 )H out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 )H in1 $end
$var wire 1 oG out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 U' in1 $end
$var wire 1 E' in2 $end
$var wire 1 *H out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 *H in1 $end
$var wire 1 nG out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 U' in1 $end
$var wire 1 E' in2 $end
$var wire 1 +H out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 U' in1 $end
$var wire 1 qE in2 $end
$var wire 1 ,H out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 E' in1 $end
$var wire 1 qE in2 $end
$var wire 1 -H out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 +H in1 $end
$var wire 1 ,H in2 $end
$var wire 1 -H in3 $end
$var wire 1 (H out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 U' in1 $end
$var wire 1 E' in2 $end
$var wire 1 qE in3 $end
$var wire 1 F9 out $end
$upscope $end
$upscope $end

$scope module fulladder_1 $end
$var wire 1 T' A $end
$var wire 1 D' B $end
$var wire 1 kG C_in $end
$var wire 1 pG p $end
$var wire 1 qG g $end
$var wire 1 E9 S $end
$var wire 1 .H C_out $end
$var wire 1 /H g_bar $end
$var wire 1 0H p_bar $end
$var wire 1 1H nand2_1_out $end
$var wire 1 2H nand2_2_out $end
$var wire 1 3H nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 T' in1 $end
$var wire 1 D' in2 $end
$var wire 1 /H out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 /H in1 $end
$var wire 1 qG out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 T' in1 $end
$var wire 1 D' in2 $end
$var wire 1 0H out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 0H in1 $end
$var wire 1 pG out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 T' in1 $end
$var wire 1 D' in2 $end
$var wire 1 1H out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 T' in1 $end
$var wire 1 kG in2 $end
$var wire 1 2H out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 D' in1 $end
$var wire 1 kG in2 $end
$var wire 1 3H out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 1H in1 $end
$var wire 1 2H in2 $end
$var wire 1 3H in3 $end
$var wire 1 .H out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 T' in1 $end
$var wire 1 D' in2 $end
$var wire 1 kG in3 $end
$var wire 1 E9 out $end
$upscope $end
$upscope $end

$scope module fulladder_2 $end
$var wire 1 S' A $end
$var wire 1 C' B $end
$var wire 1 lG C_in $end
$var wire 1 rG p $end
$var wire 1 sG g $end
$var wire 1 D9 S $end
$var wire 1 4H C_out $end
$var wire 1 5H g_bar $end
$var wire 1 6H p_bar $end
$var wire 1 7H nand2_1_out $end
$var wire 1 8H nand2_2_out $end
$var wire 1 9H nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 S' in1 $end
$var wire 1 C' in2 $end
$var wire 1 5H out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 5H in1 $end
$var wire 1 sG out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 S' in1 $end
$var wire 1 C' in2 $end
$var wire 1 6H out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 6H in1 $end
$var wire 1 rG out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 S' in1 $end
$var wire 1 C' in2 $end
$var wire 1 7H out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 S' in1 $end
$var wire 1 lG in2 $end
$var wire 1 8H out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 C' in1 $end
$var wire 1 lG in2 $end
$var wire 1 9H out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 7H in1 $end
$var wire 1 8H in2 $end
$var wire 1 9H in3 $end
$var wire 1 4H out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 S' in1 $end
$var wire 1 C' in2 $end
$var wire 1 lG in3 $end
$var wire 1 D9 out $end
$upscope $end
$upscope $end

$scope module fulladder_3 $end
$var wire 1 R' A $end
$var wire 1 B' B $end
$var wire 1 mG C_in $end
$var wire 1 tG p $end
$var wire 1 uG g $end
$var wire 1 C9 S $end
$var wire 1 :H C_out $end
$var wire 1 ;H g_bar $end
$var wire 1 <H p_bar $end
$var wire 1 =H nand2_1_out $end
$var wire 1 >H nand2_2_out $end
$var wire 1 ?H nand2_3_out $end

$scope module nand2_0 $end
$var wire 1 R' in1 $end
$var wire 1 B' in2 $end
$var wire 1 ;H out $end
$upscope $end

$scope module not1_0 $end
$var wire 1 ;H in1 $end
$var wire 1 uG out $end
$upscope $end

$scope module nor2_0 $end
$var wire 1 R' in1 $end
$var wire 1 B' in2 $end
$var wire 1 <H out $end
$upscope $end

$scope module not1_1 $end
$var wire 1 <H in1 $end
$var wire 1 tG out $end
$upscope $end

$scope module nand2_1 $end
$var wire 1 R' in1 $end
$var wire 1 B' in2 $end
$var wire 1 =H out $end
$upscope $end

$scope module nand2_2 $end
$var wire 1 R' in1 $end
$var wire 1 mG in2 $end
$var wire 1 >H out $end
$upscope $end

$scope module nand2_3 $end
$var wire 1 B' in1 $end
$var wire 1 mG in2 $end
$var wire 1 ?H out $end
$upscope $end

$scope module nand3_0 $end
$var wire 1 =H in1 $end
$var wire 1 >H in2 $end
$var wire 1 ?H in3 $end
$var wire 1 :H out $end
$upscope $end

$scope module xor3_0 $end
$var wire 1 R' in1 $end
$var wire 1 B' in2 $end
$var wire 1 mG in3 $end
$var wire 1 C9 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module not1_c0_0 $end
$var wire 1 zE in1 $end
$var wire 1 {E out $end
$upscope $end

$scope module nand2_c0_0 $end
$var wire 1 rE in1 $end
$var wire 1 mE in2 $end
$var wire 1 $F out $end
$upscope $end

$scope module nand2_c0_1 $end
$var wire 1 {E in1 $end
$var wire 1 $F in2 $end
$var wire 1 oE out $end
$upscope $end

$scope module not1_c1_0 $end
$var wire 1 |E in1 $end
$var wire 1 }E out $end
$upscope $end

$scope module nand2_c1_0 $end
$var wire 1 tE in1 $end
$var wire 1 oE in2 $end
$var wire 1 %F out $end
$upscope $end

$scope module nand2_c1_1 $end
$var wire 1 }E in1 $end
$var wire 1 %F in2 $end
$var wire 1 pE out $end
$upscope $end

$scope module not1_c2_0 $end
$var wire 1 ~E in1 $end
$var wire 1 !F out $end
$upscope $end

$scope module nand2_c2_0 $end
$var wire 1 vE in1 $end
$var wire 1 pE in2 $end
$var wire 1 &F out $end
$upscope $end

$scope module nand2_c2_1 $end
$var wire 1 !F in1 $end
$var wire 1 &F in2 $end
$var wire 1 qE out $end
$upscope $end

$scope module not1_c3_0 $end
$var wire 1 "F in1 $end
$var wire 1 #F out $end
$upscope $end

$scope module nand2_c3_0 $end
$var wire 1 xE in1 $end
$var wire 1 qE in2 $end
$var wire 1 'F out $end
$upscope $end

$scope module nand2_c3_1 $end
$var wire 1 #F in1 $end
$var wire 1 'F in2 $end
$var wire 1 nE out $end
$upscope $end
$upscope $end

$scope module branchunit $end
$var wire 1 "' regData1 [15] $end
$var wire 1 #' regData1 [14] $end
$var wire 1 $' regData1 [13] $end
$var wire 1 %' regData1 [12] $end
$var wire 1 &' regData1 [11] $end
$var wire 1 '' regData1 [10] $end
$var wire 1 (' regData1 [9] $end
$var wire 1 )' regData1 [8] $end
$var wire 1 *' regData1 [7] $end
$var wire 1 +' regData1 [6] $end
$var wire 1 ,' regData1 [5] $end
$var wire 1 -' regData1 [4] $end
$var wire 1 .' regData1 [3] $end
$var wire 1 /' regData1 [2] $end
$var wire 1 0' regData1 [1] $end
$var wire 1 1' regData1 [0] $end
$var wire 1 z& branchCtl [2] $end
$var wire 1 {& branchCtl [1] $end
$var wire 1 |& branchCtl [0] $end
$var reg 1 @H branch $end
$upscope $end
$upscope $end

$scope module EXMEM $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 n& Rs [2] $end
$var wire 1 o& Rs [1] $end
$var wire 1 p& Rs [0] $end
$var wire 1 q& Rt [2] $end
$var wire 1 r& Rt [1] $end
$var wire 1 s& Rt [0] $end
$var wire 1 t& Rd [2] $end
$var wire 1 u& Rd [1] $end
$var wire 1 v& Rd [0] $end
$var wire 1 }& jumpCtl [2] $end
$var wire 1 ~& jumpCtl [1] $end
$var wire 1 !' jumpCtl [0] $end
$var wire 1 g# memAddr [15] $end
$var wire 1 h# memAddr [14] $end
$var wire 1 i# memAddr [13] $end
$var wire 1 j# memAddr [12] $end
$var wire 1 k# memAddr [11] $end
$var wire 1 l# memAddr [10] $end
$var wire 1 m# memAddr [9] $end
$var wire 1 n# memAddr [8] $end
$var wire 1 o# memAddr [7] $end
$var wire 1 p# memAddr [6] $end
$var wire 1 q# memAddr [5] $end
$var wire 1 r# memAddr [4] $end
$var wire 1 s# memAddr [3] $end
$var wire 1 t# memAddr [2] $end
$var wire 1 u# memAddr [1] $end
$var wire 1 v# memAddr [0] $end
$var wire 1 2' writeData [15] $end
$var wire 1 3' writeData [14] $end
$var wire 1 4' writeData [13] $end
$var wire 1 5' writeData [12] $end
$var wire 1 6' writeData [11] $end
$var wire 1 7' writeData [10] $end
$var wire 1 8' writeData [9] $end
$var wire 1 9' writeData [8] $end
$var wire 1 :' writeData [7] $end
$var wire 1 ;' writeData [6] $end
$var wire 1 <' writeData [5] $end
$var wire 1 =' writeData [4] $end
$var wire 1 >' writeData [3] $end
$var wire 1 ?' writeData [2] $end
$var wire 1 @' writeData [1] $end
$var wire 1 A' writeData [0] $end
$var wire 1 R' PC_inc [15] $end
$var wire 1 S' PC_inc [14] $end
$var wire 1 T' PC_inc [13] $end
$var wire 1 U' PC_inc [12] $end
$var wire 1 V' PC_inc [11] $end
$var wire 1 W' PC_inc [10] $end
$var wire 1 X' PC_inc [9] $end
$var wire 1 Y' PC_inc [8] $end
$var wire 1 Z' PC_inc [7] $end
$var wire 1 [' PC_inc [6] $end
$var wire 1 \' PC_inc [5] $end
$var wire 1 ]' PC_inc [4] $end
$var wire 1 ^' PC_inc [3] $end
$var wire 1 _' PC_inc [2] $end
$var wire 1 `' PC_inc [1] $end
$var wire 1 a' PC_inc [0] $end
$var wire 1 [% PC_new [15] $end
$var wire 1 \% PC_new [14] $end
$var wire 1 ]% PC_new [13] $end
$var wire 1 ^% PC_new [12] $end
$var wire 1 _% PC_new [11] $end
$var wire 1 `% PC_new [10] $end
$var wire 1 a% PC_new [9] $end
$var wire 1 b% PC_new [8] $end
$var wire 1 c% PC_new [7] $end
$var wire 1 d% PC_new [6] $end
$var wire 1 e% PC_new [5] $end
$var wire 1 f% PC_new [4] $end
$var wire 1 g% PC_new [3] $end
$var wire 1 h% PC_new [2] $end
$var wire 1 i% PC_new [1] $end
$var wire 1 j% PC_new [0] $end
$var wire 1 {% PC [15] $end
$var wire 1 |% PC [14] $end
$var wire 1 }% PC [13] $end
$var wire 1 ~% PC [12] $end
$var wire 1 !& PC [11] $end
$var wire 1 "& PC [10] $end
$var wire 1 #& PC [9] $end
$var wire 1 $& PC [8] $end
$var wire 1 %& PC [7] $end
$var wire 1 && PC [6] $end
$var wire 1 '& PC [5] $end
$var wire 1 (& PC [4] $end
$var wire 1 )& PC [3] $end
$var wire 1 *& PC [2] $end
$var wire 1 +& PC [1] $end
$var wire 1 ,& PC [0] $end
$var wire 1 f' memRead $end
$var wire 1 e' memWrite $end
$var wire 1 *" PCsrc $end
$var wire 1 b' regWrite $end
$var wire 1 g' MemToReg $end
$var wire 1 P( EXMEM_Rs [2] $end
$var wire 1 Q( EXMEM_Rs [1] $end
$var wire 1 R( EXMEM_Rs [0] $end
$var wire 1 S( EXMEM_Rt [2] $end
$var wire 1 T( EXMEM_Rt [1] $end
$var wire 1 U( EXMEM_Rt [0] $end
$var wire 1 V( EXMEM_Rd [2] $end
$var wire 1 W( EXMEM_Rd [1] $end
$var wire 1 X( EXMEM_Rd [0] $end
$var wire 1 AH EXMEM_jumpCtl [2] $end
$var wire 1 BH EXMEM_jumpCtl [1] $end
$var wire 1 :) EXMEM_jumpCtl [0] $end
$var wire 1 ~' EXMEM_memAddr [15] $end
$var wire 1 !( EXMEM_memAddr [14] $end
$var wire 1 "( EXMEM_memAddr [13] $end
$var wire 1 #( EXMEM_memAddr [12] $end
$var wire 1 $( EXMEM_memAddr [11] $end
$var wire 1 %( EXMEM_memAddr [10] $end
$var wire 1 &( EXMEM_memAddr [9] $end
$var wire 1 '( EXMEM_memAddr [8] $end
$var wire 1 (( EXMEM_memAddr [7] $end
$var wire 1 )( EXMEM_memAddr [6] $end
$var wire 1 *( EXMEM_memAddr [5] $end
$var wire 1 +( EXMEM_memAddr [4] $end
$var wire 1 ,( EXMEM_memAddr [3] $end
$var wire 1 -( EXMEM_memAddr [2] $end
$var wire 1 .( EXMEM_memAddr [1] $end
$var wire 1 /( EXMEM_memAddr [0] $end
$var wire 1 CH EXMEM_writeData [15] $end
$var wire 1 DH EXMEM_writeData [14] $end
$var wire 1 EH EXMEM_writeData [13] $end
$var wire 1 FH EXMEM_writeData [12] $end
$var wire 1 GH EXMEM_writeData [11] $end
$var wire 1 HH EXMEM_writeData [10] $end
$var wire 1 IH EXMEM_writeData [9] $end
$var wire 1 JH EXMEM_writeData [8] $end
$var wire 1 KH EXMEM_writeData [7] $end
$var wire 1 LH EXMEM_writeData [6] $end
$var wire 1 MH EXMEM_writeData [5] $end
$var wire 1 NH EXMEM_writeData [4] $end
$var wire 1 OH EXMEM_writeData [3] $end
$var wire 1 PH EXMEM_writeData [2] $end
$var wire 1 QH EXMEM_writeData [1] $end
$var wire 1 ;) EXMEM_writeData [0] $end
$var wire 1 n' EXMEM_PC_inc [15] $end
$var wire 1 o' EXMEM_PC_inc [14] $end
$var wire 1 p' EXMEM_PC_inc [13] $end
$var wire 1 q' EXMEM_PC_inc [12] $end
$var wire 1 r' EXMEM_PC_inc [11] $end
$var wire 1 s' EXMEM_PC_inc [10] $end
$var wire 1 t' EXMEM_PC_inc [9] $end
$var wire 1 u' EXMEM_PC_inc [8] $end
$var wire 1 v' EXMEM_PC_inc [7] $end
$var wire 1 w' EXMEM_PC_inc [6] $end
$var wire 1 x' EXMEM_PC_inc [5] $end
$var wire 1 y' EXMEM_PC_inc [4] $end
$var wire 1 z' EXMEM_PC_inc [3] $end
$var wire 1 {' EXMEM_PC_inc [2] $end
$var wire 1 |' EXMEM_PC_inc [1] $end
$var wire 1 }' EXMEM_PC_inc [0] $end
$var wire 1 0( EXMEM_PC_new [15] $end
$var wire 1 1( EXMEM_PC_new [14] $end
$var wire 1 2( EXMEM_PC_new [13] $end
$var wire 1 3( EXMEM_PC_new [12] $end
$var wire 1 4( EXMEM_PC_new [11] $end
$var wire 1 5( EXMEM_PC_new [10] $end
$var wire 1 6( EXMEM_PC_new [9] $end
$var wire 1 7( EXMEM_PC_new [8] $end
$var wire 1 8( EXMEM_PC_new [7] $end
$var wire 1 9( EXMEM_PC_new [6] $end
$var wire 1 :( EXMEM_PC_new [5] $end
$var wire 1 ;( EXMEM_PC_new [4] $end
$var wire 1 <( EXMEM_PC_new [3] $end
$var wire 1 =( EXMEM_PC_new [2] $end
$var wire 1 >( EXMEM_PC_new [1] $end
$var wire 1 ?( EXMEM_PC_new [0] $end
$var wire 1 -& EXMEM_PC [15] $end
$var wire 1 .& EXMEM_PC [14] $end
$var wire 1 /& EXMEM_PC [13] $end
$var wire 1 0& EXMEM_PC [12] $end
$var wire 1 1& EXMEM_PC [11] $end
$var wire 1 2& EXMEM_PC [10] $end
$var wire 1 3& EXMEM_PC [9] $end
$var wire 1 4& EXMEM_PC [8] $end
$var wire 1 5& EXMEM_PC [7] $end
$var wire 1 6& EXMEM_PC [6] $end
$var wire 1 7& EXMEM_PC [5] $end
$var wire 1 8& EXMEM_PC [4] $end
$var wire 1 9& EXMEM_PC [3] $end
$var wire 1 :& EXMEM_PC [2] $end
$var wire 1 ;& EXMEM_PC [1] $end
$var wire 1 <& EXMEM_PC [0] $end
$var wire 1 Y( EXMEM_memRead $end
$var wire 1 Z( EXMEM_memWrite $end
$var wire 1 [( EXMEM_PCsrc $end
$var wire 1 \( EXMEM_regWrite $end
$var wire 1 ]( EXMEM_MemToReg $end

$scope module EXMEM_Rs_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 RH en $end
$var wire 1 n& D [2] $end
$var wire 1 o& D [1] $end
$var wire 1 p& D [0] $end
$var wire 1 P( Q [2] $end
$var wire 1 Q( Q [1] $end
$var wire 1 R( Q [0] $end
$var wire 1 SH in [2] $end
$var wire 1 TH in [1] $end
$var wire 1 UH in [0] $end
$var wire 1 VH out [2] $end
$var wire 1 WH out [1] $end
$var wire 1 XH out [0] $end

$scope module dff_0 $end
$var wire 1 XH q $end
$var wire 1 UH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 YH state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 WH q $end
$var wire 1 TH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ZH state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 VH q $end
$var wire 1 SH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [H state $end
$upscope $end
$upscope $end

$scope module EXMEM_Rt_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 \H en $end
$var wire 1 q& D [2] $end
$var wire 1 r& D [1] $end
$var wire 1 s& D [0] $end
$var wire 1 S( Q [2] $end
$var wire 1 T( Q [1] $end
$var wire 1 U( Q [0] $end
$var wire 1 ]H in [2] $end
$var wire 1 ^H in [1] $end
$var wire 1 _H in [0] $end
$var wire 1 `H out [2] $end
$var wire 1 aH out [1] $end
$var wire 1 bH out [0] $end

$scope module dff_0 $end
$var wire 1 bH q $end
$var wire 1 _H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 cH state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 aH q $end
$var wire 1 ^H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 dH state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 `H q $end
$var wire 1 ]H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 eH state $end
$upscope $end
$upscope $end

$scope module EXMEM_Rd_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 fH en $end
$var wire 1 t& D [2] $end
$var wire 1 u& D [1] $end
$var wire 1 v& D [0] $end
$var wire 1 V( Q [2] $end
$var wire 1 W( Q [1] $end
$var wire 1 X( Q [0] $end
$var wire 1 gH in [2] $end
$var wire 1 hH in [1] $end
$var wire 1 iH in [0] $end
$var wire 1 jH out [2] $end
$var wire 1 kH out [1] $end
$var wire 1 lH out [0] $end

$scope module dff_0 $end
$var wire 1 lH q $end
$var wire 1 iH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 mH state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 kH q $end
$var wire 1 hH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 nH state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 jH q $end
$var wire 1 gH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 oH state $end
$upscope $end
$upscope $end

$scope module EXMEM_jumpCtl_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 pH en $end
$var wire 1 }& D [2] $end
$var wire 1 ~& D [1] $end
$var wire 1 !' D [0] $end
$var wire 1 AH Q [2] $end
$var wire 1 BH Q [1] $end
$var wire 1 :) Q [0] $end
$var wire 1 qH in [2] $end
$var wire 1 rH in [1] $end
$var wire 1 sH in [0] $end
$var wire 1 tH out [2] $end
$var wire 1 uH out [1] $end
$var wire 1 vH out [0] $end

$scope module dff_0 $end
$var wire 1 vH q $end
$var wire 1 sH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 wH state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 uH q $end
$var wire 1 rH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 xH state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 tH q $end
$var wire 1 qH d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 yH state $end
$upscope $end
$upscope $end

$scope module EXMEM_memAddr_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 zH en $end
$var wire 1 g# D [15] $end
$var wire 1 h# D [14] $end
$var wire 1 i# D [13] $end
$var wire 1 j# D [12] $end
$var wire 1 k# D [11] $end
$var wire 1 l# D [10] $end
$var wire 1 m# D [9] $end
$var wire 1 n# D [8] $end
$var wire 1 o# D [7] $end
$var wire 1 p# D [6] $end
$var wire 1 q# D [5] $end
$var wire 1 r# D [4] $end
$var wire 1 s# D [3] $end
$var wire 1 t# D [2] $end
$var wire 1 u# D [1] $end
$var wire 1 v# D [0] $end
$var wire 1 ~' Q [15] $end
$var wire 1 !( Q [14] $end
$var wire 1 "( Q [13] $end
$var wire 1 #( Q [12] $end
$var wire 1 $( Q [11] $end
$var wire 1 %( Q [10] $end
$var wire 1 &( Q [9] $end
$var wire 1 '( Q [8] $end
$var wire 1 (( Q [7] $end
$var wire 1 )( Q [6] $end
$var wire 1 *( Q [5] $end
$var wire 1 +( Q [4] $end
$var wire 1 ,( Q [3] $end
$var wire 1 -( Q [2] $end
$var wire 1 .( Q [1] $end
$var wire 1 /( Q [0] $end
$var wire 1 {H in [15] $end
$var wire 1 |H in [14] $end
$var wire 1 }H in [13] $end
$var wire 1 ~H in [12] $end
$var wire 1 !I in [11] $end
$var wire 1 "I in [10] $end
$var wire 1 #I in [9] $end
$var wire 1 $I in [8] $end
$var wire 1 %I in [7] $end
$var wire 1 &I in [6] $end
$var wire 1 'I in [5] $end
$var wire 1 (I in [4] $end
$var wire 1 )I in [3] $end
$var wire 1 *I in [2] $end
$var wire 1 +I in [1] $end
$var wire 1 ,I in [0] $end
$var wire 1 -I out [15] $end
$var wire 1 .I out [14] $end
$var wire 1 /I out [13] $end
$var wire 1 0I out [12] $end
$var wire 1 1I out [11] $end
$var wire 1 2I out [10] $end
$var wire 1 3I out [9] $end
$var wire 1 4I out [8] $end
$var wire 1 5I out [7] $end
$var wire 1 6I out [6] $end
$var wire 1 7I out [5] $end
$var wire 1 8I out [4] $end
$var wire 1 9I out [3] $end
$var wire 1 :I out [2] $end
$var wire 1 ;I out [1] $end
$var wire 1 <I out [0] $end

$scope module dff_0 $end
$var wire 1 <I q $end
$var wire 1 ,I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 =I state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ;I q $end
$var wire 1 +I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 >I state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 :I q $end
$var wire 1 *I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ?I state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 9I q $end
$var wire 1 )I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 @I state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 8I q $end
$var wire 1 (I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 AI state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 7I q $end
$var wire 1 'I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 BI state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 6I q $end
$var wire 1 &I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 CI state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 5I q $end
$var wire 1 %I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 DI state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 4I q $end
$var wire 1 $I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 EI state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 3I q $end
$var wire 1 #I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 FI state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 2I q $end
$var wire 1 "I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 GI state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 1I q $end
$var wire 1 !I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 HI state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 0I q $end
$var wire 1 ~H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 II state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 /I q $end
$var wire 1 }H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 JI state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 .I q $end
$var wire 1 |H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 KI state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 -I q $end
$var wire 1 {H d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 LI state $end
$upscope $end
$upscope $end

$scope module EXMEM_writeData_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 MI en $end
$var wire 1 2' D [15] $end
$var wire 1 3' D [14] $end
$var wire 1 4' D [13] $end
$var wire 1 5' D [12] $end
$var wire 1 6' D [11] $end
$var wire 1 7' D [10] $end
$var wire 1 8' D [9] $end
$var wire 1 9' D [8] $end
$var wire 1 :' D [7] $end
$var wire 1 ;' D [6] $end
$var wire 1 <' D [5] $end
$var wire 1 =' D [4] $end
$var wire 1 >' D [3] $end
$var wire 1 ?' D [2] $end
$var wire 1 @' D [1] $end
$var wire 1 A' D [0] $end
$var wire 1 CH Q [15] $end
$var wire 1 DH Q [14] $end
$var wire 1 EH Q [13] $end
$var wire 1 FH Q [12] $end
$var wire 1 GH Q [11] $end
$var wire 1 HH Q [10] $end
$var wire 1 IH Q [9] $end
$var wire 1 JH Q [8] $end
$var wire 1 KH Q [7] $end
$var wire 1 LH Q [6] $end
$var wire 1 MH Q [5] $end
$var wire 1 NH Q [4] $end
$var wire 1 OH Q [3] $end
$var wire 1 PH Q [2] $end
$var wire 1 QH Q [1] $end
$var wire 1 ;) Q [0] $end
$var wire 1 NI in [15] $end
$var wire 1 OI in [14] $end
$var wire 1 PI in [13] $end
$var wire 1 QI in [12] $end
$var wire 1 RI in [11] $end
$var wire 1 SI in [10] $end
$var wire 1 TI in [9] $end
$var wire 1 UI in [8] $end
$var wire 1 VI in [7] $end
$var wire 1 WI in [6] $end
$var wire 1 XI in [5] $end
$var wire 1 YI in [4] $end
$var wire 1 ZI in [3] $end
$var wire 1 [I in [2] $end
$var wire 1 \I in [1] $end
$var wire 1 ]I in [0] $end
$var wire 1 ^I out [15] $end
$var wire 1 _I out [14] $end
$var wire 1 `I out [13] $end
$var wire 1 aI out [12] $end
$var wire 1 bI out [11] $end
$var wire 1 cI out [10] $end
$var wire 1 dI out [9] $end
$var wire 1 eI out [8] $end
$var wire 1 fI out [7] $end
$var wire 1 gI out [6] $end
$var wire 1 hI out [5] $end
$var wire 1 iI out [4] $end
$var wire 1 jI out [3] $end
$var wire 1 kI out [2] $end
$var wire 1 lI out [1] $end
$var wire 1 mI out [0] $end

$scope module dff_0 $end
$var wire 1 mI q $end
$var wire 1 ]I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 nI state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 lI q $end
$var wire 1 \I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 oI state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 kI q $end
$var wire 1 [I d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 pI state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 jI q $end
$var wire 1 ZI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 qI state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 iI q $end
$var wire 1 YI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 rI state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 hI q $end
$var wire 1 XI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 sI state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 gI q $end
$var wire 1 WI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 tI state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 fI q $end
$var wire 1 VI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 uI state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 eI q $end
$var wire 1 UI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 vI state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 dI q $end
$var wire 1 TI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 wI state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 cI q $end
$var wire 1 SI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 xI state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 bI q $end
$var wire 1 RI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 yI state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 aI q $end
$var wire 1 QI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 zI state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 `I q $end
$var wire 1 PI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 {I state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 _I q $end
$var wire 1 OI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |I state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 ^I q $end
$var wire 1 NI d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }I state $end
$upscope $end
$upscope $end

$scope module EXMEM_PC_inc_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 ~I en $end
$var wire 1 R' D [15] $end
$var wire 1 S' D [14] $end
$var wire 1 T' D [13] $end
$var wire 1 U' D [12] $end
$var wire 1 V' D [11] $end
$var wire 1 W' D [10] $end
$var wire 1 X' D [9] $end
$var wire 1 Y' D [8] $end
$var wire 1 Z' D [7] $end
$var wire 1 [' D [6] $end
$var wire 1 \' D [5] $end
$var wire 1 ]' D [4] $end
$var wire 1 ^' D [3] $end
$var wire 1 _' D [2] $end
$var wire 1 `' D [1] $end
$var wire 1 a' D [0] $end
$var wire 1 n' Q [15] $end
$var wire 1 o' Q [14] $end
$var wire 1 p' Q [13] $end
$var wire 1 q' Q [12] $end
$var wire 1 r' Q [11] $end
$var wire 1 s' Q [10] $end
$var wire 1 t' Q [9] $end
$var wire 1 u' Q [8] $end
$var wire 1 v' Q [7] $end
$var wire 1 w' Q [6] $end
$var wire 1 x' Q [5] $end
$var wire 1 y' Q [4] $end
$var wire 1 z' Q [3] $end
$var wire 1 {' Q [2] $end
$var wire 1 |' Q [1] $end
$var wire 1 }' Q [0] $end
$var wire 1 !J in [15] $end
$var wire 1 "J in [14] $end
$var wire 1 #J in [13] $end
$var wire 1 $J in [12] $end
$var wire 1 %J in [11] $end
$var wire 1 &J in [10] $end
$var wire 1 'J in [9] $end
$var wire 1 (J in [8] $end
$var wire 1 )J in [7] $end
$var wire 1 *J in [6] $end
$var wire 1 +J in [5] $end
$var wire 1 ,J in [4] $end
$var wire 1 -J in [3] $end
$var wire 1 .J in [2] $end
$var wire 1 /J in [1] $end
$var wire 1 0J in [0] $end
$var wire 1 1J out [15] $end
$var wire 1 2J out [14] $end
$var wire 1 3J out [13] $end
$var wire 1 4J out [12] $end
$var wire 1 5J out [11] $end
$var wire 1 6J out [10] $end
$var wire 1 7J out [9] $end
$var wire 1 8J out [8] $end
$var wire 1 9J out [7] $end
$var wire 1 :J out [6] $end
$var wire 1 ;J out [5] $end
$var wire 1 <J out [4] $end
$var wire 1 =J out [3] $end
$var wire 1 >J out [2] $end
$var wire 1 ?J out [1] $end
$var wire 1 @J out [0] $end

$scope module dff_0 $end
$var wire 1 @J q $end
$var wire 1 0J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 AJ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ?J q $end
$var wire 1 /J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 BJ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 >J q $end
$var wire 1 .J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 CJ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 =J q $end
$var wire 1 -J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 DJ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 <J q $end
$var wire 1 ,J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 EJ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 ;J q $end
$var wire 1 +J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 FJ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 :J q $end
$var wire 1 *J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 GJ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 9J q $end
$var wire 1 )J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 HJ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 8J q $end
$var wire 1 (J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 IJ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 7J q $end
$var wire 1 'J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 JJ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 6J q $end
$var wire 1 &J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 KJ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 5J q $end
$var wire 1 %J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 LJ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 4J q $end
$var wire 1 $J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 MJ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 3J q $end
$var wire 1 #J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 NJ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 2J q $end
$var wire 1 "J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 OJ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 1J q $end
$var wire 1 !J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 PJ state $end
$upscope $end
$upscope $end

$scope module EXMEM_PC_new_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 QJ en $end
$var wire 1 [% D [15] $end
$var wire 1 \% D [14] $end
$var wire 1 ]% D [13] $end
$var wire 1 ^% D [12] $end
$var wire 1 _% D [11] $end
$var wire 1 `% D [10] $end
$var wire 1 a% D [9] $end
$var wire 1 b% D [8] $end
$var wire 1 c% D [7] $end
$var wire 1 d% D [6] $end
$var wire 1 e% D [5] $end
$var wire 1 f% D [4] $end
$var wire 1 g% D [3] $end
$var wire 1 h% D [2] $end
$var wire 1 i% D [1] $end
$var wire 1 j% D [0] $end
$var wire 1 0( Q [15] $end
$var wire 1 1( Q [14] $end
$var wire 1 2( Q [13] $end
$var wire 1 3( Q [12] $end
$var wire 1 4( Q [11] $end
$var wire 1 5( Q [10] $end
$var wire 1 6( Q [9] $end
$var wire 1 7( Q [8] $end
$var wire 1 8( Q [7] $end
$var wire 1 9( Q [6] $end
$var wire 1 :( Q [5] $end
$var wire 1 ;( Q [4] $end
$var wire 1 <( Q [3] $end
$var wire 1 =( Q [2] $end
$var wire 1 >( Q [1] $end
$var wire 1 ?( Q [0] $end
$var wire 1 RJ in [15] $end
$var wire 1 SJ in [14] $end
$var wire 1 TJ in [13] $end
$var wire 1 UJ in [12] $end
$var wire 1 VJ in [11] $end
$var wire 1 WJ in [10] $end
$var wire 1 XJ in [9] $end
$var wire 1 YJ in [8] $end
$var wire 1 ZJ in [7] $end
$var wire 1 [J in [6] $end
$var wire 1 \J in [5] $end
$var wire 1 ]J in [4] $end
$var wire 1 ^J in [3] $end
$var wire 1 _J in [2] $end
$var wire 1 `J in [1] $end
$var wire 1 aJ in [0] $end
$var wire 1 bJ out [15] $end
$var wire 1 cJ out [14] $end
$var wire 1 dJ out [13] $end
$var wire 1 eJ out [12] $end
$var wire 1 fJ out [11] $end
$var wire 1 gJ out [10] $end
$var wire 1 hJ out [9] $end
$var wire 1 iJ out [8] $end
$var wire 1 jJ out [7] $end
$var wire 1 kJ out [6] $end
$var wire 1 lJ out [5] $end
$var wire 1 mJ out [4] $end
$var wire 1 nJ out [3] $end
$var wire 1 oJ out [2] $end
$var wire 1 pJ out [1] $end
$var wire 1 qJ out [0] $end

$scope module dff_0 $end
$var wire 1 qJ q $end
$var wire 1 aJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 rJ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 pJ q $end
$var wire 1 `J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 sJ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 oJ q $end
$var wire 1 _J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 tJ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 nJ q $end
$var wire 1 ^J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 uJ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 mJ q $end
$var wire 1 ]J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 vJ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 lJ q $end
$var wire 1 \J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 wJ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 kJ q $end
$var wire 1 [J d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 xJ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 jJ q $end
$var wire 1 ZJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 yJ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 iJ q $end
$var wire 1 YJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 zJ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 hJ q $end
$var wire 1 XJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 {J state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 gJ q $end
$var wire 1 WJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 |J state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 fJ q $end
$var wire 1 VJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 }J state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 eJ q $end
$var wire 1 UJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ~J state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 dJ q $end
$var wire 1 TJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 !K state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 cJ q $end
$var wire 1 SJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 "K state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 bJ q $end
$var wire 1 RJ d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 #K state $end
$upscope $end
$upscope $end

$scope module EXMEM_PC_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 $K en $end
$var wire 1 {% D [15] $end
$var wire 1 |% D [14] $end
$var wire 1 }% D [13] $end
$var wire 1 ~% D [12] $end
$var wire 1 !& D [11] $end
$var wire 1 "& D [10] $end
$var wire 1 #& D [9] $end
$var wire 1 $& D [8] $end
$var wire 1 %& D [7] $end
$var wire 1 && D [6] $end
$var wire 1 '& D [5] $end
$var wire 1 (& D [4] $end
$var wire 1 )& D [3] $end
$var wire 1 *& D [2] $end
$var wire 1 +& D [1] $end
$var wire 1 ,& D [0] $end
$var wire 1 -& Q [15] $end
$var wire 1 .& Q [14] $end
$var wire 1 /& Q [13] $end
$var wire 1 0& Q [12] $end
$var wire 1 1& Q [11] $end
$var wire 1 2& Q [10] $end
$var wire 1 3& Q [9] $end
$var wire 1 4& Q [8] $end
$var wire 1 5& Q [7] $end
$var wire 1 6& Q [6] $end
$var wire 1 7& Q [5] $end
$var wire 1 8& Q [4] $end
$var wire 1 9& Q [3] $end
$var wire 1 :& Q [2] $end
$var wire 1 ;& Q [1] $end
$var wire 1 <& Q [0] $end
$var wire 1 %K in [15] $end
$var wire 1 &K in [14] $end
$var wire 1 'K in [13] $end
$var wire 1 (K in [12] $end
$var wire 1 )K in [11] $end
$var wire 1 *K in [10] $end
$var wire 1 +K in [9] $end
$var wire 1 ,K in [8] $end
$var wire 1 -K in [7] $end
$var wire 1 .K in [6] $end
$var wire 1 /K in [5] $end
$var wire 1 0K in [4] $end
$var wire 1 1K in [3] $end
$var wire 1 2K in [2] $end
$var wire 1 3K in [1] $end
$var wire 1 4K in [0] $end
$var wire 1 5K out [15] $end
$var wire 1 6K out [14] $end
$var wire 1 7K out [13] $end
$var wire 1 8K out [12] $end
$var wire 1 9K out [11] $end
$var wire 1 :K out [10] $end
$var wire 1 ;K out [9] $end
$var wire 1 <K out [8] $end
$var wire 1 =K out [7] $end
$var wire 1 >K out [6] $end
$var wire 1 ?K out [5] $end
$var wire 1 @K out [4] $end
$var wire 1 AK out [3] $end
$var wire 1 BK out [2] $end
$var wire 1 CK out [1] $end
$var wire 1 DK out [0] $end

$scope module dff_0 $end
$var wire 1 DK q $end
$var wire 1 4K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 EK state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 CK q $end
$var wire 1 3K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 FK state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 BK q $end
$var wire 1 2K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 GK state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 AK q $end
$var wire 1 1K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 HK state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 @K q $end
$var wire 1 0K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 IK state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 ?K q $end
$var wire 1 /K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 JK state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 >K q $end
$var wire 1 .K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 KK state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 =K q $end
$var wire 1 -K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 LK state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 <K q $end
$var wire 1 ,K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 MK state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ;K q $end
$var wire 1 +K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 NK state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 :K q $end
$var wire 1 *K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 OK state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 9K q $end
$var wire 1 )K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 PK state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 8K q $end
$var wire 1 (K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 QK state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 7K q $end
$var wire 1 'K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 RK state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 6K q $end
$var wire 1 &K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 SK state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 5K q $end
$var wire 1 %K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 TK state $end
$upscope $end
$upscope $end

$scope module EXMEM_memRead_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 UK en $end
$var wire 1 f' D $end
$var wire 1 Y( Q $end
$var wire 1 VK in $end
$var wire 1 WK out $end

$scope module dff_0 $end
$var wire 1 WK q $end
$var wire 1 VK d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 XK state $end
$upscope $end
$upscope $end

$scope module EXMEM_memWrite_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 YK en $end
$var wire 1 e' D $end
$var wire 1 Z( Q $end
$var wire 1 ZK in $end
$var wire 1 [K out $end

$scope module dff_0 $end
$var wire 1 [K q $end
$var wire 1 ZK d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \K state $end
$upscope $end
$upscope $end

$scope module EXMEM_PCsrc_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 ]K en $end
$var wire 1 *" D $end
$var wire 1 [( Q $end
$var wire 1 ^K in $end
$var wire 1 _K out $end

$scope module dff_0 $end
$var wire 1 _K q $end
$var wire 1 ^K d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `K state $end
$upscope $end
$upscope $end

$scope module EXMEM_regWrite_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 aK en $end
$var wire 1 b' D $end
$var wire 1 \( Q $end
$var wire 1 bK in $end
$var wire 1 cK out $end

$scope module dff_0 $end
$var wire 1 cK q $end
$var wire 1 bK d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 dK state $end
$upscope $end
$upscope $end

$scope module EXMEM_MemToReg_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 eK en $end
$var wire 1 g' D $end
$var wire 1 ]( Q $end
$var wire 1 fK in $end
$var wire 1 gK out $end

$scope module dff_0 $end
$var wire 1 gK q $end
$var wire 1 fK d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 hK state $end
$upscope $end
$upscope $end
$upscope $end

$scope module memoryStage $end
$var wire 1 Y( memRead $end
$var wire 1 Z( memWrite $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 $" halt $end
$var wire 1 iK wrData [15] $end
$var wire 1 jK wrData [14] $end
$var wire 1 kK wrData [13] $end
$var wire 1 lK wrData [12] $end
$var wire 1 mK wrData [11] $end
$var wire 1 nK wrData [10] $end
$var wire 1 oK wrData [9] $end
$var wire 1 pK wrData [8] $end
$var wire 1 qK wrData [7] $end
$var wire 1 rK wrData [6] $end
$var wire 1 sK wrData [5] $end
$var wire 1 tK wrData [4] $end
$var wire 1 uK wrData [3] $end
$var wire 1 vK wrData [2] $end
$var wire 1 wK wrData [1] $end
$var wire 1 ;) wrData [0] $end
$var wire 1 ~' aluOut [15] $end
$var wire 1 !( aluOut [14] $end
$var wire 1 "( aluOut [13] $end
$var wire 1 #( aluOut [12] $end
$var wire 1 $( aluOut [11] $end
$var wire 1 %( aluOut [10] $end
$var wire 1 &( aluOut [9] $end
$var wire 1 '( aluOut [8] $end
$var wire 1 (( aluOut [7] $end
$var wire 1 )( aluOut [6] $end
$var wire 1 *( aluOut [5] $end
$var wire 1 +( aluOut [4] $end
$var wire 1 ,( aluOut [3] $end
$var wire 1 -( aluOut [2] $end
$var wire 1 .( aluOut [1] $end
$var wire 1 /( aluOut [0] $end
$var wire 1 +% memoryOut [15] $end
$var wire 1 ,% memoryOut [14] $end
$var wire 1 -% memoryOut [13] $end
$var wire 1 .% memoryOut [12] $end
$var wire 1 /% memoryOut [11] $end
$var wire 1 0% memoryOut [10] $end
$var wire 1 1% memoryOut [9] $end
$var wire 1 2% memoryOut [8] $end
$var wire 1 3% memoryOut [7] $end
$var wire 1 4% memoryOut [6] $end
$var wire 1 5% memoryOut [5] $end
$var wire 1 6% memoryOut [4] $end
$var wire 1 7% memoryOut [3] $end
$var wire 1 8% memoryOut [2] $end
$var wire 1 9% memoryOut [1] $end
$var wire 1 :% memoryOut [0] $end
$var wire 1 xK en $end

$scope module data_mem $end
$var wire 1 +% data_out [15] $end
$var wire 1 ,% data_out [14] $end
$var wire 1 -% data_out [13] $end
$var wire 1 .% data_out [12] $end
$var wire 1 /% data_out [11] $end
$var wire 1 0% data_out [10] $end
$var wire 1 1% data_out [9] $end
$var wire 1 2% data_out [8] $end
$var wire 1 3% data_out [7] $end
$var wire 1 4% data_out [6] $end
$var wire 1 5% data_out [5] $end
$var wire 1 6% data_out [4] $end
$var wire 1 7% data_out [3] $end
$var wire 1 8% data_out [2] $end
$var wire 1 9% data_out [1] $end
$var wire 1 :% data_out [0] $end
$var wire 1 iK data_in [15] $end
$var wire 1 jK data_in [14] $end
$var wire 1 kK data_in [13] $end
$var wire 1 lK data_in [12] $end
$var wire 1 mK data_in [11] $end
$var wire 1 nK data_in [10] $end
$var wire 1 oK data_in [9] $end
$var wire 1 pK data_in [8] $end
$var wire 1 qK data_in [7] $end
$var wire 1 rK data_in [6] $end
$var wire 1 sK data_in [5] $end
$var wire 1 tK data_in [4] $end
$var wire 1 uK data_in [3] $end
$var wire 1 vK data_in [2] $end
$var wire 1 wK data_in [1] $end
$var wire 1 ;) data_in [0] $end
$var wire 1 ~' addr [15] $end
$var wire 1 !( addr [14] $end
$var wire 1 "( addr [13] $end
$var wire 1 #( addr [12] $end
$var wire 1 $( addr [11] $end
$var wire 1 %( addr [10] $end
$var wire 1 &( addr [9] $end
$var wire 1 '( addr [8] $end
$var wire 1 (( addr [7] $end
$var wire 1 )( addr [6] $end
$var wire 1 *( addr [5] $end
$var wire 1 +( addr [4] $end
$var wire 1 ,( addr [3] $end
$var wire 1 -( addr [2] $end
$var wire 1 .( addr [1] $end
$var wire 1 /( addr [0] $end
$var wire 1 xK enable $end
$var wire 1 Z( wr $end
$var wire 1 u! createdump $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 yK loaded $end
$var reg 17 zK largest [16:0] $end
$var integer 32 {K mcd $end
$var integer 32 |K i $end
$upscope $end
$upscope $end

$scope module MEMWB $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 +% memoryOut [15] $end
$var wire 1 ,% memoryOut [14] $end
$var wire 1 -% memoryOut [13] $end
$var wire 1 .% memoryOut [12] $end
$var wire 1 /% memoryOut [11] $end
$var wire 1 0% memoryOut [10] $end
$var wire 1 1% memoryOut [9] $end
$var wire 1 2% memoryOut [8] $end
$var wire 1 3% memoryOut [7] $end
$var wire 1 4% memoryOut [6] $end
$var wire 1 5% memoryOut [5] $end
$var wire 1 6% memoryOut [4] $end
$var wire 1 7% memoryOut [3] $end
$var wire 1 8% memoryOut [2] $end
$var wire 1 9% memoryOut [1] $end
$var wire 1 :% memoryOut [0] $end
$var wire 1 n' PC_inc [15] $end
$var wire 1 o' PC_inc [14] $end
$var wire 1 p' PC_inc [13] $end
$var wire 1 q' PC_inc [12] $end
$var wire 1 r' PC_inc [11] $end
$var wire 1 s' PC_inc [10] $end
$var wire 1 t' PC_inc [9] $end
$var wire 1 u' PC_inc [8] $end
$var wire 1 v' PC_inc [7] $end
$var wire 1 w' PC_inc [6] $end
$var wire 1 x' PC_inc [5] $end
$var wire 1 y' PC_inc [4] $end
$var wire 1 z' PC_inc [3] $end
$var wire 1 {' PC_inc [2] $end
$var wire 1 |' PC_inc [1] $end
$var wire 1 }' PC_inc [0] $end
$var wire 1 ~' ALUOut [15] $end
$var wire 1 !( ALUOut [14] $end
$var wire 1 "( ALUOut [13] $end
$var wire 1 #( ALUOut [12] $end
$var wire 1 $( ALUOut [11] $end
$var wire 1 %( ALUOut [10] $end
$var wire 1 &( ALUOut [9] $end
$var wire 1 '( ALUOut [8] $end
$var wire 1 (( ALUOut [7] $end
$var wire 1 )( ALUOut [6] $end
$var wire 1 *( ALUOut [5] $end
$var wire 1 +( ALUOut [4] $end
$var wire 1 ,( ALUOut [3] $end
$var wire 1 -( ALUOut [2] $end
$var wire 1 .( ALUOut [1] $end
$var wire 1 /( ALUOut [0] $end
$var wire 1 -& PC [15] $end
$var wire 1 .& PC [14] $end
$var wire 1 /& PC [13] $end
$var wire 1 0& PC [12] $end
$var wire 1 1& PC [11] $end
$var wire 1 2& PC [10] $end
$var wire 1 3& PC [9] $end
$var wire 1 4& PC [8] $end
$var wire 1 5& PC [7] $end
$var wire 1 6& PC [6] $end
$var wire 1 7& PC [5] $end
$var wire 1 8& PC [4] $end
$var wire 1 9& PC [3] $end
$var wire 1 :& PC [2] $end
$var wire 1 ;& PC [1] $end
$var wire 1 <& PC [0] $end
$var wire 1 }K jumpCtl [2] $end
$var wire 1 ~K jumpCtl [1] $end
$var wire 1 :) jumpCtl [0] $end
$var wire 1 n& Rs [2] $end
$var wire 1 o& Rs [1] $end
$var wire 1 p& Rs [0] $end
$var wire 1 q& Rt [2] $end
$var wire 1 r& Rt [1] $end
$var wire 1 s& Rt [0] $end
$var wire 1 t& Rd [2] $end
$var wire 1 u& Rd [1] $end
$var wire 1 v& Rd [0] $end
$var wire 1 ]( MemToReg $end
$var wire 1 \( regWrite $end
$var wire 1 q( MEMWB_memoryOut [15] $end
$var wire 1 r( MEMWB_memoryOut [14] $end
$var wire 1 s( MEMWB_memoryOut [13] $end
$var wire 1 t( MEMWB_memoryOut [12] $end
$var wire 1 u( MEMWB_memoryOut [11] $end
$var wire 1 v( MEMWB_memoryOut [10] $end
$var wire 1 w( MEMWB_memoryOut [9] $end
$var wire 1 x( MEMWB_memoryOut [8] $end
$var wire 1 y( MEMWB_memoryOut [7] $end
$var wire 1 z( MEMWB_memoryOut [6] $end
$var wire 1 {( MEMWB_memoryOut [5] $end
$var wire 1 |( MEMWB_memoryOut [4] $end
$var wire 1 }( MEMWB_memoryOut [3] $end
$var wire 1 ~( MEMWB_memoryOut [2] $end
$var wire 1 !) MEMWB_memoryOut [1] $end
$var wire 1 ") MEMWB_memoryOut [0] $end
$var wire 1 #) MEMWB_PC_inc [15] $end
$var wire 1 $) MEMWB_PC_inc [14] $end
$var wire 1 %) MEMWB_PC_inc [13] $end
$var wire 1 &) MEMWB_PC_inc [12] $end
$var wire 1 ') MEMWB_PC_inc [11] $end
$var wire 1 () MEMWB_PC_inc [10] $end
$var wire 1 )) MEMWB_PC_inc [9] $end
$var wire 1 *) MEMWB_PC_inc [8] $end
$var wire 1 +) MEMWB_PC_inc [7] $end
$var wire 1 ,) MEMWB_PC_inc [6] $end
$var wire 1 -) MEMWB_PC_inc [5] $end
$var wire 1 .) MEMWB_PC_inc [4] $end
$var wire 1 /) MEMWB_PC_inc [3] $end
$var wire 1 0) MEMWB_PC_inc [2] $end
$var wire 1 1) MEMWB_PC_inc [1] $end
$var wire 1 2) MEMWB_PC_inc [0] $end
$var wire 1 =& MEMWB_PC [15] $end
$var wire 1 >& MEMWB_PC [14] $end
$var wire 1 ?& MEMWB_PC [13] $end
$var wire 1 @& MEMWB_PC [12] $end
$var wire 1 A& MEMWB_PC [11] $end
$var wire 1 B& MEMWB_PC [10] $end
$var wire 1 C& MEMWB_PC [9] $end
$var wire 1 D& MEMWB_PC [8] $end
$var wire 1 E& MEMWB_PC [7] $end
$var wire 1 F& MEMWB_PC [6] $end
$var wire 1 G& MEMWB_PC [5] $end
$var wire 1 H& MEMWB_PC [4] $end
$var wire 1 I& MEMWB_PC [3] $end
$var wire 1 J& MEMWB_PC [2] $end
$var wire 1 K& MEMWB_PC [1] $end
$var wire 1 L& MEMWB_PC [0] $end
$var wire 1 !L MEMWB_ALUout [15] $end
$var wire 1 "L MEMWB_ALUout [14] $end
$var wire 1 #L MEMWB_ALUout [13] $end
$var wire 1 $L MEMWB_ALUout [12] $end
$var wire 1 %L MEMWB_ALUout [11] $end
$var wire 1 &L MEMWB_ALUout [10] $end
$var wire 1 'L MEMWB_ALUout [9] $end
$var wire 1 (L MEMWB_ALUout [8] $end
$var wire 1 )L MEMWB_ALUout [7] $end
$var wire 1 *L MEMWB_ALUout [6] $end
$var wire 1 +L MEMWB_ALUout [5] $end
$var wire 1 ,L MEMWB_ALUout [4] $end
$var wire 1 -L MEMWB_ALUout [3] $end
$var wire 1 .L MEMWB_ALUout [2] $end
$var wire 1 /L MEMWB_ALUout [1] $end
$var wire 1 <) MEMWB_ALUout [0] $end
$var wire 1 ^( MEMWB_jumpCtl [2] $end
$var wire 1 _( MEMWB_jumpCtl [1] $end
$var wire 1 `( MEMWB_jumpCtl [0] $end
$var wire 1 0L MEMWB_Rs [2] $end
$var wire 1 1L MEMWB_Rs [1] $end
$var wire 1 =) MEMWB_Rs [0] $end
$var wire 1 2L MEMWB_Rt [2] $end
$var wire 1 3L MEMWB_Rt [1] $end
$var wire 1 >) MEMWB_Rt [0] $end
$var wire 1 4L MEMWB_Rd [2] $end
$var wire 1 5L MEMWB_Rd [1] $end
$var wire 1 7) MEMWB_Rd [0] $end
$var wire 1 3) MEMWB_MemToReg $end
$var wire 1 4) MEMWB_regWrite $end

$scope module MEMWB_memoryOut_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 6L en $end
$var wire 1 +% D [15] $end
$var wire 1 ,% D [14] $end
$var wire 1 -% D [13] $end
$var wire 1 .% D [12] $end
$var wire 1 /% D [11] $end
$var wire 1 0% D [10] $end
$var wire 1 1% D [9] $end
$var wire 1 2% D [8] $end
$var wire 1 3% D [7] $end
$var wire 1 4% D [6] $end
$var wire 1 5% D [5] $end
$var wire 1 6% D [4] $end
$var wire 1 7% D [3] $end
$var wire 1 8% D [2] $end
$var wire 1 9% D [1] $end
$var wire 1 :% D [0] $end
$var wire 1 q( Q [15] $end
$var wire 1 r( Q [14] $end
$var wire 1 s( Q [13] $end
$var wire 1 t( Q [12] $end
$var wire 1 u( Q [11] $end
$var wire 1 v( Q [10] $end
$var wire 1 w( Q [9] $end
$var wire 1 x( Q [8] $end
$var wire 1 y( Q [7] $end
$var wire 1 z( Q [6] $end
$var wire 1 {( Q [5] $end
$var wire 1 |( Q [4] $end
$var wire 1 }( Q [3] $end
$var wire 1 ~( Q [2] $end
$var wire 1 !) Q [1] $end
$var wire 1 ") Q [0] $end
$var wire 1 7L in [15] $end
$var wire 1 8L in [14] $end
$var wire 1 9L in [13] $end
$var wire 1 :L in [12] $end
$var wire 1 ;L in [11] $end
$var wire 1 <L in [10] $end
$var wire 1 =L in [9] $end
$var wire 1 >L in [8] $end
$var wire 1 ?L in [7] $end
$var wire 1 @L in [6] $end
$var wire 1 AL in [5] $end
$var wire 1 BL in [4] $end
$var wire 1 CL in [3] $end
$var wire 1 DL in [2] $end
$var wire 1 EL in [1] $end
$var wire 1 FL in [0] $end
$var wire 1 GL out [15] $end
$var wire 1 HL out [14] $end
$var wire 1 IL out [13] $end
$var wire 1 JL out [12] $end
$var wire 1 KL out [11] $end
$var wire 1 LL out [10] $end
$var wire 1 ML out [9] $end
$var wire 1 NL out [8] $end
$var wire 1 OL out [7] $end
$var wire 1 PL out [6] $end
$var wire 1 QL out [5] $end
$var wire 1 RL out [4] $end
$var wire 1 SL out [3] $end
$var wire 1 TL out [2] $end
$var wire 1 UL out [1] $end
$var wire 1 VL out [0] $end

$scope module dff_0 $end
$var wire 1 VL q $end
$var wire 1 FL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 WL state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 UL q $end
$var wire 1 EL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 XL state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 TL q $end
$var wire 1 DL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 YL state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 SL q $end
$var wire 1 CL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ZL state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 RL q $end
$var wire 1 BL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [L state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 QL q $end
$var wire 1 AL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \L state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 PL q $end
$var wire 1 @L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ]L state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 OL q $end
$var wire 1 ?L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ^L state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 NL q $end
$var wire 1 >L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _L state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ML q $end
$var wire 1 =L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `L state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 LL q $end
$var wire 1 <L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 aL state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 KL q $end
$var wire 1 ;L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 bL state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 JL q $end
$var wire 1 :L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 cL state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 IL q $end
$var wire 1 9L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 dL state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 HL q $end
$var wire 1 8L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 eL state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 GL q $end
$var wire 1 7L d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 fL state $end
$upscope $end
$upscope $end

$scope module MEMWB_PC_inc_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 gL en $end
$var wire 1 n' D [15] $end
$var wire 1 o' D [14] $end
$var wire 1 p' D [13] $end
$var wire 1 q' D [12] $end
$var wire 1 r' D [11] $end
$var wire 1 s' D [10] $end
$var wire 1 t' D [9] $end
$var wire 1 u' D [8] $end
$var wire 1 v' D [7] $end
$var wire 1 w' D [6] $end
$var wire 1 x' D [5] $end
$var wire 1 y' D [4] $end
$var wire 1 z' D [3] $end
$var wire 1 {' D [2] $end
$var wire 1 |' D [1] $end
$var wire 1 }' D [0] $end
$var wire 1 #) Q [15] $end
$var wire 1 $) Q [14] $end
$var wire 1 %) Q [13] $end
$var wire 1 &) Q [12] $end
$var wire 1 ') Q [11] $end
$var wire 1 () Q [10] $end
$var wire 1 )) Q [9] $end
$var wire 1 *) Q [8] $end
$var wire 1 +) Q [7] $end
$var wire 1 ,) Q [6] $end
$var wire 1 -) Q [5] $end
$var wire 1 .) Q [4] $end
$var wire 1 /) Q [3] $end
$var wire 1 0) Q [2] $end
$var wire 1 1) Q [1] $end
$var wire 1 2) Q [0] $end
$var wire 1 hL in [15] $end
$var wire 1 iL in [14] $end
$var wire 1 jL in [13] $end
$var wire 1 kL in [12] $end
$var wire 1 lL in [11] $end
$var wire 1 mL in [10] $end
$var wire 1 nL in [9] $end
$var wire 1 oL in [8] $end
$var wire 1 pL in [7] $end
$var wire 1 qL in [6] $end
$var wire 1 rL in [5] $end
$var wire 1 sL in [4] $end
$var wire 1 tL in [3] $end
$var wire 1 uL in [2] $end
$var wire 1 vL in [1] $end
$var wire 1 wL in [0] $end
$var wire 1 xL out [15] $end
$var wire 1 yL out [14] $end
$var wire 1 zL out [13] $end
$var wire 1 {L out [12] $end
$var wire 1 |L out [11] $end
$var wire 1 }L out [10] $end
$var wire 1 ~L out [9] $end
$var wire 1 !M out [8] $end
$var wire 1 "M out [7] $end
$var wire 1 #M out [6] $end
$var wire 1 $M out [5] $end
$var wire 1 %M out [4] $end
$var wire 1 &M out [3] $end
$var wire 1 'M out [2] $end
$var wire 1 (M out [1] $end
$var wire 1 )M out [0] $end

$scope module dff_0 $end
$var wire 1 )M q $end
$var wire 1 wL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 *M state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 (M q $end
$var wire 1 vL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 +M state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 'M q $end
$var wire 1 uL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ,M state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 &M q $end
$var wire 1 tL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 -M state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 %M q $end
$var wire 1 sL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 .M state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 $M q $end
$var wire 1 rL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 /M state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 #M q $end
$var wire 1 qL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 0M state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 "M q $end
$var wire 1 pL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 1M state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 !M q $end
$var wire 1 oL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 2M state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ~L q $end
$var wire 1 nL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 3M state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 }L q $end
$var wire 1 mL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 4M state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 |L q $end
$var wire 1 lL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 5M state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 {L q $end
$var wire 1 kL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 6M state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 zL q $end
$var wire 1 jL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 7M state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 yL q $end
$var wire 1 iL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 8M state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 xL q $end
$var wire 1 hL d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 9M state $end
$upscope $end
$upscope $end

$scope module MEMWB_PC_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 :M en $end
$var wire 1 -& D [15] $end
$var wire 1 .& D [14] $end
$var wire 1 /& D [13] $end
$var wire 1 0& D [12] $end
$var wire 1 1& D [11] $end
$var wire 1 2& D [10] $end
$var wire 1 3& D [9] $end
$var wire 1 4& D [8] $end
$var wire 1 5& D [7] $end
$var wire 1 6& D [6] $end
$var wire 1 7& D [5] $end
$var wire 1 8& D [4] $end
$var wire 1 9& D [3] $end
$var wire 1 :& D [2] $end
$var wire 1 ;& D [1] $end
$var wire 1 <& D [0] $end
$var wire 1 =& Q [15] $end
$var wire 1 >& Q [14] $end
$var wire 1 ?& Q [13] $end
$var wire 1 @& Q [12] $end
$var wire 1 A& Q [11] $end
$var wire 1 B& Q [10] $end
$var wire 1 C& Q [9] $end
$var wire 1 D& Q [8] $end
$var wire 1 E& Q [7] $end
$var wire 1 F& Q [6] $end
$var wire 1 G& Q [5] $end
$var wire 1 H& Q [4] $end
$var wire 1 I& Q [3] $end
$var wire 1 J& Q [2] $end
$var wire 1 K& Q [1] $end
$var wire 1 L& Q [0] $end
$var wire 1 ;M in [15] $end
$var wire 1 <M in [14] $end
$var wire 1 =M in [13] $end
$var wire 1 >M in [12] $end
$var wire 1 ?M in [11] $end
$var wire 1 @M in [10] $end
$var wire 1 AM in [9] $end
$var wire 1 BM in [8] $end
$var wire 1 CM in [7] $end
$var wire 1 DM in [6] $end
$var wire 1 EM in [5] $end
$var wire 1 FM in [4] $end
$var wire 1 GM in [3] $end
$var wire 1 HM in [2] $end
$var wire 1 IM in [1] $end
$var wire 1 JM in [0] $end
$var wire 1 KM out [15] $end
$var wire 1 LM out [14] $end
$var wire 1 MM out [13] $end
$var wire 1 NM out [12] $end
$var wire 1 OM out [11] $end
$var wire 1 PM out [10] $end
$var wire 1 QM out [9] $end
$var wire 1 RM out [8] $end
$var wire 1 SM out [7] $end
$var wire 1 TM out [6] $end
$var wire 1 UM out [5] $end
$var wire 1 VM out [4] $end
$var wire 1 WM out [3] $end
$var wire 1 XM out [2] $end
$var wire 1 YM out [1] $end
$var wire 1 ZM out [0] $end

$scope module dff_0 $end
$var wire 1 ZM q $end
$var wire 1 JM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [M state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 YM q $end
$var wire 1 IM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 \M state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 XM q $end
$var wire 1 HM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ]M state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 WM q $end
$var wire 1 GM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ^M state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 VM q $end
$var wire 1 FM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 _M state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 UM q $end
$var wire 1 EM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 `M state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 TM q $end
$var wire 1 DM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 aM state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 SM q $end
$var wire 1 CM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 bM state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 RM q $end
$var wire 1 BM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 cM state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 QM q $end
$var wire 1 AM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 dM state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 PM q $end
$var wire 1 @M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 eM state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 OM q $end
$var wire 1 ?M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 fM state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 NM q $end
$var wire 1 >M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 gM state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 MM q $end
$var wire 1 =M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 hM state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 LM q $end
$var wire 1 <M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 iM state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 KM q $end
$var wire 1 ;M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 jM state $end
$upscope $end
$upscope $end

$scope module MEMWB_ALUout_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 kM en $end
$var wire 1 ~' D [15] $end
$var wire 1 !( D [14] $end
$var wire 1 "( D [13] $end
$var wire 1 #( D [12] $end
$var wire 1 $( D [11] $end
$var wire 1 %( D [10] $end
$var wire 1 &( D [9] $end
$var wire 1 '( D [8] $end
$var wire 1 (( D [7] $end
$var wire 1 )( D [6] $end
$var wire 1 *( D [5] $end
$var wire 1 +( D [4] $end
$var wire 1 ,( D [3] $end
$var wire 1 -( D [2] $end
$var wire 1 .( D [1] $end
$var wire 1 /( D [0] $end
$var wire 1 !L Q [15] $end
$var wire 1 "L Q [14] $end
$var wire 1 #L Q [13] $end
$var wire 1 $L Q [12] $end
$var wire 1 %L Q [11] $end
$var wire 1 &L Q [10] $end
$var wire 1 'L Q [9] $end
$var wire 1 (L Q [8] $end
$var wire 1 )L Q [7] $end
$var wire 1 *L Q [6] $end
$var wire 1 +L Q [5] $end
$var wire 1 ,L Q [4] $end
$var wire 1 -L Q [3] $end
$var wire 1 .L Q [2] $end
$var wire 1 /L Q [1] $end
$var wire 1 <) Q [0] $end
$var wire 1 lM in [15] $end
$var wire 1 mM in [14] $end
$var wire 1 nM in [13] $end
$var wire 1 oM in [12] $end
$var wire 1 pM in [11] $end
$var wire 1 qM in [10] $end
$var wire 1 rM in [9] $end
$var wire 1 sM in [8] $end
$var wire 1 tM in [7] $end
$var wire 1 uM in [6] $end
$var wire 1 vM in [5] $end
$var wire 1 wM in [4] $end
$var wire 1 xM in [3] $end
$var wire 1 yM in [2] $end
$var wire 1 zM in [1] $end
$var wire 1 {M in [0] $end
$var wire 1 |M out [15] $end
$var wire 1 }M out [14] $end
$var wire 1 ~M out [13] $end
$var wire 1 !N out [12] $end
$var wire 1 "N out [11] $end
$var wire 1 #N out [10] $end
$var wire 1 $N out [9] $end
$var wire 1 %N out [8] $end
$var wire 1 &N out [7] $end
$var wire 1 'N out [6] $end
$var wire 1 (N out [5] $end
$var wire 1 )N out [4] $end
$var wire 1 *N out [3] $end
$var wire 1 +N out [2] $end
$var wire 1 ,N out [1] $end
$var wire 1 -N out [0] $end

$scope module dff_0 $end
$var wire 1 -N q $end
$var wire 1 {M d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 .N state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 ,N q $end
$var wire 1 zM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 /N state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 +N q $end
$var wire 1 yM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 0N state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 *N q $end
$var wire 1 xM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 1N state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 )N q $end
$var wire 1 wM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 2N state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 (N q $end
$var wire 1 vM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 3N state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 'N q $end
$var wire 1 uM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 4N state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 &N q $end
$var wire 1 tM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 5N state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 %N q $end
$var wire 1 sM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 6N state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 $N q $end
$var wire 1 rM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 7N state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 #N q $end
$var wire 1 qM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 8N state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 "N q $end
$var wire 1 pM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 9N state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 !N q $end
$var wire 1 oM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 :N state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 ~M q $end
$var wire 1 nM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ;N state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 }M q $end
$var wire 1 mM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 <N state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 |M q $end
$var wire 1 lM d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 =N state $end
$upscope $end
$upscope $end

$scope module MEMWB_jumpCtl_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 >N en $end
$var wire 1 }K D [2] $end
$var wire 1 ~K D [1] $end
$var wire 1 :) D [0] $end
$var wire 1 ^( Q [2] $end
$var wire 1 _( Q [1] $end
$var wire 1 `( Q [0] $end
$var wire 1 ?N in [2] $end
$var wire 1 @N in [1] $end
$var wire 1 AN in [0] $end
$var wire 1 BN out [2] $end
$var wire 1 CN out [1] $end
$var wire 1 DN out [0] $end

$scope module dff_0 $end
$var wire 1 DN q $end
$var wire 1 AN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 EN state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 CN q $end
$var wire 1 @N d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 FN state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 BN q $end
$var wire 1 ?N d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 GN state $end
$upscope $end
$upscope $end

$scope module MEMWB_Rs_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 HN en $end
$var wire 1 n& D [2] $end
$var wire 1 o& D [1] $end
$var wire 1 p& D [0] $end
$var wire 1 0L Q [2] $end
$var wire 1 1L Q [1] $end
$var wire 1 =) Q [0] $end
$var wire 1 IN in [2] $end
$var wire 1 JN in [1] $end
$var wire 1 KN in [0] $end
$var wire 1 LN out [2] $end
$var wire 1 MN out [1] $end
$var wire 1 NN out [0] $end

$scope module dff_0 $end
$var wire 1 NN q $end
$var wire 1 KN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ON state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 MN q $end
$var wire 1 JN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 PN state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 LN q $end
$var wire 1 IN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 QN state $end
$upscope $end
$upscope $end

$scope module MEMWB_Rt_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 RN en $end
$var wire 1 q& D [2] $end
$var wire 1 r& D [1] $end
$var wire 1 s& D [0] $end
$var wire 1 2L Q [2] $end
$var wire 1 3L Q [1] $end
$var wire 1 >) Q [0] $end
$var wire 1 SN in [2] $end
$var wire 1 TN in [1] $end
$var wire 1 UN in [0] $end
$var wire 1 VN out [2] $end
$var wire 1 WN out [1] $end
$var wire 1 XN out [0] $end

$scope module dff_0 $end
$var wire 1 XN q $end
$var wire 1 UN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 YN state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 WN q $end
$var wire 1 TN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 ZN state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 VN q $end
$var wire 1 SN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 [N state $end
$upscope $end
$upscope $end

$scope module MEMWB_Rd_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 \N en $end
$var wire 1 t& D [2] $end
$var wire 1 u& D [1] $end
$var wire 1 v& D [0] $end
$var wire 1 4L Q [2] $end
$var wire 1 5L Q [1] $end
$var wire 1 7) Q [0] $end
$var wire 1 ]N in [2] $end
$var wire 1 ^N in [1] $end
$var wire 1 _N in [0] $end
$var wire 1 `N out [2] $end
$var wire 1 aN out [1] $end
$var wire 1 bN out [0] $end

$scope module dff_0 $end
$var wire 1 bN q $end
$var wire 1 _N d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 cN state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 aN q $end
$var wire 1 ^N d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 dN state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 `N q $end
$var wire 1 ]N d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 eN state $end
$upscope $end
$upscope $end

$scope module MEMWB_MemToReg_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 fN en $end
$var wire 1 ]( D $end
$var wire 1 3) Q $end
$var wire 1 gN in $end
$var wire 1 hN out $end

$scope module dff_0 $end
$var wire 1 hN q $end
$var wire 1 gN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 iN state $end
$upscope $end
$upscope $end

$scope module MEMWB_regWrite_reg $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var wire 1 jN en $end
$var wire 1 \( D $end
$var wire 1 4) Q $end
$var wire 1 kN in $end
$var wire 1 lN out $end

$scope module dff_0 $end
$var wire 1 lN q $end
$var wire 1 kN d $end
$var wire 1 u! clk $end
$var wire 1 w! rst $end
$var reg 1 mN state $end
$upscope $end
$upscope $end
$upscope $end

$scope module wbStage $end
$var wire 1 ]( memToReg $end
$var wire 1 q( memData [15] $end
$var wire 1 r( memData [14] $end
$var wire 1 s( memData [13] $end
$var wire 1 t( memData [12] $end
$var wire 1 u( memData [11] $end
$var wire 1 v( memData [10] $end
$var wire 1 w( memData [9] $end
$var wire 1 x( memData [8] $end
$var wire 1 y( memData [7] $end
$var wire 1 z( memData [6] $end
$var wire 1 {( memData [5] $end
$var wire 1 |( memData [4] $end
$var wire 1 }( memData [3] $end
$var wire 1 ~( memData [2] $end
$var wire 1 !) memData [1] $end
$var wire 1 ") memData [0] $end
$var wire 1 nN aluOut [15] $end
$var wire 1 oN aluOut [14] $end
$var wire 1 pN aluOut [13] $end
$var wire 1 qN aluOut [12] $end
$var wire 1 rN aluOut [11] $end
$var wire 1 sN aluOut [10] $end
$var wire 1 tN aluOut [9] $end
$var wire 1 uN aluOut [8] $end
$var wire 1 vN aluOut [7] $end
$var wire 1 wN aluOut [6] $end
$var wire 1 xN aluOut [5] $end
$var wire 1 yN aluOut [4] $end
$var wire 1 zN aluOut [3] $end
$var wire 1 {N aluOut [2] $end
$var wire 1 |N aluOut [1] $end
$var wire 1 <) aluOut [0] $end
$var wire 1 #) PC_inc [15] $end
$var wire 1 $) PC_inc [14] $end
$var wire 1 %) PC_inc [13] $end
$var wire 1 &) PC_inc [12] $end
$var wire 1 ') PC_inc [11] $end
$var wire 1 () PC_inc [10] $end
$var wire 1 )) PC_inc [9] $end
$var wire 1 *) PC_inc [8] $end
$var wire 1 +) PC_inc [7] $end
$var wire 1 ,) PC_inc [6] $end
$var wire 1 -) PC_inc [5] $end
$var wire 1 .) PC_inc [4] $end
$var wire 1 /) PC_inc [3] $end
$var wire 1 0) PC_inc [2] $end
$var wire 1 1) PC_inc [1] $end
$var wire 1 2) PC_inc [0] $end
$var wire 1 ^( jumpCtl [2] $end
$var wire 1 _( jumpCtl [1] $end
$var wire 1 `( jumpCtl [0] $end
$var wire 1 y$ writeData [15] $end
$var wire 1 z$ writeData [14] $end
$var wire 1 {$ writeData [13] $end
$var wire 1 |$ writeData [12] $end
$var wire 1 }$ writeData [11] $end
$var wire 1 ~$ writeData [10] $end
$var wire 1 !% writeData [9] $end
$var wire 1 "% writeData [8] $end
$var wire 1 #% writeData [7] $end
$var wire 1 $% writeData [6] $end
$var wire 1 %% writeData [5] $end
$var wire 1 &% writeData [4] $end
$var wire 1 '% writeData [3] $end
$var wire 1 (% writeData [2] $end
$var wire 1 )% writeData [1] $end
$var wire 1 *% writeData [0] $end
$var wire 1 }N inter_writeData [15] $end
$var wire 1 ~N inter_writeData [14] $end
$var wire 1 !O inter_writeData [13] $end
$var wire 1 "O inter_writeData [12] $end
$var wire 1 #O inter_writeData [11] $end
$var wire 1 $O inter_writeData [10] $end
$var wire 1 %O inter_writeData [9] $end
$var wire 1 &O inter_writeData [8] $end
$var wire 1 'O inter_writeData [7] $end
$var wire 1 (O inter_writeData [6] $end
$var wire 1 )O inter_writeData [5] $end
$var wire 1 *O inter_writeData [4] $end
$var wire 1 +O inter_writeData [3] $end
$var wire 1 ,O inter_writeData [2] $end
$var wire 1 -O inter_writeData [1] $end
$var wire 1 .O inter_writeData [0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x@H
0YH
0ZH
0[H
0cH
0dH
0eH
0mH
0nH
0oH
0wH
0xH
0yH
0=I
0>I
0?I
0@I
0AI
0BI
0CI
0DI
0EI
0FI
0GI
0HI
0II
0JI
0KI
0LI
0nI
0oI
0pI
0qI
0rI
0sI
0tI
0uI
0vI
0wI
0xI
0yI
0zI
0{I
0|I
0}I
0AJ
0BJ
0CJ
0DJ
0EJ
0FJ
0GJ
0HJ
0IJ
0JJ
0KJ
0LJ
0MJ
0NJ
0OJ
0PJ
0rJ
0sJ
0tJ
0uJ
0vJ
0wJ
0xJ
0yJ
0zJ
0{J
0|J
0}J
0~J
0!K
0"K
0#K
0EK
0FK
0GK
0HK
0IK
0JK
0KK
0LK
0MK
0NK
0OK
0PK
0QK
0RK
0SK
0TK
0XK
0\K
0`K
0dK
0hK
1yK
b0 zK
0WL
0XL
0YL
0ZL
0[L
0\L
0]L
0^L
0_L
0`L
0aL
0bL
0cL
0dL
0eL
0fL
0*M
0+M
0,M
0-M
0.M
0/M
00M
01M
02M
03M
04M
05M
06M
07M
08M
09M
0[M
0\M
0]M
0^M
0_M
0`M
0aM
0bM
0cM
0dM
0eM
0fM
0gM
0hM
0iM
0jM
0.N
0/N
00N
01N
02N
03N
04N
05N
06N
07N
08N
09N
0:N
0;N
0<N
0=N
0EN
0FN
0GN
0ON
0PN
0QN
0YN
0ZN
0[N
0cN
0dN
0eN
0iN
0mN
1x!
1y!
0r)
0s)
0t)
0u)
0v)
0w)
0x)
0y)
0z)
0{)
0|)
0})
0~)
0!*
0"*
0#*
1&*
b0 '*
00-
01-
02-
03-
04-
05-
06-
07-
08-
09-
0:-
0;-
0<-
0=-
0>-
0?-
0b-
0c-
0d-
0e-
0f-
0g-
0h-
0i-
0j-
0k-
0l-
0m-
0n-
0o-
0p-
0q-
06.
07.
08.
09.
0:.
0;.
0<.
0=.
0>.
0?.
0@.
0A.
0B.
0C.
0D.
0E.
0H0
0I0
0J0
0K0
0L0
0M0
0N0
0O0
0P0
0Q0
0R0
0S0
0T0
0U0
0V0
0W0
0x0
0y0
0z0
0{0
0|0
0}0
0~0
0!1
0"1
0#1
0$1
0%1
0&1
0'1
0(1
0)1
0J1
0K1
0L1
0M1
0N1
0O1
0P1
0Q1
0R1
0S1
0T1
0U1
0V1
0W1
0X1
0Y1
0z1
0{1
0|1
0}1
0~1
0!2
0"2
0#2
0$2
0%2
0&2
0'2
0(2
0)2
0*2
0+2
0L2
0M2
0N2
0O2
0P2
0Q2
0R2
0S2
0T2
0U2
0V2
0W2
0X2
0Y2
0Z2
0[2
0|2
0}2
0~2
0!3
0"3
0#3
0$3
0%3
0&3
0'3
0(3
0)3
0*3
0+3
0,3
0-3
0N3
0O3
0P3
0Q3
0R3
0S3
0T3
0U3
0V3
0W3
0X3
0Y3
0Z3
0[3
0\3
0]3
0~3
0!4
0"4
0#4
0$4
0%4
0&4
0'4
0(4
0)4
0*4
0+4
0,4
0-4
0.4
0/4
bx 04
bx 14
bx 45
bx 55
x65
x75
x85
x95
x:5
x;5
x<5
x=5
x>5
x?5
x@5
xA5
xB5
xC5
xD5
xE5
xF5
xG5
bx H5
0_5
0`5
0a5
0i5
0j5
0k5
0s5
0t5
0u5
0}5
0~5
0!6
0)6
0*6
0+6
036
046
056
0W6
0X6
0Y6
0Z6
0[6
0\6
0]6
0^6
0_6
0`6
0a6
0b6
0c6
0d6
0e6
0f6
0*7
0+7
0,7
0-7
0.7
0/7
007
017
027
037
047
057
067
077
087
097
0[7
0\7
0]7
0^7
0_7
0`7
0a7
0b7
0c7
0d7
0e7
0f7
0g7
0h7
0i7
0j7
0.8
0/8
008
018
028
038
048
058
068
078
088
098
0:8
0;8
0<8
0=8
0_8
0`8
0a8
0b8
0c8
0d8
0e8
0f8
0g8
0h8
0i8
0j8
0k8
0l8
0m8
0n8
0r8
0v8
0z8
0~8
0$9
0(9
0,9
009
049
089
0<9
0@9
b10000 **
b100 T*
b100 ++
b100 `+
b100 7,
b10000 K.
b10000 G;
b100 #<
b100 X<
b100 /=
b100 iG
b100 d=
b10000 ;>
b11 <>
b10000 %@
b100 &@
b10 '@
b10000 X@
b100 p@
b100 GA
b100 |A
b100 SB
b10000 *C
b100 TC
b100 +D
b100 `D
b100 7E
b10000 lE
b100 (F
b100 ]F
b100 4G
bx {K
b10000000000000000 |K
b0 .!
b10 /!
b100 0!
b0 1!
b0 2!
b0 3!
b0 4!
b1 z!
bx (*
b10000000000000000 )*
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
xA
xD
0C
0B
zT
zS
zR
zQ
zP
zO
zN
zM
zL
zK
zJ
zI
zH
zG
zF
zE
zU
zV
zf
ze
zd
zc
zb
za
z`
z_
z^
z]
z\
z[
zZ
zY
zX
zW
zv
zu
zt
zs
zr
zq
zp
zo
zn
zm
zl
zk
zj
zi
zh
zg
z(!
z'!
z&!
z%!
z$!
z#!
z"!
z!!
z~
z}
z|
z{
zz
zy
zx
zw
z)!
z*!
z+!
z,!
x-!
1u!
0v!
1w!
z{!
x|!
x}!
x~!
x!"
x""
x#"
z$"
z%"
x&"
z'"
x("
z)"
x*"
z+"
x,"
x-"
x."
x/"
x2"
x1"
x0"
x5"
x4"
x3"
z8"
z7"
z6"
x;"
x:"
x9"
1]<
x^<
x_<
0`<
xa<
0b<
xc<
0d<
xe<
1f<
1g<
1h<
xi<
xj<
xk<
xl<
xm<
xn<
1o<
1p<
0q<
xr<
xs<
xt<
xv<
0w<
xx<
xy<
xz<
1|<
x}<
1~<
1!=
x"=
1$=
x%=
1&=
1'=
x(=
1*=
x+=
1,=
1-=
x.=
x1=
x2=
x3=
x4=
05=
x6=
07=
x8=
09=
x:=
0;=
1<=
1==
1>=
1?=
x@=
xA=
xB=
xC=
xD=
xE=
1F=
1G=
0H=
1I=
0J=
1K=
1M=
xN=
1O=
1P=
xQ=
1S=
xT=
1U=
1V=
xW=
1Y=
xZ=
1[=
1\=
x]=
1_=
x`=
1a=
1b=
xc=
xf=
xg=
xh=
xi=
0j=
xk=
0l=
xm=
0n=
xo=
0p=
1q=
1r=
1s=
1t=
xu=
xv=
xw=
xx=
xy=
xz=
1{=
1|=
0}=
1~=
0!>
1">
1$>
x%>
1&>
1'>
x(>
1*>
x+>
1,>
1->
x.>
10>
x1>
12>
13>
x4>
16>
x7>
18>
19>
x:>
xO>
xN>
xM>
xL>
xK>
xJ>
xI>
xH>
xG>
xF>
xE>
xD>
xC>
xB>
xA>
x@>
x_>
x^>
x]>
x\>
x[>
xZ>
xY>
xX>
xW>
xV>
xU>
xT>
xS>
xR>
xQ>
xP>
xo>
xn>
xm>
xl>
xk>
xj>
xi>
xh>
xg>
xf>
xe>
xd>
xc>
xb>
xa>
x`>
x!?
x~>
x}>
x|>
x{>
xz>
xy>
xx>
xw>
xv>
xu>
xt>
xs>
xr>
xq>
xp>
x1?
x0?
x/?
x.?
x-?
x,?
x+?
x*?
x)?
x(?
x'?
x&?
x%?
x$?
x#?
x"?
xA?
x@?
x??
x>?
x=?
x<?
x;?
x:?
x9?
x8?
x7?
x6?
x5?
x4?
x3?
x2?
xQ?
xP?
xO?
xN?
xM?
xL?
xK?
xJ?
xI?
xH?
xG?
xF?
xE?
xD?
xC?
xB?
xa?
x`?
x_?
x^?
x]?
x\?
x[?
xZ?
xY?
xX?
xW?
xV?
xU?
xT?
xS?
xR?
xq?
xp?
xo?
xn?
xm?
xl?
xk?
xj?
xi?
xh?
xg?
xf?
xe?
xd?
xc?
xb?
x#@
x"@
x!@
x~?
x}?
x|?
x{?
xz?
xy?
xx?
xw?
xv?
xu?
xt?
xs?
xr?
x$@
x7@
x6@
x5@
x4@
x3@
x2@
x1@
x0@
x/@
x.@
x-@
x,@
x+@
x*@
x)@
x(@
xG@
xF@
xE@
xD@
xC@
xB@
xA@
x@@
x?@
x>@
x=@
x<@
x;@
x:@
x9@
x8@
xW@
xV@
xU@
xT@
xS@
xR@
xQ@
xP@
xO@
xN@
xM@
xL@
xK@
xJ@
xI@
xH@
xY@
xZ@
x[@
x\@
z]@
x^@
z_@
x`@
za@
xb@
zc@
xd@
xe@
xf@
xg@
xh@
xi@
xj@
xk@
1l@
xm@
xn@
xo@
xr@
xs@
xt@
xu@
xv@
xw@
xx@
xy@
xz@
x{@
x|@
x}@
x~@
x!A
x"A
1#A
x$A
x%A
x&A
x'A
x(A
x)A
x*A
x+A
x,A
x-A
x.A
x0A
x1A
x2A
13A
14A
x6A
x7A
x8A
x9A
x:A
x<A
x=A
x>A
x?A
x@A
xBA
xCA
xDA
xEA
xFA
xIA
xJA
xKA
xLA
xMA
xNA
xOA
xPA
xQA
xRA
xSA
xTA
xUA
xVA
xWA
xXA
xYA
xZA
x[A
x\A
x]A
x^A
x_A
x`A
xaA
xbA
xcA
xeA
xfA
xgA
xhA
xiA
xkA
xlA
xmA
xnA
xoA
xqA
xrA
xsA
xtA
xuA
xwA
xxA
xyA
xzA
x{A
x~A
x!B
x"B
x#B
x$B
x%B
x&B
x'B
x(B
x)B
x*B
x+B
x,B
x-B
x.B
x/B
x0B
x1B
x2B
x3B
x4B
x5B
x6B
x7B
x8B
x9B
x:B
x<B
x=B
x>B
x?B
x@B
xBB
xCB
xDB
xEB
xFB
xHB
xIB
xJB
xKB
xLB
xNB
xOB
xPB
xQB
xRB
xUB
xVB
xWB
xXB
xYB
xZB
x[B
x\B
x]B
x^B
x_B
x`B
xaB
xbB
xcB
xdB
xeB
xfB
xgB
xhB
xiB
xjB
xkB
xlB
xmB
xnB
xoB
xqB
xrB
xsB
xtB
xuB
xwB
xxB
xyB
xzB
x{B
x}B
x~B
x!C
x"C
x#C
x%C
x&C
x'C
x(C
x)C
x=C
x>C
x?C
x@C
zAC
xBC
zCC
xDC
zEC
xFC
zGC
xHC
xIC
xJC
xKC
xLC
xMC
xNC
xOC
xPC
xQC
xRC
xSC
xVC
xWC
xXC
xYC
xZC
x[C
x\C
x]C
x^C
x_C
x`C
xaC
xbC
xcC
xdC
xeC
xfC
xgC
xhC
xiC
xjC
xkC
xlC
xmC
xnC
xoC
xpC
xrC
xsC
xtC
xuC
xvC
xxC
xyC
xzC
x{C
x|C
x~C
x!D
x"D
x#D
x$D
x&D
x'D
x(D
x)D
x*D
x-D
x.D
x/D
x0D
x1D
x2D
x3D
x4D
x5D
x6D
x7D
x8D
x9D
x:D
x;D
x<D
x=D
x>D
x?D
x@D
xAD
xBD
xCD
xDD
xED
xFD
xGD
xID
xJD
xKD
xLD
xMD
xOD
xPD
xQD
xRD
xSD
xUD
xVD
xWD
xXD
xYD
x[D
x\D
x]D
x^D
x_D
xbD
xcD
xdD
xeD
xfD
xgD
xhD
xiD
xjD
xkD
xlD
xmD
xnD
xoD
xpD
xqD
xrD
xsD
xtD
xuD
xvD
xwD
xxD
xyD
xzD
x{D
x|D
x~D
x!E
x"E
x#E
x$E
x&E
x'E
x(E
x)E
x*E
x,E
x-E
x.E
x/E
x0E
x2E
x3E
x4E
x5E
x6E
x9E
x:E
x;E
x<E
x=E
x>E
x?E
x@E
xAE
xBE
xCE
xDE
xEE
xFE
xGE
xHE
xIE
xJE
xKE
xLE
xME
xNE
xOE
xPE
xQE
xRE
xSE
xUE
xVE
xWE
xXE
xYE
x[E
x\E
x]E
x^E
x_E
xaE
xbE
xcE
xdE
xeE
xgE
xhE
xiE
xjE
xkE
xoE
xpE
xqE
xrE
zsE
xtE
zuE
xvE
zwE
xxE
zyE
xzE
x{E
x|E
x}E
x~E
x!F
x"F
x#F
1$F
x%F
x&F
x'F
x*F
x+F
x,F
x-F
x.F
x/F
x0F
x1F
x2F
x3F
x4F
x5F
x6F
x7F
x8F
19F
x:F
x;F
x<F
x=F
x>F
x?F
x@F
xAF
xBF
xCF
xDF
xFF
xGF
xHF
1IF
1JF
xLF
xMF
xNF
xOF
xPF
xRF
xSF
xTF
xUF
xVF
xXF
xYF
xZF
x[F
x\F
x_F
x`F
xaF
xbF
xcF
xdF
xeF
xfF
xgF
xhF
xiF
xjF
xkF
xlF
xmF
xnF
xoF
xpF
xqF
xrF
xsF
xtF
xuF
xvF
xwF
xxF
xyF
x{F
x|F
x}F
x~F
x!G
x#G
x$G
x%G
x&G
x'G
x)G
x*G
x+G
x,G
x-G
x/G
x0G
x1G
x2G
x3G
x6G
x7G
x8G
x9G
x:G
x;G
x<G
x=G
x>G
x?G
x@G
xAG
xBG
xCG
xDG
xEG
xFG
xGG
xHG
xIG
xJG
xKG
xLG
xMG
xNG
xOG
xPG
xRG
xSG
xTG
xUG
xVG
xXG
xYG
xZG
x[G
x\G
x^G
x_G
x`G
xaG
xbG
xdG
xeG
xfG
xgG
xhG
xkG
xlG
xmG
xnG
xoG
xpG
xqG
xrG
xsG
xtG
xuG
xvG
xwG
xxG
xyG
xzG
x{G
x|G
x}G
x~G
x!H
x"H
x#H
x$H
x%H
x&H
x'H
x)H
x*H
x+H
x,H
x-H
x/H
x0H
x1H
x2H
x3H
x5H
x6H
x7H
x8H
x9H
x;H
x<H
x=H
x>H
x?H
x:)
x;)
xUH
xTH
xSH
xXH
xWH
xVH
x_H
x^H
x]H
xbH
xaH
x`H
xiH
xhH
xgH
xlH
xkH
xjH
xsH
xrH
xqH
xvH
xuH
xtH
x,I
x+I
x*I
x)I
x(I
x'I
x&I
x%I
x$I
x#I
x"I
x!I
x~H
x}H
x|H
x{H
x<I
x;I
x:I
x9I
x8I
x7I
x6I
x5I
x4I
x3I
x2I
x1I
x0I
x/I
x.I
x-I
x]I
x\I
x[I
xZI
xYI
xXI
xWI
xVI
xUI
xTI
xSI
xRI
xQI
xPI
xOI
xNI
xmI
xlI
xkI
xjI
xiI
xhI
xgI
xfI
xeI
xdI
xcI
xbI
xaI
x`I
x_I
x^I
x0J
x/J
x.J
x-J
x,J
x+J
x*J
x)J
x(J
x'J
x&J
x%J
x$J
x#J
x"J
x!J
x@J
x?J
x>J
x=J
x<J
x;J
x:J
x9J
x8J
x7J
x6J
x5J
x4J
x3J
x2J
x1J
xaJ
x`J
x_J
x^J
x]J
x\J
x[J
xZJ
xYJ
xXJ
xWJ
xVJ
xUJ
xTJ
xSJ
xRJ
xqJ
xpJ
xoJ
xnJ
xmJ
xlJ
xkJ
xjJ
xiJ
xhJ
xgJ
xfJ
xeJ
xdJ
xcJ
xbJ
x4K
x3K
x2K
x1K
x0K
x/K
x.K
x-K
x,K
x+K
x*K
x)K
x(K
x'K
x&K
x%K
xDK
xCK
xBK
xAK
x@K
x?K
x>K
x=K
x<K
x;K
x:K
x9K
x8K
x7K
x6K
x5K
xVK
xWK
xZK
x[K
x^K
x_K
xbK
xcK
xfK
xgK
xxK
x<)
x=)
x>)
xFL
xEL
xDL
xCL
xBL
xAL
x@L
x?L
x>L
x=L
x<L
x;L
x:L
x9L
x8L
x7L
xVL
xUL
xTL
xSL
xRL
xQL
xPL
xOL
xNL
xML
xLL
xKL
xJL
xIL
xHL
xGL
xwL
xvL
xuL
xtL
xsL
xrL
xqL
xpL
xoL
xnL
xmL
xlL
xkL
xjL
xiL
xhL
x)M
x(M
x'M
x&M
x%M
x$M
x#M
x"M
x!M
x~L
x}L
x|L
x{L
xzL
xyL
xxL
xJM
xIM
xHM
xGM
xFM
xEM
xDM
xCM
xBM
xAM
x@M
x?M
x>M
x=M
x<M
x;M
xZM
xYM
xXM
xWM
xVM
xUM
xTM
xSM
xRM
xQM
xPM
xOM
xNM
xMM
xLM
xKM
x{M
xzM
xyM
xxM
xwM
xvM
xuM
xtM
xsM
xrM
xqM
xpM
xoM
xnM
xmM
xlM
x-N
x,N
x+N
x*N
x)N
x(N
x'N
x&N
x%N
x$N
x#N
x"N
x!N
x~M
x}M
x|M
xAN
z@N
z?N
xDN
xCN
xBN
xKN
xJN
xIN
xNN
xMN
xLN
xUN
xTN
xSN
xXN
xWN
xVN
x_N
x^N
x]N
xbN
xaN
x`N
xgN
xhN
xkN
xlN
x.O
x-O
x,O
x+O
x*O
x)O
x(O
x'O
x&O
x%O
x$O
x#O
x"O
x!O
x~N
x}N
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
xT!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xt!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
xj!
xi!
xh!
xg!
xf!
xe!
0;*
0:*
19*
08*
07*
06*
05*
04*
03*
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0%*
1$*
1Q)
x<*
xU*
0q*
xw*
x}*
x%+
x,+
xH+
xN+
xT+
xZ+
xa+
x}+
x%,
x+,
x1,
x8,
xT,
xZ,
x`,
xf,
1s-
1r-
1A-
1@-
1m,
1l,
xH.
xI.
zG.
zF.
zW5
zV5
zU5
zT5
zS5
zR5
zQ5
zP5
zO5
zN5
zM5
zL5
zK5
zJ5
zI5
1=9
199
159
119
1-9
1)9
1%9
1!9
1{8
1w8
1s8
1o8
1>8
1k7
1:7
1g6
166
1,6
1"6
1v5
1l5
1b5
1X5
zA9
zB9
xA;
xB;
0mE
0?>
0>>
0=>
1h;
xg;
xf;
xe;
xd;
xc;
xb;
xa;
x`;
x_;
x^;
x];
x\;
x[;
xZ;
xY;
xX;
0W;
0V;
0U;
0T;
1S;
0R;
0Q;
0P;
0O;
0N;
0M;
0L;
0K;
0J;
0I;
0H;
xi;
x$<
x@<
xF<
xL<
xR<
xY<
xu<
x{<
x#=
x)=
x0=
xL=
xR=
xX=
x^=
xe=
x#>
x)>
x/>
x5>
1;C
x:C
x9C
x8C
x7C
x6C
x5C
x4C
x3C
x2C
x1C
x0C
x/C
x.C
x-C
x,C
x+C
xq@
x/A
x5A
x;A
xAA
xHA
xdA
xjA
xpA
xvA
x}A
x;B
xAB
xGB
xMB
xTB
xpB
xvB
x|B
x$C
x<C
xUC
xqC
xwC
x}C
x%D
x,D
xHD
xND
xTD
xZD
xaD
x}D
x%E
x+E
x1E
x8E
xTE
xZE
x`E
xfE
xnE
x)F
xEF
xKF
xQF
xWF
x^F
xzF
x"G
x(G
x.G
x5G
xQG
xWG
x]G
xcG
xjG
x(H
x.H
x4H
x:H
xBH
xAH
xQH
xPH
xOH
xNH
xMH
xLH
xKH
xJH
xIH
xHH
xGH
xFH
xEH
xDH
xCH
1eK
1aK
1]K
1YK
1UK
1$K
1QJ
1~I
1MI
1zH
1pH
1fH
1\H
1RH
zwK
zvK
zuK
ztK
zsK
zrK
zqK
zpK
zoK
znK
zmK
zlK
zkK
zjK
ziK
z~K
z}K
x/L
x.L
x-L
x,L
x+L
x*L
x)L
x(L
x'L
x&L
x%L
x$L
x#L
x"L
x!L
x1L
x0L
x3L
x2L
x5L
x4L
1jN
1fN
1\N
1RN
1HN
1>N
1kM
1:M
1gL
16L
z|N
z{N
zzN
zyN
zxN
zwN
zvN
zuN
ztN
zsN
zrN
zqN
zpN
zoN
znN
x>"
x="
x<"
xA"
x@"
x?"
xD"
xC"
xB"
zT"
zS"
zR"
zQ"
zP"
zO"
zN"
zM"
zL"
zK"
zJ"
zI"
zH"
zG"
zF"
zE"
xd"
xc"
xb"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
zt"
zs"
zr"
zq"
zp"
zo"
zn"
zm"
zl"
zk"
zj"
zi"
zh"
zg"
zf"
ze"
z&#
z%#
z$#
z##
z"#
z!#
z~"
z}"
z|"
z{"
zz"
zy"
zx"
zw"
zv"
zu"
z6#
z5#
z4#
z3#
z2#
z1#
z0#
z/#
z.#
z-#
z,#
z+#
z*#
z)#
z(#
z'#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
zV#
zU#
zT#
zS#
zR#
zQ#
zP#
zO#
zN#
zM#
zL#
zK#
zJ#
zI#
zH#
zG#
zf#
ze#
zd#
zc#
zb#
za#
z`#
z_#
z^#
z]#
z\#
z[#
zZ#
zY#
zX#
zW#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
xi#
xh#
xg#
z($
z'$
z&$
z%$
z$$
z#$
z"$
z!$
z~#
z}#
z|#
z{#
zz#
zy#
zx#
zw#
z8$
z7$
z6$
z5$
z4$
z3$
z2$
z1$
z0$
z/$
z.$
z-$
z,$
z+$
z*$
z)$
zH$
zG$
zF$
zE$
zD$
zC$
zB$
zA$
z@$
z?$
z>$
z=$
z<$
z;$
z:$
z9$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xK$
xJ$
xI$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x[$
xZ$
xY$
zx$
zw$
zv$
zu$
zt$
zs$
zr$
zq$
zp$
zo$
zn$
zm$
zl$
zk$
zj$
zi$
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
x-%
x,%
x+%
xJ%
xI%
xH%
xG%
xF%
xE%
xD%
xC%
xB%
xA%
x@%
x?%
x>%
x=%
x<%
x;%
xZ%
xY%
xX%
xW%
xV%
xU%
xT%
xS%
xR%
xQ%
xP%
xO%
xN%
xM%
xL%
xK%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
xm%
xl%
xk%
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x}%
x|%
x{%
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x/&
x.&
x-&
xL&
xK&
xJ&
xI&
xH&
xG&
xF&
xE&
xD&
xC&
xB&
xA&
x@&
x?&
x>&
x=&
0M&
x]&
x\&
x[&
xZ&
xY&
xX&
xW&
xV&
xU&
xT&
xS&
xR&
xQ&
xP&
xO&
xN&
xm&
xl&
xk&
xj&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
xp&
xo&
xn&
xs&
xr&
xq&
xv&
xu&
xt&
xy&
xx&
xw&
x|&
x{&
xz&
x!'
x~&
x}&
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x"'
xA'
x@'
x?'
x>'
x='
x<'
x;'
x:'
x9'
x8'
x7'
x6'
x5'
x4'
x3'
x2'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xa'
x`'
x_'
x^'
x]'
x\'
x['
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xb'
xc'
xd'
xe'
xf'
xg'
xh'
xi'
xj'
xk'
xl'
xm'
x}'
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
xo'
xn'
x/(
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
zO(
zN(
zM(
zL(
zK(
zJ(
zI(
zH(
zG(
zF(
zE(
zD(
zC(
zB(
zA(
z@(
xR(
xQ(
xP(
xU(
xT(
xS(
xX(
xW(
xV(
xY(
xZ(
x[(
x\(
x](
x`(
x_(
x^(
zp(
zo(
zn(
zm(
zl(
zk(
zj(
zi(
zh(
zg(
zf(
ze(
zd(
zc(
zb(
za(
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
x2)
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x3)
x4)
05)
06)
0N)
0M)
0L)
0K)
0J)
0I)
0H)
0G)
0F)
0E)
0D)
0C)
0B)
0A)
0@)
0?)
xO)
xP)
0a)
0`)
0_)
0^)
0])
0\)
0[)
0Z)
0Y)
0X)
0W)
0V)
0U)
0T)
0S)
0R)
xq)
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
xc)
xb)
x=*
x>*
x?*
x@*
zA*
xB*
zC*
xD*
zE*
xF*
zG*
xH*
xI*
0J*
1K*
0L*
1M*
0N*
1O*
1P*
xQ*
xR*
xS*
0V*
xW*
xX*
xY*
0Z*
1[*
x\*
x]*
0^*
x_*
0`*
1a*
xb*
1c*
1d*
1e*
1f*
xg*
xh*
xi*
xj*
1k*
xl*
xm*
1n*
0o*
xp*
1r*
xs*
1t*
1u*
1v*
xx*
0y*
xz*
1{*
1|*
1~*
x!+
1"+
x#+
1$+
1&+
x'+
1(+
x)+
1*+
x-+
x.+
x/+
x0+
01+
x2+
03+
x4+
05+
x6+
07+
18+
19+
1:+
1;+
x<+
x=+
x>+
x?+
x@+
xA+
1B+
1C+
0D+
1E+
0F+
1G+
1I+
xJ+
1K+
xL+
1M+
1O+
xP+
1Q+
xR+
1S+
1U+
xV+
1W+
xX+
1Y+
1[+
x\+
1]+
x^+
1_+
xb+
xc+
xd+
xe+
0f+
xg+
0h+
xi+
0j+
xk+
0l+
1m+
1n+
1o+
1p+
xq+
xr+
xs+
xt+
xu+
xv+
1w+
1x+
0y+
1z+
0{+
1|+
1~+
x!,
1",
x#,
1$,
1&,
x',
1(,
x),
1*,
1,,
x-,
1.,
x/,
10,
12,
x3,
14,
x5,
16,
x9,
x:,
x;,
x<,
0=,
x>,
0?,
x@,
0A,
xB,
0C,
1D,
1E,
1F,
1G,
xH,
xI,
xJ,
xK,
xL,
xM,
1N,
1O,
0P,
1Q,
0R,
1S,
1U,
xV,
1W,
xX,
1Y,
1[,
x\,
1],
x^,
1_,
1a,
xb,
1c,
xd,
1e,
1g,
xh,
1i,
xj,
1k,
x},
x|,
x{,
xz,
xy,
xx,
xw,
xv,
xu,
xt,
xs,
xr,
xq,
xp,
xo,
xn,
x/-
x.-
x--
x,-
x+-
x*-
x)-
x(-
x'-
x&-
x%-
x$-
x#-
x"-
x!-
x~,
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xG-
xF-
xE-
xD-
xC-
xB-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xW-
xV-
xU-
xT-
xS-
xR-
x%.
x$.
x#.
x".
x!.
x~-
x}-
x|-
x{-
xz-
xy-
xx-
xw-
xv-
xu-
xt-
x5.
x4.
x3.
x2.
x1.
x0.
x/.
x..
x-.
x,.
x+.
x*.
x).
x(.
x'.
x&.
x7)
xJ.
zS.
zR.
zQ.
zP.
zO.
zN.
zM.
zL.
x[.
xZ.
xY.
xX.
xW.
xV.
xU.
xT.
xk.
xj.
xi.
xh.
xg.
xf.
xe.
xd.
xc.
xb.
xa.
x`.
x_.
x^.
x].
x\.
x{.
xz.
xy.
xx.
xw.
xv.
xu.
xt.
xs.
xr.
xq.
xp.
xo.
xn.
xm.
xl.
x-/
x,/
x+/
x*/
x)/
x(/
x'/
x&/
x%/
x$/
x#/
x"/
x!/
x~.
x}.
x|.
x=/
x</
x;/
x:/
x9/
x8/
x7/
x6/
x5/
x4/
x3/
x2/
x1/
x0/
x//
x./
xM/
xL/
xK/
xJ/
xI/
xH/
xG/
xF/
xE/
xD/
xC/
xB/
xA/
x@/
x?/
x>/
x]/
x\/
x[/
xZ/
xY/
xX/
xW/
xV/
xU/
xT/
xS/
xR/
xQ/
xP/
xO/
xN/
xm/
xl/
xk/
xj/
xi/
xh/
xg/
xf/
xe/
xd/
xc/
xb/
xa/
x`/
x_/
x^/
x}/
x|/
x{/
xz/
xy/
xx/
xw/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
x~/
x!0
x"0
x#0
x$0
x%0
x&0
x'0
x70
x60
x50
x40
x30
x20
x10
x00
x/0
x.0
x-0
x,0
x+0
x*0
x)0
x(0
xG0
xF0
xE0
xD0
xC0
xB0
xA0
x@0
x?0
x>0
x=0
x<0
x;0
x:0
x90
x80
xg0
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x\0
x[0
xZ0
xY0
xX0
xw0
xv0
xu0
xt0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
xl0
xk0
xj0
xi0
xh0
x91
x81
x71
x61
x51
x41
x31
x21
x11
x01
x/1
x.1
x-1
x,1
x+1
x*1
xI1
xH1
xG1
xF1
xE1
xD1
xC1
xB1
xA1
x@1
x?1
x>1
x=1
x<1
x;1
x:1
xi1
xh1
xg1
xf1
xe1
xd1
xc1
xb1
xa1
x`1
x_1
x^1
x]1
x\1
x[1
xZ1
xy1
xx1
xw1
xv1
xu1
xt1
xs1
xr1
xq1
xp1
xo1
xn1
xm1
xl1
xk1
xj1
x;2
x:2
x92
x82
x72
x62
x52
x42
x32
x22
x12
x02
x/2
x.2
x-2
x,2
xK2
xJ2
xI2
xH2
xG2
xF2
xE2
xD2
xC2
xB2
xA2
x@2
x?2
x>2
x=2
x<2
xk2
xj2
xi2
xh2
xg2
xf2
xe2
xd2
xc2
xb2
xa2
x`2
x_2
x^2
x]2
x\2
x{2
xz2
xy2
xx2
xw2
xv2
xu2
xt2
xs2
xr2
xq2
xp2
xo2
xn2
xm2
xl2
x=3
x<3
x;3
x:3
x93
x83
x73
x63
x53
x43
x33
x23
x13
x03
x/3
x.3
xM3
xL3
xK3
xJ3
xI3
xH3
xG3
xF3
xE3
xD3
xC3
xB3
xA3
x@3
x?3
x>3
xm3
xl3
xk3
xj3
xi3
xh3
xg3
xf3
xe3
xd3
xc3
xb3
xa3
x`3
x_3
x^3
x}3
x|3
x{3
xz3
xy3
xx3
xw3
xv3
xu3
xt3
xs3
xr3
xq3
xp3
xo3
xn3
zA4
z@4
z?4
z>4
z=4
z<4
z;4
z:4
z94
z84
z74
z64
z54
z44
z34
z24
xQ4
xP4
xO4
xN4
xM4
xL4
xK4
xJ4
xI4
xH4
xG4
xF4
xE4
xD4
xC4
xB4
xa4
x`4
x_4
x^4
x]4
0\4
0[4
0Z4
0Y4
0X4
0W4
0V4
0U4
0T4
0S4
0R4
xq4
xp4
xo4
xn4
xm4
xl4
xk4
xj4
xi4
xh4
xg4
xf4
xe4
xd4
xc4
xb4
x#5
x"5
x!5
x~4
x}4
x|4
x{4
xz4
0y4
0x4
0w4
0v4
0u4
0t4
0s4
0r4
x35
x25
x15
x05
x/5
x.5
x-5
x,5
x+5
x*5
x)5
x(5
x'5
x&5
x%5
x$5
z8)
z9)
x[5
xZ5
xY5
x^5
x]5
x\5
xe5
xd5
xc5
xh5
xg5
xf5
xo5
xn5
xm5
xr5
xq5
xp5
xy5
xx5
xw5
x|5
x{5
xz5
x%6
x$6
x#6
x(6
x'6
x&6
x/6
x.6
x-6
x26
x16
x06
xF6
xE6
xD6
xC6
xB6
xA6
x@6
x?6
x>6
x=6
x<6
x;6
x:6
x96
x86
x76
xV6
xU6
xT6
xS6
xR6
xQ6
xP6
xO6
xN6
xM6
xL6
xK6
xJ6
xI6
xH6
xG6
xw6
xv6
xu6
xt6
xs6
xr6
xq6
xp6
xo6
xn6
xm6
xl6
xk6
xj6
xi6
xh6
x)7
x(7
x'7
x&7
x%7
x$7
x#7
x"7
x!7
x~6
x}6
x|6
x{6
xz6
xy6
xx6
zJ7
zI7
zH7
zG7
zF7
zE7
zD7
zC7
zB7
zA7
z@7
z?7
z>7
z=7
z<7
z;7
xZ7
xY7
xX7
xW7
xV7
xU7
xT7
xS7
xR7
xQ7
xP7
xO7
xN7
xM7
xL7
xK7
x{7
xz7
xy7
xx7
xw7
xv7
xu7
xt7
xs7
xr7
xq7
xp7
xo7
xn7
xm7
xl7
x-8
x,8
x+8
x*8
x)8
x(8
x'8
x&8
x%8
x$8
x#8
x"8
x!8
x~7
x}7
x|7
xN8
xM8
xL8
xK8
xJ8
xI8
xH8
xG8
xF8
xE8
xD8
xC8
xB8
xA8
x@8
x?8
x^8
x]8
x\8
x[8
xZ8
xY8
xX8
xW8
xV8
xU8
xT8
xS8
xR8
xQ8
xP8
xO8
xp8
xq8
xt8
xu8
xx8
xy8
x|8
x}8
x"9
x#9
z&9
x'9
x*9
x+9
x.9
x/9
x29
x39
x69
x79
x:9
x;9
x>9
x?9
xR9
xQ9
xP9
xO9
xN9
xM9
xL9
xK9
xJ9
xI9
xH9
xG9
xF9
xE9
xD9
xC9
xb9
xa9
x`9
x_9
x^9
x]9
x\9
x[9
xZ9
xY9
xX9
xW9
xV9
xU9
xT9
xS9
zr9
zq9
zp9
zo9
zn9
zm9
zl9
zk9
zj9
zi9
zh9
zg9
zf9
ze9
zd9
zc9
x$:
x#:
x":
x!:
x~9
x}9
x|9
x{9
xz9
xy9
xx9
xw9
xv9
xu9
xt9
xs9
x4:
x3:
x2:
x1:
x0:
x/:
x.:
x-:
x,:
x+:
x*:
x):
x(:
x':
x&:
x%:
xD:
xC:
xB:
xA:
x@:
x?:
x>:
x=:
x<:
x;:
x::
x9:
x8:
x7:
x6:
x5:
zT:
zS:
zR:
zQ:
zP:
zO:
zN:
zM:
zL:
zK:
zJ:
zI:
zH:
zG:
zF:
zE:
zd:
zc:
zb:
za:
z`:
z_:
z^:
z]:
z\:
z[:
zZ:
zY:
zX:
zW:
zV:
zU:
zt:
zs:
zr:
zq:
zp:
zo:
zn:
zm:
zl:
zk:
zj:
zi:
zh:
zg:
zf:
ze:
x&;
x%;
x$;
x#;
x";
x!;
x~:
x}:
x|:
x{:
xz:
xy:
xx:
xw:
xv:
xu:
x6;
05;
04;
03;
02;
01;
00;
0/;
0.;
0-;
0,;
0+;
0*;
0);
0(;
0';
z9;
z8;
z7;
x:;
x;;
x<;
z=;
x>;
x?;
x@;
zC;
zD;
zE;
zF;
xj;
xk;
xl;
xm;
zn;
xo;
zp;
xq;
zr;
xs;
zt;
0u;
1v;
xw;
xx;
0y;
1z;
0{;
1|;
x};
x~;
x!<
x"<
x%<
x&<
x'<
x(<
0)<
x*<
0+<
x,<
0-<
x.<
0/<
10<
11<
12<
13<
x4<
x5<
x6<
x7<
x8<
x9<
1:<
1;<
0<<
1=<
0><
1?<
1A<
xB<
1C<
1D<
xE<
1G<
xH<
1I<
1J<
xK<
1M<
xN<
1O<
1P<
xQ<
1S<
xT<
1U<
1V<
xW<
xZ<
x[<
x\<
$end
#1
0lN
0hN
0`N
0aN
0bN
0VN
0WN
0XN
0LN
0MN
0NN
0BN
0CN
0DN
0|M
0}M
0~M
0!N
0"N
0#N
0$N
0%N
0&N
0'N
0(N
0)N
0*N
0+N
0,N
0-N
0KM
0LM
0MM
0NM
0OM
0PM
0QM
0RM
0SM
0TM
0UM
0VM
0WM
0XM
0YM
0ZM
0xL
0yL
0zL
0{L
0|L
0}L
0~L
0!M
0"M
0#M
0$M
0%M
0&M
0'M
0(M
0)M
0GL
0HL
0IL
0JL
0KL
0LL
0ML
0NL
0OL
0PL
0QL
0RL
0SL
0TL
0UL
0VL
0gK
0cK
0_K
0[K
0WK
05K
06K
07K
08K
09K
0:K
0;K
0<K
0=K
0>K
0?K
0@K
0AK
0BK
0CK
0DK
0bJ
0cJ
0dJ
0eJ
0fJ
0gJ
0hJ
0iJ
0jJ
0kJ
0lJ
0mJ
0nJ
0oJ
0pJ
0qJ
01J
02J
03J
04J
05J
06J
07J
08J
09J
0:J
0;J
0<J
0=J
0>J
0?J
0@J
0^I
0_I
0`I
0aI
0bI
0cI
0dI
0eI
0fI
0gI
0hI
0iI
0jI
0kI
0lI
0mI
0-I
0.I
0/I
00I
01I
02I
03I
04I
05I
06I
07I
08I
09I
0:I
0;I
0<I
0tH
0uH
0vH
0jH
0kH
0lH
0`H
0aH
0bH
0VH
0WH
0XH
0?9
0;9
079
039
0/9
0+9
0'9
0#9
0}8
0y8
0u8
0q8
0O8
0P8
0Q8
0R8
0S8
0T8
0U8
0V8
0W8
0X8
0Y8
0Z8
0[8
0\8
0]8
0^8
0|7
0}7
0~7
0!8
0"8
0#8
0$8
0%8
0&8
0'8
0(8
0)8
0*8
0+8
0,8
0-8
0K7
0L7
0M7
0N7
0O7
0P7
0Q7
0R7
0S7
0T7
0U7
0V7
0W7
0X7
0Y7
0Z7
0x6
0y6
0z6
0{6
0|6
0}6
0~6
0!7
0"7
0#7
0$7
0%7
0&7
0'7
0(7
0)7
0G6
0H6
0I6
0J6
0K6
0L6
0M6
0N6
0O6
0P6
0Q6
0R6
0S6
0T6
0U6
0V6
006
016
026
0&6
0'6
0(6
0z5
0{5
0|5
0p5
0q5
0r5
0f5
0g5
0h5
0\5
0]5
0^5
0n3
0o3
0p3
0q3
0r3
0s3
0t3
0u3
0v3
0w3
0x3
0y3
0z3
0{3
0|3
0}3
0>3
0?3
0@3
0A3
0B3
0C3
0D3
0E3
0F3
0G3
0H3
0I3
0J3
0K3
0L3
0M3
0l2
0m2
0n2
0o2
0p2
0q2
0r2
0s2
0t2
0u2
0v2
0w2
0x2
0y2
0z2
0{2
0<2
0=2
0>2
0?2
0@2
0A2
0B2
0C2
0D2
0E2
0F2
0G2
0H2
0I2
0J2
0K2
0j1
0k1
0l1
0m1
0n1
0o1
0p1
0q1
0r1
0s1
0t1
0u1
0v1
0w1
0x1
0y1
0:1
0;1
0<1
0=1
0>1
0?1
0@1
0A1
0B1
0C1
0D1
0E1
0F1
0G1
0H1
0I1
0h0
0i0
0j0
0k0
0l0
0m0
0n0
0o0
0p0
0q0
0r0
0s0
0t0
0u0
0v0
0w0
080
090
0:0
0;0
0<0
0=0
0>0
0?0
0@0
0A0
0B0
0C0
0D0
0E0
0F0
0G0
0&.
0'.
0(.
0).
0*.
0+.
0,.
0-.
0..
0/.
00.
01.
02.
03.
04.
05.
0R-
0S-
0T-
0U-
0V-
0W-
0X-
0Y-
0Z-
0[-
0\-
0]-
0^-
0_-
0`-
0a-
0~,
0!-
0"-
0#-
0$-
0%-
0&-
0'-
0(-
0)-
0*-
0+-
0,-
0--
0.-
0/-
0b)
0c)
0d)
0e)
0f)
0g)
0h)
0i)
0j)
0k)
0l)
0m)
0n)
0o)
0p)
0q)
0b'
0c'
0d'
0e'
0f'
0g'
0h'
0i'
0j'
0k'
0l'
0m'
0Y(
0Z(
0[(
0\(
0](
03)
04)
0~/
0!0
0"0
0#0
0$0
0%0
0&0
0'0
0gN
0kN
0xK
0;;
0fK
0VK
0ZK
0bK
0A
06;
z-O
z,O
z+O
z*O
z)O
z(O
z'O
z&O
z%O
z$O
z#O
z"O
z!O
z~N
z}N
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0-%
0,%
0+%
0Z%
0Y%
0X%
0W%
0V%
0U%
0T%
0S%
0R%
0Q%
0P%
0O%
0N%
0M%
0L%
0K%
0]&
0\&
0[&
0Z&
0Y&
0X&
0W&
0V&
0U&
0T&
0S&
0R&
0Q&
0P&
0O&
0N&
0z%
0y%
0x%
0w%
0v%
0u%
0t%
0s%
0r%
0q%
0p%
0o%
0n%
0m%
0l%
0k%
070
060
050
040
030
020
010
000
0/0
0.0
0-0
0,0
0+0
0*0
0)0
0(0
0g0
0f0
0e0
0d0
0c0
0b0
0a0
0`0
0_0
0^0
0]0
0\0
0[0
0Z0
0Y0
0X0
091
081
071
061
051
041
031
021
011
001
0/1
0.1
0-1
0,1
0+1
0*1
0i1
0h1
0g1
0f1
0e1
0d1
0c1
0b1
0a1
0`1
0_1
0^1
0]1
0\1
0[1
0Z1
0;2
0:2
092
082
072
062
052
042
032
022
012
002
0/2
0.2
0-2
0,2
0k2
0j2
0i2
0h2
0g2
0f2
0e2
0d2
0c2
0b2
0a2
0`2
0_2
0^2
0]2
0\2
0=3
0<3
0;3
0:3
093
083
073
063
053
043
033
023
013
003
0/3
0.3
0m3
0l3
0k3
0j3
0i3
0h3
0g3
0f3
0e3
0d3
0c3
0b3
0a3
0`3
0_3
0^3
0p&
0o&
0n&
0s&
0r&
0q&
0v&
0u&
0t&
0y&
0x&
0w&
0!'
0~&
0}&
0A'
0@'
0?'
0>'
0='
0<'
0;'
0:'
09'
08'
07'
06'
05'
04'
03'
02'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0,&
0+&
0*&
0)&
0(&
0'&
0&&
0%&
0$&
0#&
0"&
0!&
0~%
0}%
0|%
0{%
0R(
0Q(
0P(
0U(
0T(
0S(
0X(
0W(
0V(
0:)
0BH
0AH
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0;)
0QH
0PH
0OH
0NH
0MH
0LH
0KH
0JH
0IH
0HH
0GH
0FH
0EH
0DH
0CH
0}'
0|'
0{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
05(
04(
03(
02(
01(
00(
0<&
0;&
0:&
09&
08&
07&
06&
05&
04&
03&
02&
01&
00&
0/&
0.&
0-&
0")
0!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
02)
01)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0L&
0K&
0J&
0I&
0H&
0G&
0F&
0E&
0D&
0C&
0B&
0A&
0@&
0?&
0>&
0=&
0<)
0/L
0.L
0-L
0,L
0+L
0*L
0)L
0(L
0'L
0&L
0%L
0$L
0#L
0"L
0!L
0`(
0_(
0^(
0=)
01L
00L
0>)
03L
02L
07)
05L
04L
0Z.
0X.
0V.
0T.
1<H
1>H
16H
18H
10H
12H
1*H
1,H
1eG
1gG
1_G
1aG
1YG
1[G
1SG
1UG
10G
12G
1*G
1,G
1$G
1&G
1|F
1~F
1YF
1[F
1SF
1UF
1MF
1OF
1GF
0R9
1;H
1=H
1?H
15H
17H
19H
1/H
11H
13H
1)H
1+H
1-H
1dG
1fG
1hG
1^G
1`G
1bG
1XG
1ZG
1\G
1RG
1TG
1VG
1/G
11G
13G
1)G
1+G
1-G
1#G
1%G
1'G
1{F
1}F
1!G
1XF
1ZF
1\F
1RF
1TF
1VF
1LF
1NF
1PF
1FF
1HF
1h,
1j,
1b,
1d,
1\,
1^,
1V,
1X,
13,
15,
1-,
1/,
1',
1),
1!,
1#,
1\+
1^+
1V+
1X+
1P+
1R+
1J+
1L+
1'+
1)+
1!+
1#+
1x*
1z*
1I%
1s*
0J%
0Y*
0w*
0\*
0}*
0]*
0%+
0_*
0H+
00+
0N+
02+
0T+
04+
0Z+
06+
0}+
0e+
0%,
0g+
0+,
0i+
01,
0k+
0T,
0<,
0Z,
0>,
0`,
0@,
0f,
0B,
0EF
0.F
0KF
00F
0QF
02F
0WF
04F
0zF
0cF
0"G
0eF
0(G
0gF
0.G
0iF
0QG
0:G
0WG
0<G
0]G
0>G
0cG
0@G
0(H
0oG
0.H
0qG
04H
0sG
0:H
0uG
0-F
0/F
01F
03F
0bF
0dF
0fF
0hF
09G
0;G
0=G
0?G
0nG
0pG
0rG
0tG
1}G
1|G
1~G
1{G
1zG
1!H
1HG
1GG
1IG
1FG
1EG
1JG
1qF
1pF
1rF
1oF
1nF
1sF
1<F
1;F
1=F
1:F
1>F
1yG
1xG
1"H
1wG
1#H
1vG
1%H
1DG
1CG
1KG
1BG
1LG
1AG
1NG
1mF
1lF
1tF
1kF
1uF
1jF
1wF
18F
17F
1?F
16F
1@F
15F
1BF
1K,
1J,
1L,
1I,
1H,
1M,
1t+
1s+
1u+
1r+
1q+
1v+
1?+
1>+
1@+
1=+
1<+
1A+
1h*
1g*
1i*
1b*
1l*
1j*
0m*
0W*
0@*
0X*
0U*
0-+
0.+
0B*
0/+
0,+
0b+
0c+
0D*
0d+
0a+
09,
0:,
0F*
0;,
08,
0*F
0AF
0+F
0,F
0)F
0_F
0vF
0`F
0aF
0^F
06G
0MG
07G
08G
05G
0kG
0$H
0lG
0mG
0jG
0rE
0CF
0tE
0xF
0vE
0OG
0xE
0&H
1'H
1'F
1PG
1&F
1yF
1%F
1DF
0C9
0D9
0E9
0G9
0H9
0I9
0K9
0L9
0M9
0O9
0P9
0Q9
0;%
1S*
0<%
0=%
0?%
1R*
0@%
0A%
0C%
1Q*
0D%
0E%
0G%
0H%
1p*
0H*
0>*
0?*
0<*
0zE
0|E
0~E
0"F
1#F
1!F
1}E
1{E
0>%
0B%
1I*
0=*
0oE
0pE
0qE
0nE
0F9
0J9
0N9
0F%
0},
1|,
0{,
0z,
0y,
0x,
0w,
0v,
0u,
0t,
0s,
0r,
0q,
0p,
0o,
0n,
0D
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0j!
0i!
0h!
0g!
0f!
0e!
0.O
0JM
0IM
0HM
0GM
0FM
0EM
0DM
0CM
0BM
0AM
0@M
0?M
0>M
0=M
0<M
0;M
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0wL
0vL
0uL
0tL
0sL
0rL
0qL
0pL
0oL
0nL
0mL
0lL
0kL
0jL
0iL
0hL
0{M
0zM
0yM
0xM
0wM
0vM
0uM
0tM
0sM
0rM
0qM
0pM
0oM
0nM
0mM
0lM
0AN
04K
03K
02K
01K
00K
0/K
0.K
0-K
0,K
0+K
0*K
0)K
0(K
0'K
0&K
0%K
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
00J
0/J
0.J
0-J
0,J
0+J
0*J
0)J
0(J
0'J
0&J
0%J
0$J
0#J
0"J
0!J
04:
03:
02:
01:
00:
0/:
0.:
0-:
0,:
0+:
0*:
0):
0(:
0':
0&:
0%:
0]I
0\I
0[I
0ZI
0YI
0XI
0WI
0VI
0UI
0TI
0SI
0RI
0QI
0PI
0OI
0NI
0j%
0i%
0h%
0g%
0f%
0e%
0d%
0c%
0b%
0a%
0`%
0_%
0^%
0]%
0\%
0[%
0sH
0rH
0qH
0iH
0hH
0gH
0_N
0^N
0]N
0_H
0^H
0]H
0UN
0TN
0SN
0UH
0TH
0SH
0KN
0JN
0IN
0N8
0M8
0L8
0K8
0J8
0I8
0H8
0G8
0F8
0E8
0D8
0C8
0B8
0A8
0@8
0?8
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
07!
06!
05!
0{7
0z7
0y7
0x7
0w7
0v7
0u7
0t7
0s7
0r7
0q7
0p7
0o7
0n7
0m7
0l7
0d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
1Y"
0X"
0W"
0V"
0U"
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0G-
0F-
0E-
0D-
0C-
0B-
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0FL
0EL
0DL
0CL
0BL
0AL
0@L
0?L
0>L
0=L
0<L
0;L
0:L
09L
08L
07L
z)%
z(%
z'%
z&%
z%%
z$%
z#%
z"%
z!%
z~$
z}$
z|$
z{$
zz$
zy$
0%.
0$.
0#.
0".
0!.
0~-
0}-
0|-
0{-
0z-
0y-
1x-
0w-
0v-
0u-
0t-
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
15
04
03
02
01
0aJ
0`J
0_J
0^J
0]J
0\J
0[J
0ZJ
0YJ
0XJ
0WJ
0VJ
0UJ
0TJ
0SJ
0RJ
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
1^;
1];
1\;
1[;
1Z;
1Y;
1X;
0$:
0#:
0":
0!:
0~9
0}9
0|9
0{9
0z9
0y9
0x9
0w9
0v9
0u9
0t9
0s9
0*%
1P)
0O)
07>
01>
0+>
0%>
0`=
0Z=
0T=
0N=
0+=
0%=
0}<
0v<
0x<
0T<
0N<
0H<
0B<
0E<
0D:
1@<
1(<
1*<
1,<
1.<
1u<
1^<
1_<
1a<
1c<
14=
16=
18=
1:=
1i=
1k=
1m=
1o=
0y=
0z=
0D=
0E=
0m<
0n<
0r<
0e<
08<
09<
04<
1%<
1m;
1Z<
1s<
1o;
1q;
1s;
0t<
0j<
0"=
0?:
0};
05<
0K<
0C:
1F<
1&<
1j;
1{<
1[<
1w;
0x;
0k<
0(=
0>:
0i<
0y<
0z<
1@:
0~;
06<
0Q<
0B:
1L<
1'<
1#=
1\<
1k;
0@=
0Q=
0<:
0!<
0l<
0.=
0=:
07<
0W<
0A:
1R<
1$<
1)=
1Y<
1l;
1L=
11=
0A=
0W=
0;:
0u=
0(>
08:
0"<
1i;
1#>
1f=
1R=
12=
0B=
0]=
0::
0v=
0.>
07:
1)>
1g=
1X=
13=
0C=
0c=
09:
0w=
04>
06:
1/>
1h=
1^=
10=
0x=
0:>
05:
15>
1e=
0#@
0"@
0!@
0~?
0}?
0|?
0{?
0z?
0y?
0x?
0w?
0v?
0u?
0t?
0s?
0r?
0-!
1%C
1'C
1)C
1gE
1iE
1kE
1}B
1!C
1#C
1aE
1cE
1eE
1wB
1yB
1{B
1[E
1]E
1_E
1qB
1sB
1uB
1UE
1WE
1YE
1NB
1PB
1RB
12E
14E
16E
1HB
1JB
1LB
1,E
1.E
10E
1BB
1DB
1FB
1&E
1(E
1*E
1<B
1>B
1@B
1~D
1"E
1$E
1wA
1yA
1{A
1[D
1]D
1_D
1qA
1sA
1uA
1UD
1WD
1YD
1kA
1mA
1oA
1OD
1QD
1SD
1eA
1gA
1iA
1ID
1KD
1MD
1BA
1DA
1FA
1&D
1(D
1*D
1<A
1>A
1@A
1~C
1"D
1$D
16A
18A
1:A
1xC
1zC
1|C
10A
12A
1rC
1tC
1vC
0ZC
0/A
0v@
0\C
0x@
0^C
0z@
0`C
0|@
01D
0MA
03D
0OA
05D
0QA
07D
0SA
0fD
0$B
0hD
0&B
0jD
0(B
0lD
0*B
0=E
0YB
0?E
0[B
0AE
0]B
0CE
0_B
1cB
1GE
1bB
1jB
1FE
1NE
1aB
1kB
1EE
1OE
1`B
1mB
1DE
1QE
1.B
1pD
1-B
15B
1oD
1wD
1,B
16B
1nD
1xD
1+B
18B
1mD
1zD
1WA
1;D
1VA
1^A
1:D
1BD
1UA
1_A
19D
1CD
1TA
1aA
18D
1ED
1"A
1dC
1!A
1)A
1cC
1kC
1~@
1*A
1bC
1lC
1}@
1,A
1aC
1nC
0oC
0-A
0r@
0mC
0+A
0FD
0bA
0DD
0`A
0{D
09B
0yD
07B
0RE
0nB
0PE
0lB
1oB
1SE
1:B
1|D
1cA
1GD
1.A
1pC
1$A
19A
05A
0s@
0HC
0d@
0JC
0f@
0LC
0h@
0NC
0j@
1k@
1OC
1i@
1MC
1g@
1KC
1e@
1IC
1%A
1?A
0;A
0t@
0Y@
1XA
1hA
1m@
1&A
1EA
0AA
0q@
0Z@
0dA
0IA
1YA
1nA
1/B
1?B
1n@
0[@
0;B
0~A
0jA
0JA
1ZA
1tA
10B
1EB
1dB
1tB
1o@
0$@
0pB
0UB
0AB
0!B
0pA
0KA
1[A
1zA
11B
1KB
1eB
1zB
0<;
0vB
0VB
0GB
0"B
0vA
0HA
12B
1QB
1fB
1"C
0|B
0WB
0MB
0}A
1gB
1(C
0$C
0TB
0_>
0^>
0]>
0\>
0[>
0Z>
0Y>
0X>
0W>
0V>
0U>
0T>
0S>
0R>
0Q>
0P>
0m&
0l&
0k&
0j&
0i&
0h&
0g&
0f&
0e&
0d&
0c&
0b&
0a&
0`&
0_&
0^&
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
0_.
0^.
0].
0\.
0{.
0z.
0y.
0x.
0w.
0v.
0u.
0t.
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0-/
0,/
0+/
0*/
0)/
0(/
0'/
0&/
0%/
0$/
0#/
0"/
0!/
0~.
0}.
0|.
0=/
0</
0;/
0:/
09/
08/
07/
06/
05/
04/
03/
02/
01/
00/
0//
0./
0M/
0L/
0K/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0P/
0O/
0N/
0m/
0l/
0k/
0j/
0i/
0h/
0g/
0f/
0e/
0d/
0c/
0b/
0a/
0`/
0_/
0^/
0}/
0|/
0{/
0z/
0y/
0x/
0w/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0|&
0{&
0z&
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0"'
0:;
0B;
0b9
0a9
0`9
0_9
0^9
0]9
0\9
0[9
0Z9
0Y9
0X9
0W9
0V9
0U9
0T9
0S9
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0:#
09#
08#
07#
0Q4
0P4
0O4
0N4
0M4
0L4
0K4
0J4
0I4
0H4
0G4
0F4
0E4
0D4
0C4
0B4
0a4
0`4
0_4
0^4
0]4
0q4
0p4
0o4
0n4
0m4
0l4
0k4
0j4
0i4
0h4
0g4
0f4
0e4
0d4
0c4
0b4
0#5
0"5
0!5
0~4
0}4
0|4
0{4
0z4
035
025
015
005
0/5
0.5
0-5
0,5
0+5
0*5
0)5
0(5
0'5
0&5
0%5
0$5
0q?
0p?
0o?
0n?
0m?
0l?
0k?
0j?
0i?
0h?
0g?
0f?
0e?
0d?
0c?
0b?
1&C
0"?
1~B
0#?
1xB
0$?
1rB
0%?
1OB
0&?
1IB
0'?
1CB
0(?
1=B
0)?
1xA
0*?
1rA
0+?
1lA
0,?
1fA
0-?
1CA
0.?
1=A
0/?
17A
00?
11A
01?
0u@
0w@
0y@
0{@
0LA
0NA
0PA
0RA
0#B
0%B
0'B
0)B
0XB
0ZB
0\B
0^B
1hB
1iB
13B
14B
1\A
1]A
1'A
1(A
0\@
0^@
0`@
0b@
1:C
19C
18C
17C
16C
15C
14C
13C
12C
11C
10C
1/C
1.C
1-C
1,C
1+C
07@
06@
05@
04@
03@
02@
01@
00@
0/@
0.@
0-@
0,@
0+@
0*@
0)@
0(@
0o>
0n>
0m>
0l>
0k>
0j>
0i>
0h>
0g>
0f>
0e>
0d>
0c>
0b>
0a>
0`>
0!?
0~>
0}>
0|>
0{>
0z>
0y>
0x>
0w>
0v>
0u>
0t>
0s>
0r>
0q>
0p>
0Q?
0P?
0O?
0N?
0M?
0L?
0K?
0J?
0I?
0H?
0G?
0F?
0E?
0D?
0C?
0B?
0hE
0bE
0\E
0VE
03E
0-E
0'E
0!E
0\D
0VD
0PD
0JD
0'D
0!D
0yC
0sC
0uC
0a?
1qC
1YC
1[C
1]C
1_C
10D
12D
14D
16D
1eD
1gD
1iD
1kD
1<E
1>E
1@E
1BE
0LE
0ME
0uD
0vD
0@D
0AD
0iC
0jC
0eC
1VC
1@C
1BC
1DC
1FC
0PC
0fC
0{C
0`?
1wC
1WC
1=C
0<D
0LD
0]?
0QC
0gC
0#D
0_?
1}C
1XC
1>C
1HD
1-D
0=D
0RD
0\?
0qD
0#E
0Y?
0RC
0hC
0)D
0^?
1%D
1UC
1?C
1}D
1bD
1ND
1.D
0>D
0XD
0[?
0rD
0)E
0X?
0HE
0XE
0U?
0SC
1<C
1TE
19E
1%E
1cD
1TD
1/D
0?D
0^D
0Z?
0sD
0/E
0W?
0IE
0^E
0T?
1ZE
1:E
1+E
1dD
1ZD
1,D
0tD
05E
0V?
0JE
0dE
0S?
1`E
1;E
11E
1aD
0KE
0jE
0R?
1fE
18E
0A?
0@?
0??
0>?
0=?
0<?
0;?
0:?
09?
08?
07?
06?
05?
04?
03?
02?
0G@
0F@
0E@
0D@
0C@
0B@
0A@
0@@
0?@
0>@
0=@
0<@
0;@
0:@
09@
08@
1A;
0W@
0V@
0U@
0T@
0S@
0R@
0Q@
0P@
0O@
0N@
0M@
0L@
0K@
0J@
0I@
0H@
0>;
1?;
0O>
0N>
0M>
0L>
0K>
0J>
0I>
0H>
0G>
0F>
0E>
0D>
0C>
0B>
0A>
0@>
0&;
0%;
0$;
0#;
0";
0!;
0~:
0}:
0|:
0{:
0z:
0y:
0x:
0w:
0v:
0u:
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0,I
0+I
0*I
0)I
0(I
0'I
0&I
0%I
0$I
0#I
0"I
0!I
0~H
0}H
0|H
0{H
02"
01"
00"
05"
04"
03"
0e5
0d5
0c5
0[5
0Z5
0Y5
0@H
b0 04
b0 14
0<5
0=5
085
0G5
0F5
0E5
b0 45
b0 55
0@5
b0 H5
0A5
0B5
0D5
065
075
095
0:5
0;5
1<5
0>5
0?5
0C5
0@;
1H.
0I.
0}!
0-"
0,"
0."
0J.
0>"
0="
0<"
0D"
0C"
0B"
0A"
0@"
0?"
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
0X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
0M$
0L$
0K$
0J$
0I$
0("
0&"
0/"
0|!
0~!
0!"
0""
0#"
0"9
0|8
0t8
0p8
0>9
0*9
0.9
029
069
0:9
0x8
0*"
0^K
0F6
0E6
0D6
0C6
0B6
0A6
0@6
0?6
0>6
0=6
0<6
0;6
0:6
096
086
076
0w6
0v6
0u6
0t6
0s6
0r6
0q6
0p6
0o6
0n6
0m6
0l6
0k6
0j6
0i6
0h6
0%6
0$6
0#6
0/6
0.6
0-6
0y5
0x5
0w5
0;"
0:"
09"
0o5
0n5
0m5
#50
0x!
0u!
#100
1x!
1u!
b10 z!
#150
0x!
0u!
#200
1x!
1u!
b11 z!
#201
0y!
0w!
0r-
0@-
0l,
1M)
1`)
#250
0x!
0u!
#300
1x!
1u!
1s)
b10000000000000000000000000000011 (*
b0 )*
b1 )*
b10 )*
11-
1A.
z[7
z\7
z]7
z^7
z_7
z`7
za7
zb7
zc7
zd7
ze7
zf7
zg7
zh7
zi7
zj7
z(9
b10000000000000000000000000000011 {K
b0 |K
b1 |K
b10 |K
zFN
zGN
b100 z!
#301
zBN
zCN
z'9
zK7
zL7
zM7
zN7
zO7
zP7
zQ7
zR7
zS7
zT7
zU7
zV7
zW7
zX7
zY7
zZ7
1*.
1.-
1p)
zg'
zfK
1Y%
1\&
zQ'
zP'
zO'
zN'
zM'
zL'
zK'
zJ'
zI'
zH'
zG'
zF'
zE'
zD'
zC'
zB'
z_(
z^(
x<H
xC9
x6H
xD9
x0H
xE9
x*H
xF9
xeG
xG9
x_G
xH9
xYG
xI9
xSG
xJ9
x0G
xK9
x*G
xL9
x$G
xM9
x|F
xN9
xYF
xO9
xSF
xP9
xMF
xQ9
xGF
xR9
0x*
0z*
0I%
1w*
1\*
x-F
x/F
x1F
x3F
xbF
xdF
xfF
xhF
x9G
x;G
x=G
x?G
xnG
xpG
xrG
xtG
x~G
x!H
xIG
xJG
xrF
xsF
x=F
x>F
0b*
1W*
xrE
xtE
xvE
xxE
1H%
0|,
1{,
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x]%
x\%
x[%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x{$
xz$
xy$
1z7
0M)
1L)
1d"
1c"
1\"
0Y"
1V"
1U"
1P-
1/
1%.
1$.
1{-
0x-
1u-
1t-
1@
1?
18
05
12
11
0`)
1_)
xaJ
x`J
x_J
x^J
x]J
x\J
x[J
xZJ
xYJ
xXJ
xWJ
xVJ
xUJ
xTJ
xSJ
xRJ
0P)
1b&
0<5
1=5
0=5
0H.
#350
0x!
0u!
#400
1x!
1u!
0s)
1t)
b0 )*
b1 )*
b10 )*
01-
12-
1c-
16.
17.
1>.
0A.
1D.
1E.
1/8
xrJ
xsJ
xtJ
xuJ
xvJ
xwJ
xxJ
xyJ
xzJ
x{J
x|J
x}J
x~J
x!K
x"K
x#K
zhK
b0 |K
b1 |K
b10 |K
b101 z!
#401
zgK
xbJ
xcJ
xdJ
xeJ
xfJ
xgJ
xhJ
xiJ
xjJ
xkJ
xlJ
xmJ
xnJ
xoJ
xpJ
xqJ
1,8
1&.
1'.
0*.
1-.
14.
15.
1`-
1--
0.-
1o)
0p)
z](
zgN
x-O
x,O
x+O
x*O
x)O
x(O
x'O
x&O
x%O
x$O
x#O
x"O
x!O
x~N
x}N
0Y%
1X%
0\&
1[&
1y%
1`'
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
xLF
0MF
xNF
0!+
0#+
0H%
1x*
1z*
1I%
0w*
0\*
1}*
1]*
xKF
1/F
x0F
x6F
x@F
0g*
1b*
0W*
1X*
xAF
x+F
x;F
xVF
xDF
1G%
1g*
1#+
1H%
0}*
0X*
xzE
xQF
x,F
x<F
x\F
x{E
0G%
xoE
xWF
x)F
xnF
x!G
x%F
xpE
xzF
x_F
xoF
x'G
xEG
xVG
x&F
xqE
xQG
x6G
x"G
x`F
xpF
x-G
xFG
x\G
xzG
x-H
x'F
xnE
x(H
xkG
xWG
x7G
x(G
xaF
xqF
x3G
xGG
xbG
x{G
x3H
x.H
xlG
x]G
x8G
x.G
x^F
xHG
xhG
x|G
x9H
x4H
xmG
xcG
x5G
x}G
x?H
x:H
xjG
1|,
1/J
1M8
1C!
0z7
1y7
1M)
0d"
0c"
0\"
1Y"
0V"
0U"
0P-
1O-
0/
1.
0%.
0$.
0{-
1x-
0u-
0t-
0@
0?
08
15
02
01
1`)
1P)
1m&
1l&
1e&
0b&
1_&
1^&
1Q4
1P4
1a4
1`4
1q4
1p4
1#5
1"5
135
125
1+5
1F#
1E#
12"
1[5
165
175
1>5
1?5
1C5
1A5
1|!
1~!
1("
1.9
1t8
1p8
1;"
z4:
z3:
z2:
z1:
z0:
z/:
z.:
z-:
z,:
z+:
z*:
z):
z(:
z':
z&:
z%:
xg;
xf;
xe;
xd;
xc;
xb;
xa;
x`;
x_;
x^;
x];
x\;
x[;
xZ;
xY;
xX;
z$:
z#:
z":
z!:
z~9
z}9
z|9
z{9
zz9
zy9
zx9
zw9
zv9
zu9
zt9
zs9
1o5
x7>
x:>
x5:
x1>
x4>
x6:
x+>
x.>
x7:
x%>
x(>
x8:
x`=
xc=
x9:
xZ=
x]=
x::
xT=
xW=
x;:
xN=
xQ=
x<:
x+=
x.=
x=:
x%=
x(=
x>:
x}<
x"=
x?:
xv<
xx<
xz<
x@:
xT<
xW<
xA:
xN<
xQ<
xB:
xH<
xK<
xC:
xB<
xE<
xD:
x@<
x(<
xF<
x*<
xL<
x,<
xR<
x.<
x^<
x{<
x_<
x#=
xa<
x)=
xc<
xL=
x4=
xR=
x6=
xX=
x8=
x^=
x:=
x#>
xi=
x)>
xk=
x/>
xm=
x5>
xo=
xx=
xw=
xy=
xv=
xu=
xz=
xC=
xB=
xD=
xA=
x@=
xE=
xl<
xk<
xm<
xj<
xn<
xe<
xr<
x7<
x6<
x8<
x5<
x4<
x9<
x%<
x&<
xm;
x'<
x$<
x[<
xo;
xs<
x\<
xY<
x1=
x2=
xq;
x3=
x0=
xf=
xg=
xs;
xh=
xe=
x"<
x!<
xt<
x~;
x};
xj;
xw;
xl;
xi;
xx;
xi<
xy<
xu<
xZ<
xk;
z#@
z"@
z!@
z~?
z}?
z|?
z{?
zz?
zy?
zx?
zw?
zv?
zu?
zt?
zs?
zr?
x&C
x"?
xgE
xiE
xkE
xR?
x~B
x#?
xaE
xcE
xeE
xS?
xxB
x$?
x[E
x]E
x_E
xT?
xrB
x%?
xUE
xWE
xYE
xU?
xOB
x&?
x2E
x4E
x6E
xV?
xIB
x'?
x,E
x.E
x0E
xW?
xCB
x(?
x&E
x(E
x*E
xX?
x=B
x)?
x~D
x"E
x$E
xY?
xxA
x*?
x[D
x]D
x_D
xZ?
xrA
x+?
xUD
xWD
xYD
x[?
xlA
x,?
xOD
xQD
xSD
x\?
xfA
x-?
xID
xKD
xMD
x]?
xCA
x.?
x&D
x(D
x*D
x^?
x=A
x/?
x~C
x"D
x$D
x_?
x7A
x0?
xxC
xzC
x|C
x`?
x1A
x1?
xrC
xtC
xvC
xa?
xZC
xu@
x\C
xw@
x^C
xy@
x`C
x{@
x1D
xLA
x3D
xNA
x5D
xPA
x7D
xRA
xfD
x#B
xhD
x%B
xjD
x'B
xlD
x)B
x=E
xXB
x?E
xZB
xAE
x\B
xCE
x^B
xhB
xGE
xFE
xNE
xiB
xEE
xOE
xDE
xQE
x3B
xpD
xoD
xwD
x4B
xnD
xxD
xmD
xzD
x\A
x;D
x:D
xBD
x]A
x9D
xCD
x8D
xED
x'A
xdC
xcC
xkC
x(A
xbC
xlC
xaC
xnC
xoC
x\@
xmC
xFD
x^@
xDD
x{D
x`@
xyD
xRE
xb@
xPE
xSE
x|D
xGD
xpC
xHC
xJC
xLC
xNC
xOC
xMC
xKC
xIC
xo>
xn>
xm>
xl>
xk>
xj>
xi>
xh>
xg>
xf>
xe>
xd>
xc>
xb>
xa>
x`>
x!?
x~>
x}>
x|>
x{>
xz>
xy>
xx>
xw>
xv>
xu>
xt>
xs>
xr>
xq>
xp>
#450
0x!
0u!
#500
1x!
1u!
1s)
b0 )*
b1 )*
b10 )*
11-
0c-
1d-
06.
07.
0>.
1A.
0D.
0E.
1_5
1s5
0/8
108
1`8
1r8
1v8
109
1BJ
b0 |K
b1 |K
b10 |K
ziN
b110 z!
#501
zhN
1?J
1/9
1u8
1q8
1]8
1+8
0,8
1r5
1^5
0&.
0'.
1*.
0-.
04.
05.
1_-
0`-
1.-
1p)
1b'
1c'
1i'
z3)
1bK
zv#
zu#
zt#
zs#
zr#
zq#
zp#
zo#
zn#
zm#
zl#
zk#
zj#
zi#
zh#
zg#
1Y%
1\&
0y%
1x%
1p&
1v&
0`'
1_'
1+&
1|'
xRF
0SF
xTF
xUF
1LF
xMF
1NF
0x*
0z*
0I%
1w*
1\*
0KF
x/F
00F
11F
x2F
x7F
x?F
16F
1@F
0b*
1W*
0+F
1;F
1UF
1VF
0g*
0#+
0H%
1}*
1X*
1G%
0|,
0{,
1z,
1vL
13K
1S!
0/J
1.J
1iH
1_N
1UH
1KN
0M8
1L8
0C!
1B!
1z7
0M)
0L)
1K)
1b"
1["
0Y"
1V"
1U"
1P-
1/
z,I
z+I
z*I
z)I
z(I
z'I
z&I
z%I
z$I
z#I
z"I
z!I
z~H
z}H
z|H
z{H
1#.
1z-
0x-
1u-
1t-
1>
17
05
12
11
0`)
0_)
1^)
0P)
0m&
0l&
0e&
1b&
0_&
0^&
0F#
0E#
0;"
0Q4
0P4
0a4
0`4
0q4
0p4
0#5
0"5
035
025
0+5
0o5
02"
0[5
0A5
1=5
065
075
0=5
0>5
0?5
0C5
0("
0|!
0~!
0t8
0p8
0.9
04:
03:
02:
01:
00:
0/:
0.:
0-:
0,:
0+:
0*:
0):
0(:
0':
0&:
0%:
1g;
1f;
1e;
1d;
1c;
1b;
1a;
1`;
1_;
1^;
1];
1\;
1[;
1Z;
1Y;
1X;
0$:
0#:
0":
0!:
0~9
0}9
0|9
0{9
0z9
0y9
0x9
0w9
0v9
0u9
0t9
0s9
07>
01>
0+>
0%>
0`=
0Z=
0T=
0N=
0+=
0%=
0}<
0v<
0x<
0T<
0N<
0H<
0B<
0E<
0D:
1@<
1(<
1*<
1,<
1.<
1u<
1^<
1_<
1a<
1c<
14=
16=
18=
1:=
1i=
1k=
1m=
1o=
0y=
0z=
0D=
0E=
0m<
0n<
0r<
0e<
08<
09<
04<
1%<
1m;
1Z<
1s<
1o;
1q;
1s;
0t<
0j<
0"=
0?:
0};
05<
0K<
0C:
1F<
1&<
1j;
1{<
1[<
1w;
0x;
0k<
0(=
0>:
0i<
0y<
0z<
1@:
0~;
06<
0Q<
0B:
1L<
1'<
1#=
1\<
1k;
0@=
0Q=
0<:
0!<
0l<
0.=
0=:
07<
0W<
0A:
1R<
1$<
1)=
1Y<
1l;
1L=
11=
0A=
0W=
0;:
0u=
0(>
08:
0"<
1i;
1#>
1f=
1R=
12=
0B=
0]=
0::
0v=
0.>
07:
1)>
1g=
1X=
13=
0C=
0c=
09:
0w=
04>
06:
1/>
1h=
1^=
10=
0x=
0:>
05:
15>
1e=
0#@
0"@
0!@
0~?
0}?
0|?
0{?
0z?
0y?
0x?
0w?
0v?
0u?
0t?
0s?
0r?
1&C
0"?
1gE
1iE
1kE
0R?
1~B
0#?
1aE
1cE
1eE
0S?
1xB
0$?
1[E
1]E
1_E
0T?
1rB
0%?
1UE
1WE
1YE
0U?
1OB
0&?
12E
14E
16E
0V?
1IB
0'?
1,E
1.E
10E
0W?
1CB
0(?
1&E
1(E
1*E
0X?
1=B
0)?
1~D
1"E
1$E
0Y?
1xA
0*?
1[D
1]D
1_D
0Z?
1rA
0+?
1UD
1WD
1YD
0[?
1lA
0,?
1OD
1QD
1SD
0\?
1fA
0-?
1ID
1KD
1MD
0]?
1CA
0.?
1&D
1(D
1*D
0^?
1=A
0/?
1~C
1"D
1$D
0_?
17A
00?
1xC
1zC
1|C
0`?
11A
01?
1rC
1tC
1vC
0a?
0ZC
0u@
0\C
0w@
0^C
0y@
0`C
0{@
01D
0LA
03D
0NA
05D
0PA
07D
0RA
0fD
0#B
0hD
0%B
0jD
0'B
0lD
0)B
0=E
0XB
0?E
0ZB
0AE
0\B
0CE
0^B
1GE
1hB
1FE
1NE
1EE
1OE
1iB
1DE
1QE
1pD
13B
1oD
1wD
1nD
1xD
14B
1mD
1zD
1;D
1\A
1:D
1BD
19D
1CD
1]A
18D
1ED
1dC
1'A
1cC
1kC
1bC
1lC
1(A
1aC
1nC
0oC
0mC
0\@
0FD
0DD
0^@
0{D
0yD
0`@
0RE
0PE
0b@
1SE
1|D
1GD
1pC
0HC
0JC
0LC
0NC
1OC
1MC
1KC
1IC
0o>
0n>
0m>
0l>
0k>
0j>
0i>
0h>
0g>
0f>
0e>
0d>
0c>
0b>
0a>
0`>
0!?
0~>
0}>
0|>
0{>
0z>
0y>
0x>
0w>
0v>
0u>
0t>
0s>
0r>
0q>
0p>
#550
0x!
0u!
#600
1x!
1u!
0s)
0t)
1u)
b0 )*
b1 )*
b10 )*
01-
02-
13-
1c-
18.
1?.
0A.
1D.
1E.
0_5
0s5
1/8
0`8
1a8
0r8
0v8
009
1YH
1mH
z=I
z>I
z?I
z@I
zAI
zBI
zCI
zDI
zEI
zFI
zGI
zHI
zII
zJI
zKI
zLI
0BJ
1CJ
1FK
1dK
b0 |K
b1 |K
b10 |K
1+M
1ON
1cN
b111 z!
#601
1bN
1NN
1(M
1cK
1CK
1>J
0?J
z-I
z.I
z/I
z0I
z1I
z2I
z3I
z4I
z5I
z6I
z7I
z8I
z9I
z:I
z;I
z<I
1lH
1XH
0/9
0u8
0q8
1\8
0]8
1,8
0r5
0^5
1&.
1'.
0*.
1,.
13.
1`-
1,-
0--
0.-
1n)
0o)
0p)
0b'
0c'
0i'
1\(
1kN
0bK
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
0i#
0h#
0g#
0Y%
0X%
1W%
0\&
0[&
1Z&
1y%
0p&
0v&
1`'
0+&
1*&
1R(
1X(
z/(
z.(
z-(
z,(
z+(
z*(
z)(
z((
z'(
z&(
z%(
z$(
z#(
z"(
z!(
z~'
0|'
1{'
1;&
11)
1=)
17)
0[.
xZ.
0Y.
xX.
0W.
xV.
0U.
xT.
xLF
0MF
xNF
0'+
0)+
0G%
1!+
1#+
1H%
1x*
1z*
1I%
0w*
0\*
0}*
0]*
1%+
1_*
xKF
1/F
x0F
x6F
x@F
0h*
1g*
1b*
0W*
0X*
1U*
x+F
x;F
xUF
xVF
1h*
1)+
1G%
0H%
0%+
0U*
1|,
1D
1IM
1c!
0vL
1uL
z{M
zzM
zyM
zxM
zwM
zvM
zuM
ztM
zsM
zrM
zqM
zpM
zoM
znM
zmM
zlM
03K
12K
0S!
1R!
1/J
0iH
0_N
0UH
0KN
1M8
1C!
0z7
0y7
1x7
1M)
0b"
0["
1Y"
0V"
0U"
0P-
0O-
1N-
0/
0.
1-
0,I
0+I
0*I
0)I
0(I
0'I
0&I
0%I
0$I
0#I
0"I
0!I
0~H
0}H
0|H
0{H
0#.
0z-
1x-
0u-
0t-
0>
07
15
02
01
1`)
1P)
1k&
1d&
0b&
1_&
1^&
1;"
1O4
1_4
1o4
1!5
115
1*5
1D#
1o5
11"
1Z5
165
175
1>5
1?5
1C5
1A5
1|!
1~!
1("
1.9
1t8
1p8
0;"
1:"
z4:
z3:
z2:
z1:
z0:
z/:
z.:
z-:
z,:
z+:
z*:
z):
z(:
z':
z&:
z%:
xg;
xf;
xe;
xd;
xc;
xb;
xa;
x`;
x_;
x^;
x];
x\;
x[;
xZ;
xY;
xX;
z$:
z#:
z":
z!:
z~9
z}9
z|9
z{9
zz9
zy9
zx9
zw9
zv9
zu9
zt9
zs9
0o5
1n5
x7>
x:>
x5:
x1>
x4>
x6:
x+>
x.>
x7:
x%>
x(>
x8:
x`=
xc=
x9:
xZ=
x]=
x::
xT=
xW=
x;:
xN=
xQ=
x<:
x+=
x.=
x=:
x%=
x(=
x>:
x}<
x"=
x?:
xv<
xx<
xz<
x@:
xT<
xW<
xA:
xN<
xQ<
xB:
xH<
xK<
xC:
xB<
xE<
xD:
x@<
x(<
xF<
x*<
xL<
x,<
xR<
x.<
x^<
x{<
x_<
x#=
xa<
x)=
xc<
xL=
x4=
xR=
x6=
xX=
x8=
x^=
x:=
x#>
xi=
x)>
xk=
x/>
xm=
x5>
xo=
xx=
xw=
xy=
xv=
xu=
xz=
xC=
xB=
xD=
xA=
x@=
xE=
xl<
xk<
xm<
xj<
xn<
xe<
xr<
x7<
x6<
x8<
x5<
x4<
x9<
x%<
x&<
xm;
x'<
x$<
x[<
xo;
xs<
x\<
xY<
x1=
x2=
xq;
x3=
x0=
xf=
xg=
xs;
xh=
xe=
x"<
x!<
xt<
x~;
x};
xj;
xw;
xl;
xi;
xx;
xi<
xy<
xu<
xZ<
xk;
z#@
z"@
z!@
z~?
z}?
z|?
z{?
zz?
zy?
zx?
zw?
zv?
zu?
zt?
zs?
zr?
x&C
x"?
xgE
xiE
xkE
xR?
x~B
x#?
xaE
xcE
xeE
xS?
xxB
x$?
x[E
x]E
x_E
xT?
xrB
x%?
xUE
xWE
xYE
xU?
xOB
x&?
x2E
x4E
x6E
xV?
xIB
x'?
x,E
x.E
x0E
xW?
xCB
x(?
x&E
x(E
x*E
xX?
x=B
x)?
x~D
x"E
x$E
xY?
xxA
x*?
x[D
x]D
x_D
xZ?
xrA
x+?
xUD
xWD
xYD
x[?
xlA
x,?
xOD
xQD
xSD
x\?
xfA
x-?
xID
xKD
xMD
x]?
xCA
x.?
x&D
x(D
x*D
x^?
x=A
x/?
x~C
x"D
x$D
x_?
x7A
x0?
xxC
xzC
x|C
x`?
x1A
x1?
xrC
xtC
xvC
xa?
xZC
xu@
x\C
xw@
x^C
xy@
x`C
x{@
x1D
xLA
x3D
xNA
x5D
xPA
x7D
xRA
xfD
x#B
xhD
x%B
xjD
x'B
xlD
x)B
x=E
xXB
x?E
xZB
xAE
x\B
xCE
x^B
xhB
xGE
xFE
xNE
xiB
xEE
xOE
xDE
xQE
x3B
xpD
xoD
xwD
x4B
xnD
xxD
xmD
xzD
x\A
x;D
x:D
xBD
x]A
x9D
xCD
x8D
xED
x'A
xdC
xcC
xkC
x(A
xbC
xlC
xaC
xnC
xoC
x\@
xmC
xFD
x^@
xDD
x{D
x`@
xyD
xRE
xb@
xPE
xSE
x|D
xGD
xpC
xHC
xJC
xLC
xNC
xOC
xMC
xKC
xIC
xo>
xn>
xm>
xl>
xk>
xj>
xi>
xh>
xg>
xf>
xe>
xd>
xc>
xb>
xa>
x`>
x!?
x~>
x}>
x|>
x{>
xz>
xy>
xx>
xw>
xv>
xu>
xt>
xs>
xr>
xq>
xp>
#650
0x!
0u!
#700
1x!
1u!
1s)
b0 )*
b1 )*
b10 )*
11-
0c-
0d-
1e-
08.
0?.
1A.
0D.
0E.
1`5
1t5
0/8
008
118
1`8
1r8
1v8
109
0YH
0mH
0=I
0>I
0?I
0@I
0AI
0BI
0CI
0DI
0EI
0FI
0GI
0HI
0II
0JI
0KI
0LI
1BJ
0FK
1GK
0dK
b0 |K
b1 |K
b10 |K
0+M
1,M
1\M
z.N
z/N
z0N
z1N
z2N
z3N
z4N
z5N
z6N
z7N
z8N
z9N
z:N
z;N
z<N
z=N
0ON
0cN
1mN
b1000 z!
#701
1lN
0bN
0NN
z|M
z}M
z~M
z!N
z"N
z#N
z$N
z%N
z&N
z'N
z(N
z)N
z*N
z+N
z,N
z-N
1YM
1'M
0(M
0cK
1BK
0CK
1?J
0-I
0.I
0/I
00I
01I
02I
03I
04I
05I
06I
07I
08I
09I
0:I
0;I
0<I
0lH
0XH
1/9
1u8
1q8
1]8
1*8
0+8
0,8
1q5
1]5
0&.
0'.
1*.
0,.
03.
1^-
0_-
0`-
1.-
1p)
1b'
1c'
1i'
0\(
14)
x!0
x#0
x%0
x'0
0kN
1bK
1A
xl3
xk3
xj3
xi3
xh3
xg3
xf3
xe3
xd3
xc3
xb3
xa3
x`3
x_3
x^3
xj2
xi2
xh2
xg2
xf2
xe2
xd2
xc2
xb2
xa2
x`2
x_2
x^2
x]2
x\2
xh1
xg1
xf1
xe1
xd1
xc1
xb1
xa1
x`1
x_1
x^1
x]1
x\1
x[1
xZ1
xf0
xe0
xd0
xc0
xb0
xa0
x`0
x_0
x^0
x]0
x\0
x[0
xZ0
xY0
xX0
zv#
zu#
zt#
zs#
zr#
zq#
zp#
zo#
zn#
zm#
zl#
zk#
zj#
zi#
zh#
zg#
1Y%
1\&
0y%
0x%
1w%
1o&
1u&
0`'
0_'
1^'
1+&
0R(
0X(
0/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$