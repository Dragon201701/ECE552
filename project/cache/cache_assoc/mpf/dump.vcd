$date
	Fri Apr 17 14:39:45 2020
$end
$version
	ModelSim Version 10.6d
$end
$timescale
	1ns
$end

$scope module mem_system_perfbench $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var reg 16 3 Addr [15:0] $end
$var reg 16 4 DataIn [15:0] $end
$var reg 1 5 Rd $end
$var reg 1 6 Wr $end
$var reg 2048 7 addr_trace_file_name [2048:1] $end
$var wire 1 8 clk $end
$var wire 1 9 rst $end
$var wire 1 : CacheHit $end
$var wire 1 ; DataOut_ref [15] $end
$var wire 1 < DataOut_ref [14] $end
$var wire 1 = DataOut_ref [13] $end
$var wire 1 > DataOut_ref [12] $end
$var wire 1 ? DataOut_ref [11] $end
$var wire 1 @ DataOut_ref [10] $end
$var wire 1 A DataOut_ref [9] $end
$var wire 1 B DataOut_ref [8] $end
$var wire 1 C DataOut_ref [7] $end
$var wire 1 D DataOut_ref [6] $end
$var wire 1 E DataOut_ref [5] $end
$var wire 1 F DataOut_ref [4] $end
$var wire 1 G DataOut_ref [3] $end
$var wire 1 H DataOut_ref [2] $end
$var wire 1 I DataOut_ref [1] $end
$var wire 1 J DataOut_ref [0] $end
$var wire 1 K Done_ref $end
$var wire 1 L Stall_ref $end
$var wire 1 M CacheHit_ref $end
$var reg 1 N reg_readorwrite $end
$var integer 32 O n_requests $end
$var integer 32 P n_replies $end
$var integer 32 Q n_cache_hits $end
$var reg 1 R test_success $end
$var integer 32 S req_cycle $end
$var integer 32 T fd $end
$var integer 32 U rval $end

$scope task read_line $end
$var reg 1024 V line [1023:0] $end
$var integer 32 W rval $end
$upscope $end

$scope task end_simulation $end
$upscope $end

$scope module DUT $end
$var parameter 32 X mem_type $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end

$scope module clkgen $end
$var reg 1 !! clk $end
$var reg 1 "! rst $end
$var wire 1 | err $end
$var integer 32 #! cycle_count $end
$upscope $end

$scope module m0 $end
$var parameter 32 $! memtype $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 { createdump $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 %! c0_err $end
$var wire 1 &! c1_err $end
$var wire 1 '! mem_err $end
$var wire 1 (! c0_data_in [15] $end
$var wire 1 )! c0_data_in [14] $end
$var wire 1 *! c0_data_in [13] $end
$var wire 1 +! c0_data_in [12] $end
$var wire 1 ,! c0_data_in [11] $end
$var wire 1 -! c0_data_in [10] $end
$var wire 1 .! c0_data_in [9] $end
$var wire 1 /! c0_data_in [8] $end
$var wire 1 0! c0_data_in [7] $end
$var wire 1 1! c0_data_in [6] $end
$var wire 1 2! c0_data_in [5] $end
$var wire 1 3! c0_data_in [4] $end
$var wire 1 4! c0_data_in [3] $end
$var wire 1 5! c0_data_in [2] $end
$var wire 1 6! c0_data_in [1] $end
$var wire 1 7! c0_data_in [0] $end
$var wire 1 8! c0_data_out [15] $end
$var wire 1 9! c0_data_out [14] $end
$var wire 1 :! c0_data_out [13] $end
$var wire 1 ;! c0_data_out [12] $end
$var wire 1 <! c0_data_out [11] $end
$var wire 1 =! c0_data_out [10] $end
$var wire 1 >! c0_data_out [9] $end
$var wire 1 ?! c0_data_out [8] $end
$var wire 1 @! c0_data_out [7] $end
$var wire 1 A! c0_data_out [6] $end
$var wire 1 B! c0_data_out [5] $end
$var wire 1 C! c0_data_out [4] $end
$var wire 1 D! c0_data_out [3] $end
$var wire 1 E! c0_data_out [2] $end
$var wire 1 F! c0_data_out [1] $end
$var wire 1 G! c0_data_out [0] $end
$var wire 1 H! c1_data_in [15] $end
$var wire 1 I! c1_data_in [14] $end
$var wire 1 J! c1_data_in [13] $end
$var wire 1 K! c1_data_in [12] $end
$var wire 1 L! c1_data_in [11] $end
$var wire 1 M! c1_data_in [10] $end
$var wire 1 N! c1_data_in [9] $end
$var wire 1 O! c1_data_in [8] $end
$var wire 1 P! c1_data_in [7] $end
$var wire 1 Q! c1_data_in [6] $end
$var wire 1 R! c1_data_in [5] $end
$var wire 1 S! c1_data_in [4] $end
$var wire 1 T! c1_data_in [3] $end
$var wire 1 U! c1_data_in [2] $end
$var wire 1 V! c1_data_in [1] $end
$var wire 1 W! c1_data_in [0] $end
$var wire 1 X! c1_data_out [15] $end
$var wire 1 Y! c1_data_out [14] $end
$var wire 1 Z! c1_data_out [13] $end
$var wire 1 [! c1_data_out [12] $end
$var wire 1 \! c1_data_out [11] $end
$var wire 1 ]! c1_data_out [10] $end
$var wire 1 ^! c1_data_out [9] $end
$var wire 1 _! c1_data_out [8] $end
$var wire 1 `! c1_data_out [7] $end
$var wire 1 a! c1_data_out [6] $end
$var wire 1 b! c1_data_out [5] $end
$var wire 1 c! c1_data_out [4] $end
$var wire 1 d! c1_data_out [3] $end
$var wire 1 e! c1_data_out [2] $end
$var wire 1 f! c1_data_out [1] $end
$var wire 1 g! c1_data_out [0] $end
$var wire 1 h! c0_tag_out [4] $end
$var wire 1 i! c0_tag_out [3] $end
$var wire 1 j! c0_tag_out [2] $end
$var wire 1 k! c0_tag_out [1] $end
$var wire 1 l! c0_tag_out [0] $end
$var wire 1 m! c0_tag_in [4] $end
$var wire 1 n! c0_tag_in [3] $end
$var wire 1 o! c0_tag_in [2] $end
$var wire 1 p! c0_tag_in [1] $end
$var wire 1 q! c0_tag_in [0] $end
$var wire 1 r! c1_tag_out [4] $end
$var wire 1 s! c1_tag_out [3] $end
$var wire 1 t! c1_tag_out [2] $end
$var wire 1 u! c1_tag_out [1] $end
$var wire 1 v! c1_tag_out [0] $end
$var wire 1 w! c1_tag_in [4] $end
$var wire 1 x! c1_tag_in [3] $end
$var wire 1 y! c1_tag_in [2] $end
$var wire 1 z! c1_tag_in [1] $end
$var wire 1 {! c1_tag_in [0] $end
$var wire 1 |! c0_index [10] $end
$var wire 1 }! c0_index [9] $end
$var wire 1 ~! c0_index [8] $end
$var wire 1 !" c0_index [7] $end
$var wire 1 "" c0_index [6] $end
$var wire 1 #" c0_index [5] $end
$var wire 1 $" c0_index [4] $end
$var wire 1 %" c0_index [3] $end
$var wire 1 &" c1_index [10] $end
$var wire 1 '" c1_index [9] $end
$var wire 1 (" c1_index [8] $end
$var wire 1 )" c1_index [7] $end
$var wire 1 *" c1_index [6] $end
$var wire 1 +" c1_index [5] $end
$var wire 1 ," c1_index [4] $end
$var wire 1 -" c1_index [3] $end
$var wire 1 ." c0_offset [2] $end
$var wire 1 /" c0_offset [1] $end
$var wire 1 0" c0_offset [0] $end
$var wire 1 1" c1_offset [2] $end
$var wire 1 2" c1_offset [1] $end
$var wire 1 3" c1_offset [0] $end
$var wire 1 4" c0_hit $end
$var wire 1 5" c0_dirty $end
$var wire 1 6" c0_valid_in $end
$var wire 1 7" c0_en $end
$var wire 1 8" c0_compare $end
$var wire 1 9" c0_write $end
$var wire 1 :" c0_valid_out $end
$var wire 1 ;" c1_hit $end
$var wire 1 <" c1_dirty $end
$var wire 1 =" c1_valid_in $end
$var wire 1 >" c1_en $end
$var wire 1 ?" c1_compare $end
$var wire 1 @" c1_write $end
$var wire 1 A" c1_valid_out $end
$var wire 1 B" mem_data_in [15] $end
$var wire 1 C" mem_data_in [14] $end
$var wire 1 D" mem_data_in [13] $end
$var wire 1 E" mem_data_in [12] $end
$var wire 1 F" mem_data_in [11] $end
$var wire 1 G" mem_data_in [10] $end
$var wire 1 H" mem_data_in [9] $end
$var wire 1 I" mem_data_in [8] $end
$var wire 1 J" mem_data_in [7] $end
$var wire 1 K" mem_data_in [6] $end
$var wire 1 L" mem_data_in [5] $end
$var wire 1 M" mem_data_in [4] $end
$var wire 1 N" mem_data_in [3] $end
$var wire 1 O" mem_data_in [2] $end
$var wire 1 P" mem_data_in [1] $end
$var wire 1 Q" mem_data_in [0] $end
$var wire 1 R" mem_data_out [15] $end
$var wire 1 S" mem_data_out [14] $end
$var wire 1 T" mem_data_out [13] $end
$var wire 1 U" mem_data_out [12] $end
$var wire 1 V" mem_data_out [11] $end
$var wire 1 W" mem_data_out [10] $end
$var wire 1 X" mem_data_out [9] $end
$var wire 1 Y" mem_data_out [8] $end
$var wire 1 Z" mem_data_out [7] $end
$var wire 1 [" mem_data_out [6] $end
$var wire 1 \" mem_data_out [5] $end
$var wire 1 ]" mem_data_out [4] $end
$var wire 1 ^" mem_data_out [3] $end
$var wire 1 _" mem_data_out [2] $end
$var wire 1 `" mem_data_out [1] $end
$var wire 1 a" mem_data_out [0] $end
$var wire 1 b" mem_addr [15] $end
$var wire 1 c" mem_addr [14] $end
$var wire 1 d" mem_addr [13] $end
$var wire 1 e" mem_addr [12] $end
$var wire 1 f" mem_addr [11] $end
$var wire 1 g" mem_addr [10] $end
$var wire 1 h" mem_addr [9] $end
$var wire 1 i" mem_addr [8] $end
$var wire 1 j" mem_addr [7] $end
$var wire 1 k" mem_addr [6] $end
$var wire 1 l" mem_addr [5] $end
$var wire 1 m" mem_addr [4] $end
$var wire 1 n" mem_addr [3] $end
$var wire 1 o" mem_addr [2] $end
$var wire 1 p" mem_addr [1] $end
$var wire 1 q" mem_addr [0] $end
$var wire 1 r" mem_stall $end
$var wire 1 s" mem_read $end
$var wire 1 t" mem_write $end
$var wire 1 u" mem_busy [3] $end
$var wire 1 v" mem_busy [2] $end
$var wire 1 w" mem_busy [1] $end
$var wire 1 x" mem_busy [0] $end
$var wire 1 y" c1_ompare $end

$scope module c0 $end
$var parameter 32 z" cache_id $end
$var wire 1 7" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 m! tag_in [4] $end
$var wire 1 n! tag_in [3] $end
$var wire 1 o! tag_in [2] $end
$var wire 1 p! tag_in [1] $end
$var wire 1 q! tag_in [0] $end
$var wire 1 |! index [7] $end
$var wire 1 }! index [6] $end
$var wire 1 ~! index [5] $end
$var wire 1 !" index [4] $end
$var wire 1 "" index [3] $end
$var wire 1 #" index [2] $end
$var wire 1 $" index [1] $end
$var wire 1 %" index [0] $end
$var wire 1 ." offset [2] $end
$var wire 1 /" offset [1] $end
$var wire 1 0" offset [0] $end
$var wire 1 (! data_in [15] $end
$var wire 1 )! data_in [14] $end
$var wire 1 *! data_in [13] $end
$var wire 1 +! data_in [12] $end
$var wire 1 ,! data_in [11] $end
$var wire 1 -! data_in [10] $end
$var wire 1 .! data_in [9] $end
$var wire 1 /! data_in [8] $end
$var wire 1 0! data_in [7] $end
$var wire 1 1! data_in [6] $end
$var wire 1 2! data_in [5] $end
$var wire 1 3! data_in [4] $end
$var wire 1 4! data_in [3] $end
$var wire 1 5! data_in [2] $end
$var wire 1 6! data_in [1] $end
$var wire 1 7! data_in [0] $end
$var wire 1 8" comp $end
$var wire 1 9" write $end
$var wire 1 6" valid_in $end
$var wire 1 h! tag_out [4] $end
$var wire 1 i! tag_out [3] $end
$var wire 1 j! tag_out [2] $end
$var wire 1 k! tag_out [1] $end
$var wire 1 l! tag_out [0] $end
$var wire 1 8! data_out [15] $end
$var wire 1 9! data_out [14] $end
$var wire 1 :! data_out [13] $end
$var wire 1 ;! data_out [12] $end
$var wire 1 <! data_out [11] $end
$var wire 1 =! data_out [10] $end
$var wire 1 >! data_out [9] $end
$var wire 1 ?! data_out [8] $end
$var wire 1 @! data_out [7] $end
$var wire 1 A! data_out [6] $end
$var wire 1 B! data_out [5] $end
$var wire 1 C! data_out [4] $end
$var wire 1 D! data_out [3] $end
$var wire 1 E! data_out [2] $end
$var wire 1 F! data_out [1] $end
$var wire 1 G! data_out [0] $end
$var wire 1 4" hit $end
$var wire 1 5" dirty $end
$var wire 1 :" valid $end
$var wire 1 %! err $end
$var wire 1 {" ram0_id [4] $end
$var wire 1 |" ram0_id [3] $end
$var wire 1 }" ram0_id [2] $end
$var wire 1 ~" ram0_id [1] $end
$var wire 1 !# ram0_id [0] $end
$var wire 1 "# ram1_id [4] $end
$var wire 1 ## ram1_id [3] $end
$var wire 1 $# ram1_id [2] $end
$var wire 1 %# ram1_id [1] $end
$var wire 1 &# ram1_id [0] $end
$var wire 1 '# ram2_id [4] $end
$var wire 1 (# ram2_id [3] $end
$var wire 1 )# ram2_id [2] $end
$var wire 1 *# ram2_id [1] $end
$var wire 1 +# ram2_id [0] $end
$var wire 1 ,# ram3_id [4] $end
$var wire 1 -# ram3_id [3] $end
$var wire 1 .# ram3_id [2] $end
$var wire 1 /# ram3_id [1] $end
$var wire 1 0# ram3_id [0] $end
$var wire 1 1# ram4_id [4] $end
$var wire 1 2# ram4_id [3] $end
$var wire 1 3# ram4_id [2] $end
$var wire 1 4# ram4_id [1] $end
$var wire 1 5# ram4_id [0] $end
$var wire 1 6# ram5_id [4] $end
$var wire 1 7# ram5_id [3] $end
$var wire 1 8# ram5_id [2] $end
$var wire 1 9# ram5_id [1] $end
$var wire 1 :# ram5_id [0] $end
$var wire 1 ;# w0 [15] $end
$var wire 1 <# w0 [14] $end
$var wire 1 =# w0 [13] $end
$var wire 1 ># w0 [12] $end
$var wire 1 ?# w0 [11] $end
$var wire 1 @# w0 [10] $end
$var wire 1 A# w0 [9] $end
$var wire 1 B# w0 [8] $end
$var wire 1 C# w0 [7] $end
$var wire 1 D# w0 [6] $end
$var wire 1 E# w0 [5] $end
$var wire 1 F# w0 [4] $end
$var wire 1 G# w0 [3] $end
$var wire 1 H# w0 [2] $end
$var wire 1 I# w0 [1] $end
$var wire 1 J# w0 [0] $end
$var wire 1 K# w1 [15] $end
$var wire 1 L# w1 [14] $end
$var wire 1 M# w1 [13] $end
$var wire 1 N# w1 [12] $end
$var wire 1 O# w1 [11] $end
$var wire 1 P# w1 [10] $end
$var wire 1 Q# w1 [9] $end
$var wire 1 R# w1 [8] $end
$var wire 1 S# w1 [7] $end
$var wire 1 T# w1 [6] $end
$var wire 1 U# w1 [5] $end
$var wire 1 V# w1 [4] $end
$var wire 1 W# w1 [3] $end
$var wire 1 X# w1 [2] $end
$var wire 1 Y# w1 [1] $end
$var wire 1 Z# w1 [0] $end
$var wire 1 [# w2 [15] $end
$var wire 1 \# w2 [14] $end
$var wire 1 ]# w2 [13] $end
$var wire 1 ^# w2 [12] $end
$var wire 1 _# w2 [11] $end
$var wire 1 `# w2 [10] $end
$var wire 1 a# w2 [9] $end
$var wire 1 b# w2 [8] $end
$var wire 1 c# w2 [7] $end
$var wire 1 d# w2 [6] $end
$var wire 1 e# w2 [5] $end
$var wire 1 f# w2 [4] $end
$var wire 1 g# w2 [3] $end
$var wire 1 h# w2 [2] $end
$var wire 1 i# w2 [1] $end
$var wire 1 j# w2 [0] $end
$var wire 1 k# w3 [15] $end
$var wire 1 l# w3 [14] $end
$var wire 1 m# w3 [13] $end
$var wire 1 n# w3 [12] $end
$var wire 1 o# w3 [11] $end
$var wire 1 p# w3 [10] $end
$var wire 1 q# w3 [9] $end
$var wire 1 r# w3 [8] $end
$var wire 1 s# w3 [7] $end
$var wire 1 t# w3 [6] $end
$var wire 1 u# w3 [5] $end
$var wire 1 v# w3 [4] $end
$var wire 1 w# w3 [3] $end
$var wire 1 x# w3 [2] $end
$var wire 1 y# w3 [1] $end
$var wire 1 z# w3 [0] $end
$var wire 1 {# go $end
$var wire 1 |# match $end
$var wire 1 }# wr_word0 $end
$var wire 1 ~# wr_word1 $end
$var wire 1 !$ wr_word2 $end
$var wire 1 "$ wr_word3 $end
$var wire 1 #$ wr_dirty $end
$var wire 1 $$ wr_tag $end
$var wire 1 %$ wr_valid $end
$var wire 1 &$ dirty_in $end
$var wire 1 '$ dirtybit $end
$var wire 1 ($ validbit $end

$scope module mem_w0 $end
$var parameter 32 )$ Size $end
$var wire 1 ;# data_out [15] $end
$var wire 1 <# data_out [14] $end
$var wire 1 =# data_out [13] $end
$var wire 1 ># data_out [12] $end
$var wire 1 ?# data_out [11] $end
$var wire 1 @# data_out [10] $end
$var wire 1 A# data_out [9] $end
$var wire 1 B# data_out [8] $end
$var wire 1 C# data_out [7] $end
$var wire 1 D# data_out [6] $end
$var wire 1 E# data_out [5] $end
$var wire 1 F# data_out [4] $end
$var wire 1 G# data_out [3] $end
$var wire 1 H# data_out [2] $end
$var wire 1 I# data_out [1] $end
$var wire 1 J# data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 (! data_in [15] $end
$var wire 1 )! data_in [14] $end
$var wire 1 *! data_in [13] $end
$var wire 1 +! data_in [12] $end
$var wire 1 ,! data_in [11] $end
$var wire 1 -! data_in [10] $end
$var wire 1 .! data_in [9] $end
$var wire 1 /! data_in [8] $end
$var wire 1 0! data_in [7] $end
$var wire 1 1! data_in [6] $end
$var wire 1 2! data_in [5] $end
$var wire 1 3! data_in [4] $end
$var wire 1 4! data_in [3] $end
$var wire 1 5! data_in [2] $end
$var wire 1 6! data_in [1] $end
$var wire 1 7! data_in [0] $end
$var wire 1 }# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 {" file_id [4] $end
$var wire 1 |" file_id [3] $end
$var wire 1 }" file_id [2] $end
$var wire 1 ~" file_id [1] $end
$var wire 1 !# file_id [0] $end
$var integer 32 *$ mcd $end
$var integer 32 +$ i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 ,$ Size $end
$var wire 1 K# data_out [15] $end
$var wire 1 L# data_out [14] $end
$var wire 1 M# data_out [13] $end
$var wire 1 N# data_out [12] $end
$var wire 1 O# data_out [11] $end
$var wire 1 P# data_out [10] $end
$var wire 1 Q# data_out [9] $end
$var wire 1 R# data_out [8] $end
$var wire 1 S# data_out [7] $end
$var wire 1 T# data_out [6] $end
$var wire 1 U# data_out [5] $end
$var wire 1 V# data_out [4] $end
$var wire 1 W# data_out [3] $end
$var wire 1 X# data_out [2] $end
$var wire 1 Y# data_out [1] $end
$var wire 1 Z# data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 (! data_in [15] $end
$var wire 1 )! data_in [14] $end
$var wire 1 *! data_in [13] $end
$var wire 1 +! data_in [12] $end
$var wire 1 ,! data_in [11] $end
$var wire 1 -! data_in [10] $end
$var wire 1 .! data_in [9] $end
$var wire 1 /! data_in [8] $end
$var wire 1 0! data_in [7] $end
$var wire 1 1! data_in [6] $end
$var wire 1 2! data_in [5] $end
$var wire 1 3! data_in [4] $end
$var wire 1 4! data_in [3] $end
$var wire 1 5! data_in [2] $end
$var wire 1 6! data_in [1] $end
$var wire 1 7! data_in [0] $end
$var wire 1 ~# write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 "# file_id [4] $end
$var wire 1 ## file_id [3] $end
$var wire 1 $# file_id [2] $end
$var wire 1 %# file_id [1] $end
$var wire 1 &# file_id [0] $end
$var integer 32 -$ mcd $end
$var integer 32 .$ i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 /$ Size $end
$var wire 1 [# data_out [15] $end
$var wire 1 \# data_out [14] $end
$var wire 1 ]# data_out [13] $end
$var wire 1 ^# data_out [12] $end
$var wire 1 _# data_out [11] $end
$var wire 1 `# data_out [10] $end
$var wire 1 a# data_out [9] $end
$var wire 1 b# data_out [8] $end
$var wire 1 c# data_out [7] $end
$var wire 1 d# data_out [6] $end
$var wire 1 e# data_out [5] $end
$var wire 1 f# data_out [4] $end
$var wire 1 g# data_out [3] $end
$var wire 1 h# data_out [2] $end
$var wire 1 i# data_out [1] $end
$var wire 1 j# data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 (! data_in [15] $end
$var wire 1 )! data_in [14] $end
$var wire 1 *! data_in [13] $end
$var wire 1 +! data_in [12] $end
$var wire 1 ,! data_in [11] $end
$var wire 1 -! data_in [10] $end
$var wire 1 .! data_in [9] $end
$var wire 1 /! data_in [8] $end
$var wire 1 0! data_in [7] $end
$var wire 1 1! data_in [6] $end
$var wire 1 2! data_in [5] $end
$var wire 1 3! data_in [4] $end
$var wire 1 4! data_in [3] $end
$var wire 1 5! data_in [2] $end
$var wire 1 6! data_in [1] $end
$var wire 1 7! data_in [0] $end
$var wire 1 !$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 '# file_id [4] $end
$var wire 1 (# file_id [3] $end
$var wire 1 )# file_id [2] $end
$var wire 1 *# file_id [1] $end
$var wire 1 +# file_id [0] $end
$var integer 32 0$ mcd $end
$var integer 32 1$ i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 2$ Size $end
$var wire 1 k# data_out [15] $end
$var wire 1 l# data_out [14] $end
$var wire 1 m# data_out [13] $end
$var wire 1 n# data_out [12] $end
$var wire 1 o# data_out [11] $end
$var wire 1 p# data_out [10] $end
$var wire 1 q# data_out [9] $end
$var wire 1 r# data_out [8] $end
$var wire 1 s# data_out [7] $end
$var wire 1 t# data_out [6] $end
$var wire 1 u# data_out [5] $end
$var wire 1 v# data_out [4] $end
$var wire 1 w# data_out [3] $end
$var wire 1 x# data_out [2] $end
$var wire 1 y# data_out [1] $end
$var wire 1 z# data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 (! data_in [15] $end
$var wire 1 )! data_in [14] $end
$var wire 1 *! data_in [13] $end
$var wire 1 +! data_in [12] $end
$var wire 1 ,! data_in [11] $end
$var wire 1 -! data_in [10] $end
$var wire 1 .! data_in [9] $end
$var wire 1 /! data_in [8] $end
$var wire 1 0! data_in [7] $end
$var wire 1 1! data_in [6] $end
$var wire 1 2! data_in [5] $end
$var wire 1 3! data_in [4] $end
$var wire 1 4! data_in [3] $end
$var wire 1 5! data_in [2] $end
$var wire 1 6! data_in [1] $end
$var wire 1 7! data_in [0] $end
$var wire 1 "$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 ,# file_id [4] $end
$var wire 1 -# file_id [3] $end
$var wire 1 .# file_id [2] $end
$var wire 1 /# file_id [1] $end
$var wire 1 0# file_id [0] $end
$var integer 32 3$ mcd $end
$var integer 32 4$ i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 5$ Size $end
$var wire 1 h! data_out [4] $end
$var wire 1 i! data_out [3] $end
$var wire 1 j! data_out [2] $end
$var wire 1 k! data_out [1] $end
$var wire 1 l! data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 m! data_in [4] $end
$var wire 1 n! data_in [3] $end
$var wire 1 o! data_in [2] $end
$var wire 1 p! data_in [1] $end
$var wire 1 q! data_in [0] $end
$var wire 1 $$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 1# file_id [4] $end
$var wire 1 2# file_id [3] $end
$var wire 1 3# file_id [2] $end
$var wire 1 4# file_id [1] $end
$var wire 1 5# file_id [0] $end
$var integer 32 6$ mcd $end
$var integer 32 7$ i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 8$ Size $end
$var wire 1 '$ data_out [0] $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 &$ data_in [0] $end
$var wire 1 #$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 6# file_id [4] $end
$var wire 1 7# file_id [3] $end
$var wire 1 8# file_id [2] $end
$var wire 1 9# file_id [1] $end
$var wire 1 :# file_id [0] $end
$var integer 32 9$ mcd $end
$var integer 32 :$ i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 ($ data_out $end
$var wire 1 |! addr [7] $end
$var wire 1 }! addr [6] $end
$var wire 1 ~! addr [5] $end
$var wire 1 !" addr [4] $end
$var wire 1 "" addr [3] $end
$var wire 1 #" addr [2] $end
$var wire 1 $" addr [1] $end
$var wire 1 %" addr [0] $end
$var wire 1 6" data_in $end
$var wire 1 %$ write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 {" file_id [4] $end
$var wire 1 |" file_id [3] $end
$var wire 1 }" file_id [2] $end
$var wire 1 ~" file_id [1] $end
$var wire 1 !# file_id [0] $end
$var integer 32 ;$ mcd $end
$var integer 32 <$ i $end
$upscope $end
$upscope $end

$scope module c1 $end
$var parameter 32 =$ cache_id $end
$var wire 1 >" enable $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 w! tag_in [4] $end
$var wire 1 x! tag_in [3] $end
$var wire 1 y! tag_in [2] $end
$var wire 1 z! tag_in [1] $end
$var wire 1 {! tag_in [0] $end
$var wire 1 &" index [7] $end
$var wire 1 '" index [6] $end
$var wire 1 (" index [5] $end
$var wire 1 )" index [4] $end
$var wire 1 *" index [3] $end
$var wire 1 +" index [2] $end
$var wire 1 ," index [1] $end
$var wire 1 -" index [0] $end
$var wire 1 1" offset [2] $end
$var wire 1 2" offset [1] $end
$var wire 1 3" offset [0] $end
$var wire 1 H! data_in [15] $end
$var wire 1 I! data_in [14] $end
$var wire 1 J! data_in [13] $end
$var wire 1 K! data_in [12] $end
$var wire 1 L! data_in [11] $end
$var wire 1 M! data_in [10] $end
$var wire 1 N! data_in [9] $end
$var wire 1 O! data_in [8] $end
$var wire 1 P! data_in [7] $end
$var wire 1 Q! data_in [6] $end
$var wire 1 R! data_in [5] $end
$var wire 1 S! data_in [4] $end
$var wire 1 T! data_in [3] $end
$var wire 1 U! data_in [2] $end
$var wire 1 V! data_in [1] $end
$var wire 1 W! data_in [0] $end
$var wire 1 y" comp $end
$var wire 1 @" write $end
$var wire 1 =" valid_in $end
$var wire 1 r! tag_out [4] $end
$var wire 1 s! tag_out [3] $end
$var wire 1 t! tag_out [2] $end
$var wire 1 u! tag_out [1] $end
$var wire 1 v! tag_out [0] $end
$var wire 1 X! data_out [15] $end
$var wire 1 Y! data_out [14] $end
$var wire 1 Z! data_out [13] $end
$var wire 1 [! data_out [12] $end
$var wire 1 \! data_out [11] $end
$var wire 1 ]! data_out [10] $end
$var wire 1 ^! data_out [9] $end
$var wire 1 _! data_out [8] $end
$var wire 1 `! data_out [7] $end
$var wire 1 a! data_out [6] $end
$var wire 1 b! data_out [5] $end
$var wire 1 c! data_out [4] $end
$var wire 1 d! data_out [3] $end
$var wire 1 e! data_out [2] $end
$var wire 1 f! data_out [1] $end
$var wire 1 g! data_out [0] $end
$var wire 1 ;" hit $end
$var wire 1 <" dirty $end
$var wire 1 A" valid $end
$var wire 1 %! err $end
$var wire 1 >$ ram0_id [4] $end
$var wire 1 ?$ ram0_id [3] $end
$var wire 1 @$ ram0_id [2] $end
$var wire 1 A$ ram0_id [1] $end
$var wire 1 B$ ram0_id [0] $end
$var wire 1 C$ ram1_id [4] $end
$var wire 1 D$ ram1_id [3] $end
$var wire 1 E$ ram1_id [2] $end
$var wire 1 F$ ram1_id [1] $end
$var wire 1 G$ ram1_id [0] $end
$var wire 1 H$ ram2_id [4] $end
$var wire 1 I$ ram2_id [3] $end
$var wire 1 J$ ram2_id [2] $end
$var wire 1 K$ ram2_id [1] $end
$var wire 1 L$ ram2_id [0] $end
$var wire 1 M$ ram3_id [4] $end
$var wire 1 N$ ram3_id [3] $end
$var wire 1 O$ ram3_id [2] $end
$var wire 1 P$ ram3_id [1] $end
$var wire 1 Q$ ram3_id [0] $end
$var wire 1 R$ ram4_id [4] $end
$var wire 1 S$ ram4_id [3] $end
$var wire 1 T$ ram4_id [2] $end
$var wire 1 U$ ram4_id [1] $end
$var wire 1 V$ ram4_id [0] $end
$var wire 1 W$ ram5_id [4] $end
$var wire 1 X$ ram5_id [3] $end
$var wire 1 Y$ ram5_id [2] $end
$var wire 1 Z$ ram5_id [1] $end
$var wire 1 [$ ram5_id [0] $end
$var wire 1 \$ w0 [15] $end
$var wire 1 ]$ w0 [14] $end
$var wire 1 ^$ w0 [13] $end
$var wire 1 _$ w0 [12] $end
$var wire 1 `$ w0 [11] $end
$var wire 1 a$ w0 [10] $end
$var wire 1 b$ w0 [9] $end
$var wire 1 c$ w0 [8] $end
$var wire 1 d$ w0 [7] $end
$var wire 1 e$ w0 [6] $end
$var wire 1 f$ w0 [5] $end
$var wire 1 g$ w0 [4] $end
$var wire 1 h$ w0 [3] $end
$var wire 1 i$ w0 [2] $end
$var wire 1 j$ w0 [1] $end
$var wire 1 k$ w0 [0] $end
$var wire 1 l$ w1 [15] $end
$var wire 1 m$ w1 [14] $end
$var wire 1 n$ w1 [13] $end
$var wire 1 o$ w1 [12] $end
$var wire 1 p$ w1 [11] $end
$var wire 1 q$ w1 [10] $end
$var wire 1 r$ w1 [9] $end
$var wire 1 s$ w1 [8] $end
$var wire 1 t$ w1 [7] $end
$var wire 1 u$ w1 [6] $end
$var wire 1 v$ w1 [5] $end
$var wire 1 w$ w1 [4] $end
$var wire 1 x$ w1 [3] $end
$var wire 1 y$ w1 [2] $end
$var wire 1 z$ w1 [1] $end
$var wire 1 {$ w1 [0] $end
$var wire 1 |$ w2 [15] $end
$var wire 1 }$ w2 [14] $end
$var wire 1 ~$ w2 [13] $end
$var wire 1 !% w2 [12] $end
$var wire 1 "% w2 [11] $end
$var wire 1 #% w2 [10] $end
$var wire 1 $% w2 [9] $end
$var wire 1 %% w2 [8] $end
$var wire 1 &% w2 [7] $end
$var wire 1 '% w2 [6] $end
$var wire 1 (% w2 [5] $end
$var wire 1 )% w2 [4] $end
$var wire 1 *% w2 [3] $end
$var wire 1 +% w2 [2] $end
$var wire 1 ,% w2 [1] $end
$var wire 1 -% w2 [0] $end
$var wire 1 .% w3 [15] $end
$var wire 1 /% w3 [14] $end
$var wire 1 0% w3 [13] $end
$var wire 1 1% w3 [12] $end
$var wire 1 2% w3 [11] $end
$var wire 1 3% w3 [10] $end
$var wire 1 4% w3 [9] $end
$var wire 1 5% w3 [8] $end
$var wire 1 6% w3 [7] $end
$var wire 1 7% w3 [6] $end
$var wire 1 8% w3 [5] $end
$var wire 1 9% w3 [4] $end
$var wire 1 :% w3 [3] $end
$var wire 1 ;% w3 [2] $end
$var wire 1 <% w3 [1] $end
$var wire 1 =% w3 [0] $end
$var wire 1 >% go $end
$var wire 1 ?% match $end
$var wire 1 @% wr_word0 $end
$var wire 1 A% wr_word1 $end
$var wire 1 B% wr_word2 $end
$var wire 1 C% wr_word3 $end
$var wire 1 D% wr_dirty $end
$var wire 1 E% wr_tag $end
$var wire 1 F% wr_valid $end
$var wire 1 G% dirty_in $end
$var wire 1 H% dirtybit $end
$var wire 1 I% validbit $end

$scope module mem_w0 $end
$var parameter 32 J% Size $end
$var wire 1 \$ data_out [15] $end
$var wire 1 ]$ data_out [14] $end
$var wire 1 ^$ data_out [13] $end
$var wire 1 _$ data_out [12] $end
$var wire 1 `$ data_out [11] $end
$var wire 1 a$ data_out [10] $end
$var wire 1 b$ data_out [9] $end
$var wire 1 c$ data_out [8] $end
$var wire 1 d$ data_out [7] $end
$var wire 1 e$ data_out [6] $end
$var wire 1 f$ data_out [5] $end
$var wire 1 g$ data_out [4] $end
$var wire 1 h$ data_out [3] $end
$var wire 1 i$ data_out [2] $end
$var wire 1 j$ data_out [1] $end
$var wire 1 k$ data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 H! data_in [15] $end
$var wire 1 I! data_in [14] $end
$var wire 1 J! data_in [13] $end
$var wire 1 K! data_in [12] $end
$var wire 1 L! data_in [11] $end
$var wire 1 M! data_in [10] $end
$var wire 1 N! data_in [9] $end
$var wire 1 O! data_in [8] $end
$var wire 1 P! data_in [7] $end
$var wire 1 Q! data_in [6] $end
$var wire 1 R! data_in [5] $end
$var wire 1 S! data_in [4] $end
$var wire 1 T! data_in [3] $end
$var wire 1 U! data_in [2] $end
$var wire 1 V! data_in [1] $end
$var wire 1 W! data_in [0] $end
$var wire 1 @% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 >$ file_id [4] $end
$var wire 1 ?$ file_id [3] $end
$var wire 1 @$ file_id [2] $end
$var wire 1 A$ file_id [1] $end
$var wire 1 B$ file_id [0] $end
$var integer 32 K% mcd $end
$var integer 32 L% i $end
$upscope $end

$scope module mem_w1 $end
$var parameter 32 M% Size $end
$var wire 1 l$ data_out [15] $end
$var wire 1 m$ data_out [14] $end
$var wire 1 n$ data_out [13] $end
$var wire 1 o$ data_out [12] $end
$var wire 1 p$ data_out [11] $end
$var wire 1 q$ data_out [10] $end
$var wire 1 r$ data_out [9] $end
$var wire 1 s$ data_out [8] $end
$var wire 1 t$ data_out [7] $end
$var wire 1 u$ data_out [6] $end
$var wire 1 v$ data_out [5] $end
$var wire 1 w$ data_out [4] $end
$var wire 1 x$ data_out [3] $end
$var wire 1 y$ data_out [2] $end
$var wire 1 z$ data_out [1] $end
$var wire 1 {$ data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 H! data_in [15] $end
$var wire 1 I! data_in [14] $end
$var wire 1 J! data_in [13] $end
$var wire 1 K! data_in [12] $end
$var wire 1 L! data_in [11] $end
$var wire 1 M! data_in [10] $end
$var wire 1 N! data_in [9] $end
$var wire 1 O! data_in [8] $end
$var wire 1 P! data_in [7] $end
$var wire 1 Q! data_in [6] $end
$var wire 1 R! data_in [5] $end
$var wire 1 S! data_in [4] $end
$var wire 1 T! data_in [3] $end
$var wire 1 U! data_in [2] $end
$var wire 1 V! data_in [1] $end
$var wire 1 W! data_in [0] $end
$var wire 1 A% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 C$ file_id [4] $end
$var wire 1 D$ file_id [3] $end
$var wire 1 E$ file_id [2] $end
$var wire 1 F$ file_id [1] $end
$var wire 1 G$ file_id [0] $end
$var integer 32 N% mcd $end
$var integer 32 O% i $end
$upscope $end

$scope module mem_w2 $end
$var parameter 32 P% Size $end
$var wire 1 |$ data_out [15] $end
$var wire 1 }$ data_out [14] $end
$var wire 1 ~$ data_out [13] $end
$var wire 1 !% data_out [12] $end
$var wire 1 "% data_out [11] $end
$var wire 1 #% data_out [10] $end
$var wire 1 $% data_out [9] $end
$var wire 1 %% data_out [8] $end
$var wire 1 &% data_out [7] $end
$var wire 1 '% data_out [6] $end
$var wire 1 (% data_out [5] $end
$var wire 1 )% data_out [4] $end
$var wire 1 *% data_out [3] $end
$var wire 1 +% data_out [2] $end
$var wire 1 ,% data_out [1] $end
$var wire 1 -% data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 H! data_in [15] $end
$var wire 1 I! data_in [14] $end
$var wire 1 J! data_in [13] $end
$var wire 1 K! data_in [12] $end
$var wire 1 L! data_in [11] $end
$var wire 1 M! data_in [10] $end
$var wire 1 N! data_in [9] $end
$var wire 1 O! data_in [8] $end
$var wire 1 P! data_in [7] $end
$var wire 1 Q! data_in [6] $end
$var wire 1 R! data_in [5] $end
$var wire 1 S! data_in [4] $end
$var wire 1 T! data_in [3] $end
$var wire 1 U! data_in [2] $end
$var wire 1 V! data_in [1] $end
$var wire 1 W! data_in [0] $end
$var wire 1 B% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 H$ file_id [4] $end
$var wire 1 I$ file_id [3] $end
$var wire 1 J$ file_id [2] $end
$var wire 1 K$ file_id [1] $end
$var wire 1 L$ file_id [0] $end
$var integer 32 Q% mcd $end
$var integer 32 R% i $end
$upscope $end

$scope module mem_w3 $end
$var parameter 32 S% Size $end
$var wire 1 .% data_out [15] $end
$var wire 1 /% data_out [14] $end
$var wire 1 0% data_out [13] $end
$var wire 1 1% data_out [12] $end
$var wire 1 2% data_out [11] $end
$var wire 1 3% data_out [10] $end
$var wire 1 4% data_out [9] $end
$var wire 1 5% data_out [8] $end
$var wire 1 6% data_out [7] $end
$var wire 1 7% data_out [6] $end
$var wire 1 8% data_out [5] $end
$var wire 1 9% data_out [4] $end
$var wire 1 :% data_out [3] $end
$var wire 1 ;% data_out [2] $end
$var wire 1 <% data_out [1] $end
$var wire 1 =% data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 H! data_in [15] $end
$var wire 1 I! data_in [14] $end
$var wire 1 J! data_in [13] $end
$var wire 1 K! data_in [12] $end
$var wire 1 L! data_in [11] $end
$var wire 1 M! data_in [10] $end
$var wire 1 N! data_in [9] $end
$var wire 1 O! data_in [8] $end
$var wire 1 P! data_in [7] $end
$var wire 1 Q! data_in [6] $end
$var wire 1 R! data_in [5] $end
$var wire 1 S! data_in [4] $end
$var wire 1 T! data_in [3] $end
$var wire 1 U! data_in [2] $end
$var wire 1 V! data_in [1] $end
$var wire 1 W! data_in [0] $end
$var wire 1 C% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 M$ file_id [4] $end
$var wire 1 N$ file_id [3] $end
$var wire 1 O$ file_id [2] $end
$var wire 1 P$ file_id [1] $end
$var wire 1 Q$ file_id [0] $end
$var integer 32 T% mcd $end
$var integer 32 U% i $end
$upscope $end

$scope module mem_tg $end
$var parameter 32 V% Size $end
$var wire 1 r! data_out [4] $end
$var wire 1 s! data_out [3] $end
$var wire 1 t! data_out [2] $end
$var wire 1 u! data_out [1] $end
$var wire 1 v! data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 w! data_in [4] $end
$var wire 1 x! data_in [3] $end
$var wire 1 y! data_in [2] $end
$var wire 1 z! data_in [1] $end
$var wire 1 {! data_in [0] $end
$var wire 1 E% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 R$ file_id [4] $end
$var wire 1 S$ file_id [3] $end
$var wire 1 T$ file_id [2] $end
$var wire 1 U$ file_id [1] $end
$var wire 1 V$ file_id [0] $end
$var integer 32 W% mcd $end
$var integer 32 X% i $end
$upscope $end

$scope module mem_dr $end
$var parameter 32 Y% Size $end
$var wire 1 H% data_out [0] $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 G% data_in [0] $end
$var wire 1 D% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 W$ file_id [4] $end
$var wire 1 X$ file_id [3] $end
$var wire 1 Y$ file_id [2] $end
$var wire 1 Z$ file_id [1] $end
$var wire 1 [$ file_id [0] $end
$var integer 32 Z% mcd $end
$var integer 32 [% i $end
$upscope $end

$scope module mem_vl $end
$var wire 1 I% data_out $end
$var wire 1 &" addr [7] $end
$var wire 1 '" addr [6] $end
$var wire 1 (" addr [5] $end
$var wire 1 )" addr [4] $end
$var wire 1 *" addr [3] $end
$var wire 1 +" addr [2] $end
$var wire 1 ," addr [1] $end
$var wire 1 -" addr [0] $end
$var wire 1 =" data_in $end
$var wire 1 F% write $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 >$ file_id [4] $end
$var wire 1 ?$ file_id [3] $end
$var wire 1 @$ file_id [2] $end
$var wire 1 A$ file_id [1] $end
$var wire 1 B$ file_id [0] $end
$var integer 32 \% mcd $end
$var integer 32 ]% i $end
$upscope $end
$upscope $end

$scope module mem $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 { createdump $end
$var wire 1 b" addr [15] $end
$var wire 1 c" addr [14] $end
$var wire 1 d" addr [13] $end
$var wire 1 e" addr [12] $end
$var wire 1 f" addr [11] $end
$var wire 1 g" addr [10] $end
$var wire 1 h" addr [9] $end
$var wire 1 i" addr [8] $end
$var wire 1 j" addr [7] $end
$var wire 1 k" addr [6] $end
$var wire 1 l" addr [5] $end
$var wire 1 m" addr [4] $end
$var wire 1 n" addr [3] $end
$var wire 1 o" addr [2] $end
$var wire 1 p" addr [1] $end
$var wire 1 q" addr [0] $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 t" wr $end
$var wire 1 s" rd $end
$var wire 1 R" data_out [15] $end
$var wire 1 S" data_out [14] $end
$var wire 1 T" data_out [13] $end
$var wire 1 U" data_out [12] $end
$var wire 1 V" data_out [11] $end
$var wire 1 W" data_out [10] $end
$var wire 1 X" data_out [9] $end
$var wire 1 Y" data_out [8] $end
$var wire 1 Z" data_out [7] $end
$var wire 1 [" data_out [6] $end
$var wire 1 \" data_out [5] $end
$var wire 1 ]" data_out [4] $end
$var wire 1 ^" data_out [3] $end
$var wire 1 _" data_out [2] $end
$var wire 1 `" data_out [1] $end
$var wire 1 a" data_out [0] $end
$var wire 1 r" stall $end
$var wire 1 u" busy [3] $end
$var wire 1 v" busy [2] $end
$var wire 1 w" busy [1] $end
$var wire 1 x" busy [0] $end
$var wire 1 '! err $end
$var wire 1 ^% data0_out [15] $end
$var wire 1 _% data0_out [14] $end
$var wire 1 `% data0_out [13] $end
$var wire 1 a% data0_out [12] $end
$var wire 1 b% data0_out [11] $end
$var wire 1 c% data0_out [10] $end
$var wire 1 d% data0_out [9] $end
$var wire 1 e% data0_out [8] $end
$var wire 1 f% data0_out [7] $end
$var wire 1 g% data0_out [6] $end
$var wire 1 h% data0_out [5] $end
$var wire 1 i% data0_out [4] $end
$var wire 1 j% data0_out [3] $end
$var wire 1 k% data0_out [2] $end
$var wire 1 l% data0_out [1] $end
$var wire 1 m% data0_out [0] $end
$var wire 1 n% data1_out [15] $end
$var wire 1 o% data1_out [14] $end
$var wire 1 p% data1_out [13] $end
$var wire 1 q% data1_out [12] $end
$var wire 1 r% data1_out [11] $end
$var wire 1 s% data1_out [10] $end
$var wire 1 t% data1_out [9] $end
$var wire 1 u% data1_out [8] $end
$var wire 1 v% data1_out [7] $end
$var wire 1 w% data1_out [6] $end
$var wire 1 x% data1_out [5] $end
$var wire 1 y% data1_out [4] $end
$var wire 1 z% data1_out [3] $end
$var wire 1 {% data1_out [2] $end
$var wire 1 |% data1_out [1] $end
$var wire 1 }% data1_out [0] $end
$var wire 1 ~% data2_out [15] $end
$var wire 1 !& data2_out [14] $end
$var wire 1 "& data2_out [13] $end
$var wire 1 #& data2_out [12] $end
$var wire 1 $& data2_out [11] $end
$var wire 1 %& data2_out [10] $end
$var wire 1 && data2_out [9] $end
$var wire 1 '& data2_out [8] $end
$var wire 1 (& data2_out [7] $end
$var wire 1 )& data2_out [6] $end
$var wire 1 *& data2_out [5] $end
$var wire 1 +& data2_out [4] $end
$var wire 1 ,& data2_out [3] $end
$var wire 1 -& data2_out [2] $end
$var wire 1 .& data2_out [1] $end
$var wire 1 /& data2_out [0] $end
$var wire 1 0& data3_out [15] $end
$var wire 1 1& data3_out [14] $end
$var wire 1 2& data3_out [13] $end
$var wire 1 3& data3_out [12] $end
$var wire 1 4& data3_out [11] $end
$var wire 1 5& data3_out [10] $end
$var wire 1 6& data3_out [9] $end
$var wire 1 7& data3_out [8] $end
$var wire 1 8& data3_out [7] $end
$var wire 1 9& data3_out [6] $end
$var wire 1 :& data3_out [5] $end
$var wire 1 ;& data3_out [4] $end
$var wire 1 <& data3_out [3] $end
$var wire 1 =& data3_out [2] $end
$var wire 1 >& data3_out [1] $end
$var wire 1 ?& data3_out [0] $end
$var wire 1 @& sel0 $end
$var wire 1 A& sel1 $end
$var wire 1 B& sel2 $end
$var wire 1 C& sel3 $end
$var wire 1 D& en [3] $end
$var wire 1 E& en [2] $end
$var wire 1 F& en [1] $end
$var wire 1 G& en [0] $end
$var wire 1 H& err0 $end
$var wire 1 I& err1 $end
$var wire 1 J& err2 $end
$var wire 1 K& err3 $end
$var wire 1 L& bsy0 [3] $end
$var wire 1 M& bsy0 [2] $end
$var wire 1 N& bsy0 [1] $end
$var wire 1 O& bsy0 [0] $end
$var wire 1 P& bsy1 [3] $end
$var wire 1 Q& bsy1 [2] $end
$var wire 1 R& bsy1 [1] $end
$var wire 1 S& bsy1 [0] $end
$var wire 1 T& bsy2 [3] $end
$var wire 1 U& bsy2 [2] $end
$var wire 1 V& bsy2 [1] $end
$var wire 1 W& bsy2 [0] $end

$scope module m0 $end
$var wire 1 ^% data_out [15] $end
$var wire 1 _% data_out [14] $end
$var wire 1 `% data_out [13] $end
$var wire 1 a% data_out [12] $end
$var wire 1 b% data_out [11] $end
$var wire 1 c% data_out [10] $end
$var wire 1 d% data_out [9] $end
$var wire 1 e% data_out [8] $end
$var wire 1 f% data_out [7] $end
$var wire 1 g% data_out [6] $end
$var wire 1 h% data_out [5] $end
$var wire 1 i% data_out [4] $end
$var wire 1 j% data_out [3] $end
$var wire 1 k% data_out [2] $end
$var wire 1 l% data_out [1] $end
$var wire 1 m% data_out [0] $end
$var wire 1 H& err $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 b" addr [12] $end
$var wire 1 c" addr [11] $end
$var wire 1 d" addr [10] $end
$var wire 1 e" addr [9] $end
$var wire 1 f" addr [8] $end
$var wire 1 g" addr [7] $end
$var wire 1 h" addr [6] $end
$var wire 1 i" addr [5] $end
$var wire 1 j" addr [4] $end
$var wire 1 k" addr [3] $end
$var wire 1 l" addr [2] $end
$var wire 1 m" addr [1] $end
$var wire 1 n" addr [0] $end
$var wire 1 t" wr $end
$var wire 1 s" rd $end
$var wire 1 G& enable $end
$var wire 1 { create_dump $end
$var wire 1 X& bank_id [1] $end
$var wire 1 Y& bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z& loaded $end
$var reg 16 [& largest [15:0] $end
$var wire 1 \& addr_1c [13] $end
$var wire 1 ]& addr_1c [12] $end
$var wire 1 ^& addr_1c [11] $end
$var wire 1 _& addr_1c [10] $end
$var wire 1 `& addr_1c [9] $end
$var wire 1 a& addr_1c [8] $end
$var wire 1 b& addr_1c [7] $end
$var wire 1 c& addr_1c [6] $end
$var wire 1 d& addr_1c [5] $end
$var wire 1 e& addr_1c [4] $end
$var wire 1 f& addr_1c [3] $end
$var wire 1 g& addr_1c [2] $end
$var wire 1 h& addr_1c [1] $end
$var wire 1 i& addr_1c [0] $end
$var wire 1 j& data_in_1c [15] $end
$var wire 1 k& data_in_1c [14] $end
$var wire 1 l& data_in_1c [13] $end
$var wire 1 m& data_in_1c [12] $end
$var wire 1 n& data_in_1c [11] $end
$var wire 1 o& data_in_1c [10] $end
$var wire 1 p& data_in_1c [9] $end
$var wire 1 q& data_in_1c [8] $end
$var wire 1 r& data_in_1c [7] $end
$var wire 1 s& data_in_1c [6] $end
$var wire 1 t& data_in_1c [5] $end
$var wire 1 u& data_in_1c [4] $end
$var wire 1 v& data_in_1c [3] $end
$var wire 1 w& data_in_1c [2] $end
$var wire 1 x& data_in_1c [1] $end
$var wire 1 y& data_in_1c [0] $end
$var integer 32 z& mcd $end
$var integer 32 {& largeout $end
$var integer 32 |& i $end
$var wire 1 }& rd0 $end
$var wire 1 ~& wr0 $end
$var wire 1 !' rd1 $end
$var wire 1 "' wr1 $end
$var wire 1 #' data_out_1c [15] $end
$var wire 1 $' data_out_1c [14] $end
$var wire 1 %' data_out_1c [13] $end
$var wire 1 &' data_out_1c [12] $end
$var wire 1 '' data_out_1c [11] $end
$var wire 1 (' data_out_1c [10] $end
$var wire 1 )' data_out_1c [9] $end
$var wire 1 *' data_out_1c [8] $end
$var wire 1 +' data_out_1c [7] $end
$var wire 1 ,' data_out_1c [6] $end
$var wire 1 -' data_out_1c [5] $end
$var wire 1 .' data_out_1c [4] $end
$var wire 1 /' data_out_1c [3] $end
$var wire 1 0' data_out_1c [2] $end
$var wire 1 1' data_out_1c [1] $end
$var wire 1 2' data_out_1c [0] $end
$var wire 1 3' rd2 $end
$var wire 1 4' wr2 $end
$var wire 1 5' rd3 $end
$var wire 1 6' wr3 $end
$var wire 1 7' busy $end

$scope module ff0 $end
$var wire 1 !' q $end
$var wire 1 }& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8' state $end
$upscope $end

$scope module ff1 $end
$var wire 1 "' q $end
$var wire 1 ~& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9' state $end
$upscope $end

$scope module ff2 $end
$var wire 1 3' q $end
$var wire 1 !' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :' state $end
$upscope $end

$scope module ff3 $end
$var wire 1 4' q $end
$var wire 1 "' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;' state $end
$upscope $end

$scope module ff4 $end
$var wire 1 5' q $end
$var wire 1 3' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <' state $end
$upscope $end

$scope module ff5 $end
$var wire 1 6' q $end
$var wire 1 4' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =' state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 ]& q $end
$var wire 1 b" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >' state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 ^& q $end
$var wire 1 c" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?' state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 _& q $end
$var wire 1 d" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @' state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 `& q $end
$var wire 1 e" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A' state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 a& q $end
$var wire 1 f" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B' state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 b& q $end
$var wire 1 g" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C' state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 c& q $end
$var wire 1 h" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D' state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 d& q $end
$var wire 1 i" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E' state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 e& q $end
$var wire 1 j" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F' state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 f& q $end
$var wire 1 k" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G' state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 g& q $end
$var wire 1 l" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H' state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 h& q $end
$var wire 1 m" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I' state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 i& q $end
$var wire 1 n" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J' state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 j& q $end
$var wire 1 B" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K' state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 k& q $end
$var wire 1 C" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L' state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 l& q $end
$var wire 1 D" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M' state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 m& q $end
$var wire 1 E" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N' state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 n& q $end
$var wire 1 F" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O' state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 o& q $end
$var wire 1 G" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P' state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 p& q $end
$var wire 1 H" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q' state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 q& q $end
$var wire 1 I" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R' state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 r& q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S' state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 s& q $end
$var wire 1 K" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T' state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 t& q $end
$var wire 1 L" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U' state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 u& q $end
$var wire 1 M" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V' state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 v& q $end
$var wire 1 N" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W' state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 w& q $end
$var wire 1 O" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X' state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 x& q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y' state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 y& q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z' state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 ^% q $end
$var wire 1 #' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [' state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 _% q $end
$var wire 1 $' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \' state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 `% q $end
$var wire 1 %' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]' state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 a% q $end
$var wire 1 &' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^' state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 b% q $end
$var wire 1 '' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _' state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 c% q $end
$var wire 1 (' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `' state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 d% q $end
$var wire 1 )' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a' state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 e% q $end
$var wire 1 *' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b' state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 f% q $end
$var wire 1 +' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c' state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 g% q $end
$var wire 1 ,' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d' state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 h% q $end
$var wire 1 -' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e' state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 i% q $end
$var wire 1 .' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f' state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 j% q $end
$var wire 1 /' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g' state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 k% q $end
$var wire 1 0' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h' state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 l% q $end
$var wire 1 1' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i' state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 m% q $end
$var wire 1 2' d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j' state $end
$upscope $end
$upscope $end

$scope module m1 $end
$var wire 1 n% data_out [15] $end
$var wire 1 o% data_out [14] $end
$var wire 1 p% data_out [13] $end
$var wire 1 q% data_out [12] $end
$var wire 1 r% data_out [11] $end
$var wire 1 s% data_out [10] $end
$var wire 1 t% data_out [9] $end
$var wire 1 u% data_out [8] $end
$var wire 1 v% data_out [7] $end
$var wire 1 w% data_out [6] $end
$var wire 1 x% data_out [5] $end
$var wire 1 y% data_out [4] $end
$var wire 1 z% data_out [3] $end
$var wire 1 {% data_out [2] $end
$var wire 1 |% data_out [1] $end
$var wire 1 }% data_out [0] $end
$var wire 1 I& err $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 b" addr [12] $end
$var wire 1 c" addr [11] $end
$var wire 1 d" addr [10] $end
$var wire 1 e" addr [9] $end
$var wire 1 f" addr [8] $end
$var wire 1 g" addr [7] $end
$var wire 1 h" addr [6] $end
$var wire 1 i" addr [5] $end
$var wire 1 j" addr [4] $end
$var wire 1 k" addr [3] $end
$var wire 1 l" addr [2] $end
$var wire 1 m" addr [1] $end
$var wire 1 n" addr [0] $end
$var wire 1 t" wr $end
$var wire 1 s" rd $end
$var wire 1 F& enable $end
$var wire 1 { create_dump $end
$var wire 1 k' bank_id [1] $end
$var wire 1 l' bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m' loaded $end
$var reg 16 n' largest [15:0] $end
$var wire 1 o' addr_1c [13] $end
$var wire 1 p' addr_1c [12] $end
$var wire 1 q' addr_1c [11] $end
$var wire 1 r' addr_1c [10] $end
$var wire 1 s' addr_1c [9] $end
$var wire 1 t' addr_1c [8] $end
$var wire 1 u' addr_1c [7] $end
$var wire 1 v' addr_1c [6] $end
$var wire 1 w' addr_1c [5] $end
$var wire 1 x' addr_1c [4] $end
$var wire 1 y' addr_1c [3] $end
$var wire 1 z' addr_1c [2] $end
$var wire 1 {' addr_1c [1] $end
$var wire 1 |' addr_1c [0] $end
$var wire 1 }' data_in_1c [15] $end
$var wire 1 ~' data_in_1c [14] $end
$var wire 1 !( data_in_1c [13] $end
$var wire 1 "( data_in_1c [12] $end
$var wire 1 #( data_in_1c [11] $end
$var wire 1 $( data_in_1c [10] $end
$var wire 1 %( data_in_1c [9] $end
$var wire 1 &( data_in_1c [8] $end
$var wire 1 '( data_in_1c [7] $end
$var wire 1 (( data_in_1c [6] $end
$var wire 1 )( data_in_1c [5] $end
$var wire 1 *( data_in_1c [4] $end
$var wire 1 +( data_in_1c [3] $end
$var wire 1 ,( data_in_1c [2] $end
$var wire 1 -( data_in_1c [1] $end
$var wire 1 .( data_in_1c [0] $end
$var integer 32 /( mcd $end
$var integer 32 0( largeout $end
$var integer 32 1( i $end
$var wire 1 2( rd0 $end
$var wire 1 3( wr0 $end
$var wire 1 4( rd1 $end
$var wire 1 5( wr1 $end
$var wire 1 6( data_out_1c [15] $end
$var wire 1 7( data_out_1c [14] $end
$var wire 1 8( data_out_1c [13] $end
$var wire 1 9( data_out_1c [12] $end
$var wire 1 :( data_out_1c [11] $end
$var wire 1 ;( data_out_1c [10] $end
$var wire 1 <( data_out_1c [9] $end
$var wire 1 =( data_out_1c [8] $end
$var wire 1 >( data_out_1c [7] $end
$var wire 1 ?( data_out_1c [6] $end
$var wire 1 @( data_out_1c [5] $end
$var wire 1 A( data_out_1c [4] $end
$var wire 1 B( data_out_1c [3] $end
$var wire 1 C( data_out_1c [2] $end
$var wire 1 D( data_out_1c [1] $end
$var wire 1 E( data_out_1c [0] $end
$var wire 1 F( rd2 $end
$var wire 1 G( wr2 $end
$var wire 1 H( rd3 $end
$var wire 1 I( wr3 $end
$var wire 1 J( busy $end

$scope module ff0 $end
$var wire 1 4( q $end
$var wire 1 2( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K( state $end
$upscope $end

$scope module ff1 $end
$var wire 1 5( q $end
$var wire 1 3( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L( state $end
$upscope $end

$scope module ff2 $end
$var wire 1 F( q $end
$var wire 1 4( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M( state $end
$upscope $end

$scope module ff3 $end
$var wire 1 G( q $end
$var wire 1 5( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N( state $end
$upscope $end

$scope module ff4 $end
$var wire 1 H( q $end
$var wire 1 F( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O( state $end
$upscope $end

$scope module ff5 $end
$var wire 1 I( q $end
$var wire 1 G( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P( state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 p' q $end
$var wire 1 b" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q( state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 q' q $end
$var wire 1 c" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 R( state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 r' q $end
$var wire 1 d" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S( state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 s' q $end
$var wire 1 e" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T( state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 t' q $end
$var wire 1 f" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U( state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 u' q $end
$var wire 1 g" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V( state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 v' q $end
$var wire 1 h" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W( state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 w' q $end
$var wire 1 i" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X( state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 x' q $end
$var wire 1 j" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y( state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 y' q $end
$var wire 1 k" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z( state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 z' q $end
$var wire 1 l" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [( state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 {' q $end
$var wire 1 m" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \( state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 |' q $end
$var wire 1 n" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]( state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 }' q $end
$var wire 1 B" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^( state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 ~' q $end
$var wire 1 C" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _( state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 !( q $end
$var wire 1 D" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `( state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 "( q $end
$var wire 1 E" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a( state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 #( q $end
$var wire 1 F" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b( state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 $( q $end
$var wire 1 G" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c( state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 %( q $end
$var wire 1 H" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d( state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 &( q $end
$var wire 1 I" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e( state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 '( q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f( state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 (( q $end
$var wire 1 K" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g( state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 )( q $end
$var wire 1 L" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h( state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 *( q $end
$var wire 1 M" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i( state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 +( q $end
$var wire 1 N" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j( state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 ,( q $end
$var wire 1 O" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k( state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 -( q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l( state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 .( q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m( state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 n% q $end
$var wire 1 6( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n( state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 o% q $end
$var wire 1 7( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o( state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 p% q $end
$var wire 1 8( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p( state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 q% q $end
$var wire 1 9( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q( state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 r% q $end
$var wire 1 :( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r( state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 s% q $end
$var wire 1 ;( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s( state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 t% q $end
$var wire 1 <( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t( state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 u% q $end
$var wire 1 =( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u( state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 v% q $end
$var wire 1 >( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v( state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 w% q $end
$var wire 1 ?( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w( state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 x% q $end
$var wire 1 @( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x( state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 y% q $end
$var wire 1 A( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y( state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 z% q $end
$var wire 1 B( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z( state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 {% q $end
$var wire 1 C( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {( state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 |% q $end
$var wire 1 D( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |( state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 }% q $end
$var wire 1 E( d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }( state $end
$upscope $end
$upscope $end

$scope module m2 $end
$var wire 1 ~% data_out [15] $end
$var wire 1 !& data_out [14] $end
$var wire 1 "& data_out [13] $end
$var wire 1 #& data_out [12] $end
$var wire 1 $& data_out [11] $end
$var wire 1 %& data_out [10] $end
$var wire 1 && data_out [9] $end
$var wire 1 '& data_out [8] $end
$var wire 1 (& data_out [7] $end
$var wire 1 )& data_out [6] $end
$var wire 1 *& data_out [5] $end
$var wire 1 +& data_out [4] $end
$var wire 1 ,& data_out [3] $end
$var wire 1 -& data_out [2] $end
$var wire 1 .& data_out [1] $end
$var wire 1 /& data_out [0] $end
$var wire 1 J& err $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 b" addr [12] $end
$var wire 1 c" addr [11] $end
$var wire 1 d" addr [10] $end
$var wire 1 e" addr [9] $end
$var wire 1 f" addr [8] $end
$var wire 1 g" addr [7] $end
$var wire 1 h" addr [6] $end
$var wire 1 i" addr [5] $end
$var wire 1 j" addr [4] $end
$var wire 1 k" addr [3] $end
$var wire 1 l" addr [2] $end
$var wire 1 m" addr [1] $end
$var wire 1 n" addr [0] $end
$var wire 1 t" wr $end
$var wire 1 s" rd $end
$var wire 1 E& enable $end
$var wire 1 { create_dump $end
$var wire 1 ~( bank_id [1] $end
$var wire 1 !) bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ") loaded $end
$var reg 16 #) largest [15:0] $end
$var wire 1 $) addr_1c [13] $end
$var wire 1 %) addr_1c [12] $end
$var wire 1 &) addr_1c [11] $end
$var wire 1 ') addr_1c [10] $end
$var wire 1 () addr_1c [9] $end
$var wire 1 )) addr_1c [8] $end
$var wire 1 *) addr_1c [7] $end
$var wire 1 +) addr_1c [6] $end
$var wire 1 ,) addr_1c [5] $end
$var wire 1 -) addr_1c [4] $end
$var wire 1 .) addr_1c [3] $end
$var wire 1 /) addr_1c [2] $end
$var wire 1 0) addr_1c [1] $end
$var wire 1 1) addr_1c [0] $end
$var wire 1 2) data_in_1c [15] $end
$var wire 1 3) data_in_1c [14] $end
$var wire 1 4) data_in_1c [13] $end
$var wire 1 5) data_in_1c [12] $end
$var wire 1 6) data_in_1c [11] $end
$var wire 1 7) data_in_1c [10] $end
$var wire 1 8) data_in_1c [9] $end
$var wire 1 9) data_in_1c [8] $end
$var wire 1 :) data_in_1c [7] $end
$var wire 1 ;) data_in_1c [6] $end
$var wire 1 <) data_in_1c [5] $end
$var wire 1 =) data_in_1c [4] $end
$var wire 1 >) data_in_1c [3] $end
$var wire 1 ?) data_in_1c [2] $end
$var wire 1 @) data_in_1c [1] $end
$var wire 1 A) data_in_1c [0] $end
$var integer 32 B) mcd $end
$var integer 32 C) largeout $end
$var integer 32 D) i $end
$var wire 1 E) rd0 $end
$var wire 1 F) wr0 $end
$var wire 1 G) rd1 $end
$var wire 1 H) wr1 $end
$var wire 1 I) data_out_1c [15] $end
$var wire 1 J) data_out_1c [14] $end
$var wire 1 K) data_out_1c [13] $end
$var wire 1 L) data_out_1c [12] $end
$var wire 1 M) data_out_1c [11] $end
$var wire 1 N) data_out_1c [10] $end
$var wire 1 O) data_out_1c [9] $end
$var wire 1 P) data_out_1c [8] $end
$var wire 1 Q) data_out_1c [7] $end
$var wire 1 R) data_out_1c [6] $end
$var wire 1 S) data_out_1c [5] $end
$var wire 1 T) data_out_1c [4] $end
$var wire 1 U) data_out_1c [3] $end
$var wire 1 V) data_out_1c [2] $end
$var wire 1 W) data_out_1c [1] $end
$var wire 1 X) data_out_1c [0] $end
$var wire 1 Y) rd2 $end
$var wire 1 Z) wr2 $end
$var wire 1 [) rd3 $end
$var wire 1 \) wr3 $end
$var wire 1 ]) busy $end

$scope module ff0 $end
$var wire 1 G) q $end
$var wire 1 E) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^) state $end
$upscope $end

$scope module ff1 $end
$var wire 1 H) q $end
$var wire 1 F) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _) state $end
$upscope $end

$scope module ff2 $end
$var wire 1 Y) q $end
$var wire 1 G) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `) state $end
$upscope $end

$scope module ff3 $end
$var wire 1 Z) q $end
$var wire 1 H) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a) state $end
$upscope $end

$scope module ff4 $end
$var wire 1 [) q $end
$var wire 1 Y) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b) state $end
$upscope $end

$scope module ff5 $end
$var wire 1 \) q $end
$var wire 1 Z) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c) state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 %) q $end
$var wire 1 b" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d) state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 &) q $end
$var wire 1 c" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e) state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 ') q $end
$var wire 1 d" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f) state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 () q $end
$var wire 1 e" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 g) state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 )) q $end
$var wire 1 f" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h) state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 *) q $end
$var wire 1 g" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i) state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 +) q $end
$var wire 1 h" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j) state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 ,) q $end
$var wire 1 i" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k) state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 -) q $end
$var wire 1 j" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l) state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 .) q $end
$var wire 1 k" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m) state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 /) q $end
$var wire 1 l" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n) state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 0) q $end
$var wire 1 m" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o) state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 1) q $end
$var wire 1 n" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p) state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 2) q $end
$var wire 1 B" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q) state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 3) q $end
$var wire 1 C" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r) state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 4) q $end
$var wire 1 D" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s) state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 5) q $end
$var wire 1 E" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t) state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 6) q $end
$var wire 1 F" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u) state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 7) q $end
$var wire 1 G" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v) state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 8) q $end
$var wire 1 H" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w) state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 9) q $end
$var wire 1 I" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x) state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 :) q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y) state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 ;) q $end
$var wire 1 K" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z) state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 <) q $end
$var wire 1 L" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {) state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 =) q $end
$var wire 1 M" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |) state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 >) q $end
$var wire 1 N" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }) state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 ?) q $end
$var wire 1 O" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~) state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 @) q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !* state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 A) q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "* state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 ~% q $end
$var wire 1 I) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #* state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 !& q $end
$var wire 1 J) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $* state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 "& q $end
$var wire 1 K) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %* state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 #& q $end
$var wire 1 L) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &* state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 $& q $end
$var wire 1 M) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '* state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 %& q $end
$var wire 1 N) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (* state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 && q $end
$var wire 1 O) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )* state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 '& q $end
$var wire 1 P) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ** state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 (& q $end
$var wire 1 Q) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +* state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 )& q $end
$var wire 1 R) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,* state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 *& q $end
$var wire 1 S) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -* state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 +& q $end
$var wire 1 T) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .* state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 ,& q $end
$var wire 1 U) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /* state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 -& q $end
$var wire 1 V) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0* state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 .& q $end
$var wire 1 W) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1* state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 /& q $end
$var wire 1 X) d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2* state $end
$upscope $end
$upscope $end

$scope module m3 $end
$var wire 1 0& data_out [15] $end
$var wire 1 1& data_out [14] $end
$var wire 1 2& data_out [13] $end
$var wire 1 3& data_out [12] $end
$var wire 1 4& data_out [11] $end
$var wire 1 5& data_out [10] $end
$var wire 1 6& data_out [9] $end
$var wire 1 7& data_out [8] $end
$var wire 1 8& data_out [7] $end
$var wire 1 9& data_out [6] $end
$var wire 1 :& data_out [5] $end
$var wire 1 ;& data_out [4] $end
$var wire 1 <& data_out [3] $end
$var wire 1 =& data_out [2] $end
$var wire 1 >& data_out [1] $end
$var wire 1 ?& data_out [0] $end
$var wire 1 K& err $end
$var wire 1 B" data_in [15] $end
$var wire 1 C" data_in [14] $end
$var wire 1 D" data_in [13] $end
$var wire 1 E" data_in [12] $end
$var wire 1 F" data_in [11] $end
$var wire 1 G" data_in [10] $end
$var wire 1 H" data_in [9] $end
$var wire 1 I" data_in [8] $end
$var wire 1 J" data_in [7] $end
$var wire 1 K" data_in [6] $end
$var wire 1 L" data_in [5] $end
$var wire 1 M" data_in [4] $end
$var wire 1 N" data_in [3] $end
$var wire 1 O" data_in [2] $end
$var wire 1 P" data_in [1] $end
$var wire 1 Q" data_in [0] $end
$var wire 1 b" addr [12] $end
$var wire 1 c" addr [11] $end
$var wire 1 d" addr [10] $end
$var wire 1 e" addr [9] $end
$var wire 1 f" addr [8] $end
$var wire 1 g" addr [7] $end
$var wire 1 h" addr [6] $end
$var wire 1 i" addr [5] $end
$var wire 1 j" addr [4] $end
$var wire 1 k" addr [3] $end
$var wire 1 l" addr [2] $end
$var wire 1 m" addr [1] $end
$var wire 1 n" addr [0] $end
$var wire 1 t" wr $end
$var wire 1 s" rd $end
$var wire 1 D& enable $end
$var wire 1 { create_dump $end
$var wire 1 3* bank_id [1] $end
$var wire 1 4* bank_id [0] $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5* loaded $end
$var reg 16 6* largest [15:0] $end
$var wire 1 7* addr_1c [13] $end
$var wire 1 8* addr_1c [12] $end
$var wire 1 9* addr_1c [11] $end
$var wire 1 :* addr_1c [10] $end
$var wire 1 ;* addr_1c [9] $end
$var wire 1 <* addr_1c [8] $end
$var wire 1 =* addr_1c [7] $end
$var wire 1 >* addr_1c [6] $end
$var wire 1 ?* addr_1c [5] $end
$var wire 1 @* addr_1c [4] $end
$var wire 1 A* addr_1c [3] $end
$var wire 1 B* addr_1c [2] $end
$var wire 1 C* addr_1c [1] $end
$var wire 1 D* addr_1c [0] $end
$var wire 1 E* data_in_1c [15] $end
$var wire 1 F* data_in_1c [14] $end
$var wire 1 G* data_in_1c [13] $end
$var wire 1 H* data_in_1c [12] $end
$var wire 1 I* data_in_1c [11] $end
$var wire 1 J* data_in_1c [10] $end
$var wire 1 K* data_in_1c [9] $end
$var wire 1 L* data_in_1c [8] $end
$var wire 1 M* data_in_1c [7] $end
$var wire 1 N* data_in_1c [6] $end
$var wire 1 O* data_in_1c [5] $end
$var wire 1 P* data_in_1c [4] $end
$var wire 1 Q* data_in_1c [3] $end
$var wire 1 R* data_in_1c [2] $end
$var wire 1 S* data_in_1c [1] $end
$var wire 1 T* data_in_1c [0] $end
$var integer 32 U* mcd $end
$var integer 32 V* largeout $end
$var integer 32 W* i $end
$var wire 1 X* rd0 $end
$var wire 1 Y* wr0 $end
$var wire 1 Z* rd1 $end
$var wire 1 [* wr1 $end
$var wire 1 \* data_out_1c [15] $end
$var wire 1 ]* data_out_1c [14] $end
$var wire 1 ^* data_out_1c [13] $end
$var wire 1 _* data_out_1c [12] $end
$var wire 1 `* data_out_1c [11] $end
$var wire 1 a* data_out_1c [10] $end
$var wire 1 b* data_out_1c [9] $end
$var wire 1 c* data_out_1c [8] $end
$var wire 1 d* data_out_1c [7] $end
$var wire 1 e* data_out_1c [6] $end
$var wire 1 f* data_out_1c [5] $end
$var wire 1 g* data_out_1c [4] $end
$var wire 1 h* data_out_1c [3] $end
$var wire 1 i* data_out_1c [2] $end
$var wire 1 j* data_out_1c [1] $end
$var wire 1 k* data_out_1c [0] $end
$var wire 1 l* rd2 $end
$var wire 1 m* wr2 $end
$var wire 1 n* rd3 $end
$var wire 1 o* wr3 $end
$var wire 1 p* busy $end

$scope module ff0 $end
$var wire 1 Z* q $end
$var wire 1 X* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q* state $end
$upscope $end

$scope module ff1 $end
$var wire 1 [* q $end
$var wire 1 Y* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r* state $end
$upscope $end

$scope module ff2 $end
$var wire 1 l* q $end
$var wire 1 Z* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s* state $end
$upscope $end

$scope module ff3 $end
$var wire 1 m* q $end
$var wire 1 [* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t* state $end
$upscope $end

$scope module ff4 $end
$var wire 1 n* q $end
$var wire 1 l* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u* state $end
$upscope $end

$scope module ff5 $end
$var wire 1 o* q $end
$var wire 1 m* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v* state $end
$upscope $end

$scope module reg0[12] $end
$var wire 1 8* q $end
$var wire 1 b" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w* state $end
$upscope $end

$scope module reg0[11] $end
$var wire 1 9* q $end
$var wire 1 c" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 x* state $end
$upscope $end

$scope module reg0[10] $end
$var wire 1 :* q $end
$var wire 1 d" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 y* state $end
$upscope $end

$scope module reg0[9] $end
$var wire 1 ;* q $end
$var wire 1 e" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 z* state $end
$upscope $end

$scope module reg0[8] $end
$var wire 1 <* q $end
$var wire 1 f" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {* state $end
$upscope $end

$scope module reg0[7] $end
$var wire 1 =* q $end
$var wire 1 g" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 |* state $end
$upscope $end

$scope module reg0[6] $end
$var wire 1 >* q $end
$var wire 1 h" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 }* state $end
$upscope $end

$scope module reg0[5] $end
$var wire 1 ?* q $end
$var wire 1 i" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ~* state $end
$upscope $end

$scope module reg0[4] $end
$var wire 1 @* q $end
$var wire 1 j" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !+ state $end
$upscope $end

$scope module reg0[3] $end
$var wire 1 A* q $end
$var wire 1 k" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 "+ state $end
$upscope $end

$scope module reg0[2] $end
$var wire 1 B* q $end
$var wire 1 l" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #+ state $end
$upscope $end

$scope module reg0[1] $end
$var wire 1 C* q $end
$var wire 1 m" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $+ state $end
$upscope $end

$scope module reg0[0] $end
$var wire 1 D* q $end
$var wire 1 n" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %+ state $end
$upscope $end

$scope module reg1[15] $end
$var wire 1 E* q $end
$var wire 1 B" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &+ state $end
$upscope $end

$scope module reg1[14] $end
$var wire 1 F* q $end
$var wire 1 C" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '+ state $end
$upscope $end

$scope module reg1[13] $end
$var wire 1 G* q $end
$var wire 1 D" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (+ state $end
$upscope $end

$scope module reg1[12] $end
$var wire 1 H* q $end
$var wire 1 E" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )+ state $end
$upscope $end

$scope module reg1[11] $end
$var wire 1 I* q $end
$var wire 1 F" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 *+ state $end
$upscope $end

$scope module reg1[10] $end
$var wire 1 J* q $end
$var wire 1 G" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ++ state $end
$upscope $end

$scope module reg1[9] $end
$var wire 1 K* q $end
$var wire 1 H" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,+ state $end
$upscope $end

$scope module reg1[8] $end
$var wire 1 L* q $end
$var wire 1 I" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -+ state $end
$upscope $end

$scope module reg1[7] $end
$var wire 1 M* q $end
$var wire 1 J" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .+ state $end
$upscope $end

$scope module reg1[6] $end
$var wire 1 N* q $end
$var wire 1 K" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 /+ state $end
$upscope $end

$scope module reg1[5] $end
$var wire 1 O* q $end
$var wire 1 L" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0+ state $end
$upscope $end

$scope module reg1[4] $end
$var wire 1 P* q $end
$var wire 1 M" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1+ state $end
$upscope $end

$scope module reg1[3] $end
$var wire 1 Q* q $end
$var wire 1 N" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2+ state $end
$upscope $end

$scope module reg1[2] $end
$var wire 1 R* q $end
$var wire 1 O" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3+ state $end
$upscope $end

$scope module reg1[1] $end
$var wire 1 S* q $end
$var wire 1 P" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4+ state $end
$upscope $end

$scope module reg1[0] $end
$var wire 1 T* q $end
$var wire 1 Q" d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5+ state $end
$upscope $end

$scope module reg2[15] $end
$var wire 1 0& q $end
$var wire 1 \* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6+ state $end
$upscope $end

$scope module reg2[14] $end
$var wire 1 1& q $end
$var wire 1 ]* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 7+ state $end
$upscope $end

$scope module reg2[13] $end
$var wire 1 2& q $end
$var wire 1 ^* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 8+ state $end
$upscope $end

$scope module reg2[12] $end
$var wire 1 3& q $end
$var wire 1 _* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 9+ state $end
$upscope $end

$scope module reg2[11] $end
$var wire 1 4& q $end
$var wire 1 `* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 :+ state $end
$upscope $end

$scope module reg2[10] $end
$var wire 1 5& q $end
$var wire 1 a* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ;+ state $end
$upscope $end

$scope module reg2[9] $end
$var wire 1 6& q $end
$var wire 1 b* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 <+ state $end
$upscope $end

$scope module reg2[8] $end
$var wire 1 7& q $end
$var wire 1 c* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 =+ state $end
$upscope $end

$scope module reg2[7] $end
$var wire 1 8& q $end
$var wire 1 d* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 >+ state $end
$upscope $end

$scope module reg2[6] $end
$var wire 1 9& q $end
$var wire 1 e* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ?+ state $end
$upscope $end

$scope module reg2[5] $end
$var wire 1 :& q $end
$var wire 1 f* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 @+ state $end
$upscope $end

$scope module reg2[4] $end
$var wire 1 ;& q $end
$var wire 1 g* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 A+ state $end
$upscope $end

$scope module reg2[3] $end
$var wire 1 <& q $end
$var wire 1 h* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 B+ state $end
$upscope $end

$scope module reg2[2] $end
$var wire 1 =& q $end
$var wire 1 i* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 C+ state $end
$upscope $end

$scope module reg2[1] $end
$var wire 1 >& q $end
$var wire 1 j* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 D+ state $end
$upscope $end

$scope module reg2[0] $end
$var wire 1 ?& q $end
$var wire 1 k* d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 E+ state $end
$upscope $end
$upscope $end

$scope module b0[3] $end
$var wire 1 L& q $end
$var wire 1 D& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 F+ state $end
$upscope $end

$scope module b0[2] $end
$var wire 1 M& q $end
$var wire 1 E& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 G+ state $end
$upscope $end

$scope module b0[1] $end
$var wire 1 N& q $end
$var wire 1 F& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 H+ state $end
$upscope $end

$scope module b0[0] $end
$var wire 1 O& q $end
$var wire 1 G& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 I+ state $end
$upscope $end

$scope module b1[3] $end
$var wire 1 P& q $end
$var wire 1 L& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 J+ state $end
$upscope $end

$scope module b1[2] $end
$var wire 1 Q& q $end
$var wire 1 M& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 K+ state $end
$upscope $end

$scope module b1[1] $end
$var wire 1 R& q $end
$var wire 1 N& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 L+ state $end
$upscope $end

$scope module b1[0] $end
$var wire 1 S& q $end
$var wire 1 O& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 M+ state $end
$upscope $end

$scope module b2[3] $end
$var wire 1 T& q $end
$var wire 1 P& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 N+ state $end
$upscope $end

$scope module b2[2] $end
$var wire 1 U& q $end
$var wire 1 Q& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 O+ state $end
$upscope $end

$scope module b2[1] $end
$var wire 1 V& q $end
$var wire 1 R& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 P+ state $end
$upscope $end

$scope module b2[0] $end
$var wire 1 W& q $end
$var wire 1 S& d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Q+ state $end
$upscope $end
$upscope $end

$scope module control $end
$var parameter 4 R+ IDLE $end
$var parameter 4 S+ COMP_READ $end
$var parameter 4 T+ MEM_READ $end
$var parameter 4 U+ MEM_READ_STALL $end
$var parameter 4 V+ ACCESS_WRITE $end
$var parameter 4 W+ COMP_WRITE $end
$var parameter 4 X+ MEM_WRITE_0 $end
$var parameter 4 Y+ MEM_WRITE_1 $end
$var parameter 4 Z+ MEM_WRITE_2 $end
$var parameter 4 [+ MEM_WRITE_3 $end
$var parameter 4 \+ ACCESS_READ $end
$var parameter 4 ]+ EVICT_WRITE_0 $end
$var parameter 4 ^+ EVICT_WRITE_1 $end
$var parameter 4 _+ EVICT_WRITE_2 $end
$var parameter 4 `+ EVICT_WRITE_3 $end
$var wire 1 Y Addr [15] $end
$var wire 1 Z Addr [14] $end
$var wire 1 [ Addr [13] $end
$var wire 1 \ Addr [12] $end
$var wire 1 ] Addr [11] $end
$var wire 1 ^ Addr [10] $end
$var wire 1 _ Addr [9] $end
$var wire 1 ` Addr [8] $end
$var wire 1 a Addr [7] $end
$var wire 1 b Addr [6] $end
$var wire 1 c Addr [5] $end
$var wire 1 d Addr [4] $end
$var wire 1 e Addr [3] $end
$var wire 1 f Addr [2] $end
$var wire 1 g Addr [1] $end
$var wire 1 h Addr [0] $end
$var wire 1 i DataIn [15] $end
$var wire 1 j DataIn [14] $end
$var wire 1 k DataIn [13] $end
$var wire 1 l DataIn [12] $end
$var wire 1 m DataIn [11] $end
$var wire 1 n DataIn [10] $end
$var wire 1 o DataIn [9] $end
$var wire 1 p DataIn [8] $end
$var wire 1 q DataIn [7] $end
$var wire 1 r DataIn [6] $end
$var wire 1 s DataIn [5] $end
$var wire 1 t DataIn [4] $end
$var wire 1 u DataIn [3] $end
$var wire 1 v DataIn [2] $end
$var wire 1 w DataIn [1] $end
$var wire 1 x DataIn [0] $end
$var wire 1 y Rd $end
$var wire 1 z Wr $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ! DataOut [15] $end
$var wire 1 " DataOut [14] $end
$var wire 1 # DataOut [13] $end
$var wire 1 $ DataOut [12] $end
$var wire 1 % DataOut [11] $end
$var wire 1 & DataOut [10] $end
$var wire 1 ' DataOut [9] $end
$var wire 1 ( DataOut [8] $end
$var wire 1 ) DataOut [7] $end
$var wire 1 * DataOut [6] $end
$var wire 1 + DataOut [5] $end
$var wire 1 , DataOut [4] $end
$var wire 1 - DataOut [3] $end
$var wire 1 . DataOut [2] $end
$var wire 1 / DataOut [1] $end
$var wire 1 0 DataOut [0] $end
$var wire 1 1 Done $end
$var wire 1 2 Stall $end
$var wire 1 : CacheHit $end
$var wire 1 | err $end
$var wire 1 h! c0_tag_out [4] $end
$var wire 1 i! c0_tag_out [3] $end
$var wire 1 j! c0_tag_out [2] $end
$var wire 1 k! c0_tag_out [1] $end
$var wire 1 l! c0_tag_out [0] $end
$var wire 1 8! c0_data_out [15] $end
$var wire 1 9! c0_data_out [14] $end
$var wire 1 :! c0_data_out [13] $end
$var wire 1 ;! c0_data_out [12] $end
$var wire 1 <! c0_data_out [11] $end
$var wire 1 =! c0_data_out [10] $end
$var wire 1 >! c0_data_out [9] $end
$var wire 1 ?! c0_data_out [8] $end
$var wire 1 @! c0_data_out [7] $end
$var wire 1 A! c0_data_out [6] $end
$var wire 1 B! c0_data_out [5] $end
$var wire 1 C! c0_data_out [4] $end
$var wire 1 D! c0_data_out [3] $end
$var wire 1 E! c0_data_out [2] $end
$var wire 1 F! c0_data_out [1] $end
$var wire 1 G! c0_data_out [0] $end
$var wire 1 4" c0_hit $end
$var wire 1 5" c0_dirty $end
$var wire 1 :" c0_valid_out $end
$var wire 1 7" c0_en $end
$var wire 1 9" c0_write $end
$var wire 1 8" c0_compare $end
$var wire 1 6" c0_valid_in $end
$var wire 1 m! c0_tag_in [4] $end
$var wire 1 n! c0_tag_in [3] $end
$var wire 1 o! c0_tag_in [2] $end
$var wire 1 p! c0_tag_in [1] $end
$var wire 1 q! c0_tag_in [0] $end
$var wire 1 |! c0_index [7] $end
$var wire 1 }! c0_index [6] $end
$var wire 1 ~! c0_index [5] $end
$var wire 1 !" c0_index [4] $end
$var wire 1 "" c0_index [3] $end
$var wire 1 #" c0_index [2] $end
$var wire 1 $" c0_index [1] $end
$var wire 1 %" c0_index [0] $end
$var wire 1 ." c0_offset [2] $end
$var wire 1 /" c0_offset [1] $end
$var wire 1 0" c0_offset [0] $end
$var wire 1 (! c0_data_in [15] $end
$var wire 1 )! c0_data_in [14] $end
$var wire 1 *! c0_data_in [13] $end
$var wire 1 +! c0_data_in [12] $end
$var wire 1 ,! c0_data_in [11] $end
$var wire 1 -! c0_data_in [10] $end
$var wire 1 .! c0_data_in [9] $end
$var wire 1 /! c0_data_in [8] $end
$var wire 1 0! c0_data_in [7] $end
$var wire 1 1! c0_data_in [6] $end
$var wire 1 2! c0_data_in [5] $end
$var wire 1 3! c0_data_in [4] $end
$var wire 1 4! c0_data_in [3] $end
$var wire 1 5! c0_data_in [2] $end
$var wire 1 6! c0_data_in [1] $end
$var wire 1 7! c0_data_in [0] $end
$var wire 1 r! c1_tag_out [4] $end
$var wire 1 s! c1_tag_out [3] $end
$var wire 1 t! c1_tag_out [2] $end
$var wire 1 u! c1_tag_out [1] $end
$var wire 1 v! c1_tag_out [0] $end
$var wire 1 X! c1_data_out [15] $end
$var wire 1 Y! c1_data_out [14] $end
$var wire 1 Z! c1_data_out [13] $end
$var wire 1 [! c1_data_out [12] $end
$var wire 1 \! c1_data_out [11] $end
$var wire 1 ]! c1_data_out [10] $end
$var wire 1 ^! c1_data_out [9] $end
$var wire 1 _! c1_data_out [8] $end
$var wire 1 `! c1_data_out [7] $end
$var wire 1 a! c1_data_out [6] $end
$var wire 1 b! c1_data_out [5] $end
$var wire 1 c! c1_data_out [4] $end
$var wire 1 d! c1_data_out [3] $end
$var wire 1 e! c1_data_out [2] $end
$var wire 1 f! c1_data_out [1] $end
$var wire 1 g! c1_data_out [0] $end
$var wire 1 ;" c1_hit $end
$var wire 1 <" c1_dirty $end
$var wire 1 A" c1_valid_out $end
$var wire 1 >" c1_en $end
$var wire 1 @" c1_write $end
$var wire 1 ?" c1_compare $end
$var wire 1 =" c1_valid_in $end
$var wire 1 w! c1_tag_in [4] $end
$var wire 1 x! c1_tag_in [3] $end
$var wire 1 y! c1_tag_in [2] $end
$var wire 1 z! c1_tag_in [1] $end
$var wire 1 {! c1_tag_in [0] $end
$var wire 1 &" c1_index [7] $end
$var wire 1 '" c1_index [6] $end
$var wire 1 (" c1_index [5] $end
$var wire 1 )" c1_index [4] $end
$var wire 1 *" c1_index [3] $end
$var wire 1 +" c1_index [2] $end
$var wire 1 ," c1_index [1] $end
$var wire 1 -" c1_index [0] $end
$var wire 1 1" c1_offset [2] $end
$var wire 1 2" c1_offset [1] $end
$var wire 1 3" c1_offset [0] $end
$var wire 1 H! c1_data_in [15] $end
$var wire 1 I! c1_data_in [14] $end
$var wire 1 J! c1_data_in [13] $end
$var wire 1 K! c1_data_in [12] $end
$var wire 1 L! c1_data_in [11] $end
$var wire 1 M! c1_data_in [10] $end
$var wire 1 N! c1_data_in [9] $end
$var wire 1 O! c1_data_in [8] $end
$var wire 1 P! c1_data_in [7] $end
$var wire 1 Q! c1_data_in [6] $end
$var wire 1 R! c1_data_in [5] $end
$var wire 1 S! c1_data_in [4] $end
$var wire 1 T! c1_data_in [3] $end
$var wire 1 U! c1_data_in [2] $end
$var wire 1 V! c1_data_in [1] $end
$var wire 1 W! c1_data_in [0] $end
$var wire 1 R" mem_data_out [15] $end
$var wire 1 S" mem_data_out [14] $end
$var wire 1 T" mem_data_out [13] $end
$var wire 1 U" mem_data_out [12] $end
$var wire 1 V" mem_data_out [11] $end
$var wire 1 W" mem_data_out [10] $end
$var wire 1 X" mem_data_out [9] $end
$var wire 1 Y" mem_data_out [8] $end
$var wire 1 Z" mem_data_out [7] $end
$var wire 1 [" mem_data_out [6] $end
$var wire 1 \" mem_data_out [5] $end
$var wire 1 ]" mem_data_out [4] $end
$var wire 1 ^" mem_data_out [3] $end
$var wire 1 _" mem_data_out [2] $end
$var wire 1 `" mem_data_out [1] $end
$var wire 1 a" mem_data_out [0] $end
$var wire 1 r" mem_stall $end
$var wire 1 u" mem_busy [3] $end
$var wire 1 v" mem_busy [2] $end
$var wire 1 w" mem_busy [1] $end
$var wire 1 x" mem_busy [0] $end
$var wire 1 b" mem_addr [15] $end
$var wire 1 c" mem_addr [14] $end
$var wire 1 d" mem_addr [13] $end
$var wire 1 e" mem_addr [12] $end
$var wire 1 f" mem_addr [11] $end
$var wire 1 g" mem_addr [10] $end
$var wire 1 h" mem_addr [9] $end
$var wire 1 i" mem_addr [8] $end
$var wire 1 j" mem_addr [7] $end
$var wire 1 k" mem_addr [6] $end
$var wire 1 l" mem_addr [5] $end
$var wire 1 m" mem_addr [4] $end
$var wire 1 n" mem_addr [3] $end
$var wire 1 o" mem_addr [2] $end
$var wire 1 p" mem_addr [1] $end
$var wire 1 q" mem_addr [0] $end
$var wire 1 B" mem_data_in [15] $end
$var wire 1 C" mem_data_in [14] $end
$var wire 1 D" mem_data_in [13] $end
$var wire 1 E" mem_data_in [12] $end
$var wire 1 F" mem_data_in [11] $end
$var wire 1 G" mem_data_in [10] $end
$var wire 1 H" mem_data_in [9] $end
$var wire 1 I" mem_data_in [8] $end
$var wire 1 J" mem_data_in [7] $end
$var wire 1 K" mem_data_in [6] $end
$var wire 1 L" mem_data_in [5] $end
$var wire 1 M" mem_data_in [4] $end
$var wire 1 N" mem_data_in [3] $end
$var wire 1 O" mem_data_in [2] $end
$var wire 1 P" mem_data_in [1] $end
$var wire 1 Q" mem_data_in [0] $end
$var wire 1 s" mem_read $end
$var wire 1 t" mem_write $end
$var wire 1 a+ mem_read_count [3] $end
$var wire 1 b+ mem_read_count [2] $end
$var wire 1 c+ mem_read_count [1] $end
$var wire 1 d+ mem_read_count [0] $end
$var wire 1 e+ evict_write_count [3] $end
$var wire 1 f+ evict_write_count [2] $end
$var wire 1 g+ evict_write_count [1] $end
$var wire 1 h+ evict_write_count [0] $end
$var wire 1 i+ mystate [3] $end
$var wire 1 j+ mystate [2] $end
$var wire 1 k+ mystate [1] $end
$var wire 1 l+ mystate [0] $end
$var wire 1 m+ mystate_n [3] $end
$var wire 1 n+ mystate_n [2] $end
$var wire 1 o+ mystate_n [1] $end
$var wire 1 p+ mystate_n [0] $end
$var wire 1 q+ write $end
$var wire 1 r+ read $end
$var wire 1 s+ c0_hit_signal $end
$var wire 1 t+ c1_hit_signal $end
$var wire 1 u+ complete $end
$var wire 1 v+ evict_complete $end
$var wire 1 w+ c0_dirty_signal $end
$var wire 1 x+ c1_dirty_signal $end
$var wire 1 y+ c0_valid_out_signal $end
$var wire 1 z+ c1_valid_out_signal $end
$var wire 1 {+ victim $end
$var wire 1 |+ victim_cache_dirty $end
$var wire 1 }+ victim_cache_dirty_signal $end
$var wire 1 ~+ victimway_en $end
$var wire 1 !, c0_data_out_reg [15] $end
$var wire 1 ", c0_data_out_reg [14] $end
$var wire 1 #, c0_data_out_reg [13] $end
$var wire 1 $, c0_data_out_reg [12] $end
$var wire 1 %, c0_data_out_reg [11] $end
$var wire 1 &, c0_data_out_reg [10] $end
$var wire 1 ', c0_data_out_reg [9] $end
$var wire 1 (, c0_data_out_reg [8] $end
$var wire 1 ), c0_data_out_reg [7] $end
$var wire 1 *, c0_data_out_reg [6] $end
$var wire 1 +, c0_data_out_reg [5] $end
$var wire 1 ,, c0_data_out_reg [4] $end
$var wire 1 -, c0_data_out_reg [3] $end
$var wire 1 ., c0_data_out_reg [2] $end
$var wire 1 /, c0_data_out_reg [1] $end
$var wire 1 0, c0_data_out_reg [0] $end
$var wire 1 1, c1_data_out_reg [15] $end
$var wire 1 2, c1_data_out_reg [14] $end
$var wire 1 3, c1_data_out_reg [13] $end
$var wire 1 4, c1_data_out_reg [12] $end
$var wire 1 5, c1_data_out_reg [11] $end
$var wire 1 6, c1_data_out_reg [10] $end
$var wire 1 7, c1_data_out_reg [9] $end
$var wire 1 8, c1_data_out_reg [8] $end
$var wire 1 9, c1_data_out_reg [7] $end
$var wire 1 :, c1_data_out_reg [6] $end
$var wire 1 ;, c1_data_out_reg [5] $end
$var wire 1 <, c1_data_out_reg [4] $end
$var wire 1 =, c1_data_out_reg [3] $end
$var wire 1 >, c1_data_out_reg [2] $end
$var wire 1 ?, c1_data_out_reg [1] $end
$var wire 1 @, c1_data_out_reg [0] $end
$var wire 1 A, mem_data_out_reg [15] $end
$var wire 1 B, mem_data_out_reg [14] $end
$var wire 1 C, mem_data_out_reg [13] $end
$var wire 1 D, mem_data_out_reg [12] $end
$var wire 1 E, mem_data_out_reg [11] $end
$var wire 1 F, mem_data_out_reg [10] $end
$var wire 1 G, mem_data_out_reg [9] $end
$var wire 1 H, mem_data_out_reg [8] $end
$var wire 1 I, mem_data_out_reg [7] $end
$var wire 1 J, mem_data_out_reg [6] $end
$var wire 1 K, mem_data_out_reg [5] $end
$var wire 1 L, mem_data_out_reg [4] $end
$var wire 1 M, mem_data_out_reg [3] $end
$var wire 1 N, mem_data_out_reg [2] $end
$var wire 1 O, mem_data_out_reg [1] $end
$var wire 1 P, mem_data_out_reg [0] $end
$var wire 1 Q, data_out_reg_out [15] $end
$var wire 1 R, data_out_reg_out [14] $end
$var wire 1 S, data_out_reg_out [13] $end
$var wire 1 T, data_out_reg_out [12] $end
$var wire 1 U, data_out_reg_out [11] $end
$var wire 1 V, data_out_reg_out [10] $end
$var wire 1 W, data_out_reg_out [9] $end
$var wire 1 X, data_out_reg_out [8] $end
$var wire 1 Y, data_out_reg_out [7] $end
$var wire 1 Z, data_out_reg_out [6] $end
$var wire 1 [, data_out_reg_out [5] $end
$var wire 1 \, data_out_reg_out [4] $end
$var wire 1 ], data_out_reg_out [3] $end
$var wire 1 ^, data_out_reg_out [2] $end
$var wire 1 _, data_out_reg_out [1] $end
$var wire 1 `, data_out_reg_out [0] $end
$var reg 16 a, cache_addr [15:0] $end
$var reg 16 b, mem_addr_reg [15:0] $end
$var reg 16 c, DataOut_reg [15:0] $end
$var reg 16 d, mem_data_in_reg [15:0] $end
$var reg 4 e, state [3:0] $end
$var reg 4 f, next_state [3:0] $end
$var reg 1 g, c0_status_en $end
$var reg 1 h, c1_status_en $end
$var reg 1 i, c0_compare_reg $end
$var reg 1 j, c1_compare_reg $end
$var reg 1 k, memory_read_reg $end
$var reg 1 l, memory_write_reg $end
$var reg 1 m, c0_write_reg $end
$var reg 1 n, c1_write_reg $end
$var reg 1 o, cache_status_en $end
$var reg 1 p, mem_read_count_en $end
$var reg 1 q, mem_read_count_clear $end
$var reg 1 r, input_reg $end
$var reg 1 s, data_out_reg_en $end
$var reg 1 t, c0_data_en $end
$var reg 1 u, c1_data_en $end
$var reg 1 v, mem_data_available $end
$var reg 1 w, sys_stall $end
$var reg 1 x, cache_done $end
$var reg 1 y, c0_en_reg $end
$var reg 1 z, c1_en_reg $end
$var reg 1 {, evict_write_count_en $end
$var reg 1 |, evict_write_cout_clear $end
$var reg 1 }, c0_valid_in_reg $end
$var reg 1 ~, c1_valid_in_reg $end
$var reg 1 !- cache_way $end

$scope module state_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 "- en $end
$var wire 1 m+ D [3] $end
$var wire 1 n+ D [2] $end
$var wire 1 o+ D [1] $end
$var wire 1 p+ D [0] $end
$var wire 1 i+ Q [3] $end
$var wire 1 j+ Q [2] $end
$var wire 1 k+ Q [1] $end
$var wire 1 l+ Q [0] $end
$var wire 1 #- in [3] $end
$var wire 1 $- in [2] $end
$var wire 1 %- in [1] $end
$var wire 1 &- in [0] $end
$var wire 1 '- out [3] $end
$var wire 1 (- out [2] $end
$var wire 1 )- out [1] $end
$var wire 1 *- out [0] $end

$scope module dff_0 $end
$var wire 1 *- q $end
$var wire 1 &- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 )- q $end
$var wire 1 %- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 (- q $end
$var wire 1 $- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 '- q $end
$var wire 1 #- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 .- state $end
$upscope $end
$upscope $end

$scope module write_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 /- en $end
$var wire 1 z D $end
$var wire 1 q+ Q $end
$var wire 1 0- in $end
$var wire 1 1- out $end

$scope module dff_0 $end
$var wire 1 1- q $end
$var wire 1 0- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2- state $end
$upscope $end
$upscope $end

$scope module read_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 3- en $end
$var wire 1 y D $end
$var wire 1 r+ Q $end
$var wire 1 4- in $end
$var wire 1 5- out $end

$scope module dff_0 $end
$var wire 1 5- q $end
$var wire 1 4- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 6- state $end
$upscope $end
$upscope $end

$scope module data_out_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 7- en $end
$var wire 1 8- D [15] $end
$var wire 1 9- D [14] $end
$var wire 1 :- D [13] $end
$var wire 1 ;- D [12] $end
$var wire 1 <- D [11] $end
$var wire 1 =- D [10] $end
$var wire 1 >- D [9] $end
$var wire 1 ?- D [8] $end
$var wire 1 @- D [7] $end
$var wire 1 A- D [6] $end
$var wire 1 B- D [5] $end
$var wire 1 C- D [4] $end
$var wire 1 D- D [3] $end
$var wire 1 E- D [2] $end
$var wire 1 F- D [1] $end
$var wire 1 G- D [0] $end
$var wire 1 Q, Q [15] $end
$var wire 1 R, Q [14] $end
$var wire 1 S, Q [13] $end
$var wire 1 T, Q [12] $end
$var wire 1 U, Q [11] $end
$var wire 1 V, Q [10] $end
$var wire 1 W, Q [9] $end
$var wire 1 X, Q [8] $end
$var wire 1 Y, Q [7] $end
$var wire 1 Z, Q [6] $end
$var wire 1 [, Q [5] $end
$var wire 1 \, Q [4] $end
$var wire 1 ], Q [3] $end
$var wire 1 ^, Q [2] $end
$var wire 1 _, Q [1] $end
$var wire 1 `, Q [0] $end
$var wire 1 H- in [15] $end
$var wire 1 I- in [14] $end
$var wire 1 J- in [13] $end
$var wire 1 K- in [12] $end
$var wire 1 L- in [11] $end
$var wire 1 M- in [10] $end
$var wire 1 N- in [9] $end
$var wire 1 O- in [8] $end
$var wire 1 P- in [7] $end
$var wire 1 Q- in [6] $end
$var wire 1 R- in [5] $end
$var wire 1 S- in [4] $end
$var wire 1 T- in [3] $end
$var wire 1 U- in [2] $end
$var wire 1 V- in [1] $end
$var wire 1 W- in [0] $end
$var wire 1 X- out [15] $end
$var wire 1 Y- out [14] $end
$var wire 1 Z- out [13] $end
$var wire 1 [- out [12] $end
$var wire 1 \- out [11] $end
$var wire 1 ]- out [10] $end
$var wire 1 ^- out [9] $end
$var wire 1 _- out [8] $end
$var wire 1 `- out [7] $end
$var wire 1 a- out [6] $end
$var wire 1 b- out [5] $end
$var wire 1 c- out [4] $end
$var wire 1 d- out [3] $end
$var wire 1 e- out [2] $end
$var wire 1 f- out [1] $end
$var wire 1 g- out [0] $end

$scope module dff_0 $end
$var wire 1 g- q $end
$var wire 1 W- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 h- state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 f- q $end
$var wire 1 V- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 i- state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 e- q $end
$var wire 1 U- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 j- state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 d- q $end
$var wire 1 T- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 k- state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 c- q $end
$var wire 1 S- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 l- state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 b- q $end
$var wire 1 R- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 m- state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 a- q $end
$var wire 1 Q- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 n- state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 `- q $end
$var wire 1 P- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 o- state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 _- q $end
$var wire 1 O- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 p- state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 ^- q $end
$var wire 1 N- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 q- state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 ]- q $end
$var wire 1 M- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r- state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 \- q $end
$var wire 1 L- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s- state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 [- q $end
$var wire 1 K- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t- state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 Z- q $end
$var wire 1 J- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u- state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 Y- q $end
$var wire 1 I- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 v- state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 X- q $end
$var wire 1 H- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 w- state $end
$upscope $end
$upscope $end

$scope module c0hitreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 x- en $end
$var wire 1 4" D $end
$var wire 1 s+ Q $end
$var wire 1 y- in $end
$var wire 1 z- out $end

$scope module dff_0 $end
$var wire 1 z- q $end
$var wire 1 y- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 {- state $end
$upscope $end
$upscope $end

$scope module c0dirtyreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 |- en $end
$var wire 1 5" D $end
$var wire 1 w+ Q $end
$var wire 1 }- in $end
$var wire 1 ~- out $end

$scope module dff_0 $end
$var wire 1 ~- q $end
$var wire 1 }- d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 !. state $end
$upscope $end
$upscope $end

$scope module c1hitreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ". en $end
$var wire 1 ;" D $end
$var wire 1 t+ Q $end
$var wire 1 #. in $end
$var wire 1 $. out $end

$scope module dff_0 $end
$var wire 1 $. q $end
$var wire 1 #. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %. state $end
$upscope $end
$upscope $end

$scope module c1dirtyreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 &. en $end
$var wire 1 <" D $end
$var wire 1 x+ Q $end
$var wire 1 '. in $end
$var wire 1 (. out $end

$scope module dff_0 $end
$var wire 1 (. q $end
$var wire 1 '. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ). state $end
$upscope $end
$upscope $end

$scope module c0validoutreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 *. en $end
$var wire 1 :" D $end
$var wire 1 y+ Q $end
$var wire 1 +. in $end
$var wire 1 ,. out $end

$scope module dff_0 $end
$var wire 1 ,. q $end
$var wire 1 +. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -. state $end
$upscope $end
$upscope $end

$scope module c1validoutreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 .. en $end
$var wire 1 A" D $end
$var wire 1 z+ Q $end
$var wire 1 /. in $end
$var wire 1 0. out $end

$scope module dff_0 $end
$var wire 1 0. q $end
$var wire 1 /. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1. state $end
$upscope $end
$upscope $end

$scope module c0_data_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 2. en $end
$var wire 1 8! D [15] $end
$var wire 1 9! D [14] $end
$var wire 1 :! D [13] $end
$var wire 1 ;! D [12] $end
$var wire 1 <! D [11] $end
$var wire 1 =! D [10] $end
$var wire 1 >! D [9] $end
$var wire 1 ?! D [8] $end
$var wire 1 @! D [7] $end
$var wire 1 A! D [6] $end
$var wire 1 B! D [5] $end
$var wire 1 C! D [4] $end
$var wire 1 D! D [3] $end
$var wire 1 E! D [2] $end
$var wire 1 F! D [1] $end
$var wire 1 G! D [0] $end
$var wire 1 !, Q [15] $end
$var wire 1 ", Q [14] $end
$var wire 1 #, Q [13] $end
$var wire 1 $, Q [12] $end
$var wire 1 %, Q [11] $end
$var wire 1 &, Q [10] $end
$var wire 1 ', Q [9] $end
$var wire 1 (, Q [8] $end
$var wire 1 ), Q [7] $end
$var wire 1 *, Q [6] $end
$var wire 1 +, Q [5] $end
$var wire 1 ,, Q [4] $end
$var wire 1 -, Q [3] $end
$var wire 1 ., Q [2] $end
$var wire 1 /, Q [1] $end
$var wire 1 0, Q [0] $end
$var wire 1 3. in [15] $end
$var wire 1 4. in [14] $end
$var wire 1 5. in [13] $end
$var wire 1 6. in [12] $end
$var wire 1 7. in [11] $end
$var wire 1 8. in [10] $end
$var wire 1 9. in [9] $end
$var wire 1 :. in [8] $end
$var wire 1 ;. in [7] $end
$var wire 1 <. in [6] $end
$var wire 1 =. in [5] $end
$var wire 1 >. in [4] $end
$var wire 1 ?. in [3] $end
$var wire 1 @. in [2] $end
$var wire 1 A. in [1] $end
$var wire 1 B. in [0] $end
$var wire 1 C. out [15] $end
$var wire 1 D. out [14] $end
$var wire 1 E. out [13] $end
$var wire 1 F. out [12] $end
$var wire 1 G. out [11] $end
$var wire 1 H. out [10] $end
$var wire 1 I. out [9] $end
$var wire 1 J. out [8] $end
$var wire 1 K. out [7] $end
$var wire 1 L. out [6] $end
$var wire 1 M. out [5] $end
$var wire 1 N. out [4] $end
$var wire 1 O. out [3] $end
$var wire 1 P. out [2] $end
$var wire 1 Q. out [1] $end
$var wire 1 R. out [0] $end

$scope module dff_0 $end
$var wire 1 R. q $end
$var wire 1 B. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 S. state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 Q. q $end
$var wire 1 A. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 T. state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 P. q $end
$var wire 1 @. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 U. state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 O. q $end
$var wire 1 ?. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 V. state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 N. q $end
$var wire 1 >. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W. state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 M. q $end
$var wire 1 =. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X. state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 L. q $end
$var wire 1 <. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y. state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 K. q $end
$var wire 1 ;. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z. state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 J. q $end
$var wire 1 :. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [. state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 I. q $end
$var wire 1 9. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \. state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 H. q $end
$var wire 1 8. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]. state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 G. q $end
$var wire 1 7. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^. state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 F. q $end
$var wire 1 6. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _. state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 E. q $end
$var wire 1 5. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `. state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 D. q $end
$var wire 1 4. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a. state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 C. q $end
$var wire 1 3. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b. state $end
$upscope $end
$upscope $end

$scope module c1_data_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 c. en $end
$var wire 1 X! D [15] $end
$var wire 1 Y! D [14] $end
$var wire 1 Z! D [13] $end
$var wire 1 [! D [12] $end
$var wire 1 \! D [11] $end
$var wire 1 ]! D [10] $end
$var wire 1 ^! D [9] $end
$var wire 1 _! D [8] $end
$var wire 1 `! D [7] $end
$var wire 1 a! D [6] $end
$var wire 1 b! D [5] $end
$var wire 1 c! D [4] $end
$var wire 1 d! D [3] $end
$var wire 1 e! D [2] $end
$var wire 1 f! D [1] $end
$var wire 1 g! D [0] $end
$var wire 1 1, Q [15] $end
$var wire 1 2, Q [14] $end
$var wire 1 3, Q [13] $end
$var wire 1 4, Q [12] $end
$var wire 1 5, Q [11] $end
$var wire 1 6, Q [10] $end
$var wire 1 7, Q [9] $end
$var wire 1 8, Q [8] $end
$var wire 1 9, Q [7] $end
$var wire 1 :, Q [6] $end
$var wire 1 ;, Q [5] $end
$var wire 1 <, Q [4] $end
$var wire 1 =, Q [3] $end
$var wire 1 >, Q [2] $end
$var wire 1 ?, Q [1] $end
$var wire 1 @, Q [0] $end
$var wire 1 d. in [15] $end
$var wire 1 e. in [14] $end
$var wire 1 f. in [13] $end
$var wire 1 g. in [12] $end
$var wire 1 h. in [11] $end
$var wire 1 i. in [10] $end
$var wire 1 j. in [9] $end
$var wire 1 k. in [8] $end
$var wire 1 l. in [7] $end
$var wire 1 m. in [6] $end
$var wire 1 n. in [5] $end
$var wire 1 o. in [4] $end
$var wire 1 p. in [3] $end
$var wire 1 q. in [2] $end
$var wire 1 r. in [1] $end
$var wire 1 s. in [0] $end
$var wire 1 t. out [15] $end
$var wire 1 u. out [14] $end
$var wire 1 v. out [13] $end
$var wire 1 w. out [12] $end
$var wire 1 x. out [11] $end
$var wire 1 y. out [10] $end
$var wire 1 z. out [9] $end
$var wire 1 {. out [8] $end
$var wire 1 |. out [7] $end
$var wire 1 }. out [6] $end
$var wire 1 ~. out [5] $end
$var wire 1 !/ out [4] $end
$var wire 1 "/ out [3] $end
$var wire 1 #/ out [2] $end
$var wire 1 $/ out [1] $end
$var wire 1 %/ out [0] $end

$scope module dff_0 $end
$var wire 1 %/ q $end
$var wire 1 s. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &/ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 $/ q $end
$var wire 1 r. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 '/ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 #/ q $end
$var wire 1 q. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 (/ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 "/ q $end
$var wire 1 p. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )/ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 !/ q $end
$var wire 1 o. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 */ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 ~. q $end
$var wire 1 n. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 +/ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 }. q $end
$var wire 1 m. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ,/ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 |. q $end
$var wire 1 l. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -/ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 {. q $end
$var wire 1 k. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ./ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 z. q $end
$var wire 1 j. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 // state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 y. q $end
$var wire 1 i. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 0/ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 x. q $end
$var wire 1 h. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 1/ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 w. q $end
$var wire 1 g. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 2/ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 v. q $end
$var wire 1 f. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 3/ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 u. q $end
$var wire 1 e. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 4/ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 t. q $end
$var wire 1 d. d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 5/ state $end
$upscope $end
$upscope $end

$scope module mem_data_reg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 6/ en $end
$var wire 1 R" D [15] $end
$var wire 1 S" D [14] $end
$var wire 1 T" D [13] $end
$var wire 1 U" D [12] $end
$var wire 1 V" D [11] $end
$var wire 1 W" D [10] $end
$var wire 1 X" D [9] $end
$var wire 1 Y" D [8] $end
$var wire 1 Z" D [7] $end
$var wire 1 [" D [6] $end
$var wire 1 \" D [5] $end
$var wire 1 ]" D [4] $end
$var wire 1 ^" D [3] $end
$var wire 1 _" D [2] $end
$var wire 1 `" D [1] $end
$var wire 1 a" D [0] $end
$var wire 1 A, Q [15] $end
$var wire 1 B, Q [14] $end
$var wire 1 C, Q [13] $end
$var wire 1 D, Q [12] $end
$var wire 1 E, Q [11] $end
$var wire 1 F, Q [10] $end
$var wire 1 G, Q [9] $end
$var wire 1 H, Q [8] $end
$var wire 1 I, Q [7] $end
$var wire 1 J, Q [6] $end
$var wire 1 K, Q [5] $end
$var wire 1 L, Q [4] $end
$var wire 1 M, Q [3] $end
$var wire 1 N, Q [2] $end
$var wire 1 O, Q [1] $end
$var wire 1 P, Q [0] $end
$var wire 1 7/ in [15] $end
$var wire 1 8/ in [14] $end
$var wire 1 9/ in [13] $end
$var wire 1 :/ in [12] $end
$var wire 1 ;/ in [11] $end
$var wire 1 </ in [10] $end
$var wire 1 =/ in [9] $end
$var wire 1 >/ in [8] $end
$var wire 1 ?/ in [7] $end
$var wire 1 @/ in [6] $end
$var wire 1 A/ in [5] $end
$var wire 1 B/ in [4] $end
$var wire 1 C/ in [3] $end
$var wire 1 D/ in [2] $end
$var wire 1 E/ in [1] $end
$var wire 1 F/ in [0] $end
$var wire 1 G/ out [15] $end
$var wire 1 H/ out [14] $end
$var wire 1 I/ out [13] $end
$var wire 1 J/ out [12] $end
$var wire 1 K/ out [11] $end
$var wire 1 L/ out [10] $end
$var wire 1 M/ out [9] $end
$var wire 1 N/ out [8] $end
$var wire 1 O/ out [7] $end
$var wire 1 P/ out [6] $end
$var wire 1 Q/ out [5] $end
$var wire 1 R/ out [4] $end
$var wire 1 S/ out [3] $end
$var wire 1 T/ out [2] $end
$var wire 1 U/ out [1] $end
$var wire 1 V/ out [0] $end

$scope module dff_0 $end
$var wire 1 V/ q $end
$var wire 1 F/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 W/ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 U/ q $end
$var wire 1 E/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 X/ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 T/ q $end
$var wire 1 D/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Y/ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 S/ q $end
$var wire 1 C/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 Z/ state $end
$upscope $end

$scope module dff_4 $end
$var wire 1 R/ q $end
$var wire 1 B/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 [/ state $end
$upscope $end

$scope module dff_5 $end
$var wire 1 Q/ q $end
$var wire 1 A/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 \/ state $end
$upscope $end

$scope module dff_6 $end
$var wire 1 P/ q $end
$var wire 1 @/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ]/ state $end
$upscope $end

$scope module dff_7 $end
$var wire 1 O/ q $end
$var wire 1 ?/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 ^/ state $end
$upscope $end

$scope module dff_8 $end
$var wire 1 N/ q $end
$var wire 1 >/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 _/ state $end
$upscope $end

$scope module dff_9 $end
$var wire 1 M/ q $end
$var wire 1 =/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 `/ state $end
$upscope $end

$scope module dff_10 $end
$var wire 1 L/ q $end
$var wire 1 </ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 a/ state $end
$upscope $end

$scope module dff_11 $end
$var wire 1 K/ q $end
$var wire 1 ;/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 b/ state $end
$upscope $end

$scope module dff_12 $end
$var wire 1 J/ q $end
$var wire 1 :/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 c/ state $end
$upscope $end

$scope module dff_13 $end
$var wire 1 I/ q $end
$var wire 1 9/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 d/ state $end
$upscope $end

$scope module dff_14 $end
$var wire 1 H/ q $end
$var wire 1 8/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 e/ state $end
$upscope $end

$scope module dff_15 $end
$var wire 1 G/ q $end
$var wire 1 7/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 f/ state $end
$upscope $end
$upscope $end

$scope module mem_read_counter $end
$var parameter 32 g/ N $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 h/ en $end
$var wire 1 i/ clear $end
$var wire 1 a+ cnt_o [3] $end
$var wire 1 b+ cnt_o [2] $end
$var wire 1 c+ cnt_o [1] $end
$var wire 1 d+ cnt_o [0] $end
$var wire 1 j/ d [3] $end
$var wire 1 k/ d [2] $end
$var wire 1 l/ d [1] $end
$var wire 1 m/ d [0] $end
$var wire 1 n/ q [3] $end
$var wire 1 o/ q [2] $end
$var wire 1 p/ q [1] $end
$var wire 1 q/ q [0] $end

$scope module dff_0 $end
$var wire 1 q/ q $end
$var wire 1 m/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 r/ state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 p/ q $end
$var wire 1 l/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 s/ state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 o/ q $end
$var wire 1 k/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 t/ state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 n/ q $end
$var wire 1 j/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 u/ state $end
$upscope $end
$upscope $end

$scope module evict_write_counter $end
$var parameter 32 v/ N $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 w/ en $end
$var wire 1 x/ clear $end
$var wire 1 e+ cnt_o [3] $end
$var wire 1 f+ cnt_o [2] $end
$var wire 1 g+ cnt_o [1] $end
$var wire 1 h+ cnt_o [0] $end
$var wire 1 y/ d [3] $end
$var wire 1 z/ d [2] $end
$var wire 1 {/ d [1] $end
$var wire 1 |/ d [0] $end
$var wire 1 }/ q [3] $end
$var wire 1 ~/ q [2] $end
$var wire 1 !0 q [1] $end
$var wire 1 "0 q [0] $end

$scope module dff_0 $end
$var wire 1 "0 q $end
$var wire 1 |/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 #0 state $end
$upscope $end

$scope module dff_1 $end
$var wire 1 !0 q $end
$var wire 1 {/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 $0 state $end
$upscope $end

$scope module dff_2 $end
$var wire 1 ~/ q $end
$var wire 1 z/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 %0 state $end
$upscope $end

$scope module dff_3 $end
$var wire 1 }/ q $end
$var wire 1 y/ d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 &0 state $end
$upscope $end
$upscope $end

$scope module victimwayff $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 ~+ en $end
$var wire 1 '0 trigger $end
$var wire 1 {+ out $end
$var wire 1 (0 d $end

$scope module victim $end
$var wire 1 {+ q $end
$var wire 1 (0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 )0 state $end
$upscope $end
$upscope $end

$scope module victimcachedirtyreg $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var wire 1 *0 en $end
$var wire 1 |+ D $end
$var wire 1 }+ Q $end
$var wire 1 +0 in $end
$var wire 1 ,0 out $end

$scope module dff_0 $end
$var wire 1 ,0 q $end
$var wire 1 +0 d $end
$var wire 1 } clk $end
$var wire 1 ~ rst $end
$var reg 1 -0 state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module ref $end
$var wire 1 .0 Addr [15] $end
$var wire 1 /0 Addr [14] $end
$var wire 1 00 Addr [13] $end
$var wire 1 10 Addr [12] $end
$var wire 1 20 Addr [11] $end
$var wire 1 30 Addr [10] $end
$var wire 1 40 Addr [9] $end
$var wire 1 50 Addr [8] $end
$var wire 1 60 Addr [7] $end
$var wire 1 70 Addr [6] $end
$var wire 1 80 Addr [5] $end
$var wire 1 90 Addr [4] $end
$var wire 1 :0 Addr [3] $end
$var wire 1 ;0 Addr [2] $end
$var wire 1 <0 Addr [1] $end
$var wire 1 =0 Addr [0] $end
$var wire 1 >0 DataIn [15] $end
$var wire 1 ?0 DataIn [14] $end
$var wire 1 @0 DataIn [13] $end
$var wire 1 A0 DataIn [12] $end
$var wire 1 B0 DataIn [11] $end
$var wire 1 C0 DataIn [10] $end
$var wire 1 D0 DataIn [9] $end
$var wire 1 E0 DataIn [8] $end
$var wire 1 F0 DataIn [7] $end
$var wire 1 G0 DataIn [6] $end
$var wire 1 H0 DataIn [5] $end
$var wire 1 I0 DataIn [4] $end
$var wire 1 J0 DataIn [3] $end
$var wire 1 K0 DataIn [2] $end
$var wire 1 L0 DataIn [1] $end
$var wire 1 M0 DataIn [0] $end
$var wire 1 N0 Rd $end
$var wire 1 O0 Wr $end
$var wire 1 P0 clk $end
$var wire 1 Q0 rst $end
$var reg 16 R0 DataOut [15:0] $end
$var wire 1 K Done $end
$var wire 1 L Stall $end
$var wire 1 M CacheHit $end
$var reg 1 S0 loaded $end
$var integer 32 T0 i $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0?'
0>'
0Z'
0Y'
0X'
0W'
0V'
0U'
0T'
0S'
0R'
0Q'
0P'
0O'
0N'
0M'
0L'
0K'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0\'
0['
0:'
0;'
0<'
0='
1m'
b1 n'
0K(
0L(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0`(
0_(
0^(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
0o(
0n(
0M(
0N(
0O(
0P(
1")
b1 #)
0^)
0_)
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0"*
0!*
0~)
0})
0|)
0{)
0z)
0y)
0x)
0w)
0v)
0u)
0t)
0s)
0r)
0q)
02*
01*
00*
0/*
0.*
0-*
0,*
0+*
0**
0)*
0(*
0'*
0&*
0%*
0$*
0#*
0`)
0a)
0b)
0c)
15*
b1 6*
0q*
0r*
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
05+
04+
03+
02+
01+
00+
0/+
0.+
0-+
0,+
0++
0*+
0)+
0(+
0'+
0&+
0E+
0D+
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
0s*
0t*
0u*
0v*
0I+
0H+
0G+
0F+
0M+
0L+
0K+
0J+
0Q+
0P+
0O+
0N+
bx a,
bx b,
bx c,
bx d,
bx e,
b0 f,
xg,
xh,
0i,
0j,
0k,
0l,
0m,
0n,
0o,
0p,
0q,
0r,
0s,
0t,
0u,
0v,
1w,
0x,
0y,
0z,
0{,
0|,
0},
0~,
x!-
0+-
0,-
0--
0.-
02-
06-
0h-
0i-
0j-
0k-
0l-
0m-
0n-
0o-
0p-
0q-
0r-
0s-
0t-
0u-
0v-
0w-
0{-
0!.
0%.
0).
0-.
01.
0S.
0T.
0U.
0V.
0W.
0X.
0Y.
0Z.
0[.
0\.
0].
0^.
0_.
0`.
0a.
0b.
0&/
0'/
0(/
0)/
0*/
0+/
0,/
0-/
0./
0//
00/
01/
02/
03/
04/
05/
0W/
0X/
0Y/
0Z/
0[/
0\/
0]/
0^/
0_/
0`/
0a/
0b/
0c/
0d/
0e/
0f/
0r/
0s/
0t/
0u/
0#0
0$0
0%0
b0 3
b0 4
05
06
b11011010110010101101101001100010010111001100001011001000110010001110010 7
1!!
1"!
1Z&
b1 [&
08'
09'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0&0
0)0
0-0
bx R0
1S0
0N
1R
bx V
b0 X
b1 $!
b1 z"
b10000 )$
b10000 ,$
b10000 /$
b10000 2$
b101 5$
b1 8$
b11 =$
b10000 J%
b10000 M%
b10000 P%
b10000 S%
b101 V%
b1 Y%
b0 R+
b1 S+
b10 T+
b11 U+
b100 V+
b101 W+
b110 X+
b111 Y+
b1000 Z+
b1001 [+
b1010 \+
b1011 ]+
b1100 ^+
b1101 _+
b1110 `+
b100 g/
b100 v/
bx /(
bx 0(
b100000000000001 1(
bx B)
bx C)
b100000000000001 D)
bx U*
bx V*
b100000000000001 W*
b1 #!
bx *$
b100000000 +$
bx -$
b100000000 .$
bx 0$
b100000000 1$
bx 3$
b100000000 4$
bx 6$
b100000000 7$
bx 9$
b100000000 :$
bx ;$
b100000000 <$
bx K%
b100000000 L%
bx N%
b100000000 O%
bx Q%
b100000000 R%
bx T%
b100000000 U%
bx W%
b100000000 X%
bx Z%
b100000000 [%
bx \%
b100000000 ]%
bx z&
bx {&
b100000000000001 |&
b10000000000000000 T0
b0 O
b0 P
b0 Q
b0 S
b10000000000000000000000000000011 T
bx U
bx W
0H%
0I%
xm%
xl%
xk%
xj%
xi%
xh%
xg%
xf%
xe%
xd%
xc%
xb%
xa%
x`%
x_%
x^%
x}%
x|%
x{%
xz%
xy%
xx%
xw%
xv%
xu%
xt%
xs%
xr%
xq%
xp%
xo%
xn%
x/&
x.&
x-&
x,&
x+&
x*&
x)&
x(&
x'&
x&&
x%&
x$&
x#&
x"&
x!&
x~%
x?&
x>&
x=&
x<&
x;&
x:&
x9&
x8&
x7&
x6&
x5&
x4&
x3&
x2&
x1&
x0&
x@&
xA&
xB&
xC&
0G&
0F&
0E&
0D&
0H&
xi&
xh&
xg&
xf&
xe&
xd&
xc&
xb&
xa&
x`&
x_&
x^&
x]&
0\&
xy&
xx&
xw&
xv&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
xl&
xk&
xj&
0}&
0~&
x!'
x"'
x2'
x1'
x0'
x/'
x.'
x-'
x,'
x+'
x*'
x)'
x('
x''
x&'
x%'
x$'
x#'
x3'
x4'
x5'
x6'
x7'
0I&
x|'
x{'
xz'
xy'
xx'
xw'
xv'
xu'
xt'
xs'
xr'
xq'
xp'
0o'
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
02(
03(
x4(
x5(
xE(
xD(
xC(
xB(
xA(
x@(
x?(
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
xF(
xG(
xH(
xI(
xJ(
0J&
x1)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
0$)
xA)
x@)
x?)
x>)
x=)
x<)
x;)
x:)
x9)
x8)
x7)
x6)
x5)
x4)
x3)
x2)
0E)
0F)
xG)
xH)
xX)
xW)
xV)
xU)
xT)
xS)
xR)
xQ)
xP)
xO)
xN)
xM)
xL)
xK)
xJ)
xI)
xY)
xZ)
x[)
x\)
x])
0K&
xD*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
07*
xT*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
0X*
0Y*
xZ*
x[*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
xl*
xm*
xn*
xo*
xp*
xO&
xN&
xM&
xL&
xS&
xR&
xQ&
xP&
xW&
xV&
xU&
xT&
xd+
xc+
xb+
xa+
xh+
xg+
xf+
xe+
xl+
xk+
xj+
xi+
0p+
0o+
0n+
0m+
xq+
xr+
xs+
xt+
xu+
xv+
xw+
xx+
xy+
xz+
x{+
0|+
x}+
x~+
x0,
x/,
x.,
x-,
x,,
x+,
x*,
x),
x(,
x',
x&,
x%,
x$,
x#,
x",
x!,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
x7,
x6,
x5,
x4,
x3,
x2,
x1,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
0&-
0%-
0$-
0#-
x*-
x)-
x(-
x'-
x0-
x1-
x4-
x5-
xW-
xV-
xU-
xT-
xS-
xR-
xQ-
xP-
xO-
xN-
xM-
xL-
xK-
xJ-
xI-
xH-
xg-
xf-
xe-
xd-
xc-
xb-
xa-
x`-
x_-
x^-
x]-
x\-
x[-
xZ-
xY-
xX-
xy-
xz-
x}-
x~-
x#.
x$.
x'.
x(.
x+.
x,.
x/.
x0.
xB.
xA.
x@.
x?.
x>.
x=.
x<.
x;.
x:.
x9.
x8.
x7.
x6.
x5.
x4.
x3.
xR.
xQ.
xP.
xO.
xN.
xM.
xL.
xK.
xJ.
xI.
xH.
xG.
xF.
xE.
xD.
xC.
xs.
xr.
xq.
xp.
xo.
xn.
xm.
xl.
xk.
xj.
xi.
xh.
xg.
xf.
xe.
xd.
x%/
x$/
x#/
x"/
x!/
x~.
x}.
x|.
x{.
xz.
xy.
xx.
xw.
xv.
xu.
xt.
xF/
xE/
xD/
xC/
xB/
xA/
x@/
x?/
x>/
x=/
x</
x;/
x:/
x9/
x8/
x7/
xV/
xU/
xT/
xS/
xR/
xQ/
xP/
xO/
xN/
xM/
xL/
xK/
xJ/
xI/
xH/
xG/
xm/
xl/
xk/
xj/
xq/
xp/
xo/
xn/
x|/
x{/
xz/
xy/
x"0
x!0
x~/
x}/
x(0
x+0
x,0
xJ
xI
xH
xG
xF
xE
xD
xC
xB
xA
x@
x?
x>
x=
x<
x;
0K
0L
0M
0O0
0N0
0M0
0L0
0K0
0J0
0I0
0H0
0G0
0F0
0E0
0D0
0C0
0B0
0A0
0@0
0?0
0>0
0=0
0<0
0;0
0:0
090
080
070
060
050
040
030
020
010
000
0/0
0.0
0{
0z
0y
0x
0w
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
14*
13*
0!)
1~(
1l'
0k'
0Y&
0X&
x*0
0'0
0x/
0w/
0i/
0h/
06/
0c.
02.
x..
x*.
x&.
x".
x|-
xx-
xG-
xF-
xE-
xD-
xC-
xB-
xA-
x@-
x?-
x>-
x=-
x<-
x;-
x:-
x9-
x8-
07-
03-
0/-
1"-
1P0
1Q0
0'$
0($
zy"
0B$
0A$
0@$
1?$
1>$
1G$
0F$
0E$
1D$
1C$
0L$
1K$
0J$
1I$
1H$
1Q$
1P$
0O$
1N$
1M$
0V$
0U$
1T$
1S$
1R$
1[$
0Z$
1Y$
1X$
1W$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0>%
x?%
0@%
0A%
0B%
0C%
0D%
0E%
0F%
zG%
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
01
12
18
19
0:
x|
1}
1~
x%!
z&!
0'!
07!
06!
05!
04!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0+!
0*!
0)!
0(!
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
0W!
0V!
0U!
0T!
0S!
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0l!
0k!
0j!
0i!
0h!
xq!
xp!
xo!
xn!
xm!
0v!
0u!
0t!
0s!
0r!
x{!
xz!
xy!
xx!
xw!
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x0"
x/"
x."
x3"
x2"
x1"
04"
05"
06"
07"
08"
09"
0:"
0;"
0<"
0="
0>"
0?"
0@"
0A"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
xD"
xC"
xB"
xa"
x`"
x_"
x^"
x]"
x\"
x["
xZ"
xY"
xX"
xW"
xV"
xU"
xT"
xS"
xR"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
xd"
xc"
xb"
0r"
0s"
0t"
xx"
xw"
xv"
xu"
0!#
0~"
0}"
1|"
0{"
1&#
0%#
0$#
1##
0"#
0+#
1*#
0)#
1(#
0'#
10#
1/#
0.#
1-#
0,#
05#
04#
13#
12#
01#
1:#
09#
18#
17#
06#
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0{#
x|#
0}#
0~#
0!$
0"$
0#$
0$$
0%$
0&$
$end
#1
0,0
0{+
0}/
0~/
0!0
0"0
0n/
0o/
0p/
0q/
0G/
0H/
0I/
0J/
0K/
0L/
0M/
0N/
0O/
0P/
0Q/
0R/
0S/
0T/
0U/
0V/
0t.
0u.
0v.
0w.
0x.
0y.
0z.
0{.
0|.
0}.
0~.
0!/
0"/
0#/
0$/
0%/
0C.
0D.
0E.
0F.
0G.
0H.
0I.
0J.
0K.
0L.
0M.
0N.
0O.
0P.
0Q.
0R.
00.
0,.
0(.
0$.
0~-
0z-
0X-
0Y-
0Z-
0[-
0\-
0]-
0^-
0_-
0`-
0a-
0b-
0c-
0d-
0e-
0f-
0g-
05-
01-
0'-
0(-
0)-
0*-
0T&
0U&
0V&
0W&
0P&
0Q&
0R&
0S&
0L&
0M&
0N&
0O&
0o*
0n*
0m*
0l*
00&
01&
02&
03&
04&
05&
06&
07&
08&
09&
0:&
0;&
0<&
0=&
0>&
0?&
0E*
0F*
0G*
0H*
0I*
0J*
0K*
0L*
0M*
0N*
0O*
0P*
0Q*
0R*
0S*
0T*
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0[*
0Z*
0\)
0[)
0Z)
0Y)
0~%
0!&
0"&
0#&
0$&
0%&
0&&
0'&
0(&
0)&
0*&
0+&
0,&
0-&
0.&
0/&
02)
03)
04)
05)
06)
07)
08)
09)
0:)
0;)
0<)
0=)
0>)
0?)
0@)
0A)
0%)
0&)
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
0H)
0G)
0I(
0H(
0G(
0F(
0n%
0o%
0p%
0q%
0r%
0s%
0t%
0u%
0v%
0w%
0x%
0y%
0z%
0{%
0|%
0}%
0}'
0~'
0!(
0"(
0#(
0$(
0%(
0&(
0'(
0((
0)(
0*(
0+(
0,(
0-(
0.(
0p'
0q'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
05(
04(
06'
05'
04'
03'
0^%
0_%
0`%
0a%
0b%
0c%
0d%
0e%
0f%
0g%
0h%
0i%
0j%
0k%
0l%
0m%
0j&
0k&
0l&
0m&
0n&
0o&
0p&
0q&
0r&
0s&
0t&
0u&
0v&
0w&
0x&
0y&
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
0"'
0!'
07'
0J(
0])
0p*
00-
0q+
04-
0y-
0s+
0}-
0w+
0#.
0t+
0'.
0x+
0+.
0/.
0m/
0l/
0k/
0j/
0|/
0{/
0z/
0y/
0(0
0+0
02'
01'
00'
0/'
0.'
0-'
0,'
0+'
0*'
0)'
0('
0''
0&'
0%'
0$'
0#'
0E(
0D(
0C(
0B(
0A(
0@(
0?(
0>(
0=(
0<(
0;(
0:(
09(
08(
07(
06(
0X)
0W)
0V)
0U)
0T)
0S)
0R)
0Q)
0P)
0O)
0N)
0M)
0L)
0K)
0J)
0I)
0k*
0j*
0i*
0h*
0g*
0f*
0e*
0d*
0c*
0b*
0a*
0`*
0_*
0^*
0]*
0\*
0x"
0w"
0v"
0u"
0W-
0V-
0U-
0T-
0S-
0R-
0Q-
0P-
0O-
0N-
0M-
0L-
0K-
0J-
0I-
0H-
0B.
0A.
0@.
0?.
0>.
0=.
0<.
0;.
0:.
09.
08.
07.
06.
05.
04.
03.
00,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
0',
0&,
0%,
0$,
0#,
0",
0!,
0s.
0r.
0q.
0p.
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
07,
06,
05,
04,
03,
02,
01,
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
0:/
09/
08/
07/
0P,
0O,
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0G,
0F,
0E,
0D,
0C,
0B,
0A,
0}+
0z+
0y+
0r+
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
0Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0l+
0k+
0j+
0i+
0`,
0_,
0^,
0],
0\,
0[,
0Z,
0Y,
0X,
0W,
0V,
0U,
0T,
0S,
0R,
0Q,
0d+
0c+
0b+
0a+
0h+
0g+
0f+
0e+
0u+
0v+
b0 e,
0w,
1r,
1q,
1|,
b0 c,
1~+
02
1/-
13-
1i/
1x/
0G-
0F-
0E-
0D-
0C-
0B-
0A-
0@-
0?-
0>-
0=-
0<-
0;-
0:-
09-
08-
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
#50
0!!
0P0
08
0}
#100
1!!
1P0
18
1}
b0 +$
b1 +$
b10 +$
b11 +$
b100 +$
b101 +$
b110 +$
b111 +$
b1000 +$
b1001 +$
b1010 +$
b1011 +$
b1100 +$
b1101 +$
b1110 +$
b1111 +$
b10000 +$
b10001 +$
b10010 +$
b10011 +$
b10100 +$
b10101 +$
b10110 +$
b10111 +$
b11000 +$
b11001 +$
b11010 +$
b11011 +$
b11100 +$
b11101 +$
b11110 +$
b11111 +$
b100000 +$
b100001 +$
b100010 +$
b100011 +$
b100100 +$
b100101 +$
b100110 +$
b100111 +$
b101000 +$
b101001 +$
b101010 +$
b101011 +$
b101100 +$
b101101 +$
b101110 +$
b101111 +$
b110000 +$
b110001 +$
b110010 +$
b110011 +$
b110100 +$
b110101 +$
b110110 +$
b110111 +$
b111000 +$
b111001 +$
b111010 +$
b111011 +$
b111100 +$
b111101 +$
b111110 +$
b111111 +$
b1000000 +$
b1000001 +$
b1000010 +$
b1000011 +$
b1000100 +$
b1000101 +$
b1000110 +$
b1000111 +$
b1001000 +$
b1001001 +$
b1001010 +$
b1001011 +$
b1001100 +$
b1001101 +$
b1001110 +$
b1001111 +$
b1010000 +$
b1010001 +$
b1010010 +$
b1010011 +$
b1010100 +$
b1010101 +$
b1010110 +$
b1010111 +$
b1011000 +$
b1011001 +$
b1011010 +$
b1011011 +$
b1011100 +$
b1011101 +$
b1011110 +$
b1011111 +$
b1100000 +$
b1100001 +$
b1100010 +$
b1100011 +$
b1100100 +$
b1100101 +$
b1100110 +$
b1100111 +$
b1101000 +$
b1101001 +$
b1101010 +$
b1101011 +$
b1101100 +$
b1101101 +$
b1101110 +$
b1101111 +$
b1110000 +$
b1110001 +$
b1110010 +$
b1110011 +$
b1110100 +$
b1110101 +$
b1110110 +$
b1110111 +$
b1111000 +$
b1111001 +$
b1111010 +$
b1111011 +$
b1111100 +$
b1111101 +$
b1111110 +$
b1111111 +$
b10000000 +$
b10000001 +$
b10000010 +$
b10000011 +$
b10000100 +$
b10000101 +$
b10000110 +$
b10000111 +$
b10001000 +$
b10001001 +$
b10001010 +$
b10001011 +$
b10001100 +$
b10001101 +$
b10001110 +$
b10001111 +$
b10010000 +$
b10010001 +$
b10010010 +$
b10010011 +$
b10010100 +$
b10010101 +$
b10010110 +$
b10010111 +$
b10011000 +$
b10011001 +$
b10011010 +$
b10011011 +$
b10011100 +$
b10011101 +$
b10011110 +$
b10011111 +$
b10100000 +$
b10100001 +$
b10100010 +$
b10100011 +$
b10100100 +$
b10100101 +$
b10100110 +$
b10100111 +$
b10101000 +$
b10101001 +$
b10101010 +$
b10101011 +$
b10101100 +$
b10101101 +$
b10101110 +$
b10101111 +$
b10110000 +$
b10110001 +$
b10110010 +$
b10110011 +$
b10110100 +$
b10110101 +$
b10110110 +$
b10110111 +$
b10111000 +$
b10111001 +$
b10111010 +$
b10111011 +$
b10111100 +$
b10111101 +$
b10111110 +$
b10111111 +$
b11000000 +$
b11000001 +$
b11000010 +$
b11000011 +$
b11000100 +$
b11000101 +$
b11000110 +$
b11000111 +$
b11001000 +$
b11001001 +$
b11001010 +$
b11001011 +$
b11001100 +$
b11001101 +$
b11001110 +$
b11001111 +$
b11010000 +$
b11010001 +$
b11010010 +$
b11010011 +$
b11010100 +$
b11010101 +$
b11010110 +$
b11010111 +$
b11011000 +$
b11011001 +$
b11011010 +$
b11011011 +$
b11011100 +$
b11011101 +$
b11011110 +$
b11011111 +$
b11100000 +$
b11100001 +$
b11100010 +$
b11100011 +$
b11100100 +$
b11100101 +$
b11100110 +$
b11100111 +$
b11101000 +$
b11101001 +$
b11101010 +$
b11101011 +$
b11101100 +$
b11101101 +$
b11101110 +$
b11101111 +$
b11110000 +$
b11110001 +$
b11110010 +$
b11110011 +$
b11110100 +$
b11110101 +$
b11110110 +$
b11110111 +$
b11111000 +$
b11111001 +$
b11111010 +$
b11111011 +$
b11111100 +$
b11111101 +$
b11111110 +$
b11111111 +$
b100000000 +$
b0 .$
b1 .$
b10 .$
b11 .$
b100 .$
b101 .$
b110 .$
b111 .$
b1000 .$
b1001 .$
b1010 .$
b1011 .$
b1100 .$
b1101 .$
b1110 .$
b1111 .$
b10000 .$
b10001 .$
b10010 .$
b10011 .$
b10100 .$
b10101 .$
b10110 .$
b10111 .$
b11000 .$
b11001 .$
b11010 .$
b11011 .$
b11100 .$
b11101 .$
b11110 .$
b11111 .$
b100000 .$
b100001 .$
b100010 .$
b100011 .$
b100100 .$
b100101 .$
b100110 .$
b100111 .$
b101000 .$
b101001 .$
b101010 .$
b101011 .$
b101100 .$
b101101 .$
b101110 .$
b101111 .$
b110000 .$
b110001 .$
b110010 .$
b110011 .$
b110100 .$
b110101 .$
b110110 .$
b110111 .$
b111000 .$
b111001 .$
b111010 .$
b111011 .$
b111100 .$
b111101 .$
b111110 .$
b111111 .$
b1000000 .$
b1000001 .$
b1000010 .$
b1000011 .$
b1000100 .$
b1000101 .$
b1000110 .$
b1000111 .$
b1001000 .$
b1001001 .$
b1001010 .$
b1001011 .$
b1001100 .$
b1001101 .$
b1001110 .$
b1001111 .$
b1010000 .$
b1010001 .$
b1010010 .$
b1010011 .$
b1010100 .$
b1010101 .$
b1010110 .$
b1010111 .$
b1011000 .$
b1011001 .$
b1011010 .$
b1011011 .$
b1011100 .$
b1011101 .$
b1011110 .$
b1011111 .$
b1100000 .$
b1100001 .$
b1100010 .$
b1100011 .$
b1100100 .$
b1100101 .$
b1100110 .$
b1100111 .$
b1101000 .$
b1101001 .$
b1101010 .$
b1101011 .$
b1101100 .$
b1101101 .$
b1101110 .$
b1101111 .$
b1110000 .$
b1110001 .$
b1110010 .$
b1110011 .$
b1110100 .$
b1110101 .$
b1110110 .$
b1110111 .$
b1111000 .$
b1111001 .$
b1111010 .$
b1111011 .$
b1111100 .$
b1111101 .$
b1111110 .$
b1111111 .$
b10000000 .$
b10000001 .$
b10000010 .$
b10000011 .$
b10000100 .$
b10000101 .$
b10000110 .$
b10000111 .$
b10001000 .$
b10001001 .$
b10001010 .$
b10001011 .$
b10001100 .$
b10001101 .$
b10001110 .$
b10001111 .$
b10010000 .$
b10010001 .$
b10010010 .$
b10010011 .$
b10010100 .$
b10010101 .$
b10010110 .$
b10010111 .$
b10011000 .$
b10011001 .$
b10011010 .$
b10011011 .$
b10011100 .$
b10011101 .$
b10011110 .$
b10011111 .$
b10100000 .$
b10100001 .$
b10100010 .$
b10100011 .$
b10100100 .$
b10100101 .$
b10100110 .$
b10100111 .$
b10101000 .$
b10101001 .$
b10101010 .$
b10101011 .$
b10101100 .$
b10101101 .$
b10101110 .$
b10101111 .$
b10110000 .$
b10110001 .$
b10110010 .$
b10110011 .$
b10110100 .$
b10110101 .$
b10110110 .$
b10110111 .$
b10111000 .$
b10111001 .$
b10111010 .$
b10111011 .$
b10111100 .$
b10111101 .$
b10111110 .$
b10111111 .$
b11000000 .$
b11000001 .$
b11000010 .$
b11000011 .$
b11000100 .$
b11000101 .$
b11000110 .$
b11000111 .$
b11001000 .$
b11001001 .$
b11001010 .$
b11001011 .$
b11001100 .$
b11001101 .$
b11001110 .$
b11001111 .$
b11010000 .$
b11010001 .$
b11010010 .$
b11010011 .$
b11010100 .$
b11010101 .$
b11010110 .$
b11010111 .$
b11011000 .$
b11011001 .$
b11011010 .$
b11011011 .$
b11011100 .$
b11011101 .$
b11011110 .$
b11011111 .$
b11100000 .$
b11100001 .$
b11100010 .$
b11100011 .$
b11100100 .$
b11100101 .$
b11100110 .$
b11100111 .$
b11101000 .$
b11101001 .$
b11101010 .$
b11101011 .$
b11101100 .$
b11101101 .$
b11101110 .$
b11101111 .$
b11110000 .$
b11110001 .$
b11110010 .$
b11110011 .$
b11110100 .$
b11110101 .$
b11110110 .$
b11110111 .$
b11111000 .$
b11111001 .$
b11111010 .$
b11111011 .$
b11111100 .$
b11111101 .$
b11111110 .$
b11111111 .$
b100000000 .$
b0 1$
b1 1$
b10 1$
b11 1$
b100 1$
b101 1$
b110 1$
b111 1$
b1000 1$
b1001 1$
b1010 1$
b1011 1$
b1100 1$
b1101 1$
b1110 1$
b1111 1$
b10000 1$
b10001 1$
b10010 1$
b10011 1$
b10100 1$
b10101 1$
b10110 1$
b10111 1$
b11000 1$
b11001 1$
b11010 1$
b11011 1$
b11100 1$
b11101 1$
b11110 1$
b11111 1$
b100000 1$
b100001 1$
b100010 1$
b100011 1$
b100100 1$
b100101 1$
b100110 1$
b100111 1$
b101000 1$
b101001 1$
b101010 1$
b101011 1$
b101100 1$
b101101 1$
b101110 1$
b101111 1$
b110000 1$
b110001 1$
b110010 1$
b110011 1$
b110100 1$
b110101 1$
b110110 1$
b110111 1$
b111000 1$
b111001 1$
b111010 1$
b111011 1$
b111100 1$
b111101 1$
b111110 1$
b111111 1$
b1000000 1$
b1000001 1$
b1000010 1$
b1000011 1$
b1000100 1$
b1000101 1$
b1000110 1$
b1000111 1$
b1001000 1$
b1001001 1$
b1001010 1$
b1001011 1$
b1001100 1$
b1001101 1$
b1001110 1$
b1001111 1$
b1010000 1$
b1010001 1$
b1010010 1$
b1010011 1$
b1010100 1$
b1010101 1$
b1010110 1$
b1010111 1$
b1011000 1$
b1011001 1$
b1011010 1$
b1011011 1$
b1011100 1$
b1011101 1$
b1011110 1$
b1011111 1$
b1100000 1$
b1100001 1$
b1100010 1$
b1100011 1$
b1100100 1$
b1100101 1$
b1100110 1$
b1100111 1$
b1101000 1$
b1101001 1$
b1101010 1$
b1101011 1$
b1101100 1$
b1101101 1$
b1101110 1$
b1101111 1$
b1110000 1$
b1110001 1$
b1110010 1$
b1110011 1$
b1110100 1$
b1110101 1$
b1110110 1$
b1110111 1$
b1111000 1$
b1111001 1$
b1111010 1$
b1111011 1$
b1111100 1$
b1111101 1$
b1111110 1$
b1111111 1$
b10000000 1$
b10000001 1$
b10000010 1$
b10000011 1$
b10000100 1$
b10000101 1$
b10000110 1$
b10000111 1$
b10001000 1$
b10001001 1$
b10001010 1$
b10001011 1$
b10001100 1$
b10001101 1$
b10001110 1$
b10001111 1$
b10010000 1$
b10010001 1$
b10010010 1$
b10010011 1$
b10010100 1$
b10010101 1$
b10010110 1$
b10010111 1$
b10011000 1$
b10011001 1$
b10011010 1$
b10011011 1$
b10011100 1$
b10011101 1$
b10011110 1$
b10011111 1$
b10100000 1$
b10100001 1$
b10100010 1$
b10100011 1$
b10100100 1$
b10100101 1$
b10100110 1$
b10100111 1$
b10101000 1$
b10101001 1$
b10101010 1$
b10101011 1$
b10101100 1$
b10101101 1$
b10101110 1$
b10101111 1$
b10110000 1$
b10110001 1$
b10110010 1$
b10110011 1$
b10110100 1$
b10110101 1$
b10110110 1$
b10110111 1$
b10111000 1$
b10111001 1$
b10111010 1$
b10111011 1$
b10111100 1$
b10111101 1$
b10111110 1$
b10111111 1$
b11000000 1$
b11000001 1$
b11000010 1$
b11000011 1$
b11000100 1$
b11000101 1$
b11000110 1$
b11000111 1$
b11001000 1$
b11001001 1$
b11001010 1$
b11001011 1$
b11001100 1$
b11001101 1$
b11001110 1$
b11001111 1$
b11010000 1$
b11010001 1$
b11010010 1$
b11010011 1$
b11010100 1$
b11010101 1$
b11010110 1$
b11010111 1$
b11011000 1$
b11011001 1$
b11011010 1$
b11011011 1$
b11011100 1$
b11011101 1$
b11011110 1$
b11011111 1$
b11100000 1$
b11100001 1$
b11100010 1$
b11100011 1$
b11100100 1$
b11100101 1$
b11100110 1$
b11100111 1$
b11101000 1$
b11101001 1$
b11101010 1$
b11101011 1$
b11101100 1$
b11101101 1$
b11101110 1$
b11101111 1$
b11110000 1$
b11110001 1$
b11110010 1$
b11110011 1$
b11110100 1$
b11110101 1$
b11110110 1$
b11110111 1$
b11111000 1$
b11111001 1$
b11111010 1$
b11111011 1$
b11111100 1$
b11111101 1$
b11111110 1$
b11111111 1$
b100000000 1$
b0 4$
b1 4$
b10 4$
b11 4$
b100 4$
b101 4$
b110 4$
b111 4$
b1000 4$
b1001 4$
b1010 4$
b1011 4$
b1100 4$
b1101 4$
b1110 4$
b1111 4$
b10000 4$
b10001 4$
b10010 4$
b10011 4$
b10100 4$
b10101 4$
b10110 4$
b10111 4$
b11000 4$
b11001 4$
b11010 4$
b11011 4$
b11100 4$
b11101 4$
b11110 4$
b11111 4$
b100000 4$
b100001 4$
b100010 4$
b100011 4$
b100100 4$
b100101 4$
b100110 4$
b100111 4$
b101000 4$
b101001 4$
b101010 4$
b101011 4$
b101100 4$
b101101 4$
b101110 4$
b101111 4$
b110000 4$
b110001 4$
b110010 4$
b110011 4$
b110100 4$
b110101 4$
b110110 4$
b110111 4$
b111000 4$
b111001 4$
b111010 4$
b111011 4$
b111100 4$
b111101 4$
b111110 4$
b111111 4$
b1000000 4$
b1000001 4$
b1000010 4$
b1000011 4$
b1000100 4$
b1000101 4$
b1000110 4$
b1000111 4$
b1001000 4$
b1001001 4$
b1001010 4$
b1001011 4$
b1001100 4$
b1001101 4$
b1001110 4$
b1001111 4$
b1010000 4$
b1010001 4$
b1010010 4$
b1010011 4$
b1010100 4$
b1010101 4$
b1010110 4$
b1010111 4$
b1011000 4$
b1011001 4$
b1011010 4$
b1011011 4$
b1011100 4$
b1011101 4$
b1011110 4$
b1011111 4$
b1100000 4$
b1100001 4$
b1100010 4$
b1100011 4$
b1100100 4$
b1100101 4$
b1100110 4$
b1100111 4$
b1101000 4$
b1101001 4$
b1101010 4$
b1101011 4$
b1101100 4$
b1101101 4$
b1101110 4$
b1101111 4$
b1110000 4$
b1110001 4$
b1110010 4$
b1110011 4$
b1110100 4$
b1110101 4$
b1110110 4$
b1110111 4$
b1111000 4$
b1111001 4$
b1111010 4$
b1111011 4$
b1111100 4$
b1111101 4$
b1111110 4$
b1111111 4$
b10000000 4$
b10000001 4$
b10000010 4$
b10000011 4$
b10000100 4$
b10000101 4$
b10000110 4$
b10000111 4$
b10001000 4$
b10001001 4$
b10001010 4$
b10001011 4$
b10001100 4$
b10001101 4$
b10001110 4$
b10001111 4$
b10010000 4$
b10010001 4$
b10010010 4$
b10010011 4$
b10010100 4$
b10010101 4$
b10010110 4$
b10010111 4$
b10011000 4$
b10011001 4$
b10011010 4$
b10011011 4$
b10011100 4$
b10011101 4$
b10011110 4$
b10011111 4$
b10100000 4$
b10100001 4$
b10100010 4$
b10100011 4$
b10100100 4$
b10100101 4$
b10100110 4$
b10100111 4$
b10101000 4$
b10101001 4$
b10101010 4$
b10101011 4$
b10101100 4$
b10101101 4$
b10101110 4$
b10101111 4$
b10110000 4$
b10110001 4$
b10110010 4$
b10110011 4$
b10110100 4$
b10110101 4$
b10110110 4$
b10110111 4$
b10111000 4$
b10111001 4$
b10111010 4$
b10111011 4$
b10111100 4$
b10111101 4$
b10111110 4$
b10111111 4$
b11000000 4$
b11000001 4$
b11000010 4$
b11000011 4$
b11000100 4$
b11000101 4$
b11000110 4$
b11000111 4$
b11001000 4$
b11001001 4$
b11001010 4$
b11001011 4$
b11001100 4$
b11001101 4$
b11001110 4$
b11001111 4$
b11010000 4$
b11010001 4$
b11010010 4$
b11010011 4$
b11010100 4$
b11010101 4$
b11010110 4$
b11010111 4$
b11011000 4$
b11011001 4$
b11011010 4$
b11011011 4$
b11011100 4$
b11011101 4$
b11011110 4$
b11011111 4$
b11100000 4$
b11100001 4$
b11100010 4$
b11100011 4$
b11100100 4$
b11100101 4$
b11100110 4$
b11100111 4$
b11101000 4$
b11101001 4$
b11101010 4$
b11101011 4$
b11101100 4$
b11101101 4$
b11101110 4$
b11101111 4$
b11110000 4$
b11110001 4$
b11110010 4$
b11110011 4$
b11110100 4$
b11110101 4$
b11110110 4$
b11110111 4$
b11111000 4$
b11111001 4$
b11111010 4$
b11111011 4$
b11111100 4$
b11111101 4$
b11111110 4$
b11111111 4$
b100000000 4$
b0 7$
b1 7$
b10 7$
b11 7$
b100 7$
b101 7$
b110 7$
b111 7$
b1000 7$
b1001 7$
b1010 7$
b1011 7$
b1100 7$
b1101 7$
b1110 7$
b1111 7$
b10000 7$
b10001 7$
b10010 7$
b10011 7$
b10100 7$
b10101 7$
b10110 7$
b10111 7$
b11000 7$
b11001 7$
b11010 7$
b11011 7$
b11100 7$
b11101 7$
b11110 7$
b11111 7$
b100000 7$
b100001 7$
b100010 7$
b100011 7$
b100100 7$
b100101 7$
b100110 7$
b100111 7$
b101000 7$
b101001 7$
b101010 7$
b101011 7$
b101100 7$
b101101 7$
b101110 7$
b101111 7$
b110000 7$
b110001 7$
b110010 7$
b110011 7$
b110100 7$
b110101 7$
b110110 7$
b110111 7$
b111000 7$
b111001 7$
b111010 7$
b111011 7$
b111100 7$
b111101 7$
b111110 7$
b111111 7$
b1000000 7$
b1000001 7$
b1000010 7$
b1000011 7$
b1000100 7$
b1000101 7$
b1000110 7$
b1000111 7$
b1001000 7$
b1001001 7$
b1001010 7$
b1001011 7$
b1001100 7$
b1001101 7$
b1001110 7$
b1001111 7$
b1010000 7$
b1010001 7$
b1010010 7$
b1010011 7$
b1010100 7$
b1010101 7$
b1010110 7$
b1010111 7$
b1011000 7$
b1011001 7$
b1011010 7$
b1011011 7$
b1011100 7$
b1011101 7$
b1011110 7$
b1011111 7$
b1100000 7$
b1100001 7$
b1100010 7$
b1100011 7$
b1100100 7$
b1100101 7$
b1100110 7$
b1100111 7$
b1101000 7$
b1101001 7$
b1101010 7$
b1101011 7$
b1101100 7$
b1101101 7$
b1101110 7$
b1101111 7$
b1110000 7$
b1110001 7$
b1110010 7$
b1110011 7$
b1110100 7$
b1110101 7$
b1110110 7$
b1110111 7$
b1111000 7$
b1111001 7$
b1111010 7$
b1111011 7$
b1111100 7$
b1111101 7$
b1111110 7$
b1111111 7$
b10000000 7$
b10000001 7$
b10000010 7$
b10000011 7$
b10000100 7$
b10000101 7$
b10000110 7$
b10000111 7$
b10001000 7$
b10001001 7$
b10001010 7$
b10001011 7$
b10001100 7$
b10001101 7$
b10001110 7$
b10001111 7$
b10010000 7$
b10010001 7$
b10010010 7$
b10010011 7$
b10010100 7$
b10010101 7$
b10010110 7$
b10010111 7$
b10011000 7$
b10011001 7$
b10011010 7$
b10011011 7$
b10011100 7$
b10011101 7$
b10011110 7$
b10011111 7$
b10100000 7$
b10100001 7$
b10100010 7$
b10100011 7$
b10100100 7$
b10100101 7$
b10100110 7$
b10100111 7$
b10101000 7$
b10101001 7$
b10101010 7$
b10101011 7$
b10101100 7$
b10101101 7$
b10101110 7$
b10101111 7$
b10110000 7$
b10110001 7$
b10110010 7$
b10110011 7$
b10110100 7$
b10110101 7$
b10110110 7$
b10110111 7$
b10111000 7$
b10111001 7$
b10111010 7$
b10111011 7$
b10111100 7$
b10111101 7$
b10111110 7$
b10111111 7$
b11000000 7$
b11000001 7$
b11000010 7$
b11000011 7$
b11000100 7$
b11000101 7$
b11000110 7$
b11000111 7$
b11001000 7$
b11001001 7$
b11001010 7$
b11001011 7$
b11001100 7$
b11001101 7$
b11001110 7$
b11001111 7$
b11010000 7$
b11010001 7$
b11010010 7$
b11010011 7$
b11010100 7$
b11010101 7$
b11010110 7$
b11010111 7$
b11011000 7$
b11011001 7$
b11011010 7$
b11011011 7$
b11011100 7$
b11011101 7$
b11011110 7$
b11011111 7$
b11100000 7$
b11100001 7$
b11100010 7$
b11100011 7$
b11100100 7$
b11100101 7$
b11100110 7$
b11100111 7$
b11101000 7$
b11101001 7$
b11101010 7$
b11101011 7$
b11101100 7$
b11101101 7$
b11101110 7$
b11101111 7$
b11110000 7$
b11110001 7$
b11110010 7$
b11110011 7$
b11110100 7$
b11110101 7$
b11110110 7$
b11110111 7$
b11111000 7$
b11111001 7$
b11111010 7$
b11111011 7$
b11111100 7$
b11111101 7$
b11111110 7$
b11111111 7$
b100000000 7$
b0 :$
b1 :$
b10 :$
b11 :$
b100 :$
b101 :$
b110 :$
b111 :$
b1000 :$
b1001 :$
b1010 :$
b1011 :$
b1100 :$
b1101 :$
b1110 :$
b1111 :$
b10000 :$
b10001 :$
b10010 :$
b10011 :$
b10100 :$
b10101 :$
b10110 :$
b10111 :$
b11000 :$
b11001 :$
b11010 :$
b11011 :$
b11100 :$
b11101 :$
b11110 :$
b11111 :$
b100000 :$
b100001 :$
b100010 :$
b100011 :$
b100100 :$
b100101 :$
b100110 :$
b100111 :$
b101000 :$
b101001 :$
b101010 :$
b101011 :$
b101100 :$
b101101 :$
b101110 :$
b101111 :$
b110000 :$
b110001 :$
b110010 :$
b110011 :$
b110100 :$
b110101 :$
b110110 :$
b110111 :$
b111000 :$
b111001 :$
b111010 :$
b111011 :$
b111100 :$
b111101 :$
b111110 :$
b111111 :$
b1000000 :$
b1000001 :$
b1000010 :$
b1000011 :$
b1000100 :$
b1000101 :$
b1000110 :$
b1000111 :$
b1001000 :$
b1001001 :$
b1001010 :$
b1001011 :$
b1001100 :$
b1001101 :$
b1001110 :$
b1001111 :$
b1010000 :$
b1010001 :$
b1010010 :$
b1010011 :$
b1010100 :$
b1010101 :$
b1010110 :$
b1010111 :$
b1011000 :$
b1011001 :$
b1011010 :$
b1011011 :$
b1011100 :$
b1011101 :$
b1011110 :$
b1011111 :$
b1100000 :$
b1100001 :$
b1100010 :$
b1100011 :$
b1100100 :$
b1100101 :$
b1100110 :$
b1100111 :$
b1101000 :$
b1101001 :$
b1101010 :$
b1101011 :$
b1101100 :$
b1101101 :$
b1101110 :$
b1101111 :$
b1110000 :$
b1110001 :$
b1110010 :$
b1110011 :$
b1110100 :$
b1110101 :$
b1110110 :$
b1110111 :$
b1111000 :$
b1111001 :$
b1111010 :$
b1111011 :$
b1111100 :$
b1111101 :$
b1111110 :$
b1111111 :$
b10000000 :$
b10000001 :$
b10000010 :$
b10000011 :$
b10000100 :$
b10000101 :$
b10000110 :$
b10000111 :$
b10001000 :$
b10001001 :$
b10001010 :$
b10001011 :$
b10001100 :$
b10001101 :$
b10001110 :$
b10001111 :$
b10010000 :$
b10010001 :$
b10010010 :$
b10010011 :$
b10010100 :$
b10010101 :$
b10010110 :$
b10010111 :$
b10011000 :$
b10011001 :$
b10011010 :$
b10011011 :$
b10011100 :$
b10011101 :$
b10011110 :$
b10011111 :$
b10100000 :$
b10100001 :$
b10100010 :$
b10100011 :$
b10100100 :$
b10100101 :$
b10100110 :$
b10100111 :$
b10101000 :$
b10101001 :$
b10101010 :$
b10101011 :$
b10101100 :$
b10101101 :$
b10101110 :$
b10101111 :$
b10110000 :$
b10110001 :$
b10110010 :$
b10110011 :$
b10110100 :$
b10110101 :$
b10110110 :$
b10110111 :$
b10111000 :$
b10111001 :$
b10111010 :$
b10111011 :$
b10111100 :$
b10111101 :$
b10111110 :$
b10111111 :$
b11000000 :$
b11000001 :$
b11000010 :$
b11000011 :$
b11000100 :$
b11000101 :$
b11000110 :$
b11000111 :$
b11001000 :$
b11001001 :$
b11001010 :$
b11001011 :$
b11001100 :$
b11001101 :$
b11001110 :$
b11001111 :$
b11010000 :$
b11010001 :$
b11010010 :$
b11010011 :$
b11010100 :$
b11010101 :$
b11010110 :$
b11010111 :$
b11011000 :$
b11011001 :$
b11011010 :$
b11011011 :$
b11011100 :$
b11011101 :$
b11011110 :$
b11011111 :$
b11100000 :$
b11100001 :$
b11100010 :$
b11100011 :$
b11100100 :$
b11100101 :$
b11100110 :$
b11100111 :$
b11101000 :$
b11101001 :$
b11101010 :$
b11101011 :$
b11101100 :$
b11101101 :$
b11101110 :$
b11101111 :$
b11110000 :$
b11110001 :$
b11110010 :$
b11110011 :$
b11110100 :$
b11110101 :$
b11110110 :$
b11110111 :$
b11111000 :$
b11111001 :$
b11111010 :$
b11111011 :$
b11111100 :$
b11111101 :$
b11111110 :$
b11111111 :$
b100000000 :$
b0 <$
b1 <$
b10 <$
b11 <$
b100 <$
b101 <$
b110 <$
b111 <$
b1000 <$
b1001 <$
b1010 <$
b1011 <$
b1100 <$
b1101 <$
b1110 <$
b1111 <$
b10000 <$
b10001 <$
b10010 <$
b10011 <$
b10100 <$
b10101 <$
b10110 <$
b10111 <$
b11000 <$
b11001 <$
b11010 <$
b11011 <$
b11100 <$
b11101 <$
b11110 <$
b11111 <$
b100000 <$
b100001 <$
b100010 <$
b100011 <$
b100100 <$
b100101 <$
b100110 <$
b100111 <$
b101000 <$
b101001 <$
b101010 <$
b101011 <$
b101100 <$
b101101 <$
b101110 <$
b101111 <$
b110000 <$
b110001 <$
b110010 <$
b110011 <$
b110100 <$
b110101 <$
b110110 <$
b110111 <$
b111000 <$
b111001 <$
b111010 <$
b111011 <$
b111100 <$
b111101 <$
b111110 <$
b111111 <$
b1000000 <$
b1000001 <$
b1000010 <$
b1000011 <$
b1000100 <$
b1000101 <$
b1000110 <$
b1000111 <$
b1001000 <$
b1001001 <$
b1001010 <$
b1001011 <$
b1001100 <$
b1001101 <$
b1001110 <$
b1001111 <$
b1010000 <$
b1010001 <$
b1010010 <$
b1010011 <$
b1010100 <$
b1010101 <$
b1010110 <$
b1010111 <$
b1011000 <$
b1011001 <$
b1011010 <$
b1011011 <$
b1011100 <$
b1011101 <$
b1011110 <$
b1011111 <$
b1100000 <$
b1100001 <$
b1100010 <$
b1100011 <$
b1100100 <$
b1100101 <$
b1100110 <$
b1100111 <$
b1101000 <$
b1101001 <$
b1101010 <$
b1101011 <$
b1101100 <$
b1101101 <$
b1101110 <$
b1101111 <$
b1110000 <$
b1110001 <$
b1110010 <$
b1110011 <$
b1110100 <$
b1110101 <$
b1110110 <$
b1110111 <$
b1111000 <$
b1111001 <$
b1111010 <$
b1111011 <$
b1111100 <$
b1111101 <$
b1111110 <$
b1111111 <$
b10000000 <$
b10000001 <$
b10000010 <$
b10000011 <$
b10000100 <$
b10000101 <$
b10000110 <$
b10000111 <$
b10001000 <$
b10001001 <$
b10001010 <$
b10001011 <$
b10001100 <$
b10001101 <$
b10001110 <$
b10001111 <$
b10010000 <$
b10010001 <$
b10010010 <$
b10010011 <$
b10010100 <$
b10010101 <$
b10010110 <$
b10010111 <$
b10011000 <$
b10011001 <$
b10011010 <$
b10011011 <$
b10011100 <$
b10011101 <$
b10011110 <$
b10011111 <$
b10100000 <$
b10100001 <$
b10100010 <$
b10100011 <$
b10100100 <$
b10100101 <$
b10100110 <$
b10100111 <$
b10101000 <$
b10101001 <$
b10101010 <$
b10101011 <$
b10101100 <$
b10101101 <$
b10101110 <$
b10101111 <$
b10110000 <$
b10110001 <$
b10110010 <$
b10110011 <$
b10110100 <$
b10110101 <$
b10110110 <$
b10110111 <$
b10111000 <$
b10111001 <$
b10111010 <$
b10111011 <$
b10111100 <$
b10111101 <$
b10111110 <$
b10111111 <$
b11000000 <$
b11000001 <$
b11000010 <$
b11000011 <$
b11000100 <$
b11000101 <$
b11000110 <$
b11000111 <$
b11001000 <$
b11001001 <$
b11001010 <$
b11001011 <$
b11001100 <$
b11001101 <$
b11001110 <$
b11001111 <$
b11010000 <$
b11010001 <$
b11010010 <$
b11010011 <$
b11010100 <$
b11010101 <$
b11010110 <$
b11010111 <$
b11011000 <$
b11011001 <$
b11011010 <$
b11011011 <$
b11011100 <$
b11011101 <$
b11011110 <$
b11011111 <$
b11100000 <$
b11100001 <$
b11100010 <$
b11100011 <$
b11100100 <$
b11100101 <$
b11100110 <$
b11100111 <$
b11101000 <$
b11101001 <$
b11101010 <$
b11101011 <$
b11101100 <$
b11101101 <$
b11101110 <$
b11101111 <$
b11110000 <$
b11110001 <$
b11110010 <$
b11110011 <$
b11110100 <$
b11110101 <$
b11110110 <$
b11110111 <$
b11111000 <$
b11111001 <$
b11111010 <$
b11111011 <$
b11111100 <$
b11111101 <$
b11111110 <$
b11111111 <$
b100000000 <$
b0 L%
b1 L%
b10 L%
b11 L%
b100 L%
b101 L%
b110 L%
b111 L%
b1000 L%
b1001 L%
b1010 L%
b1011 L%
b1100 L%
b1101 L%
b1110 L%
b1111 L%
b10000 L%
b10001 L%
b10010 L%
b10011 L%
b10100 L%
b10101 L%
b10110 L%
b10111 L%
b11000 L%
b11001 L%
b11010 L%
b11011 L%
b11100 L%
b11101 L%
b11110 L%
b11111 L%
b100000 L%
b100001 L%
b100010 L%
b100011 L%
b100100 L%
b100101 L%
b100110 L%
b100111 L%
b101000 L%
b101001 L%
b101010 L%
b101011 L%
b101100 L%
b101101 L%
b101110 L%
b101111 L%
b110000 L%
b110001 L%
b110010 L%
b110011 L%
b110100 L%
b110101 L%
b110110 L%
b110111 L%
b111000 L%
b111001 L%
b111010 L%
b111011 L%
b111100 L%
b111101 L%
b111110 L%
b111111 L%
b1000000 L%
b1000001 L%
b1000010 L%
b1000011 L%
b1000100 L%
b1000101 L%
b1000110 L%
b1000111 L%
b1001000 L%
b1001001 L%
b1001010 L%
b1001011 L%
b1001100 L%
b1001101 L%
b1001110 L%
b1001111 L%
b1010000 L%
b1010001 L%
b1010010 L%
b1010011 L%
b1010100 L%
b1010101 L%
b1010110 L%
b1010111 L%
b1011000 L%
b1011001 L%
b1011010 L%
b1011011 L%
b1011100 L%
b1011101 L%
b1011110 L%
b1011111 L%
b1100000 L%
b1100001 L%
b1100010 L%
b1100011 L%
b1100100 L%
b1100101 L%
b1100110 L%
b1100111 L%
b1101000 L%
b1101001 L%
b1101010 L%
b1101011 L%
b1101100 L%
b1101101 L%
b1101110 L%
b1101111 L%
b1110000 L%
b1110001 L%
b1110010 L%
b1110011 L%
b1110100 L%
b1110101 L%
b1110110 L%
b1110111 L%
b1111000 L%
b1111001 L%
b1111010 L%
b1111011 L%
b1111100 L%
b1111101 L%
b1111110 L%
b1111111 L%
b10000000 L%
b10000001 L%
b10000010 L%
b10000011 L%
b10000100 L%
b10000101 L%
b10000110 L%
b10000111 L%
b10001000 L%
b10001001 L%
b10001010 L%
b10001011 L%
b10001100 L%
b10001101 L%
b10001110 L%
b10001111 L%
b10010000 L%
b10010001 L%
b10010010 L%
b10010011 L%
b10010100 L%
b10010101 L%
b10010110 L%
b10010111 L%
b10011000 L%
b10011001 L%
b10011010 L%
b10011011 L%
b10011100 L%
b10011101 L%
b10011110 L%
b10011111 L%
b10100000 L%
b10100001 L%
b10100010 L%
b10100011 L%
b10100100 L%
b10100101 L%
b10100110 L%
b10100111 L%
b10101000 L%
b10101001 L%
b10101010 L%
b10101011 L%
b10101100 L%
b10101101 L%
b10101110 L%
b10101111 L%
b10110000 L%
b10110001 L%
b10110010 L%
b10110011 L%
b10110100 L%
b10110101 L%
b10110110 L%
b10110111 L%
b10111000 L%
b10111001 L%
b10111010 L%
b10111011 L%
b10111100 L%
b10111101 L%
b10111110 L%
b10111111 L%
b11000000 L%
b11000001 L%
b11000010 L%
b11000011 L%
b11000100 L%
b11000101 L%
b11000110 L%
b11000111 L%
b11001000 L%
b11001001 L%
b11001010 L%
b11001011 L%
b11001100 L%
b11001101 L%
b11001110 L%
b11001111 L%
b11010000 L%
b11010001 L%
b11010010 L%
b11010011 L%
b11010100 L%
b11010101 L%
b11010110 L%
b11010111 L%
b11011000 L%
b11011001 L%
b11011010 L%
b11011011 L%
b11011100 L%
b11011101 L%
b11011110 L%
b11011111 L%
b11100000 L%
b11100001 L%
b11100010 L%
b11100011 L%
b11100100 L%
b11100101 L%
b11100110 L%
b11100111 L%
b11101000 L%
b11101001 L%
b11101010 L%
b11101011 L%
b11101100 L%
b11101101 L%
b11101110 L%
b11101111 L%
b11110000 L%
b11110001 L%
b11110010 L%
b11110011 L%
b11110100 L%
b11110101 L%
b11110110 L%
b11110111 L%
b11111000 L%
b11111001 L%
b11111010 L%
b11111011 L%
b11111100 L%
b11111101 L%
b11111110 L%
b11111111 L%
b100000000 L%
b0 O%
b1 O%
b10 O%
b11 O%
b100 O%
b101 O%
b110 O%
b111 O%
b1000 O%
b1001 O%
b1010 O%
b1011 O%
b1100 O%
b1101 O%
b1110 O%
b1111 O%
b10000 O%
b10001 O%
b10010 O%
b10011 O%
b10100 O%
b10101 O%
b10110 O%
b10111 O%
b11000 O%
b11001 O%
b11010 O%
b11011 O%
b11100 O%
b11101 O%
b11110 O%
b11111 O%
b100000 O%
b100001 O%
b100010 O%
b100011 O%
b100100 O%
b100101 O%
b100110 O%
b100111 O%
b101000 O%
b101001 O%
b101010 O%
b101011 O%
b101100 O%
b101101 O%
b101110 O%
b101111 O%
b110000 O%
b110001 O%
b110010 O%
b110011 O%
b110100 O%
b110101 O%
b110110 O%
b110111 O%
b111000 O%
b111001 O%
b111010 O%
b111011 O%
b111100 O%
b111101 O%
b111110 O%
b111111 O%
b1000000 O%
b1000001 O%
b1000010 O%
b1000011 O%
b1000100 O%
b1000101 O%
b1000110 O%
b1000111 O%
b1001000 O%
b1001001 O%
b1001010 O%
b1001011 O%
b1001100 O%
b1001101 O%
b1001110 O%
b1001111 O%
b1010000 O%
b1010001 O%
b1010010 O%
b1010011 O%
b1010100 O%
b1010101 O%
b1010110 O%
b1010111 O%
b1011000 O%
b1011001 O%
b1011010 O%
b1011011 O%
b1011100 O%
b1011101 O%
b1011110 O%
b1011111 O%
b1100000 O%
b1100001 O%
b1100010 O%
b1100011 O%
b1100100 O%
b1100101 O%
b1100110 O%
b1100111 O%
b1101000 O%
b1101001 O%
b1101010 O%
b1101011 O%
b1101100 O%
b1101101 O%
b1101110 O%
b1101111 O%
b1110000 O%
b1110001 O%
b1110010 O%
b1110011 O%
b1110100 O%
b1110101 O%
b1110110 O%
b1110111 O%
b1111000 O%
b1111001 O%
b1111010 O%
b1111011 O%
b1111100 O%
b1111101 O%
b1111110 O%
b1111111 O%
b10000000 O%
b10000001 O%
b10000010 O%
b10000011 O%
b10000100 O%
b10000101 O%
b10000110 O%
b10000111 O%
b10001000 O%
b10001001 O%
b10001010 O%
b10001011 O%
b10001100 O%
b10001101 O%
b10001110 O%
b10001111 O%
b10010000 O%
b10010001 O%
b10010010 O%
b10010011 O%
b10010100 O%
b10010101 O%
b10010110 O%
b10010111 O%
b10011000 O%
b10011001 O%
b10011010 O%
b10011011 O%
b10011100 O%
b10011101 O%
b10011110 O%
b10011111 O%
b10100000 O%
b10100001 O%
b10100010 O%
b10100011 O%
b10100100 O%
b10100101 O%
b10100110 O%
b10100111 O%
b10101000 O%
b10101001 O%
b10101010 O%
b10101011 O%
b10101100 O%
b10101101 O%
b10101110 O%
b10101111 O%
b10110000 O%
b10110001 O%
b10110010 O%
b10110011 O%
b10110100 O%
b10110101 O%
b10110110 O%
b10110111 O%
b10111000 O%
b10111001 O%
b10111010 O%
b10111011 O%
b10111100 O%
b10111101 O%
b10111110 O%
b10111111 O%
b11000000 O%
b11000001 O%
b11000010 O%
b11000011 O%
b11000100 O%
b11000101 O%
b11000110 O%
b11000111 O%
b11001000 O%
b11001001 O%
b11001010 O%
b11001011 O%
b11001100 O%
b11001101 O%
b11001110 O%
b11001111 O%
b11010000 O%
b11010001 O%
b11010010 O%
b11010011 O%
b11010100 O%
b11010101 O%
b11010110 O%
b11010111 O%
b11011000 O%
b11011001 O%
b11011010 O%
b11011011 O%
b11011100 O%
b11011101 O%
b11011110 O%
b11011111 O%
b11100000 O%
b11100001 O%
b11100010 O%
b11100011 O%
b11100100 O%
b11100101 O%
b11100110 O%
b11100111 O%
b11101000 O%
b11101001 O%
b11101010 O%
b11101011 O%
b11101100 O%
b11101101 O%
b11101110 O%
b11101111 O%
b11110000 O%
b11110001 O%
b11110010 O%
b11110011 O%
b11110100 O%
b11110101 O%
b11110110 O%
b11110111 O%
b11111000 O%
b11111001 O%
b11111010 O%
b11111011 O%
b11111100 O%
b11111101 O%
b11111110 O%
b11111111 O%
b100000000 O%
b0 R%
b1 R%
b10 R%
b11 R%
b100 R%
b101 R%
b110 R%
b111 R%
b1000 R%
b1001 R%
b1010 R%
b1011 R%
b1100 R%
b1101 R%
b1110 R%
b1111 R%
b10000 R%
b10001 R%
b10010 R%
b10011 R%
b10100 R%
b10101 R%
b10110 R%
b10111 R%
b11000 R%
b11001 R%
b11010 R%
b11011 R%
b11100 R%
b11101 R%
b11110 R%
b11111 R%
b100000 R%
b100001 R%
b100010 R%
b100011 R%
b100100 R%
b100101 R%
b100110 R%
b100111 R%
b101000 R%
b101001 R%
b101010 R%
b101011 R%
b101100 R%
b101101 R%
b101110 R%
b101111 R%
b110000 R%
b110001 R%
b110010 R%
b110011 R%
b110100 R%
b110101 R%
b110110 R%
b110111 R%
b111000 R%
b111001 R%
b111010 R%
b111011 R%
b111100 R%
b111101 R%
b111110 R%
b111111 R%
b1000000 R%
b1000001 R%
b1000010 R%
b1000011 R%
b1000100 R%
b1000101 R%
b1000110 R%
b1000111 R%
b1001000 R%
b1001001 R%
b1001010 R%
b1001011 R%
b1001100 R%
b1001101 R%
b1001110 R%
b1001111 R%
b1010000 R%
b1010001 R%
b1010010 R%
b1010011 R%
b1010100 R%
b1010101 R%
b1010110 R%
b1010111 R%
b1011000 R%
b1011001 R%
b1011010 R%
b1011011 R%
b1011100 R%
b1011101 R%
b1011110 R%
b1011111 R%
b1100000 R%
b1100001 R%
b1100010 R%
b1100011 R%
b1100100 R%
b1100101 R%
b1100110 R%
b1100111 R%
b1101000 R%
b1101001 R%
b1101010 R%
b1101011 R%
b1101100 R%
b1101101 R%
b1101110 R%
b1101111 R%
b1110000 R%
b1110001 R%
b1110010 R%
b1110011 R%
b1110100 R%
b1110101 R%
b1110110 R%
b1110111 R%
b1111000 R%
b1111001 R%
b1111010 R%
b1111011 R%
b1111100 R%
b1111101 R%
b1111110 R%
b1111111 R%
b10000000 R%
b10000001 R%
b10000010 R%
b10000011 R%
b10000100 R%
b10000101 R%
b10000110 R%
b10000111 R%
b10001000 R%
b10001001 R%
b10001010 R%
b10001011 R%
b10001100 R%
b10001101 R%
b10001110 R%
b10001111 R%
b10010000 R%
b10010001 R%
b10010010 R%
b10010011 R%
b10010100 R%
b10010101 R%
b10010110 R%
b10010111 R%
b10011000 R%
b10011001 R%
b10011010 R%
b10011011 R%
b10011100 R%
b10011101 R%
b10011110 R%
b10011111 R%
b10100000 R%
b10100001 R%
b10100010 R%
b10100011 R%
b10100100 R%
b10100101 R%
b10100110 R%
b10100111 R%
b10101000 R%
b10101001 R%
b10101010 R%
b10101011 R%
b10101100 R%
b10101101 R%
b10101110 R%
b10101111 R%
b10110000 R%
b10110001 R%
b10110010 R%
b10110011 R%
b10110100 R%
b10110101 R%
b10110110 R%
b10110111 R%
b10111000 R%
b10111001 R%
b10111010 R%
b10111011 R%
b10111100 R%
b10111101 R%
b10111110 R%
b10111111 R%
b11000000 R%
b11000001 R%
b11000010 R%
b11000011 R%
b11000100 R%
b11000101 R%
b11000110 R%
b11000111 R%
b11001000 R%
b11001001 R%
b11001010 R%
b11001011 R%
b11001100 R%
b11001101 R%
b11001110 R%
b11001111 R%
b11010000 R%
b11010001 R%
b11010010 R%
b11010011 R%
b11010100 R%
b11010101 R%
b11010110 R%
b11010111 R%
b11011000 R%
b11011001 R%
b11011010 R%
b11011011 R%
b11011100 R%
b11011101 R%
b11011110 R%
b11011111 R%
b11100000 R%
b11100001 R%
b11100010 R%
b11100011 R%
b11100100 R%
b11100101 R%
b11100110 R%
b11100111 R%
b11101000 R%
b11101001 R%
b11101010 R%
b11101011 R%
b11101100 R%
b11101101 R%
b11101110 R%
b11101111 R%
b11110000 R%
b11110001 R%
b11110010 R%
b11110011 R%
b11110100 R%
b11110101 R%
b11110110 R%
b11110111 R%
b11111000 R%
b11111001 R%
b11111010 R%
b11111011 R%
b11111100 R%
b11111101 R%
b11111110 R%
b11111111 R%
b100000000 R%
b0 U%
b1 U%
b10 U%
b11 U%
b100 U%
b101 U%
b110 U%
b111 U%
b1000 U%
b1001 U%
b1010 U%
b1011 U%
b1100 U%
b1101 U%
b1110 U%
b1111 U%
b10000 U%
b10001 U%
b10010 U%
b10011 U%
b10100 U%
b10101 U%
b10110 U%
b10111 U%
b11000 U%
b11001 U%
b11010 U%
b11011 U%
b11100 U%
b11101 U%
b11110 U%
b11111 U%
b100000 U%
b100001 U%
b100010 U%
b100011 U%
b100100 U%
b100101 U%
b100110 U%
b100111 U%
b101000 U%
b101001 U%
b101010 U%
b101011 U%
b101100 U%
b101101 U%
b101110 U%
b101111 U%
b110000 U%
b110001 U%
b110010 U%
b110011 U%
b110100 U%
b110101 U%
b110110 U%
b110111 U%
b111000 U%
b111001 U%
b111010 U%
b111011 U%
b111100 U%
b111101 U%
b111110 U%
b111111 U%
b1000000 U%
b1000001 U%
b1000010 U%
b1000011 U%
b1000100 U%
b1000101 U%
b1000110 U%
b1000111 U%
b1001000 U%
b1001001 U%
b1001010 U%
b1001011 U%
b1001100 U%
b1001101 U%
b1001110 U%
b1001111 U%
b1010000 U%
b1010001 U%
b1010010 U%
b1010011 U%
b1010100 U%
b1010101 U%
b1010110 U%
b1010111 U%
b1011000 U%
b1011001 U%
b1011010 U%
b1011011 U%
b1011100 U%
b1011101 U%
b1011110 U%
b1011111 U%
b1100000 U%
b1100001 U%
b1100010 U%
b1100011 U%
b1100100 U%
b1100101 U%
b1100110 U%
b1100111 U%
b1101000 U%
b1101001 U%
b1101010 U%
b1101011 U%
b1101100 U%
b1101101 U%
b1101110 U%
b1101111 U%
b1110000 U%
b1110001 U%
b1110010 U%
b1110011 U%
b1110100 U%
b1110101 U%
b1110110 U%
b1110111 U%
b1111000 U%
b1111001 U%
b1111010 U%
b1111011 U%
b1111100 U%
b1111101 U%
b1111110 U%
b1111111 U%
b10000000 U%
b10000001 U%
b10000010 U%
b10000011 U%
b10000100 U%
b10000101 U%
b10000110 U%
b10000111 U%
b10001000 U%
b10001001 U%
b10001010 U%
b10001011 U%
b10001100 U%
b10001101 U%
b10001110 U%
b10001111 U%
b10010000 U%
b10010001 U%
b10010010 U%
b10010011 U%
b10010100 U%
b10010101 U%
b10010110 U%
b10010111 U%
b10011000 U%
b10011001 U%
b10011010 U%
b10011011 U%
b10011100 U%
b10011101 U%
b10011110 U%
b10011111 U%
b10100000 U%
b10100001 U%
b10100010 U%
b10100011 U%
b10100100 U%
b10100101 U%
b10100110 U%
b10100111 U%
b10101000 U%
b10101001 U%
b10101010 U%
b10101011 U%
b10101100 U%
b10101101 U%
b10101110 U%
b10101111 U%
b10110000 U%
b10110001 U%
b10110010 U%
b10110011 U%
b10110100 U%
b10110101 U%
b10110110 U%
b10110111 U%
b10111000 U%
b10111001 U%
b10111010 U%
b10111011 U%
b10111100 U%
b10111101 U%
b10111110 U%
b10111111 U%
b11000000 U%
b11000001 U%
b11000010 U%
b11000011 U%
b11000100 U%
b11000101 U%
b11000110 U%
b11000111 U%
b11001000 U%
b11001001 U%
b11001010 U%
b11001011 U%
b11001100 U%
b11001101 U%
b11001110 U%
b11001111 U%
b11010000 U%
b11010001 U%
b11010010 U%
b11010011 U%
b11010100 U%
b11010101 U%
b11010110 U%
b11010111 U%
b11011000 U%
b11011001 U%
b11011010 U%
b11011011 U%
b11011100 U%
b11011101 U%
b11011110 U%
b11011111 U%
b11100000 U%
b11100001 U%
b11100010 U%
b11100011 U%
b11100100 U%
b11100101 U%
b11100110 U%
b11100111 U%
b11101000 U%
b11101001 U%
b11101010 U%
b11101011 U%
b11101100 U%
b11101101 U%
b11101110 U%
b11101111 U%
b11110000 U%
b11110001 U%
b11110010 U%
b11110011 U%
b11110100 U%
b11110101 U%
b11110110 U%
b11110111 U%
b11111000 U%
b11111001 U%
b11111010 U%
b11111011 U%
b11111100 U%
b11111101 U%
b11111110 U%
b11111111 U%
b100000000 U%
b0 X%
b1 X%
b10 X%
b11 X%
b100 X%
b101 X%
b110 X%
b111 X%
b1000 X%
b1001 X%
b1010 X%
b1011 X%
b1100 X%
b1101 X%
b1110 X%
b1111 X%
b10000 X%
b10001 X%
b10010 X%
b10011 X%
b10100 X%
b10101 X%
b10110 X%
b10111 X%
b11000 X%
b11001 X%
b11010 X%
b11011 X%
b11100 X%
b11101 X%
b11110 X%
b11111 X%
b100000 X%
b100001 X%
b100010 X%
b100011 X%
b100100 X%
b100101 X%
b100110 X%
b100111 X%
b101000 X%
b101001 X%
b101010 X%
b101011 X%
b101100 X%
b101101 X%
b101110 X%
b101111 X%
b110000 X%
b110001 X%
b110010 X%
b110011 X%
b110100 X%
b110101 X%
b110110 X%
b110111 X%
b111000 X%
b111001 X%
b111010 X%
b111011 X%
b111100 X%
b111101 X%
b111110 X%
b111111 X%
b1000000 X%
b1000001 X%
b1000010 X%
b1000011 X%
b1000100 X%
b1000101 X%
b1000110 X%
b1000111 X%
b1001000 X%
b1001001 X%
b1001010 X%
b1001011 X%
b1001100 X%
b1001101 X%
b1001110 X%
b1001111 X%
b1010000 X%
b1010001 X%
b1010010 X%
b1010011 X%
b1010100 X%
b1010101 X%
b1010110 X%
b1010111 X%
b1011000 X%
b1011001 X%
b1011010 X%
b1011011 X%
b1011100 X%
b1011101 X%
b1011110 X%
b1011111 X%
b1100000 X%
b1100001 X%
b1100010 X%
b1100011 X%
b1100100 X%
b1100101 X%
b1100110 X%
b1100111 X%
b1101000 X%
b1101001 X%
b1101010 X%
b1101011 X%
b1101100 X%
b1101101 X%
b1101110 X%
b1101111 X%
b1110000 X%
b1110001 X%
b1110010 X%
b1110011 X%
b1110100 X%
b1110101 X%
b1110110 X%
b1110111 X%
b1111000 X%
b1111001 X%
b1111010 X%
b1111011 X%
b1111100 X%
b1111101 X%
b1111110 X%
b1111111 X%
b10000000 X%
b10000001 X%
b10000010 X%
b10000011 X%
b10000100 X%
b10000101 X%
b10000110 X%
b10000111 X%
b10001000 X%
b10001001 X%
b10001010 X%
b10001011 X%
b10001100 X%
b10001101 X%
b10001110 X%
b10001111 X%
b10010000 X%
b10010001 X%
b10010010 X%
b10010011 X%
b10010100 X%
b10010101 X%
b10010110 X%
b10010111 X%
b10011000 X%
b10011001 X%
b10011010 X%
b10011011 X%
b10011100 X%
b10011101 X%
b10011110 X%
b10011111 X%
b10100000 X%
b10100001 X%
b10100010 X%
b10100011 X%
b10100100 X%
b10100101 X%
b10100110 X%
b10100111 X%
b10101000 X%
b10101001 X%
b10101010 X%
b10101011 X%
b10101100 X%
b10101101 X%
b10101110 X%
b10101111 X%
b10110000 X%
b10110001 X%
b10110010 X%
b10110011 X%
b10110100 X%
b10110101 X%
b10110110 X%
b10110111 X%
b10111000 X%
b10111001 X%
b10111010 X%
b10111011 X%
b10111100 X%
b10111101 X%
b10111110 X%
b10111111 X%
b11000000 X%
b11000001 X%
b11000010 X%
b11000011 X%
b11000100 X%
b11000101 X%
b11000110 X%
b11000111 X%
b11001000 X%
b11001001 X%
b11001010 X%
b11001011 X%
b11001100 X%
b11001101 X%
b11001110 X%
b11001111 X%
b11010000 X%
b11010001 X%
b11010010 X%
b11010011 X%
b11010100 X%
b11010101 X%
b11010110 X%
b11010111 X%
b11011000 X%
b11011001 X%
b11011010 X%
b11011011 X%
b11011100 X%
b11011101 X%
b11011110 X%
b11011111 X%
b11100000 X%
b11100001 X%
b11100010 X%
b11100011 X%
b11100100 X%
b11100101 X%
b11100110 X%
b11100111 X%
b11101000 X%
b11101001 X%
b11101010 X%
b11101011 X%
b11101100 X%
b11101101 X%
b11101110 X%
b11101111 X%
b11110000 X%
b11110001 X%
b11110010 X%
b11110011 X%
b11110100 X%
b11110101 X%
b11110110 X%
b11110111 X%
b11111000 X%
b11111001 X%
b11111010 X%
b11111011 X%
b11111100 X%
b11111101 X%
b11111110 X%
b11111111 X%
b100000000 X%
b0 [%
b1 [%
b10 [%
b11 [%
b100 [%
b101 [%
b110 [%
b111 [%
b1000 [%
b1001 [%
b1010 [%
b1011 [%
b1100 [%
b1101 [%
b1110 [%
b1111 [%
b10000 [%
b10001 [%
b10010 [%
b10011 [%
b10100 [%
b10101 [%
b10110 [%
b10111 [%
b11000 [%
b11001 [%
b11010 [%
b11011 [%
b11100 [%
b11101 [%
b11110 [%
b11111 [%
b100000 [%
b100001 [%
b100010 [%
b100011 [%
b100100 [%
b100101 [%
b100110 [%
b100111 [%
b101000 [%
b101001 [%
b101010 [%
b101011 [%
b101100 [%
b101101 [%
b101110 [%
b101111 [%
b110000 [%
b110001 [%
b110010 [%
b110011 [%
b110100 [%
b110101 [%
b110110 [%
b110111 [%
b111000 [%
b111001 [%
b111010 [%
b111011 [%
b111100 [%
b111101 [%
b111110 [%
b111111 [%
b1000000 [%
b1000001 [%
b1000010 [%
b1000011 [%
b1000100 [%
b1000101 [%
b1000110 [%
b1000111 [%
b1001000 [%
b1001001 [%
b1001010 [%
b1001011 [%
b1001100 [%
b1001101 [%
b1001110 [%
b1001111 [%
b1010000 [%
b1010001 [%
b1010010 [%
b1010011 [%
b1010100 [%
b1010101 [%
b1010110 [%
b1010111 [%
b1011000 [%
b1011001 [%
b1011010 [%
b1011011 [%
b1011100 [%
b1011101 [%
b1011110 [%
b1011111 [%
b1100000 [%
b1100001 [%
b1100010 [%
b1100011 [%
b1100100 [%
b1100101 [%
b1100110 [%
b1100111 [%
b1101000 [%
b1101001 [%
b1101010 [%
b1101011 [%
b1101100 [%
b1101101 [%
b1101110 [%
b1101111 [%
b1110000 [%
b1110001 [%
b1110010 [%
b1110011 [%
b1110100 [%
b1110101 [%
b1110110 [%
b1110111 [%
b1111000 [%
b1111001 [%
b1111010 [%
b1111011 [%
b1111100 [%
b1111101 [%
b1111110 [%
b1111111 [%
b10000000 [%
b10000001 [%
b10000010 [%
b10000011 [%
b10000100 [%
b10000101 [%
b10000110 [%
b10000111 [%
b10001000 [%
b10001001 [%
b10001010 [%
b10001011 [%
b10001100 [%
b10001101 [%
b10001110 [%
b10001111 [%
b10010000 [%
b10010001 [%
b10010010 [%
b10010011 [%
b10010100 [%
b10010101 [%
b10010110 [%
b10010111 [%
b10011000 [%
b10011001 [%
b10011010 [%
b10011011 [%
b10011100 [%
b10011101 [%
b10011110 [%
b10011111 [%
b10100000 [%
b10100001 [%
b10100010 [%
b10100011 [%
b10100100 [%
b10100101 [%
b10100110 [%
b10100111 [%
b10101000 [%
b10101001 [%
b10101010 [%
b10101011 [%
b10101100 [%
b10101101 [%
b10101110 [%
b10101111 [%
b10110000 [%
b10110001 [%
b10110010 [%
b10110011 [%
b10110100 [%
b10110101 [%
b10110110 [%
b10110111 [%
b10111000 [%
b10111001 [%
b10111010 [%
b10111011 [%
b10111100 [%
b10111101 [%
b10111110 [%
b10111111 [%
b11000000 [%
b11000001 [%
b11000010 [%
b11000011 [%
b11000100 [%
b11000101 [%
b11000110 [%
b11000111 [%
b11001000 [%
b11001001 [%
b11001010 [%
b11001011 [%
b11001100 [%
b11001101 [%
b11001110 [%
b11001111 [%
b11010000 [%
b11010001 [%
b11010010 [%
b11010011 [%
b11010100 [%
b11010101 [%
b11010110 [%
b11010111 [%
b11011000 [%
b11011001 [%
b11011010 [%
b11011011 [%
b11011100 [%
b11011101 [%
b11011110 [%
b11011111 [%
b11100000 [%
b11100001 [%
b11100010 [%
b11100011 [%
b11100100 [%
b11100101 [%
b11100110 [%
b11100111 [%
b11101000 [%
b11101001 [%
b11101010 [%
b11101011 [%
b11101100 [%
b11101101 [%
b11101110 [%
b11101111 [%
b11110000 [%
b11110001 [%
b11110010 [%
b11110011 [%
b11110100 [%
b11110101 [%
b11110110 [%
b11110111 [%
b11111000 [%
b11111001 [%
b11111010 [%
b11111011 [%
b11111100 [%
b11111101 [%
b11111110 [%
b11111111 [%
b100000000 [%
b0 ]%
b1 ]%
b10 ]%
b11 ]%
b100 ]%
b101 ]%
b110 ]%
b111 ]%
b1000 ]%
b1001 ]%
b1010 ]%
b1011 ]%
b1100 ]%
b1101 ]%
b1110 ]%
b1111 ]%
b10000 ]%
b10001 ]%
b10010 ]%
b10011 ]%
b10100 ]%
b10101 ]%
b10110 ]%
b10111 ]%
b11000 ]%
b11001 ]%
b11010 ]%
b11011 ]%
b11100 ]%
b11101 ]%
b11110 ]%
b11111 ]%
b100000 ]%
b100001 ]%
b100010 ]%
b100011 ]%
b100100 ]%
b100101 ]%
b100110 ]%
b100111 ]%
b101000 ]%
b101001 ]%
b101010 ]%
b101011 ]%
b101100 ]%
b101101 ]%
b101110 ]%
b101111 ]%
b110000 ]%
b110001 ]%
b110010 ]%
b110011 ]%
b110100 ]%
b110101 ]%
b110110 ]%
b110111 ]%
b111000 ]%
b111001 ]%
b111010 ]%
b111011 ]%
b111100 ]%
b111101 ]%
b111110 ]%
b111111 ]%
b1000000 ]%
b1000001 ]%
b1000010 ]%
b1000011 ]%
b1000100 ]%
b1000101 ]%
b1000110 ]%
b1000111 ]%
b1001000 ]%
b1001001 ]%
b1001010 ]%
b1001011 ]%
b1001100 ]%
b1001101 ]%
b1001110 ]%
b1001111 ]%
b1010000 ]%
b1010001 ]%
b1010010 ]%
b1010011 ]%
b1010100 ]%
b1010101 ]%
b1010110 ]%
b1010111 ]%
b1011000 ]%
b1011001 ]%
b1011010 ]%
b1011011 ]%
b1011100 ]%
b1011101 ]%
b1011110 ]%
b1011111 ]%
b1100000 ]%
b1100001 ]%
b1100010 ]%
b1100011 ]%
b1100100 ]%
b1100101 ]%
b1100110 ]%
b1100111 ]%
b1101000 ]%
b1101001 ]%
b1101010 ]%
b1101011 ]%
b1101100 ]%
b1101101 ]%
b1101110 ]%
b1101111 ]%
b1110000 ]%
b1110001 ]%
b1110010 ]%
b1110011 ]%
b1110100 ]%
b1110101 ]%
b1110110 ]%
b1110111 ]%
b1111000 ]%
b1111001 ]%
b1111010 ]%
b1111011 ]%
b1111100 ]%
b1111101 ]%
b1111110 ]%
b1111111 ]%
b10000000 ]%
b10000001 ]%
b10000010 ]%
b10000011 ]%
b10000100 ]%
b10000101 ]%
b10000110 ]%
b10000111 ]%
b10001000 ]%
b10001001 ]%
b10001010 ]%
b10001011 ]%
b10001100 ]%
b10001101 ]%
b10001110 ]%
b10001111 ]%
b10010000 ]%
b10010001 ]%
b10010010 ]%
b10010011 ]%
b10010100 ]%
b10010101 ]%
b10010110 ]%
b10010111 ]%
b10011000 ]%
b10011001 ]%
b10011010 ]%
b10011011 ]%
b10011100 ]%
b10011101 ]%
b10011110 ]%
b10011111 ]%
b10100000 ]%
b10100001 ]%
b10100010 ]%
b10100011 ]%
b10100100 ]%
b10100101 ]%
b10100110 ]%
b10100111 ]%
b10101000 ]%
b10101001 ]%
b10101010 ]%
b10101011 ]%
b10101100 ]%
b10101101 ]%
b10101110 ]%
b10101111 ]%
b10110000 ]%
b10110001 ]%
b10110010 ]%
b10110011 ]%
b10110100 ]%
b10110101 ]%
b10110110 ]%
b10110111 ]%
b10111000 ]%
b10111001 ]%
b10111010 ]%
b10111011 ]%
b10111100 ]%
b10111101 ]%
b10111110 ]%
b10111111 ]%
b11000000 ]%
b11000001 ]%
b11000010 ]%
b11000011 ]%
b11000100 ]%
b11000101 ]%
b11000110 ]%
b11000111 ]%
b11001000 ]%
b11001001 ]%
b11001010 ]%
b11001011 ]%
b11001100 ]%
b11001101 ]%
b11001110 ]%
b11001111 ]%
b11010000 ]%
b11010001 ]%
b11010010 ]%
b11010011 ]%
b11010100 ]%
b11010101 ]%
b11010110 ]%
b11010111 ]%
b11011000 ]%
b11011001 ]%
b11011010 ]%
b11011011 ]%
b11011100 ]%
b11011101 ]%
b11011110 ]%
b11011111 ]%
b11100000 ]%
b11100001 ]%
b11100010 ]%
b11100011 ]%
b11100100 ]%
b11100101 ]%
b11100110 ]%
b11100111 ]%
b11101000 ]%
b11101001 ]%
b11101010 ]%
b11101011 ]%
b11101100 ]%
b11101101 ]%
b11101110 ]%
b11101111 ]%
b11110000 ]%
b11110001 ]%
b11110010 ]%
b11110011 ]%
b11110100 ]%
b11110101 ]%
b11110110 ]%
b11110111 ]%
b11111000 ]%
b11111001 ]%
b11111010 ]%
b11111011 ]%
b11111100 ]%
b11111101 ]%
b11111110 ]%
b11111111 ]%
b100000000 ]%
b10 #!
#150
0!!
0P0
08
0}
#200
1!!
1P0
18
1}
b0 +$
b1 +$
b10 +$
b11 +$
b100 +$
b101 +$
b110 +$
b111 +$
b1000 +$
b1001 +$
b1010 +$
b1011 +$
b1100 +$
b1101 +$
b1110 +$
b1111 +$
b10000 +$
b10001 +$
b10010 +$
b10011 +$
b10100 +$
b10101 +$
b10110 +$
b10111 +$
b11000 +$
b11001 +$
b11010 +$
b11011 +$
b11100 +$
b11101 +$
b11110 +$
b11111 +$
b100000 +$
b100001 +$
b100010 +$
b100011 +$
b100100 +$
b100101 +$
b100110 +$
b100111 +$
b101000 +$
b101001 +$
b101010 +$
b101011 +$
b101100 +$
b101101 +$
b101110 +$
b101111 +$
b110000 +$
b110001 +$
b110010 +$
b110011 +$
b110100 +$
b110101 +$
b110110 +$
b110111 +$
b111000 +$
b111001 +$
b111010 +$
b111011 +$
b111100 +$
b111101 +$
b111110 +$
b111111 +$
b1000000 +$
b1000001 +$
b1000010 +$
b1000011 +$
b1000100 +$
b1000101 +$
b1000110 +$
b1000111 +$
b1001000 +$
b1001001 +$
b1001010 +$
b1001011 +$
b1001100 +$
b1001101 +$
b1001110 +$
b1001111 +$
b1010000 +$
b1010001 +$
b1010010 +$
b1010011 +$
b1010100 +$
b1010101 +$
b1010110 +$
b1010111 +$
b1011000 +$
b1011001 +$
b1011010 +$
b1011011 +$
b1011100 +$
b1011101 +$
b1011110 +$
b1011111 +$
b1100000 +$
b1100001 +$
b1100010 +$
b1100011 +$
b1100100 +$
b1100101 +$
b1100110 +$
b1100111 +$
b1101000 +$
b1101001 +$
b1101010 +$
b1101011 +$
b1101100 +$
b1101101 +$
b1101110 +$
b1101111 +$
b1110000 +$
b1110001 +$
b1110010 +$
b1110011 +$
b1110100 +$
b1110101 +$
b1110110 +$
b1110111 +$
b1111000 +$
b1111001 +$
b1111010 +$
b1111011 +$
b1111100 +$
b1111101 +$
b1111110 +$
b1111111 +$
b10000000 +$
b10000001 +$
b10000010 +$
b10000011 +$
b10000100 +$
b10000101 +$
b10000110 +$
b10000111 +$
b10001000 +$
b10001001 +$
b10001010 +$
b10001011 +$
b10001100 +$
b10001101 +$
b10001110 +$
b10001111 +$
b10010000 +$
b10010001 +$
b10010010 +$
b10010011 +$
b10010100 +$
b10010101 +$
b10010110 +$
b10010111 +$
b10011000 +$
b10011001 +$
b10011010 +$
b10011011 +$
b10011100 +$
b10011101 +$
b10011110 +$
b10011111 +$
b10100000 +$
b10100001 +$
b10100010 +$
b10100011 +$
b10100100 +$
b10100101 +$
b10100110 +$
b10100111 +$
b10101000 +$
b10101001 +$
b10101010 +$
b10101011 +$
b10101100 +$
b10101101 +$
b10101110 +$
b10101111 +$
b10110000 +$
b10110001 +$
b10110010 +$
b10110011 +$
b10110100 +$
b10110101 +$
b10110110 +$
b10110111 +$
b10111000 +$
b10111001 +$
b10111010 +$
b10111011 +$
b10111100 +$
b10111101 +$
b10111110 +$
b10111111 +$
b11000000 +$
b11000001 +$
b11000010 +$
b11000011 +$
b11000100 +$
b11000101 +$
b11000110 +$
b11000111 +$
b11001000 +$
b11001001 +$
b11001010 +$
b11001011 +$
b11001100 +$
b11001101 +$
b11001110 +$
b11001111 +$
b11010000 +$
b11010001 +$
b11010010 +$
b11010011 +$
b11010100 +$
b11010101 +$
b11010110 +$
b11010111 +$
b11011000 +$
b11011001 +$
b11011010 +$
b11011011 +$
b11011100 +$
b11011101 +$
b11011110 +$
b11011111 +$
b11100000 +$
b11100001 +$
b11100010 +$
b11100011 +$
b11100100 +$
b11100101 +$
b11100110 +$
b11100111 +$
b11101000 +$
b11101001 +$
b11101010 +$
b11101011 +$
b11101100 +$
b11101101 +$
b11101110 +$
b11101111 +$
b11110000 +$
b11110001 +$
b11110010 +$
b11110011 +$
b11110100 +$
b11110101 +$
b11110110 +$
b11110111 +$
b11111000 +$
b11111001 +$
b11111010 +$
b11111011 +$
b11111100 +$
b11111101 +$
b11111110 +$
b11111111 +$
b100000000 +$
b0 .$
b1 .$
b10 .$
b11 .$
b100 .$
b101 .$
b110 .$
b111 .$
b1000 .$
b1001 .$
b1010 .$
b1011 .$
b1100 .$
b1101 .$
b1110 .$
b1111 .$
b10000 .$
b10001 .$
b10010 .$
b10011 .$
b10100 .$
b10101 .$
b10110 .$
b10111 .$
b11000 .$
b11001 .$
b11010 .$
b11011 .$
b11100 .$
b11101 .$
b11110 .$
b11111 .$
b100000 .$
b100001 .$
b100010 .$
b100011 .$
b100100 .$
b100101 .$
b100110 .$
b100111 .$
b101000 .$
b101001 .$
b101010 .$
b101011 .$
b101100 .$
b101101 .$
b101110 .$
b101111 .$
b110000 .$
b110001 .$
b110010 .$
b110011 .$
b110100 .$
b110101 .$
b110110 .$
b110111 .$
b111000 .$
b111001 .$
b111010 .$
b111011 .$
b111100 .$
b111101 .$
b111110 .$
b111111 .$
b1000000 .$
b1000001 .$
b1000010 .$
b1000011 .$
b1000100 .$
b1000101 .$
b1000110 .$
b1000111 .$
b1001000 .$
b1001001 .$
b1001010 .$
b1001011 .$
b1001100 .$
b1001101 .$
b1001110 .$
b1001111 .$
b1010000 .$
b1010001 .$
b1010010 .$
b1010011 .$
b1010100 .$
b1010101 .$
b1010110 .$
b1010111 .$
b1011000 .$
b1011001 .$
b1011010 .$
b1011011 .$
b1011100 .$
b1011101 .$
b1011110 .$
b1011111 .$
b1100000 .$
b1100001 .$
b1100010 .$
b1100011 .$
b1100100 .$
b1100101 .$
b1100110 .$
b1100111 .$
b1101000 .$
b1101001 .$
b1101010 .$
b1101011 .$
b1101100 .$
b1101101 .$
b1101110 .$
b1101111 .$
b1110000 .$
b1110001 .$
b1110010 .$
b1110011 .$
b1110100 .$
b1110101 .$
b1110110 .$
b1110111 .$
b1111000 .$
b1111001 .$
b1111010 .$
b1111011 .$
b1111100 .$
b1111101 .$
b1111110 .$
b1111111 .$
b10000000 .$
b10000001 .$
b10000010 .$
b10000011 .$
b10000100 .$
b10000101 .$
b10000110 .$
b10000111 .$
b10001000 .$
b10001001 .$
b10001010 .$
b10001011 .$
b10001100 .$
b10001101 .$
b10001110 .$
b10001111 .$
b10010000 .$
b10010001 .$
b10010010 .$
b10010011 .$
b10010100 .$
b10010101 .$
b10010110 .$
b10010111 .$
b10011000 .$
b10011001 .$
b10011010 .$
b10011011 .$
b10011100 .$
b10011101 .$
b10011110 .$
b10011111 .$
b10100000 .$
b10100001 .$
b10100010 .$
b10100011 .$
b10100100 .$
b10100101 .$
b10100110 .$
b10100111 .$
b10101000 .$
b10101001 .$
b10101010 .$
b10101011 .$
b10101100 .$
b10101101 .$
b10101110 .$
b10101111 .$
b10110000 .$
b10110001 .$
b10110010 .$
b10110011 .$
b10110100 .$
b10110101 .$
b10110110 .$
b10110111 .$
b10111000 .$
b10111001 .$
b10111010 .$
b10111011 .$
b10111100 .$
b10111101 .$
b10111110 .$
b10111111 .$
b11000000 .$
b11000001 .$
b11000010 .$
b11000011 .$
b11000100 .$
b11000101 .$
b11000110 .$
b11000111 .$
b11001000 .$
b11001001 .$
b11001010 .$
b11001011 .$
b11001100 .$
b11001101 .$
b11001110 .$
b11001111 .$
b11010000 .$
b11010001 .$
b11010010 .$
b11010011 .$
b11010100 .$
b11010101 .$
b11010110 .$
b11010111 .$
b11011000 .$
b11011001 .$
b11011010 .$
b11011011 .$
b11011100 .$
b11011101 .$
b11011110 .$
b11011111 .$
b11100000 .$
b11100001 .$
b11100010 .$
b11100011 .$
b11100100 .$
b11100101 .$
b11100110 .$
b11100111 .$
b11101000 .$
b11101001 .$
b11101010 .$
b11101011 .$
b11101100 .$
b11101101 .$
b11101110 .$
b11101111 .$
b11110000 .$
b11110001 .$
b11110010 .$
b11110011 .$
b11110100 .$
b11110101 .$
b11110110 .$
b11110111 .$
b11111000 .$
b11111001 .$
b11111010 .$
b11111011 .$
b11111100 .$
b11111101 .$
b11111110 .$
b11111111 .$
b100000000 .$
b0 1$
b1 1$
b10 1$
b11 1$
b100 1$
b101 1$
b110 1$
b111 1$
b1000 1$
b1001 1$
b1010 1$
b1011 1$
b1100 1$
b1101 1$
b1110 1$
b1111 1$
b10000 1$
b10001 1$
b10010 1$
b10011 1$
b10100 1$
b10101 1$
b10110 1$
b10111 1$
b11000 1$
b11001 1$
b11010 1$
b11011 1$
b11100 1$
b11101 1$
b11110 1$
b11111 1$
b100000 1$
b100001 1$
b100010 1$
b100011 1$
b100100 1$
b100101 1$
b100110 1$
b100111 1$
b101000 1$
b101001 1$
b101010 1$
b101011 1$
b101100 1$
b101101 1$
b101110 1$
b101111 1$
b110000 1$
b110001 1$
b110010 1$
b110011 1$
b110100 1$
b110101 1$
b110110 1$
b110111 1$
b111000 1$
b111001 1$
b111010 1$
b111011 1$
b111100 1$
b111101 1$
b111110 1$
b111111 1$
b1000000 1$
b1000001 1$
b1000010 1$
b1000011 1$
b1000100 1$
b1000101 1$
b1000110 1$
b1000111 1$
b1001000 1$
b1001001 1$
b1001010 1$
b1001011 1$
b1001100 1$
b1001101 1$
b1001110 1$
b1001111 1$
b1010000 1$
b1010001 1$
b1010010 1$
b1010011 1$
b1010100 1$
b1010101 1$
b1010110 1$
b1010111 1$
b1011000 1$
b1011001 1$
b1011010 1$
b1011011 1$
b1011100 1$
b1011101 1$
b1011110 1$
b1011111 1$
b1100000 1$
b1100001 1$
b1100010 1$
b1100011 1$
b1100100 1$
b1100101 1$
b1100110 1$
b1100111 1$
b1101000 1$
b1101001 1$
b1101010 1$
b1101011 1$
b1101100 1$
b1101101 1$
b1101110 1$
b1101111 1$
b1110000 1$
b1110001 1$
b1110010 1$
b1110011 1$
b1110100 1$
b1110101 1$
b1110110 1$
b1110111 1$
b1111000 1$
b1111001 1$
b1111010 1$
b1111011 1$
b1111100 1$
b1111101 1$
b1111110 1$
b1111111 1$
b10000000 1$
b10000001 1$
b10000010 1$
b10000011 1$
b10000100 1$
b10000101 1$
b10000110 1$
b10000111 1$
b10001000 1$
b10001001 1$
b10001010 1$
b10001011 1$
b10001100 1$
b10001101 1$
b10001110 1$
b10001111 1$
b10010000 1$
b10010001 1$
b10010010 1$
b10010011 1$
b10010100 1$
b10010101 1$
b10010110 1$
b10010111 1$
b10011000 1$
b10011001 1$
b10011010 1$
b10011011 1$
b10011100 1$
b10011101 1$
b10011110 1$
b10011111 1$
b10100000 1$
b10100001 1$
b10100010 1$
b10100011 1$
b10100100 1$
b10100101 1$
b10100110 1$
b10100111 1$
b10101000 1$
b10101001 1$
b10101010 1$
b10101011 1$
b10101100 1$
b10101101 1$
b10101110 1$
b10101111 1$
b10110000 1$
b10110001 1$
b10110010 1$
b10110011 1$
b10110100 1$
b10110101 1$
b10110110 1$
b10110111 1$
b10111000 1$
b10111001 1$
b10111010 1$
b10111011 1$
b10111100 1$
b10111101 1$
b10111110 1$
b10111111 1$
b11000000 1$
b11000001 1$
b11000010 1$
b11000011 1$
b11000100 1$
b11000101 1$
b11000110 1$
b11000111 1$
b11001000 1$
b11001001 1$
b11001010 1$
b11001011 1$
b11001100 1$
b11001101 1$
b11001110 1$
b11001111 1$
b11010000 1$
b11010001 1$
b11010010 1$
b11010011 1$
b11010100 1$
b11010101 1$
b11010110 1$
b11010111 1$
b11011000 1$
b11011001 1$
b11011010 1$
b11011011 1$
b11011100 1$
b11011101 1$
b11011110 1$
b11011111 1$
b11100000 1$
b11100001 1$
b11100010 1$
b11100011 1$
b11100100 1$
b11100101 1$
b11100110 1$
b11100111 1$
b11101000 1$
b11101001 1$
b11101010 1$
b11101011 1$
b11101100 1$
b11101101 1$
b11101110 1$
b11101111 1$
b11110000 1$
b11110001 1$
b11110010 1$
b11110011 1$
b11110100 1$
b11110101 1$
b11110110 1$
b11110111 1$
b11111000 1$
b11111001 1$
b11111010 1$
b11111011 1$
b11111100 1$
b11111101 1$
b11111110 1$
b11111111 1$
b100000000 1$
b0 4$
b1 4$
b10 4$
b11 4$
b100 4$
b101 4$
b110 4$
b111 4$
b1000 4$
b1001 4$
b1010 4$
b1011 4$
b1100 4$
b1101 4$
b1110 4$
b1111 4$
b10000 4$
b10001 4$
b10010 4$
b10011 4$
b10100 4$
b10101 4$
b10110 4$
b10111 4$
b11000 4$
b11001 4$
b11010 4$
b11011 4$
b11100 4$
b11101 4$
b11110 4$
b11111 4$
b100000 4$
b100001 4$
b100010 4$
b100011 4$
b100100 4$
b100101 4$
b100110 4$
b100111 4$
b101000 4$
b101001 4$
b101010 4$
b101011 4$
b101100 4$
b101101 4$
b101110 4$
b101111 4$
b110000 4$
b110001 4$
b110010 4$
b110011 4$
b110100 4$
b110101 4$
b110110 4$
b110111 4$
b111000 4$
b111001 4$
b111010 4$
b111011 4$
b111100 4$
b111101 4$
b111110 4$
b111111 4$
b1000000 4$
b1000001 4$
b1000010 4$
b1000011 4$
b1000100 4$
b1000101 4$
b1000110 4$
b1000111 4$
b1001000 4$
b1001001 4$
b1001010 4$
b1001011 4$
b1001100 4$
b1001101 4$
b1001110 4$
b1001111 4$
b1010000 4$
b1010001 4$
b1010010 4$
b1010011 4$
b1010100 4$
b1010101 4$
b1010110 4$
b1010111 4$
b1011000 4$
b1011001 4$
b1011010 4$
b1011011 4$
b1011100 4$
b1011101 4$
b1011110 4$
b1011111 4$
b1100000 4$
b1100001 4$
b1100010 4$
b1100011 4$
b1100100 4$
b1100101 4$
b1100110 4$
b1100111 4$
b1101000 4$
b1101001 4$
b1101010 4$
b1101011 4$
b1101100 4$
b1101101 4$
b1101110 4$
b1101111 4$
b1110000 4$
b1110001 4$
b1110010 4$
b1110011 4$
b1110100 4$
b1110101 4$
b1110110 4$
b1110111 4$
b1111000 4$
b1111001 4$
b1111010 4$
b1111011 4$
b1111100 4$
b1111101 4$
b1111110 4$
b1111111 4$
b10000000 4$
b10000001 4$
b10000010 4$
b10000011 4$
b10000100 4$
b10000101 4$
b10000110 4$
b10000111 4$
b10001000 4$
b10001001 4$
b10001010 4$
b10001011 4$
b10001100 4$
b10001101 4$
b10001110 4$
b10001111 4$
b10010000 4$
b10010001 4$
b10010010 4$
b10010011 4$
b10010100 4$
b10010101 4$
b10010110 4$
b10010111 4$
b10011000 4$
b10011001 4$
b10011010 4$
b10011011 4$
b10011100 4$
b10011101 4$
b10011110 4$
b10011111 4$
b10100000 4$
b10100001 4$
b10100010 4$
b10100011 4$
b10100100 4$
b10100101 4$
b10100110 4$
b10100111 4$
b10101000 4$
b10101001 4$
b10101010 4$
b10101011 4$
b10101100 4$
b10101101 4$
b10101110 4$
b10101111 4$
b10110000 4$
b10110001 4$
b10110010 4$
b10110011 4$
b10110100 4$
b10110101 4$
b10110110 4$
b10110111 4$
b10111000 4$
b10111001 4$
b10111010 4$
b10111011 4$
b10111100 4$
b10111101 4$
b10111110 4$
b10111111 4$
b11000000 4$
b11000001 4$
b11000010 4$
b11000011 4$
b11000100 4$
b11000101 4$
b11000110 4$
b11000111 4$
b11001000 4$
b11001001 4$
b11001010 4$
b11001011 4$
b11001100 4$
b11001101 4$
b11001110 4$
b11001111 4$
b11010000 4$
b11010001 4$
b11010010 4$
b11010011 4$
b11010100 4$
b11010101 4$
b11010110 4$
b11010111 4$
b11011000 4$
b11011001 4$
b11011010 4$
b11011011 4$
b11011100 4$
b11011101 4$
b11011110 4$
b11011111 4$
b11100000 4$
b11100001 4$
b11100010 4$
b11100011 4$
b11100100 4$
b11100101 4$
b11100110 4$
b11100111 4$
b11101000 4$
b11101001 4$
b11101010 4$
b11101011 4$
b11101100 4$
b11101101 4$
b11101110 4$
b11101111 4$
b11110000 4$
b11110001 4$
b11110010 4$
b11110011 4$
b11110100 4$
b11110101 4$
b11110110 4$
b11110111 4$
b11111000 4$
b11111001 4$
b11111010 4$
b11111011 4$
b11111100 4$
b11111101 4$
b11111110 4$
b11111111 4$
b100000000 4$
b0 7$
b1 7$
b10 7$
b11 7$
b100 7$
b101 7$
b110 7$
b111 7$
b1000 7$
b1001 7$
b1010 7$
b1011 7$
b1100 7$
b1101 7$
b1110 7$
b1111 7$
b10000 7$
b10001 7$
b10010 7$
b10011 7$
b10100 7$
b10101 7$
b10110 7$
b10111 7$
b11000 7$
b11001 7$
b11010 7$
b11011 7$
b11100 7$
b11101 7$
b11110 7$
b11111 7$
b100000 7$
b100001 7$
b100010 7$
b100011 7$
b100100 7$
b100101 7$
b100110 7$
b100111 7$
b101000 7$
b101001 7$
b101010 7$
b101011 7$
b101100 7$
b101101 7$
b101110 7$
b101111 7$
b110000 7$
b110001 7$
b110010 7$
b110011 7$
b110100 7$
b110101 7$
b110110 7$
b110111 7$
b111000 7$
b111001 7$
b111010 7$
b111011 7$
b111100 7$
b111101 7$
b111110 7$
b111111 7$
b1000000 7$
b1000001 7$
b1000010 7$
b1000011 7$
b1000100 7$
b1000101 7$
b1000110 7$
b1000111 7$
b1001000 7$
b1001001 7$
b1001010 7$
b1001011 7$
b1001100 7$
b1001101 7$
b1001110 7$
b1001111 7$
b1010000 7$
b1010001 7$
b1010010 7$
b1010011 7$
b1010100 7$
b1010101 7$
b1010110 7$
b1010111 7$
b1011000 7$
b1011001 7$
b1011010 7$
b1011011 7$
b1011100 7$
b1011101 7$
b1011110 7$
b1011111 7$
b1100000 7$
b1100001 7$
b1100010 7$
b1100011 7$
b1100100 7$
b1100101 7$
b1100110 7$
b1100111 7$
b1101000 7$
b1101001 7$
b1101010 7$
b1101011 7$
b1101100 7$
b1101101 7$
b1101110 7$
b1101111 7$
b1110000 7$
b1110001 7$
b1110010 7$
b1110011 7$
b1110100 7$
b1110101 7$
b1110110 7$
b1110111 7$
b1111000 7$
b1111001 7$
b1111010 7$
b1111011 7$
b1111100 7$
b1111101 7$
b1111110 7$
b1111111 7$
b10000000 7$
b10000001 7$
b10000010 7$
b10000011 7$
b10000100 7$
b10000101 7$
b10000110 7$
b10000111 7$
b10001000 7$
b10001001 7$
b10001010 7$
b10001011 7$
b10001100 7$
b10001101 7$
b10001110 7$
b10001111 7$
b10010000 7$
b10010001 7$
b10010010 7$
b10010011 7$
b10010100 7$
b10010101 7$
b10010110 7$
b10010111 7$
b10011000 7$
b10011001 7$
b10011010 7$
b10011011 7$
b10011100 7$
b10011101 7$
b10011110 7$
b10011111 7$
b10100000 7$
b10100001 7$
b10100010 7$
b10100011 7$
b10100100 7$
b10100101 7$
b10100110 7$
b10100111 7$
b10101000 7$
b10101001 7$
b10101010 7$
b10101011 7$
b10101100 7$
b10101101 7$
b10101110 7$
b10101111 7$
b10110000 7$
b10110001 7$
b10110010 7$
b10110011 7$
b10110100 7$
b10110101 7$
b10110110 7$
b10110111 7$
b10111000 7$
b10111001 7$
b10111010 7$
b10111011 7$
b10111100 7$
b10111101 7$
b10111110 7$
b10111111 7$
b11000000 7$
b11000001 7$
b11000010 7$
b11000011 7$
b11000100 7$
b11000101 7$
b11000110 7$
b11000111 7$
b11001000 7$
b11001001 7$
b11001010 7$
b11001011 7$
b11001100 7$
b11001101 7$
b11001110 7$
b11001111 7$
b11010000 7$
b11010001 7$
b11010010 7$
b11010011 7$
b11010100 7$
b11010101 7$
b11010110 7$
b11010111 7$
b11011000 7$
b11011001 7$
b11011010 7$
b11011011 7$
b11011100 7$
b11011101 7$
b11011110 7$
b11011111 7$
b11100000 7$
b11100001 7$
b11100010 7$
b11100011 7$
b11100100 7$
b11100101 7$
b11100110 7$
b11100111 7$
b11101000 7$
b11101001 7$
b11101010 7$
b11101011 7$
b11101100 7$
b11101101 7$
b11101110 7$
b11101111 7$
b11110000 7$
b11110001 7$
b11110010 7$
b11110011 7$
b11110100 7$
b11110101 7$
b11110110 7$
b11110111 7$
b11111000 7$
b11111001 7$
b11111010 7$
b11111011 7$
b11111100 7$
b11111101 7$
b11111110 7$
b11111111 7$
b100000000 7$
b0 :$
b1 :$
b10 :$
b11 :$
b100 :$
b101 :$
b110 :$
b111 :$
b1000 :$
b1001 :$
b1010 :$
b1011 :$
b1100 :$
b1101 :$
b1110 :$
b1111 :$
b10000 :$
b10001 :$
b10010 :$
b10011 :$
b10100 :$
b10101 :$
b10110 :$
b10111 :$
b11000 :$
b11001 :$
b11010 :$
b11011 :$
b11100 :$
b11101 :$
b11110 :$
b11111 :$
b100000 :$
b100001 :$
b100010 :$
b100011 :$
b100100 :$
b100101 :$
b100110 :$
b100111 :$
b101000 :$
b101001 :$
b101010 :$
b101011 :$
b101100 :$
b101101 :$
b101110 :$
b101111 :$
b110000 :$
b110001 :$
b110010 :$
b110011 :$
b110100 :$
b110101 :$
b110110 :$
b110111 :$
b111000 :$
b111001 :$
b111010 :$
b111011 :$
b111100 :$
b111101 :$
b111110 :$
b111111 :$
b1000000 :$
b1000001 :$
b1000010 :$
b1000011 :$
b1000100 :$
b1000101 :$
b1000110 :$
b1000111 :$
b1001000 :$
b1001001 :$
b1001010 :$
b1001011 :$
b1001100 :$
b1001101 :$
b1001110 :$
b1001111 :$
b1010000 :$
b1010001 :$
b1010010 :$
b1010011 :$
b1010100 :$
b1010101 :$
b1010110 :$
b1010111 :$
b1011000 :$
b1011001 :$
b1011010 :$
b1011011 :$
b1011100 :$
b1011101 :$
b1011110 :$
b1011111 :$
b1100000 :$
b1100001 :$
b1100010 :$
b1100011 :$
b1100100 :$
b1100101 :$
b1100110 :$
b1100111 :$
b1101000 :$
b1101001 :$
b1101010 :$
b1101011 :$
b1101100 :$
b1101101 :$
b1101110 :$
b1101111 :$
b1110000 :$
b1110001 :$
b1110010 :$
b1110011 :$
b1110100 :$
b1110101 :$
b1110110 :$
b1110111 :$
b1111000 :$
b1111001 :$
b1111010 :$
b1111011 :$
b1111100 :$
b1111101 :$
b1111110 :$
b1111111 :$
b10000000 :$
b10000001 :$
b10000010 :$
b10000011 :$
b10000100 :$
b10000101 :$
b10000110 :$
b10000111 :$
b10001000 :$
b10001001 :$
b10001010 :$
b10001011 :$
b10001100 :$
b10001101 :$
b10001110 :$
b10001111 :$
b10010000 :$
b10010001 :$
b10010010 :$
b10010011 :$
b10010100 :$
b10010101 :$
b10010110 :$
b10010111 :$
b10011000 :$
b10011001 :$
b10011010 :$
b10011011 :$
b10011100 :$
b10011101 :$
b10011110 :$
b10011111 :$
b10100000 :$
b10100001 :$
b10100010 :$
b10100011 :$
b10100100 :$
b10100101 :$
b10100110 :$
b10100111 :$
b10101000 :$
b10101001 :$
b10101010 :$
b10101011 :$
b10101100 :$
b10101101 :$
b10101110 :$
b10101111 :$
b10110000 :$
b10110001 :$
b10110010 :$
b10110011 :$
b10110100 :$
b10110101 :$
b10110110 :$
b10110111 :$
b10111000 :$
b10111001 :$
b10111010 :$
b10111011 :$
b10111100 :$
b10111101 :$
b10111110 :$
b10111111 :$
b11000000 :$
b11000001 :$
b11000010 :$
b11000011 :$
b11000100 :$
b11000101 :$
b11000110 :$
b11000111 :$
b11001000 :$
b11001001 :$
b11001010 :$
b11001011 :$
b11001100 :$
b11001101 :$
b11001110 :$
b11001111 :$
b11010000 :$
b11010001 :$
b11010010 :$
b11010011 :$
b11010100 :$
b11010101 :$
b11010110 :$
b11010111 :$
b11011000 :$
b11011001 :$
b11011010 :$
b11011011 :$
b11011100 :$
b11011101 :$
b11011110 :$
b11011111 :$
b11100000 :$
b11100001 :$
b11100010 :$
b11100011 :$
b11100100 :$
b11100101 :$
b11100110 :$
b11100111 :$
b11101000 :$
b11101001 :$
b11101010 :$
b11101011 :$
b11101100 :$
b11101101 :$
b11101110 :$
b11101111 :$
b11110000 :$
b11110001 :$
b11110010 :$
b11110011 :$
b11110100 :$
b11110101 :$
b11110110 :$
b11110111 :$
b11111000 :$
b11111001 :$
b11111010 :$
b11111011 :$
b11111100 :$
b11111101 :$
b11111110 :$
b11111111 :$
b100000000 :$
b0 <$
b1 <$
b10 <$
b11 <$
b100 <$
b101 <$
b110 <$
b111 <$
b1000 <$
b1001 <$
b1010 <$
b1011 <$
b1100 <$
b1101 <$
b1110 <$
b1111 <$
b10000 <$
b10001 <$
b10010 <$
b10011 <$
b10100 <$
b10101 <$
b10110 <$
b10111 <$
b11000 <$
b11001 <$
b11010 <$
b11011 <$
b11100 <$
b11101 <$
b11110 <$
b11111 <$
b100000 <$
b100001 <$
b100010 <$
b100011 <$
b100100 <$
b100101 <$
b100110 <$
b100111 <$
b101000 <$
b101001 <$
b101010 <$
b101011 <$
b101100 <$
b101101 <$
b101110 <$
b101111 <$
b110000 <$
b110001 <$
b110010 <$
b110011 <$
b110100 <$
b110101 <$
b110110 <$
b110111 <$
b111000 <$
b111001 <$
b111010 <$
b111011 <$
b111100 <$
b111101 <$
b111110 <$
b111111 <$
b1000000 <$
b1000001 <$
b1000010 <$
b1000011 <$
b1000100 <$
b1000101 <$
b1000110 <$
b1000111 <$
b1001000 <$
b1001001 <$
b1001010 <$
b1001011 <$
b1001100 <$
b1001101 <$
b1001110 <$
b1001111 <$
b1010000 <$
b1010001 <$
b1010010 <$
b1010011 <$
b1010100 <$
b1010101 <$
b1010110 <$
b1010111 <$
b1011000 <$
b1011001 <$
b1011010 <$
b1011011 <$
b1011100 <$
b1011101 <$
b1011110 <$
b1011111 <$
b1100000 <$
b1100001 <$
b1100010 <$
b1100011 <$
b1100100 <$
b1100101 <$
b1100110 <$
b1100111 <$
b1101000 <$
b1101001 <$
b1101010 <$
b1101011 <$
b1101100 <$
b1101101 <$
b1101110 <$
b1101111 <$
b1110000 <$
b1110001 <$
b1110010 <$
b1110011 <$
b1110100 <$
b1110101 <$
b1110110 <$
b1110111 <$
b1111000 <$
b1111001 <$
b1111010 <$
b1111011 <$
b1111100 <$
b1111101 <$
b1111110 <$
b1111111 <$
b10000000 <$
b10000001 <$
b10000010 <$
b10000011 <$
b10000100 <$
b10000101 <$
b10000110 <$
b10000111 <$
b10001000 <$
b10001001 <$
b10001010 <$
b10001011 <$
b10001100 <$
b10001101 <$
b10001110 <$
b10001111 <$
b10010000 <$
b10010001 <$
b10010010 <$
b10010011 <$
b10010100 <$
b10010101 <$
b10010110 <$
b10010111 <$
b10011000 <$
b10011001 <$
b10011010 <$
b10011011 <$
b10011100 <$
b10011101 <$
b10011110 <$
b10011111 <$
b10100000 <$
b10100001 <$
b10100010 <$
b10100011 <$
b10100100 <$
b10100101 <$
b10100110 <$
b10100111 <$
b10101000 <$
b10101001 <$
b10101010 <$
b10101011 <$
b10101100 <$
b10101101 <$
b10101110 <$
b10101111 <$
b10110000 <$
b10110001 <$
b10110010 <$
b10110011 <$
b10110100 <$
b10110101 <$
b10110110 <$
b10110111 <$
b10111000 <$
b10111001 <$
b10111010 <$
b10111011 <$
b10111100 <$
b10111101 <$
b10111110 <$
b10111111 <$
b11000000 <$
b11000001 <$
b11000010 <$
b11000011 <$
b11000100 <$
b11000101 <$
b11000110 <$
b11000111 <$
b11001000 <$
b11001001 <$
b11001010 <$
b11001011 <$
b11001100 <$
b11001101 <$
b11001110 <$
b11001111 <$
b11010000 <$
b11010001 <$
b11010010 <$
b11010011 <$
b11010100 <$
b11010101 <$
b11010110 <$
b11010111 <$
b11011000 <$
b11011001 <$
b11011010 <$
b11011011 <$
b11011100 <$
b11011101 <$
b11011110 <$
b11011111 <$
b11100000 <$
b11100001 <$
b11100010 <$
b11100011 <$
b11100100 <$
b11100101 <$
b11100110 <$
b11100111 <$
b11101000 <$
b11101001 <$
b11101010 <$
b11101011 <$
b11101100 <$
b11101101 <$
b11101110 <$
b11101111 <$
b11110000 <$
b11110001 <$
b11110010 <$
b11110011 <$
b11110100 <$
b11110101 <$
b11110110 <$
b11110111 <$
b11111000 <$
b11111001 <$
b11111010 <$
b11111011 <$
b11111100 <$
b11111101 <$
b11111110 <$
b11111111 <$
b100000000 <$
b0 L%
b1 L%
b10 L%
b11 L%
b100 L%
b101 L%
b110 L%
b111 L%
b1000 L%
b1001 L%
b1010 L%
b1011 L%
b1100 L%
b1101 L%
b1110 L%
b1111 L%
b10000 L%
b10001 L%
b10010 L%
b10011 L%
b10100 L%
b10101 L%
b10110 L%
b10111 L%
b11000 L%
b11001 L%
b11010 L%
b11011 L%
b11100 L%
b11101 L%
b11110 L%
b11111 L%
b100000 L%
b100001 L%
b100010 L%
b100011 L%
b100100 L%
b100101 L%
b100110 L%
b100111 L%
b101000 L%
b101001 L%
b101010 L%
b101011 L%
b101100 L%
b101101 L%
b101110 L%
b101111 L%
b110000 L%
b110001 L%
b110010 L%
b110011 L%
b110100 L%
b110101 L%
b110110 L%
b110111 L%
b111000 L%
b111001 L%
b111010 L%
b111011 L%
b111100 L%
b111101 L%
b111110 L%
b111111 L%
b1000000 L%
b1000001 L%
b1000010 L%
b1000011 L%
b1000100 L%
b1000101 L%
b1000110 L%
b1000111 L%
b1001000 L%
b1001001 L%
b1001010 L%
b1001011 L%
b1001100 L%
b1001101 L%
b1001110 L%
b1001111 L%
b1010000 L%
b1010001 L%
b1010010 L%
b1010011 L%
b1010100 L%
b1010101 L%
b1010110 L%
b1010111 L%
b1011000 L%
b1011001 L%
b1011010 L%
b1011011 L%
b1011100 L%
b1011101 L%
b1011110 L%
b1011111 L%
b1100000 L%
b1100001 L%
b1100010 L%
b1100011 L%
b1100100 L%
b1100101 L%
b1100110 L%
b1100111 L%
b1101000 L%
b1101001 L%
b1101010 L%
b1101011 L%
b1101100 L%
b1101101 L%
b1101110 L%
b1101111 L%
b1110000 L%
b1110001 L%
b1110010 L%
b1110011 L%
b1110100 L%
b1110101 L%
b1110110 L%
b1110111 L%
b1111000 L%
b1111001 L%
b1111010 L%
b1111011 L%
b1111100 L%
b1111101 L%
b1111110 L%
b1111111 L%
b10000000 L%
b10000001 L%
b10000010 L%
b10000011 L%
b10000100 L%
b10000101 L%
b10000110 L%
b10000111 L%
b10001000 L%
b10001001 L%
b10001010 L%
b10001011 L%
b10001100 L%
b10001101 L%
b10001110 L%
b10001111 L%
b10010000 L%
b10010001 L%
b10010010 L%
b10010011 L%
b10010100 L%
b10010101 L%
b10010110 L%
b10010111 L%
b10011000 L%
b10011001 L%
b10011010 L%
b10011011 L%
b10011100 L%
b10011101 L%
b10011110 L%
b10011111 L%
b10100000 L%
b10100001 L%
b10100010 L%
b10100011 L%
b10100100 L%
b10100101 L%
b10100110 L%
b10100111 L%
b10101000 L%
b10101001 L%
b10101010 L%
b10101011 L%
b10101100 L%
b10101101 L%
b10101110 L%
b10101111 L%
b10110000 L%
b10110001 L%
b10110010 L%
b10110011 L%
b10110100 L%
b10110101 L%
b10110110 L%
b10110111 L%
b10111000 L%
b10111001 L%
b10111010 L%
b10111011 L%
b10111100 L%
b10111101 L%
b10111110 L%
b10111111 L%
b11000000 L%
b11000001 L%
b11000010 L%
b11000011 L%
b11000100 L%
b11000101 L%
b11000110 L%
b11000111 L%
b11001000 L%
b11001001 L%
b11001010 L%
b11001011 L%
b11001100 L%
b11001101 L%
b11001110 L%
b11001111 L%
b11010000 L%
b11010001 L%
b11010010 L%
b11010011 L%
b11010100 L%
b11010101 L%
b11010110 L%
b11010111 L%
b11011000 L%
b11011001 L%
b11011010 L%
b11011011 L%
b11011100 L%
b11011101 L%
b11011110 L%
b11011111 L%
b11100000 L%
b11100001 L%
b11100010 L%
b11100011 L%
b11100100 L%
b11100101 L%
b11100110 L%
b11100111 L%
b11101000 L%
b11101001 L%
b11101010 L%
b11101011 L%
b11101100 L%
b11101101 L%
b11101110 L%
b11101111 L%
b11110000 L%
b11110001 L%
b11110010 L%
b11110011 L%
b11110100 L%
b11110101 L%
b11110110 L%
b11110111 L%
b11111000 L%
b11111001 L%
b11111010 L%
b11111011 L%
b11111100 L%
b11111101 L%
b11111110 L%
b11111111 L%
b100000000 L%
b0 O%
b1 O%
b10 O%
b11 O%
b100 O%
b101 O%
b110 O%
b111 O%
b1000 O%
b1001 O%
b1010 O%
b1011 O%
b1100 O%
b1101 O%
b1110 O%
b1111 O%
b10000 O%
b10001 O%
b10010 O%
b10011 O%
b10100 O%
b10101 O%
b10110 O%
b10111 O%
b11000 O%
b11001 O%
b11010 O%
b11011 O%
b11100 O%
b11101 O%
b11110 O%
b11111 O%
b100000 O%
b100001 O%
b100010 O%
b100011 O%
b100100 O%
b100101 O%
b100110 O%
b100111 O%
b101000 O%
b101001 O%
b101010 O%
b101011 O%
b101100 O%
b101101 O%
b101110 O%
b101111 O%
b110000 O%
b110001 O%
b110010 O%
b110011 O%
b110100 O%
b110101 O%
b110110 O%
b110111 O%
b111000 O%
b111001 O%
b111010 O%
b111011 O%
b111100 O%
b111101 O%
b111110 O%
b111111 O%
b1000000 O%
b1000001 O%
b1000010 O%
b1000011 O%
b1000100 O%
b1000101 O%
b1000110 O%
b1000111 O%
b1001000 O%
b1001001 O%
b1001010 O%
b1001011 O%
b1001100 O%
b1001101 O%
b1001110 O%
b1001111 O%
b1010000 O%
b1010001 O%
b1010010 O%
b1010011 O%
b1010100 O%
b1010101 O%
b1010110 O%
b1010111 O%
b1011000 O%
b1011001 O%
b1011010 O%
b1011011 O%
b1011100 O%
b1011101 O%
b1011110 O%
b1011111 O%
b1100000 O%
b1100001 O%
b1100010 O%
b1100011 O%
b1100100 O%
b1100101 O%
b1100110 O%
b1100111 O%
b1101000 O%
b1101001 O%
b1101010 O%
b1101011 O%
b1101100 O%
b1101101 O%
b1101110 O%
b1101111 O%
b1110000 O%
b1110001 O%
b1110010 O%
b1110011 O%
b1110100 O%
b1110101 O%
b1110110 O%
b1110111 O%
b1111000 O%
b1111001 O%
b1111010 O%
b1111011 O%
b1111100 O%
b1111101 O%
b1111110 O%
b1111111 O%
b10000000 O%
b10000001 O%
b10000010 O%
b10000011 O%
b10000100 O%
b10000101 O%
b10000110 O%
b10000111 O%
b10001000 O%
b10001001 O%
b10001010 O%
b10001011 O%
b10001100 O%
b10001101 O%
b10001110 O%
b10001111 O%
b10010000 O%
b10010001 O%
b10010010 O%
b10010011 O%
b10010100 O%
b10010101 O%
b10010110 O%
b10010111 O%
b10011000 O%
b10011001 O%
b10011010 O%
b10011011 O%
b10011100 O%
b10011101 O%
b10011110 O%
b10011111 O%
b10100000 O%
b10100001 O%
b10100010 O%
b10100011 O%
b10100100 O%
b10100101 O%
b10100110 O%
b10100111 O%
b10101000 O%
b10101001 O%
b10101010 O%
b10101011 O%
b10101100 O%
b10101101 O%
b10101110 O%
b10101111 O%
b10110000 O%
b10110001 O%
b10110010 O%
b10110011 O%
b10110100 O%
b10110101 O%
b10110110 O%
b10110111 O%
b10111000 O%
b10111001 O%
b10111010 O%
b10111011 O%
b10111100 O%
b10111101 O%
b10111110 O%
b10111111 O%
b11000000 O%
b11000001 O%
b11000010 O%
b11000011 O%
b11000100 O%
b11000101 O%
b11000110 O%
b11000111 O%
b11001000 O%
b11001001 O%
b11001010 O%
b11001011 O%
b11001100 O%
b11001101 O%
b11001110 O%
b11001111 O%
b11010000 O%
b11010001 O%
b11010010 O%
b11010011 O%
b11010100 O%
b11010101 O%
b11010110 O%
b11010111 O%
b11011000 O%
b11011001 O%
b11011010 O%
b11011011 O%
b11011100 O%
b11011101 O%
b11011110 O%
b11011111 O%
b11100000 O%
b11100001 O%
b11100010 O%
b11100011 O%
b11100100 O%
b11100101 O%
b11100110 O%
b11100111 O%
b11101000 O%
b11101001 O%
b11101010 O%
b11101011 O%
b11101100 O%
b11101101 O%
b11101110 O%
b11101111 O%
b11110000 O%
b11110001 O%
b11110010 O%
b11110011 O%
b11110100 O%
b11110101 O%
b11110110 O%
b11110111 O%
b11111000 O%
b11111001 O%
b11111010 O%
b11111011 O%
b11111100 O%
b11111101 O%
b11111110 O%
b11111111 O%
b100000000 O%
b0 R%
b1 R%
b10 R%
b11 R%
b100 R%
b101 R%
b110 R%
b111 R%
b1000 R%
b1001 R%
b1010 R%
b1011 R%
b1100 R%
b1101 R%
b1110 R%
b1111 R%
b10000 R%
b10001 R%
b10010 R%
b10011 R%
b10100 R%
b10101 R%
b10110 R%
b10111 R%
b11000 R%
b11001 R%
b11010 R%
b11011 R%
b11100 R%
b11101 R%
b11110 R%
b11111 R%
b100000 R%
b100001 R%
b100010 R%
b100011 R%
b100100 R%
b100101 R%
b100110 R%
b100111 R%
b101000 R%
b101001 R%
b101010 R%
b101011 R%
b101100 R%
b101101 R%
b101110 R%
b101111 R%
b110000 R%
b110001 R%
b110010 R%
b110011 R%
b110100 R%
b110101 R%
b110110 R%
b110111 R%
b111000 R%
b111001 R%
b111010 R%
b111011 R%
b111100 R%
b111101 R%
b111110 R%
b111111 R%
b1000000 R%
b1000001 R%
b1000010 R%
b1000011 R%
b1000100 R%
b1000101 R%
b1000110 R%
b1000111 R%
b1001000 R%
b1001001 R%
b1001010 R%
b1001011 R%
b1001100 R%
b1001101 R%
b1001110 R%
b1001111 R%
b1010000 R%
b1010001 R%
b1010010 R%
b1010011 R%
b1010100 R%
b1010101 R%
b1010110 R%
b1010111 R%
b1011000 R%
b1011001 R%
b1011010 R%
b1011011 R%
b1011100 R%
b1011101 R%
b1011110 R%
b1011111 R%
b1100000 R%
b1100001 R%
b1100010 R%
b1100011 R%
b1100100 R%
b1100101 R%
b1100110 R%
b1100111 R%
b1101000 R%
b1101001 R%
b1101010 R%
b1101011 R%
b1101100 R%
b1101101 R%
b1101110 R%
b1101111 R%
b1110000 R%
b1110001 R%
b1110010 R%
b1110011 R%
b1110100 R%
b1110101 R%
b1110110 R%
b1110111 R%
b1111000 R%
b1111001 R%
b1111010 R%
b1111011 R%
b1111100 R%
b1111101 R%
b1111110 R%
b1111111 R%
b10000000 R%
b10000001 R%
b10000010 R%
b10000011 R%
b10000100 R%
b10000101 R%
b10000110 R%
b10000111 R%
b10001000 R%
b10001001 R%
b10001010 R%
b10001011 R%
b10001100 R%
b10001101 R%
b10001110 R%
b10001111 R%
b10010000 R%
b10010001 R%
b10010010 R%
b10010011 R%
b10010100 R%
b10010101 R%
b10010110 R%
b10010111 R%
b10011000 R%
b10011001 R%
b10011010 R%
b10011011 R%
b10011100 R%
b10011101 R%
b10011110 R%
b10011111 R%
b10100000 R%
b10100001 R%
b10100010 R%
b10100011 R%
b10100100 R%
b10100101 R%
b10100110 R%
b10100111 R%
b10101000 R%
b10101001 R%
b10101010 R%
b10101011 R%
b10101100 R%
b10101101 R%
b10101110 R%
b10101111 R%
b10110000 R%
b10110001 R%
b10110010 R%
b10110011 R%
b10110100 R%
b10110101 R%
b10110110 R%
b10110111 R%
b10111000 R%
b10111001 R%
b10111010 R%
b10111011 R%
b10111100 R%
b10111101 R%
b10111110 R%
b10111111 R%
b11000000 R%
b11000001 R%
b11000010 R%
b11000011 R%
b11000100 R%
b11000101 R%
b11000110 R%
b11000111 R%
b11001000 R%
b11001001 R%
b11001010 R%
b11001011 R%
b11001100 R%
b11001101 R%
b11001110 R%
b11001111 R%
b11010000 R%
b11010001 R%
b11010010 R%
b11010011 R%
b11010100 R%
b11010101 R%
b11010110 R%
b11010111 R%
b11011000 R%
b11011001 R%
b11011010 R%
b11011011 R%
b11011100 R%
b11011101 R%
b11011110 R%
b11011111 R%
b11100000 R%
b11100001 R%
b11100010 R%
b11100011 R%
b11100100 R%
b11100101 R%
b11100110 R%
b11100111 R%
b11101000 R%
b11101001 R%
b11101010 R%
b11101011 R%
b11101100 R%
b11101101 R%
b11101110 R%
b11101111 R%
b11110000 R%
b11110001 R%
b11110010 R%
b11110011 R%
b11110100 R%
b11110101 R%
b11110110 R%
b11110111 R%
b11111000 R%
b11111001 R%
b11111010 R%
b11111011 R%
b11111100 R%
b11111101 R%
b11111110 R%
b11111111 R%
b100000000 R%
b0 U%
b1 U%
b10 U%
b11 U%
b100 U%
b101 U%
b110 U%
b111 U%
b1000 U%
b1001 U%
b1010 U%
b1011 U%
b1100 U%
b1101 U%
b1110 U%
b1111 U%
b10000 U%
b10001 U%
b10010 U%
b10011 U%
b10100 U%
b10101 U%
b10110 U%
b10111 U%
b11000 U%
b11001 U%
b11010 U%
b11011 U%
b11100 U%
b11101 U%
b11110 U%
b11111 U%
b100000 U%
b100001 U%
b100010 U%
b100011 U%
b100100 U%
b100101 U%
b100110 U%
b100111 U%
b101000 U%
b101001 U%
b101010 U%
b101011 U%
b101100 U%
b101101 U%
b101110 U%
b101111 U%
b110000 U%
b110001 U%
b110010 U%
b110011 U%
b110100 U%
b110101 U%
b110110 U%
b110111 U%
b111000 U%
b111001 U%
b111010 U%
b111011 U%
b111100 U%
b111101 U%
b111110 U%
b111111 U%
b1000000 U%
b1000001 U%
b1000010 U%
b1000011 U%
b1000100 U%
b1000101 U%
b1000110 U%
b1000111 U%
b1001000 U%
b1001001 U%
b1001010 U%
b1001011 U%
b1001100 U%
b1001101 U%
b1001110 U%
b1001111 U%
b1010000 U%
b1010001 U%
b1010010 U%
b1010011 U%
b1010100 U%
b1010101 U%
b1010110 U%
b1010111 U%
b1011000 U%
b1011001 U%
b1011010 U%
b1011011 U%
b1011100 U%
b1011101 U%
b1011110 U%
b1011111 U%
b1100000 U%
b1100001 U%
b1100010 U%
b1100011 U%
b1100100 U%
b1100101 U%
b1100110 U%
b1100111 U%
b1101000 U%
b1101001 U%
b1101010 U%
b1101011 U%
b1101100 U%
b1101101 U%
b1101110 U%
b1101111 U%
b1110000 U%
b1110001 U%
b1110010 U%
b1110011 U%
b1110100 U%
b1110101 U%
b1110110 U%
b1110111 U%
b1111000 U%
b1111001 U%
b1111010 U%
b1111011 U%
b1111100 U%
b1111101 U%
b1111110 U%
b1111111 U%
b10000000 U%
b10000001 U%
b10000010 U%
b10000011 U%
b10000100 U%
b10000101 U%
b10000110 U%
b10000111 U%
b10001000 U%
b10001001 U%
b10001010 U%
b10001011 U%
b10001100 U%
b10001101 U%
b10001110 U%
b10001111 U%
b10010000 U%
b10010001 U%
b10010010 U%
b10010011 U%
b10010100 U%
b10010101 U%
b10010110 U%
b10010111 U%
b10011000 U%
b10011001 U%
b10011010 U%
b10011011 U%
b10011100 U%
b10011101 U%
b10011110 U%
b10011111 U%
b10100000 U%
b10100001 U%
b10100010 U%
b10100011 U%
b10100100 U%
b10100101 U%
b10100110 U%
b10100111 U%
b10101000 U%
b10101001 U%
b10101010 U%
b10101011 U%
b10101100 U%
b10101101 U%
b10101110 U%
b10101111 U%
b10110000 U%
b10110001 U%
b10110010 U%
b10110011 U%
b10110100 U%
b10110101 U%
b10110110 U%
b10110111 U%
b10111000 U%
b10111001 U%
b10111010 U%
b10111011 U%
b10111100 U%
b10111101 U%
b10111110 U%
b10111111 U%
b11000000 U%
b11000001 U%
b11000010 U%
b11000011 U%
b11000100 U%
b11000101 U%
b11000110 U%
b11000111 U%
b11001000 U%
b11001001 U%
b11001010 U%
b11001011 U%
b11001100 U%
b11001101 U%
b11001110 U%
b11001111 U%
b11010000 U%
b11010001 U%
b11010010 U%
b11010011 U%
b11010100 U%
b11010101 U%
b11010110 U%
b11010111 U%
b11011000 U%
b11011001 U%
b11011010 U%
b11011011 U%
b11011100 U%
b11011101 U%
b11011110 U%
b11011111 U%
b11100000 U%
b11100001 U%
b11100010 U%
b11100011 U%
b11100100 U%
b11100101 U%
b11100110 U%
b11100111 U%
b11101000 U%
b11101001 U%
b11101010 U%
b11101011 U%
b11101100 U%
b11101101 U%
b11101110 U%
b11101111 U%
b11110000 U%
b11110001 U%
b11110010 U%
b11110011 U%
b11110100 U%
b11110101 U%
b11110110 U%
b11110111 U%
b11111000 U%
b11111001 U%
b11111010 U%
b11111011 U%
b11111100 U%
b11111101 U%
b11111110 U%
b11111111 U%
b100000000 U%
b0 X%
b1 X%
b10 X%
b11 X%
b100 X%
b101 X%
b110 X%
b111 X%
b1000 X%
b1001 X%
b1010 X%
b1011 X%
b1100 X%
b1101 X%
b1110 X%
b1111 X%
b10000 X%
b10001 X%
b10010 X%
b10011 X%
b10100 X%
b10101 X%
b10110 X%
b10111 X%
b11000 X%
b11001 X%
b11010 X%
b11011 X%
b11100 X%
b11101 X%
b11110 X%
b11111 X%
b100000 X%
b100001 X%
b100010 X%
b100011 X%
b100100 X%
b100101 X%
b100110 X%
b100111 X%
b101000 X%
b101001 X%
b101010 X%
b101011 X%
b101100 X%
b101101 X%
b101110 X%
b101111 X%
b110000 X%
b110001 X%
b110010 X%
b110011 X%
b110100 X%
b110101 X%
b110110 X%
b110111 X%
b111000 X%
b111001 X%
b111010 X%
b111011 X%
b111100 X%
b111101 X%
b111110 X%
b111111 X%
b1000000 X%
b1000001 X%
b1000010 X%
b1000011 X%
b1000100 X%
b1000101 X%
b1000110 X%
b1000111 X%
b1001000 X%
b1001001 X%
b1001010 X%
b1001011 X%
b1001100 X%
b1001101 X%
b1001110 X%
b1001111 X%
b1010000 X%
b1010001 X%
b1010010 X%
b1010011 X%
b1010100 X%
b1010101 X%
b1010110 X%
b1010111 X%
b1011000 X%
b1011001 X%
b1011010 X%
b1011011 X%
b1011100 X%
b1011101 X%
b1011110 X%
b1011111 X%
b1100000 X%
b1100001 X%
b1100010 X%
b1100011 X%
b1100100 X%
b1100101 X%
b1100110 X%
b1100111 X%
b1101000 X%
b1101001 X%
b1101010 X%
b1101011 X%
b1101100 X%
b1101101 X%
b1101110 X%
b1101111 X%
b1110000 X%
b1110001 X%
b1110010 X%
b1110011 X%
b1110100 X%
b1110101 X%
b1110110 X%
b1110111 X%
b1111000 X%
b1111001 X%
b1111010 X%
b1111011 X%
b1111100 X%
b1111101 X%
b1111110 X%
b1111111 X%
b10000000 X%
b10000001 X%
b10000010 X%
b10000011 X%
b10000100 X%
b10000101 X%
b10000110 X%
b10000111 X%
b10001000 X%
b10001001 X%
b10001010 X%
b10001011 X%
b10001100 X%
b10001101 X%
b10001110 X%
b10001111 X%
b10010000 X%
b10010001 X%
b10010010 X%
b10010011 X%
b10010100 X%
b10010101 X%
b10010110 X%
b10010111 X%
b10011000 X%
b10011001 X%
b10011010 X%
b10011011 X%
b10011100 X%
b10011101 X%
b10011110 X%
b10011111 X%
b10100000 X%
b10100001 X%
b10100010 X%
b10100011 X%
b10100100 X%
b10100101 X%
b10100110 X%
b10100111 X%
b10101000 X%
b10101001 X%
b10101010 X%
b10101011 X%
b10101100 X%
b10101101 X%
b10101110 X%
b10101111 X%
b10110000 X%
b10110001 X%
b10110010 X%
b10110011 X%
b10110100 X%
b10110101 X%
b10110110 X%
b10110111 X%
b10111000 X%
b10111001 X%
b10111010 X%
b10111011 X%
b10111100 X%
b10111101 X%
b10111110 X%
b10111111 X%
b11000000 X%
b11000001 X%
b11000010 X%
b11000011 X%
b11000100 X%
b11000101 X%
b11000110 X%
b11000111 X%
b11001000 X%
b11001001 X%
b11001010 X%
b11001011 X%
b11001100 X%
b11001101 X%
b11001110 X%
b11001111 X%
b11010000 X%
b11010001 X%
b11010010 X%
b11010011 X%
b11010100 X%
b11010101 X%
b11010110 X%
b11010111 X%
b11011000 X%
b11011001 X%
b11011010 X%
b11011011 X%
b11011100 X%
b11011101 X%
b11011110 X%
b11011111 X%
b11100000 X%
b11100001 X%
b11100010 X%
b11100011 X%
b11100100 X%
b11100101 X%
b11100110 X%
b11100111 X%
b11101000 X%
b11101001 X%
b11101010 X%
b11101011 X%
b11101100 X%
b11101101 X%
b11101110 X%
b11101111 X%
b11110000 X%
b11110001 X%
b11110010 X%
b11110011 X%
b11110100 X%
b11110101 X%
b11110110 X%
b11110111 X%
b11111000 X%
b11111001 X%
b11111010 X%
b11111011 X%
b11111100 X%
b11111101 X%
b11111110 X%
b11111111 X%
b100000000 X%
b0 [%
b1 [%
b10 [%
b11 [%
b100 [%
b101 [%
b110 [%
b111 [%
b1000 [%
b1001 [%
b1010 [%
b1011 [%
b1100 [%
b1101 [%
b1110 [%
b1111 [%
b10000 [%
b10001 [%
b10010 [%
b10011 [%
b10100 [%
b10101 [%
b10110 [%
b10111 [%
b11000 [%
b11001 [%
b11010 [%
b11011 [%
b11100 [%
b11101 [%
b11110 [%
b11111 [%
b100000 [%
b100001 [%
b100010 [%
b100011 [%
b100100 [%
b100101 [%
b100110 [%
b100111 [%
b101000 [%
b101001 [%
b101010 [%
b101011 [%
b101100 [%
b101101 [%
b101110 [%
b101111 [%
b110000 [%
b110001 [%
b110010 [%
b110011 [%
b110100 [%
b110101 [%
b110110 [%
b110111 [%
b111000 [%
b111001 [%
b111010 [%
b111011 [%
b111100 [%
b111101 [%
b111110 [%
b111111 [%
b1000000 [%
b1000001 [%
b1000010 [%
b1000011 [%
b1000100 [%
b1000101 [%
b1000110 [%
b1000111 [%
b1001000 [%
b1001001 [%
b1001010 [%
b1001011 [%
b1001100 [%
b1001101 [%
b1001110 [%
b1001111 [%
b1010000 [%
b1010001 [%
b1010010 [%
b1010011 [%
b1010100 [%
b1010101 [%
b1010110 [%
b1010111 [%
b1011000 [%
b1011001 [%
b1011010 [%
b1011011 [%
b1011100 [%
b1011101 [%
b1011110 [%
b1011111 [%
b1100000 [%
b1100001 [%
b1100010 [%
b1100011 [%
b1100100 [%
b1100101 [%
b1100110 [%
b1100111 [%
b1101000 [%
b1101001 [%
b1101010 [%
b1101011 [%
b1101100 [%
b1101101 [%
b1101110 [%
b1101111 [%
b1110000 [%
b1110001 [%
b1110010 [%
b1110011 [%
b1110100 [%
b1110101 [%
b1110110 [%
b1110111 [%
b1111000 [%
b1111001 [%
b1111010 [%
b1111011 [%
b1111100 [%
b1111101 [%
b1111110 [%
b1111111 [%
b10000000 [%
b10000001 [%
b10000010 [%
b10000011 [%
b10000100 [%
b10000101 [%
b10000110 [%
b10000111 [%
b10001000 [%
b10001001 [%
b10001010 [%
b10001011 [%
b10001100 [%
b10001101 [%
b10001110 [%
b10001111 [%
b10010000 [%
b10010001 [%
b10010010 [%
b10010011 [%
b10010100 [%
b10010101 [%
b10010110 [%
b10010111 [%
b10011000 [%
b10011001 [%
b10011010 [%
b10011011 [%
b10011100 [%
b10011101 [%
b10011110 [%
b10011111 [%
b10100000 [%
b10100001 [%
b10100010 [%
b10100011 [%
b10100100 [%
b10100101 [%
b10100110 [%
b10100111 [%
b10101000 [%
b10101001 [%
b10101010 [%
b10101011 [%
b10101100 [%
b10101101 [%
b10101110 [%
b10101111 [%
b10110000 [%
b10110001 [%
b10110010 [%
b10110011 [%
b10110100 [%
b10110101 [%
b10110110 [%
b10110111 [%
b10111000 [%
b10111001 [%
b10111010 [%
b10111011 [%
b10111100 [%
b10111101 [%
b10111110 [%
b10111111 [%
b11000000 [%
b11000001 [%
b11000010 [%
b11000011 [%
b11000100 [%
b11000101 [%
b11000110 [%
b11000111 [%
b11001000 [%
b11001001 [%
b11001010 [%
b11001011 [%
b11001100 [%
b11001101 [%
b11001110 [%
b11001111 [%
b11010000 [%
b11010001 [%
b11010010 [%
b11010011 [%
b11010100 [%
b11010101 [%
b11010110 [%
b11010111 [%
b11011000 [%
b11011001 [%
b11011010 [%
b11011011 [%
b11011100 [%
b11011101 [%
b11011110 [%
b11011111 [%
b11100000 [%
b11100001 [%
b11100010 [%
b11100011 [%
b11100100 [%
b11100101 [%
b11100110 [%
b11100111 [%
b11101000 [%
b11101001 [%
b11101010 [%
b11101011 [%
b11101100 [%
b11101101 [%
b11101110 [%
b11101111 [%
b11110000 [%
b11110001 [%
b11110010 [%
b11110011 [%
b11110100 [%
b11110101 [%
b11110110 [%
b11110111 [%
b11111000 [%
b11111001 [%
b11111010 [%
b11111011 [%
b11111100 [%
b11111101 [%
b11111110 [%
b11111111 [%
b100000000 [%
b0 ]%
b1 ]%
b10 ]%
b11 ]%
b100 ]%
b101 ]%
b110 ]%
b111 ]%
b1000 ]%
b1001 ]%
b1010 ]%
b1011 ]%
b1100 ]%
b1101 ]%
b1110 ]%
b1111 ]%
b10000 ]%
b10001 ]%
b10010 ]%
b10011 ]%
b10100 ]%
b10101 ]%
b10110 ]%
b10111 ]%
b11000 ]%
b11001 ]%
b11010 ]%
b11011 ]%
b11100 ]%
b11101 ]%
b11110 ]%
b11111 ]%
b100000 ]%
b100001 ]%
b100010 ]%
b100011 ]%
b100100 ]%
b100101 ]%
b100110 ]%
b100111 ]%
b101000 ]%
b101001 ]%
b101010 ]%
b101011 ]%
b101100 ]%
b101101 ]%
b101110 ]%
b101111 ]%
b110000 ]%
b110001 ]%
b110010 ]%
b110011 ]%
b110100 ]%
b110101 ]%
b110110 ]%
b110111 ]%
b111000 ]%
b111001 ]%
b111010 ]%
b111011 ]%
b111100 ]%
b111101 ]%
b111110 ]%
b111111 ]%
b1000000 ]%
b1000001 ]%
b1000010 ]%
b1000011 ]%
b1000100 ]%
b1000101 ]%
b1000110 ]%
b1000111 ]%
b1001000 ]%
b1001001 ]%
b1001010 ]%
b1001011 ]%
b1001100 ]%
b1001101 ]%
b1001110 ]%
b1001111 ]%
b1010000 ]%
b1010001 ]%
b1010010 ]%
b1010011 ]%
b1010100 ]%
b1010101 ]%
b1010110 ]%
b1010111 ]%
b1011000 ]%
b1011001 ]%
b1011010 ]%
b1011011 ]%
b1011100 ]%
b1011101 ]%
b1011110 ]%
b1011111 ]%
b1100000 ]%
b1100001 ]%
b1100010 ]%
b1100011 ]%
b1100100 ]%
b1100101 ]%
b1100110 ]%
b1100111 ]%
b1101000 ]%
b1101001 ]%
b1101010 ]%
b1101011 ]%
b1101100 ]%
b1101101 ]%
b1101110 ]%
b1101111 ]%
b1110000 ]%
b1110001 ]%
b1110010 ]%
b1110011 ]%
b1110100 ]%
b1110101 ]%
b1110110 ]%
b1110111 ]%
b1111000 ]%
b1111001 ]%
b1111010 ]%
b1111011 ]%
b1111100 ]%
b1111101 ]%
b1111110 ]%
b1111111 ]%
b10000000 ]%
b10000001 ]%
b10000010 ]%
b10000011 ]%
b10000100 ]%
b10000101 ]%
b10000110 ]%
b10000111 ]%
b10001000 ]%
b10001001 ]%
b10001010 ]%
b10001011 ]%
b10001100 ]%
b10001101 ]%
b10001110 ]%
b10001111 ]%
b10010000 ]%
b10010001 ]%
b10010010 ]%
b10010011 ]%
b10010100 ]%
b10010101 ]%
b10010110 ]%
b10010111 ]%
b10011000 ]%
b10011001 ]%
b10011010 ]%
b10011011 ]%
b10011100 ]%
b10011101 ]%
b10011110 ]%
b10011111 ]%
b10100000 ]%
b10100001 ]%
b10100010 ]%
b10100011 ]%
b10100100 ]%
b10100101 ]%
b10100110 ]%
b10100111 ]%
b10101000 ]%
b10101001 ]%
b10101010 ]%
b10101011 ]%
b10101100 ]%
b10101101 ]%
b10101110 ]%
b10101111 ]%
b10110000 ]%
b10110001 ]%
b10110010 ]%
b10110011 ]%
b10110100 ]%
b10110101 ]%
b10110110 ]%
b10110111 ]%
b10111000 ]%
b10111001 ]%
b10111010 ]%
b10111011 ]%
b10111100 ]%
b10111101 ]%
b10111110 ]%
b10111111 ]%
b11000000 ]%
b11000001 ]%
b11000010 ]%
b11000011 ]%
b11000100 ]%
b11000101 ]%
b11000110 ]%
b11000111 ]%
b11001000 ]%
b11001001 ]%
b11001010 ]%
b11001011 ]%
b11001100 ]%
b11001101 ]%
b11001110 ]%
b11001111 ]%
b11010000 ]%
b11010001 ]%
b11010010 ]%
b11010011 ]%
b11010100 ]%
b11010101 ]%
b11010110 ]%
b11010111 ]%
b11011000 ]%
b11011001 ]%
b11011010 ]%
b11011011 ]%
b11011100 ]%
b11011101 ]%
b11011110 ]%
b11011111 ]%
b11100000 ]%
b11100001 ]%
b11100010 ]%
b11100011 ]%
b11100100 ]%
b11100101 ]%
b11100110 ]%
b11100111 ]%
b11101000 ]%
b11101001 ]%
b11101010 ]%
b11101011 ]%
b11101100 ]%
b11101101 ]%
b11101110 ]%
b11101111 ]%
b11110000 ]%
b11110001 ]%
b11110010 ]%
b11110011 ]%
b11110100 ]%
b11110101 ]%
b11110110 ]%
b11110111 ]%
b11111000 ]%
b11111001 ]%
b11111010 ]%
b11111011 ]%
b11111100 ]%
b11111101 ]%
b11111110 ]%
b11111111 ]%
b100000000 ]%
b11 #!
#201
0"!
09
0~
xI%
x($
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
x'$
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
xH%
0Q0
xl!
xk!
xj!
xi!
xh!
xv!
xu!
xt!
xs!
xr!
1w,
0r,
0q,
0|,
0w,
1r,
1q,
1|,
#250
0!!
0P0
08
0}
#287
15
b100 W
b11 S
b1 O
1y
1N0
1K
1'0
14-
1(0
b0 R0
1w,
0r,
0q,
0|,
0w,
1r,
b1 f,
1q,
1|,
1p+
0J
0I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
1&-
#300
1!!
1P0
18
1}
xJ'
xI'
xH'
xG'
xF'
xE'
xD'
xC'
xB'
xA'
x@'
x?'
x>'
xZ'
xY'
xX'
xW'
xV'
xU'
xT'
xS'
xR'
xQ'
xP'
xO'
xN'
xM'
xL'
xK'
x](
x\(
x[(
xZ(
xY(
xX(
xW(
xV(
xU(
xT(
xS(
xR(
xQ(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x`(
x_(
x^(
xp)
xo)
xn)
xm)
xl)
xk)
xj)
xi)
xh)
xg)
xf)
xe)
xd)
x"*
x!*
x~)
x})
x|)
x{)
xz)
xy)
xx)
xw)
xv)
xu)
xt)
xs)
xr)
xq)
x%+
x$+
x#+
x"+
x!+
x~*
x}*
x|*
x{*
xz*
xy*
xx*
xw*
x5+
x4+
x3+
x2+
x1+
x0+
x/+
x.+
x-+
x,+
x++
x*+
x)+
x(+
x'+
x&+
1+-
16-
1)0
b100 #!
#301
1{+
15-
1*-
xE*
xF*
xG*
xH*
xI*
xJ*
xK*
xL*
xM*
xN*
xO*
xP*
xQ*
xR*
xS*
xT*
x8*
x9*
x:*
x;*
x<*
x=*
x>*
x?*
x@*
xA*
xB*
xC*
xD*
x2)
x3)
x4)
x5)
x6)
x7)
x8)
x9)
x:)
x;)
x<)
x=)
x>)
x?)
x@)
xA)
x%)
x&)
x')
x()
x))
x*)
x+)
x,)
x-)
x.)
x/)
x0)
x1)
x}'
x~'
x!(
x"(
x#(
x$(
x%(
x&(
x'(
x((
x)(
x*(
x+(
x,(
x-(
x.(
xp'
xq'
xr'
xs'
xt'
xu'
xv'
xw'
xx'
xy'
xz'
x{'
x|'
xj&
xk&
xl&
xm&
xn&
xo&
xp&
xq&
xr&
xs&
xt&
xu&
xv&
xw&
xx&
xy&
x]&
x^&
x_&
x`&
xa&
xb&
xc&
xd&
xe&
xf&
xg&
xh&
xi&
0(0
1r+
1l+
b1 e,
1w,
0r,
0q,
0|,
b0 a,
1y,
1z,
1i,
1j,
b10 f,
0!-
1g,
1h,
1*0
0~+
12
0/-
03-
0i/
0x/
17"
1>"
18"
1?"
0p+
1o+
0q!
0p!
0o!
0n!
0m!
00"
0/"
0."
0{!
0z!
0y!
0x!
0w!
03"
02"
01"
1x-
1|-
1*.
1".
1&.
1..
0%!
1&$
1>%
1{#
1(0
x5"
x<"
x'.
x}-
0&-
1%-
xg!
xf!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xG!
xF!
xE!
xD!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
x;!
x:!
x9!
x8!
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
xA"
x;"
x:"
x4"
x|+
x+0
xy-
x+.
x#.
x/.
0($
0I%
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0H%
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0'$
x:
05"
0<"
0'.
0}-
0:"
0A"
0G!
0F!
0E!
0D!
0C!
0B!
0A!
0@!
0?!
0>!
0=!
0<!
0;!
0:!
09!
08!
0g!
0f!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0v!
0u!
0t!
0s!
0r!
0l!
0k!
0j!
0i!
0h!
0|+
0+0
0/.
0+.
0:
1?%
1|#
1;"
14"
1y-
1#.
0i,
0j,
0y,
0z,
1y,
1z,
1i,
1j,
#350
0!!
0P0
08
0}
#400
1!!
1P0
18
1}
0+-
1,-
1{-
1%.
b101 #!
#401
1$.
1z-
1)-
0*-
1s+
1t+
0l+
1k+
b10 e,
0i,
0j,
0y,
0z,
b0 b,
bx a,
1k,
b11 f,
08"
0?"
07"
0>"
1s"
1p+
xq!
xp!
xo!
xn!
xm!
x0"
x/"
x."
x{!
xz!
xy!
xx!
xw!
x3"
x2"
x1"
x%!
xG&
xF&
xE&
xD&
0>%
0{#
0&$
xX*
xE)
x2(
x}&
x'!
1&-
x|#
x?%
x%"
x$"
x#"
x""
x!"
x~!
x}!
x|!
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0d"
0c"
0b"
0;"
04"
0y-
0#.
x($
xI%
xk$
xj$
xi$
xh$
xg$
xf$
xe$
xd$
xc$
xb$
xa$
x`$
x_$
x^$
x]$
x\$
x{$
xz$
xy$
xx$
xw$
xv$
xu$
xt$
xs$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
x-%
x,%
x+%
x*%
x)%
x(%
x'%
x&%
x%%
x$%
x#%
x"%
x!%
x~$
x}$
x|$
x=%
x<%
x;%
x:%
x9%
x8%
x7%
x6%
x5%
x4%
x3%
x2%
x1%
x0%
x/%
x.%
xH%
xJ#
xI#
xH#
xG#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
xZ#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xj#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xz#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
x'$
0'!
0C&
0B&
0A&
1@&
1G&
0F&
0E&
0D&
0X*
0E)
02(
1}&
xv!
xu!
xt!
xs!
xr!
xl!
xk!
xj!
xi!
xh!
0k,
b0 a,
1k,
0q!
0p!
0o!
0n!
0m!
00"
0/"
0."
0{!
0z!
0y!
0x!
0w!
03"
02"
01"
0%!
0%"
0$"
0#"
0""
0!"
0~!
0}!
0|!
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0($
0I%
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0{$
0z$
0y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0-%
0,%
0+%
0*%
0)%
0(%
0'%
0&%
0%%
0$%
0#%
0"%
0!%
0~$
0}$
0|$
0=%
0<%
0;%
0:%
09%
08%
07%
06%
05%
04%
03%
02%
01%
00%
0/%
0.%
0H%
0J#
0I#
0H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
0=#
0<#
0;#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
0S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0j#
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0z#
0y#
0x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0'$
0v!
0u!
0t!
0s!
0r!
0l!
0k!
0j!
0i!
0h!
1?%
1|#
0k,
1k,
#450
0!!
0P0
08
0}
#500
1!!
1P0
18
1}
18'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0>'
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
0p)
0o)
0n)
0m)
0l)
0k)
0j)
0i)
0h)
0g)
0f)
0e)
0d)
0%+
0$+
0#+
0"+
0!+
0~*
0}*
0|*
0{*
0z*
0y*
0x*
0w*
1I+
1+-
0{-
0%.
b110 #!
#501
0$.
0z-
1*-
1O&
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0D*
0%)
0&)
0')
0()
0))
0*)
0+)
0,)
0-)
0.)
0/)
00)
01)
0p'
0q'
0r'
0s'
0t'
0u'
0v'
0w'
0x'
0y'
0z'
0{'
0|'
0]&
0^&
0_&
0`&
0a&
0b&
0c&
0d&
0e&
0f&
0g&
0h&
0i&
1!'
17'
0s+
0t+
1H&
1x"
1'!
1|
0G&
0}&
0H&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
1m/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#550
0!!
0P0
08
0}
#600
1!!
1P0
18
1}
08'
1:'
0I+
1M+
0+-
0,-
1--
1r/
b111 #!
#601
1q/
1(-
0)-
0*-
1S&
0O&
13'
0!'
0m/
1l/
0l+
0k+
1j+
1d+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
1s,
0h/
17"
19"
1@"
1o+
0n+
17-
1{#
1m/
0l/
1}#
1#$
1$$
1%$
1%-
0$-
14"
1y-
0m,
0n,
0y,
0s,
1y,
1m,
1n,
1s,
#650
0!!
0P0
08
0}
#700
1!!
1P0
18
1}
0:'
1<'
0M+
1Q+
1,-
0--
1{-
b1000 #!
#701
1z-
0(-
1)-
1W&
0S&
15'
03'
1s+
1k+
0j+
b10 e,
0m,
0n,
0y,
0s,
b10 b,
1k,
b11 f,
09"
0@"
07"
07-
1s"
1p+
0{#
0}#
0#$
0$$
0%$
1&-
1p"
1r"
04"
0y-
1A&
0@&
1F&
12(
0r"
0k,
b10 a,
1k,
1/"
12"
#750
0!!
0P0
08
0}
#800
1!!
1P0
18
1}
0<'
1K(
1H+
0Q+
1+-
0{-
b1001 #!
#801
0z-
1*-
0W&
1N&
14(
05'
07'
1J(
0s+
1I&
0x"
1w"
1'!
1|
0F&
02(
0I&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
0m/
1l/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#850
0!!
0P0
08
0}
#900
1!!
1P0
18
1}
0K(
1M(
0H+
1L+
0+-
0,-
1--
0r/
1s/
b1010 #!
#901
1p/
0q/
1(-
0)-
0*-
1R&
0N&
1F(
04(
1m/
0l+
0k+
1j+
0d+
1c+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
0h/
17"
19"
1@"
1o+
0n+
1{#
0m/
1~#
1#$
1$$
1%$
1%-
0$-
14"
1y-
0m,
0n,
0y,
1y,
1m,
1n,
#950
0!!
0P0
08
0}
#1000
1!!
1P0
18
1}
0M(
1O(
0L+
1P+
1,-
0--
1{-
b1011 #!
#1001
1z-
0(-
1)-
1V&
0R&
1H(
0F(
1s+
1k+
0j+
b10 e,
0m,
0n,
0y,
b100 b,
1k,
b11 f,
09"
0@"
07"
1s"
1p+
0{#
0~#
0#$
0$$
0%$
1&-
0p"
1o"
1r"
04"
0y-
1B&
0A&
1E&
1E)
0r"
0k,
b100 a,
1k,
0/"
1."
02"
11"
#1050
0!!
0P0
08
0}
#1100
1!!
1P0
18
1}
0O(
1^)
1G+
0P+
1+-
0{-
b1100 #!
#1101
0z-
1*-
0V&
1M&
1G)
0H(
0J(
1])
0s+
1J&
0w"
1v"
1'!
1|
0E&
0E)
0J&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
1m/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#1150
0!!
0P0
08
0}
#1200
1!!
1P0
18
1}
0^)
1`)
0G+
1K+
0+-
0,-
1--
1r/
b1101 #!
#1201
1q/
1(-
0)-
0*-
1Q&
0M&
1Y)
0G)
0m/
0l/
1k/
0l+
0k+
1j+
1d+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
0h/
17"
19"
1@"
1o+
0n+
1{#
1m/
1l/
0k/
1!$
1#$
1$$
1%$
1%-
0$-
14"
1y-
0m,
0n,
0y,
1y,
1m,
1n,
#1250
0!!
0P0
08
0}
#1300
1!!
1P0
18
1}
0`)
1b)
0K+
1O+
1,-
0--
1{-
b1110 #!
#1301
1z-
0(-
1)-
1U&
0Q&
1[)
0Y)
1s+
1k+
0j+
b10 e,
0m,
0n,
0y,
b110 b,
1k,
b11 f,
09"
0@"
07"
1s"
1p+
0{#
0!$
0#$
0$$
0%$
1&-
1p"
1r"
04"
0y-
1C&
0B&
1D&
1X*
0r"
0k,
b110 a,
1k,
1/"
12"
#1350
0!!
0P0
08
0}
#1400
1!!
1P0
18
1}
0b)
1q*
1F+
0O+
1+-
0{-
b1111 #!
#1401
0z-
1*-
0U&
1L&
1Z*
0[)
0])
1p*
0s+
1K&
0v"
1u"
1'!
1|
0D&
0X*
0K&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
0m/
0l/
1k/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#1450
0!!
0P0
08
0}
#1500
1!!
1P0
18
1}
0q*
1s*
0F+
1J+
0+-
0,-
1--
0r/
0s/
1t/
b10000 #!
#1501
1o/
0p/
0q/
1(-
0)-
0*-
1P&
0L&
1l*
0Z*
1m/
0l+
0k+
1j+
0d+
0c+
1b+
1u+
b100 e,
0p,
1y,
1m,
1n,
1x,
b0 f,
1~,
0h/
17"
19"
1@"
11
0n+
1="
1{#
0m/
1"$
1#$
1$$
1%$
0$-
14"
1y-
0m,
0n,
0y,
0x,
0~,
1y,
1m,
1n,
1x,
1~,
#1502
b1 P
05
0y
0N0
0K
0'0
0m,
0n,
0y,
0x,
0~,
1y,
1m,
1n,
1x,
1~,
#1550
0!!
0P0
08
0}
#1600
1!!
1P0
18
1}
0s*
1u*
0J+
1N+
0--
1{-
b10001 #!
#1601
1z-
0(-
1T&
0P&
1n*
0l*
1s+
0j+
b0 e,
0m,
0n,
0y,
0x,
0~,
0w,
1r,
1q,
1|,
1~+
09"
0@"
07"
01
0="
02
1/-
13-
1i/
1x/
0k/
04-
0{#
0"$
0#$
0$$
0%$
04"
0y-
1w,
0r,
0q,
0|,
0w,
1r,
1q,
1|,
#1650
0!!
0P0
08
0}
#1687
15
b100000000000 3
b10001 S
b10 O
120
1y
1N0
1]
1K
1'0
14-
0(0
1w,
0r,
0q,
0|,
0w,
1r,
b1 f,
1q,
1|,
1p+
1&-
#1700
1!!
1P0
18
1}
0u*
0N+
1+-
0{-
0t/
0)0
b10010 #!
#1701
0{+
0o/
0z-
1*-
0T&
0n*
0p*
0s+
1(0
0u"
1l+
0b+
0u+
b1 e,
1w,
0r,
0q,
0|,
b100000000000 a,
1y,
1z,
1i,
1j,
b10 f,
0~+
12
0/-
03-
0i/
0x/
17"
1>"
18"
1?"
0p+
1o+
1q!
0/"
0."
1{!
02"
01"
1&$
1>%
1{#
0(0
0&-
1%-
0|#
0?%
#1750
0!!
0P0
08
0}
#1800
1!!
1P0
18
1}
0+-
1,-
b10011 #!
#1801
1)-
0*-
0l+
1k+
b10 e,
0i,
0j,
0y,
0z,
b100000000000 b,
b110 a,
1k,
b11 f,
08"
0?"
07"
0>"
1s"
1p+
0q!
1/"
1."
0{!
12"
11"
1D&
0>%
0{#
0&$
1X*
1&-
1|#
1?%
0p"
0o"
1f"
0C&
1@&
1G&
0D&
0X*
1}&
0k,
b100000000000 a,
1k,
1q!
0/"
0."
1{!
02"
01"
0|#
0?%
#1850
0!!
0P0
08
0}
#1900
1!!
1P0
18
1}
18'
1B'
1U(
1h)
1{*
1I+
1+-
b10100 #!
#1901
1*-
1O&
1<*
1))
1t'
1a&
1!'
17'
1H&
1x"
1'!
1|
0G&
0}&
0H&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
1m/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#1950
0!!
0P0
08
0}
#2000
1!!
1P0
18
1}
08'
1:'
0I+
1M+
0+-
0,-
1--
1r/
b10101 #!
#2001
1q/
1(-
0)-
0*-
1S&
0O&
13'
0!'
0m/
1l/
0l+
0k+
1j+
1d+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
1s,
0h/
17"
19"
1@"
1o+
0n+
17-
1{#
1m/
0l/
1}#
1#$
1$$
1%$
1%-
0$-
#2050
0!!
0P0
08
0}
#2100
1!!
1P0
18
1}
0:'
1<'
0M+
1Q+
1,-
0--
b10110 #!
#2101
0(-
1)-
1W&
0S&
15'
03'
1k+
0j+
b10 e,
0m,
0n,
0y,
0s,
b100000000010 b,
1k,
b11 f,
09"
0@"
07"
07-
1s"
1p+
0{#
0}#
0#$
0$$
0%$
1&-
1r"
1l!
1p"
1|#
1A&
0@&
1F&
12(
0r"
0k,
b100000000010 a,
1k,
1/"
12"
#2150
0!!
0P0
08
0}
#2200
1!!
1P0
18
1}
0<'
1K(
1H+
0Q+
1+-
b10111 #!
#2201
1*-
0W&
1N&
14(
05'
07'
1J(
1I&
0x"
1w"
1'!
1|
0F&
02(
0I&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
0m/
1l/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#2250
0!!
0P0
08
0}
#2300
1!!
1P0
18
1}
0K(
1M(
0H+
1L+
0+-
0,-
1--
0r/
1s/
b11000 #!
#2301
1p/
0q/
1(-
0)-
0*-
1R&
0N&
1F(
04(
1m/
0l+
0k+
1j+
0d+
1c+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
0h/
17"
19"
1@"
1o+
0n+
1{#
0m/
1~#
1#$
1$$
1%$
1%-
0$-
14"
0l!
1y-
0|#
04"
0y-
0m,
0n,
0y,
1y,
1m,
1n,
#2350
0!!
0P0
08
0}
#2400
1!!
1P0
18
1}
0M(
1O(
0L+
1P+
1,-
0--
b11001 #!
#2401
0(-
1)-
1V&
0R&
1H(
0F(
1k+
0j+
b10 e,
0m,
0n,
0y,
b100000000100 b,
1k,
b11 f,
09"
0@"
07"
1s"
1p+
0{#
0~#
0#$
0$$
0%$
1&-
1r"
1l!
0p"
1o"
1|#
1B&
0A&
1E&
1E)
0r"
0k,
b100000000100 a,
1k,
0/"
1."
02"
11"
#2450
0!!
0P0
08
0}
#2500
1!!
1P0
18
1}
0O(
1^)
1G+
0P+
1+-
b11010 #!
#2501
1*-
0V&
1M&
1G)
0H(
0J(
1])
1J&
0w"
1v"
1'!
1|
0E&
0E)
0J&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
1m/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#2550
0!!
0P0
08
0}
#2600
1!!
1P0
18
1}
0^)
1`)
0G+
1K+
0+-
0,-
1--
1r/
b11011 #!
#2601
1q/
1(-
0)-
0*-
1Q&
0M&
1Y)
0G)
0m/
0l/
1k/
0l+
0k+
1j+
1d+
b100 e,
0p,
1y,
1m,
1n,
b10 f,
0h/
17"
19"
1@"
1o+
0n+
1{#
1m/
1l/
0k/
1!$
1#$
1$$
1%$
1%-
0$-
14"
0l!
1y-
0|#
04"
0y-
0m,
0n,
0y,
1y,
1m,
1n,
#2650
0!!
0P0
08
0}
#2700
1!!
1P0
18
1}
0`)
1b)
0K+
1O+
1,-
0--
b11100 #!
#2701
0(-
1)-
1U&
0Q&
1[)
0Y)
1k+
0j+
b10 e,
0m,
0n,
0y,
b100000000110 b,
1k,
b11 f,
09"
0@"
07"
1s"
1p+
0{#
0!$
0#$
0$$
0%$
1&-
1r"
1l!
1p"
1|#
1C&
0B&
1D&
1X*
0r"
0k,
b100000000110 a,
1k,
1/"
12"
#2750
0!!
0P0
08
0}
#2800
1!!
1P0
18
1}
0b)
1q*
1F+
0O+
1+-
b11101 #!
#2801
1*-
0U&
1L&
1Z*
0[)
0])
1p*
1K&
0v"
1u"
1'!
1|
0D&
0X*
0K&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
0m/
0l/
1k/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#2850
0!!
0P0
08
0}
#2900
1!!
1P0
18
1}
0q*
1s*
0F+
1J+
0+-
0,-
1--
0r/
0s/
1t/
b11110 #!
#2901
1o/
0p/
0q/
1(-
0)-
0*-
1P&
0L&
1l*
0Z*
1m/
0l+
0k+
1j+
0d+
0c+
1b+
1u+
b100 e,
0p,
1y,
1m,
1n,
1x,
b0 f,
1},
0h/
17"
19"
1@"
11
0n+
16"
1{#
0m/
1"$
1#$
1$$
1%$
0$-
14"
0l!
1y-
0|#
04"
0y-
0m,
0n,
0y,
0x,
0},
1y,
1m,
1n,
1x,
1},
#2902
b10 P
05
0y
0N0
0K
0'0
0m,
0n,
0y,
0x,
0},
1y,
1m,
1n,
1x,
1},
#2950
0!!
0P0
08
0}
#3000
1!!
1P0
18
1}
0s*
1u*
0J+
1N+
0--
b11111 #!
#3001
0(-
1T&
0P&
1n*
0l*
0j+
b0 e,
0m,
0n,
0y,
0x,
0},
0w,
1r,
1q,
1|,
1~+
09"
0@"
07"
01
06"
02
1/-
13-
1i/
1x/
0k/
04-
0{#
0"$
0#$
0$$
0%$
1($
1l!
1|#
1w,
0r,
0q,
0|,
0w,
1r,
1q,
1|,
#3050
0!!
0P0
08
0}
#3087
15
b0 3
b11111 S
b11 O
020
1y
1N0
0]
1K
1'0
14-
1(0
1w,
0r,
0q,
0|,
0w,
1r,
b1 f,
1q,
1|,
1p+
1&-
#3100
1!!
1P0
18
1}
0u*
0N+
1+-
0t/
1)0
b100000 #!
#3101
1{+
0o/
1*-
0T&
0n*
0p*
0(0
0u"
1l+
0b+
0u+
b1 e,
1w,
0r,
0q,
0|,
b0 a,
1y,
1z,
1i,
1j,
b10 f,
0~+
12
0/-
03-
0i/
0x/
17"
1>"
18"
1?"
0p+
1o+
0q!
0/"
0."
0{!
02"
01"
1&$
1>%
1{#
1(0
0&-
1%-
0|#
1?%
1:"
1;"
1#.
1+.
0i,
0j,
0y,
0z,
1y,
1z,
1i,
1j,
1!-
#3150
0!!
0P0
08
0}
#3200
1!!
1P0
18
1}
0+-
1,-
1%.
1-.
b100001 #!
#3201
1,.
1$.
1)-
0*-
1t+
1y+
0l+
1k+
b10 e,
0i,
0j,
0y,
0z,
b0 b,
b100000000110 a,
1k,
b11 f,
08"
0?"
07"
0>"
1s"
1p+
1q!
1/"
1."
1{!
12"
11"
1D&
0>%
0{#
0&$
1X*
1&-
1|#
0?%
0p"
0o"
0f"
0;"
0:"
0+.
0#.
0C&
1@&
1G&
0D&
0X*
1}&
0k,
b0 a,
1k,
0q!
0/"
0."
0{!
02"
01"
0|#
1?%
#3250
0!!
0P0
08
0}
#3300
1!!
1P0
18
1}
18'
0B'
0U(
0h)
0{*
1I+
1+-
0%.
0-.
b100010 #!
#3301
0,.
0$.
1*-
1O&
0<*
0))
0t'
0a&
1!'
17'
0t+
1H&
1x"
1'!
1|
0G&
0}&
0H&
0'!
x|
0y+
1l+
1r"
b11 e,
0k,
1p,
0s"
1h/
1m/
0r"
0p,
1p,
b100 f,
0p+
0o+
1n+
0&-
0%-
1$-
#3350
0!!
0P0
08
0}
#3400
1!!
1P0
18
1}
08'
1:'
0I+
1M+
0+-
0,-
1--
1r/
b100011 #!
#3401
1q/
1(-
0)-
0*-
1S&
0O&
13'
0!'
0m/
1l/
0l+
0k+
1j+
1d+
b100 e,
0p,
1z,
1m,
1n,
b10 f,
1s,
0h/
1>"
19"
1@"
1o+
0n+
17-
1>%
1m/
0l/
1@%
1D%
xE%
xF%
1%-
0$-
1;"
1#.
0m,
0n,
0z,
0s,
1z,
1m,
1n,
1s,
#3450
0!!
0P0
08
0}
#3500
1!!
1P0
18
1}
0:'
1<'
0M+
1Q+
1,-
0--
1%.
b100100 #!
#3501
1$.
0(-
1)-
1W&
0S&
15'
03'
1t+
1k+
0j+
b10 e,
0m,
0n,
0z,
0s,
b10 b,
1k,
b11 f,
09"
0@"
0>"
07-
1s"
1p+
0>%
0@%
0D%
0E%
0F%
zH%
1&-
1p"
1r"
0;"
0#.
1A&
0@&
1F&
12(
0r"
0k,
b10 a,
1k,
1/"
12"
#3550
0!!
0P0
08
0}
#3600
1!!
1P0
18
1}
0<'
1K(
1H+
0Q+
1+-
0%.
b100101 #!
#3601
0$.
1*-
0W&
1N&
14(
05'
07'
1J(
0t+
1I&
0x"
1w"
1'!
1|
0F&
02(
0I&
0'!
x|
1l+
1r"
b11 e,
0k,
1p,
0s"
